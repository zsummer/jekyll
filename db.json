{"meta":{"version":1,"warehouse":"3.0.1"},"models":{"Asset":[{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/exturl.js","path":"js/src/exturl.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/js.cookie.js","path":"js/src/js.cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scroll-cookie.js","path":"js/src/scroll-cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","path":"lib/canvas-nest/canvas-nest.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","path":"lib/canvas-ribbon/canvas-ribbon.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","path":"lib/jquery_lazyload/CONTRIBUTING.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","path":"lib/pace/pace-theme-barber-shop.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","path":"lib/pace/pace-theme-big-counter.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","path":"lib/pace/pace-theme-bounce.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","path":"lib/pace/pace-theme-center-atom.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","path":"lib/pace/pace-theme-center-circle.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","path":"lib/pace/pace-theme-center-simple.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","path":"lib/pace/pace-theme-center-radar.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","path":"lib/pace/pace-theme-corner-indicator.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","path":"lib/pace/pace-theme-fill-left.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","path":"lib/pace/pace-theme-flash.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","path":"lib/pace/pace-theme-loading-bar.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","path":"lib/pace/pace-theme-mac-osx.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","path":"lib/pace/pace-theme-minimal.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace.min.js","path":"lib/pace/pace.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","path":"lib/three/canvas_lines.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","path":"lib/three/canvas_sphere.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/three-waves.min.js","path":"lib/three/three-waves.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/bower.json","path":"lib/velocity/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.css","path":"lib/Han/dist/han.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.js","path":"lib/Han/dist/han.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","path":"lib/fancybox/source/blank.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","path":"lib/fancybox/source/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","path":"lib/fancybox/source/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","path":"lib/fancybox/source/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","path":"lib/fancybox/source/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","path":"lib/fancybox/source/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.css","path":"lib/Han/dist/han.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","path":"lib/Han/dist/font/han-space.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","path":"lib/Han/dist/font/han-space.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.js","path":"lib/Han/dist/han.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","path":"lib/Han/dist/font/han.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","path":"lib/Han/dist/font/han.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","path":"lib/fancybox/source/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","path":"lib/fancybox/source/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/three.min.js","path":"lib/three/three.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.png","path":"images/avatar.png","modified":0,"renderable":1}],"Cache":[{"_id":"themes/next/.bowerrc","hash":"3228a58ed0ece9f85e1e3136352094080b8dece1","modified":1547195719498},{"_id":"themes/next/.editorconfig","hash":"792fd2bd8174ece1a75d5fd24ab16594886f3a7f","modified":1547195719498},{"_id":"themes/next/.gitattributes","hash":"44bd4729c74ccb88110804f41746fec07bf487d4","modified":1547195719499},{"_id":"themes/next/.gitignore","hash":"32ea93f21d8693d5d8fa4eef1c51a21ad0670047","modified":1547195719502},{"_id":"themes/next/.hound.yml","hash":"b76daa84c9ca3ad292c78412603370a367cc2bc3","modified":1547195719502},{"_id":"themes/next/.javascript_ignore","hash":"8a224b381155f10e6eb132a4d815c5b52962a9d1","modified":1547195719503},{"_id":"themes/next/.jshintrc","hash":"9928f81bd822f6a8d67fdbc909b517178533bca9","modified":1547195719503},{"_id":"themes/next/.stylintrc","hash":"b28e24704a5d8de08346c45286574c8e76cc109f","modified":1547195719504},{"_id":"themes/next/.travis.yml","hash":"c42d9608c8c7fe90de7b1581a8dc3886e90c179e","modified":1547195719505},{"_id":"themes/next/LICENSE","hash":"f293bcfcdc06c0b77ba13570bb8af55eb5c059fd","modified":1547195719505},{"_id":"themes/next/README.en.md","hash":"32d6cdfec1447f54aae1d7f1365ce6733dfcec8f","modified":1547195719506},{"_id":"themes/next/_config.yml","hash":"c74553d63a14e443b79116f9d18a5868f37c0820","modified":1547196058877},{"_id":"themes/next/README.md","hash":"500b5606eb6a09c979d16128f8b00f4bf9bc95ac","modified":1547195719506},{"_id":"themes/next/bower.json","hash":"7d7938f9da896fe710aa0e9120140e528bf058df","modified":1547195719507},{"_id":"themes/next/gulpfile.coffee","hash":"031bffc483e417b20e90eceb6cf358e7596d2e69","modified":1547195719508},{"_id":"themes/next/package.json","hash":"193dad6f59a588908fac082cc46fe067dac1b84d","modified":1547195719563},{"_id":"source/_posts/2017-01-01-pain.md","hash":"b2fbf303809e89f100fe407435ee5af666ce8b05","modified":1547733831591},{"_id":"source/_posts/2017-08-06-tiger-tea.md","hash":"da83671fee1db2e61c8a0de1bbf57d6fe63c44e3","modified":1547733840782},{"_id":"source/_posts/2017-07-30-far-tommorrow.md","hash":"3596affd6f4b65f9241d76a3c468726fe1869247","modified":1547733837471},{"_id":"source/_posts/2017-09-19-world-line-collect.md","hash":"b5f8a3509ae86cceaeaf416a9633d9e2ddca7f44","modified":1547733847901},{"_id":"source/_posts/2017-09-06-dream-woods.md","hash":"76670a810113a09e9d23cfe6cbf9d4f0fa75587e","modified":1547733844446},{"_id":"source/_posts/2017-10-01-lullabye.md","hash":"d7fac6b2bff3dd9c01f69af527e59e612045376d","modified":1551877434364},{"_id":"source/_posts/2017-10-18-revolt.md","hash":"f76fe93a12d3e2160185efa313c90bb8dd0084d2","modified":1547733856181},{"_id":"source/_posts/2017-10-26-romanticism.md","hash":"16697a72f77a4e27da6466e272a5bc727f5a8dd5","modified":1547733859253},{"_id":"source/_posts/2018-12-22-attribute.md","hash":"eed1a559388d0404f979c4f0a7eca93971a8a573","modified":1547733863182},{"_id":"source/_posts/2019-01-07-elite.md","hash":"340dd9ad2b2c1e1c42f77001e75957d1329bf07c","modified":1547733865997},{"_id":"source/_posts/2019-01-08-fps-synchronization.md","hash":"c49ab040db736c86c0a6e60e919b2eb87e2a7179","modified":1547733869967},{"_id":"source/_posts/2019-01-10-unordered_map.md","hash":"547fba7aed6d839bea3c1aab2dfab9969fa9826f","modified":1547733872657},{"_id":"source/_posts/2019-01-11-AT&T-INTEL-ASM.md","hash":"b77fa27fdaad4e2962d7cf3ca1de98a7257b8fd0","modified":1547733875855},{"_id":"source/_posts/2019-01-17-Odyssey.md","hash":"707a41c44e7b6e24ace70ccb50524a9c985de5a6","modified":1550560956518},{"_id":"source/_posts/2019-01-17-type-system-erase.md","hash":"a8728a3165377c2878dce9f6d9c75ad239176032","modified":1550560619703},{"_id":"source/_posts/2019-02-14-vba.md","hash":"94b9bd092658acb077e1607c28b8e6950e038873","modified":1550560621822},{"_id":"source/_posts/2019-06-08-rvo.md","hash":"82259dc5b8dd9068f22fa76ffaf3c8b68d3a6c9f","modified":1559990310899},{"_id":"source/_posts/2019-09-16-problem-domain.md","hash":"90a398eb8597b1a9efa6e486049bde45d9b37d21","modified":1575963357082},{"_id":"source/_posts/2019-10-01-sdm.md","hash":"bca815c6c869e72187e25263a79c33b484f46f9f","modified":1572857743984},{"_id":"source/_posts/2019-11-04-aslr.md","hash":"d5f0f5abe022e840bbc9496a095d7f6cb98eac57","modified":1573224895042},{"_id":"source/_posts/2019-11-05-fast-check-linux.md","hash":"fe88d9ed8ee49a55eccc1e08c19573c111a2777d","modified":1574847076101},{"_id":"source/_posts/2019-11-09-pie-pic-got-plt.md","hash":"300e0b9b082bdb437bd8f554a053d85ecdb95346","modified":1573567434423},{"_id":"source/_posts/2019-11-12-elf-section-symbol.md","hash":"7c0d24209ae6750db2df53a2c74283632df28222","modified":1575364147333},{"_id":"source/_posts/2019-11-23-elf-hash.md","hash":"4b13b0ada99b3a327894eab141aec48263376731","modified":1574671758952},{"_id":"source/_posts/2019-11-25-link-plt.md","hash":"8bf150040dc57be5860665c3aee24fe5ff52795b","modified":1575618105131},{"_id":"source/_posts/2019-11-28-pie-pic-linker-option.md","hash":"ea6c4a21ffc1eaea1bccea612146f3f057fc0428","modified":1575296208940},{"_id":"source/_posts/2019-12-06-is-a-and-has-a.md","hash":"f8720299aa0e3124a5250c7b604c741a38606462","modified":1575961743899},{"_id":"source/_posts/2019-12-11-asm-syntax.md","hash":"973e631b687d040c2f64e47c49a3bac4b0e7b590","modified":1576257188584},{"_id":"source/about/index.md","hash":"5204117da7cb5e5861e2e6a9d5faee1e28c8191b","modified":1547195719341},{"_id":"source/memo/index.md","hash":"a579b7568ce99d9c23588b1b954b2191198b09cd","modified":1547195719343},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"3b5eafd32abb718e56ccf8d1cee0607ad8ce611d","modified":1547195719500},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"b56c01cdfc6ee7ffea8a8a9fa149263f368caef6","modified":1547195719500},{"_id":"themes/next/.github/PULL_REQUEST_TEMPLATE.md","hash":"37bd0ec1d655c601946fc5f5ac2fe8ed1e529b77","modified":1547195719501},{"_id":"themes/next/languages/de.yml","hash":"306db8c865630f32c6b6260ade9d3209fbec8011","modified":1547195719509},{"_id":"themes/next/languages/default.yml","hash":"4cc6aeb1ac09a58330e494c8771773758ab354af","modified":1547195719510},{"_id":"themes/next/languages/en.yml","hash":"e7def07a709ef55684490b700a06998c67f35f39","modified":1547195719510},{"_id":"themes/next/languages/fr-FR.yml","hash":"24180322c83587a153cea110e74e96eacc3355ad","modified":1547195719511},{"_id":"themes/next/languages/id.yml","hash":"2835ea80dadf093fcf47edd957680973f1fb6b85","modified":1547195719511},{"_id":"themes/next/languages/ja.yml","hash":"1c3a05ab80a6f8be63268b66da6f19da7aa2c638","modified":1547195719512},{"_id":"themes/next/languages/ko.yml","hash":"be150543379150f78329815af427bf152c0e9431","modified":1547195719513},{"_id":"themes/next/languages/pt-BR.yml","hash":"958e49571818a34fdf4af3232a07a024050f8f4e","modified":1547195719513},{"_id":"themes/next/languages/pt.yml","hash":"36c8f60dacbe5d27d84d0e0d6974d7679f928da0","modified":1547195719514},{"_id":"themes/next/languages/ru.yml","hash":"1549a7c2fe23caa7cbedcd0aa2b77c46e57caf27","modified":1547195719514},{"_id":"themes/next/languages/zh-Hans.yml","hash":"3c0c7dfd0256457ee24df9e9879226c58cb084b5","modified":1547195719515},{"_id":"themes/next/languages/zh-hk.yml","hash":"1c917997413bf566cb79e0975789f3c9c9128ccd","modified":1547195719515},{"_id":"themes/next/languages/zh-tw.yml","hash":"0b2c18aa76570364003c8d1cd429fa158ae89022","modified":1547195719516},{"_id":"themes/next/layout/_layout.swig","hash":"06b1eab2e00273e0b94bd32dc682bd92c1e0a747","modified":1547195719518},{"_id":"themes/next/layout/archive.swig","hash":"383f64deab105724fd5512371963bd9e9aafbffd","modified":1547195719558},{"_id":"themes/next/layout/category.swig","hash":"4472255f4a3e3dd6d79201523a9526dcabdfbf18","modified":1547195719559},{"_id":"themes/next/layout/index.swig","hash":"03e8a2cda03bad42ac0cb827025eb81f95d496a2","modified":1547195719560},{"_id":"themes/next/layout/page.swig","hash":"37c874cd720acf0eda8d26e063278f2b6ae8d3a6","modified":1547195719560},{"_id":"themes/next/layout/post.swig","hash":"2d5f8d7f0a96b611e2d5a5e4d111fc17726a990f","modified":1547195719561},{"_id":"themes/next/layout/schedule.swig","hash":"d86f8de4e118f8c4d778b285c140474084a271db","modified":1547195719562},{"_id":"themes/next/layout/tag.swig","hash":"7e0a7d7d832883eddb1297483ad22c184e4368de","modified":1547195719562},{"_id":"themes/next/scripts/merge-configs.js","hash":"13c8b3a2d9fce06c2488820d9248d190c8100e0a","modified":1547195719564},{"_id":"themes/next/scripts/merge.js","hash":"9130dabe6a674c54b535f322b17d75fe6081472f","modified":1547195719564},{"_id":"themes/next/test/.jshintrc","hash":"19f93d13d1689fe033c82eb2d5f3ce30b6543cc0","modified":1547195719750},{"_id":"themes/next/test/helpers.js","hash":"a1f5de25154c3724ffc24a91ddc576cdbd60864f","modified":1547195719751},{"_id":"themes/next/test/intern.js","hash":"11fa8a4f5c3b4119a179ae0a2584c8187f907a73","modified":1547195719751},{"_id":"source/_posts/2019-11-29-static-linking.md","hash":"cd03e7075ea0061717594f234c9fb467cac6c515","modified":1575863530718},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1547195719652},{"_id":"themes/next/layout/_custom/header.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1547195719517},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1547195719518},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"31322a7f57936cf2dc62e824af5490da5354cf02","modified":1547195719520},{"_id":"themes/next/layout/_macro/post-copyright.swig","hash":"53d4f83b2b7fb4387dfc9fe81519abd56fbce4ae","modified":1547195719520},{"_id":"themes/next/layout/_macro/post.swig","hash":"377d82f753178db7f2570ad347c29409a19de985","modified":1547195719521},{"_id":"themes/next/layout/_macro/reward.swig","hash":"5d5f70deb6074cb4dd0438463e14ccf89213c282","modified":1547195719521},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"5dcdacbf3e4350d5e5cf3e5b25a49fc4b08c58d4","modified":1547195719522},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"39852700e4084ecccffa6d4669168e5cc0514c9e","modified":1547195719522},{"_id":"themes/next/layout/_partials/comments.swig","hash":"ce7094ee05878161e7568a6dfae5b56ff3fbd6e1","modified":1547195719523},{"_id":"themes/next/layout/_partials/footer.swig","hash":"7172c6053118b7c291a56a7860128a652ae66b83","modified":1547195719524},{"_id":"themes/next/layout/_partials/head.swig","hash":"1f14d3f494b2dbbcee802fd6f6d1abd5b7e2304c","modified":1547195719525},{"_id":"themes/next/layout/_partials/header.swig","hash":"a1ffbb691dfad3eaf2832a11766e58a179003b8b","modified":1547195719526},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"1efd925d34a5d4ba2dc0838d9c86ba911e705fc9","modified":1547195719527},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"9e8e21d194ef44d271b1cca0bc1448c14d7edf4f","modified":1547195719527},{"_id":"themes/next/layout/_partials/search.swig","hash":"9dbd378e94abfcb3f864a5b8dbbf18d212ca2ee0","modified":1547195719528},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"03aaebe9d50f6acb007ec38cc04acd1cfceb404d","modified":1547195719533},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"766b2bdda29523ed6cd8d7aa197f996022f8fd94","modified":1547195719534},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"9baf90f7c40b3b10f288e9268c3191e895890cea","modified":1547195719538},{"_id":"themes/next/layout/_third-party/duoshuo-hot-articles.swig","hash":"5d4638c46aef65bf32a01681495b62416ccc98db","modified":1547195719551},{"_id":"themes/next/layout/_third-party/exturl.swig","hash":"7c04a42319d728be356746363aff8ea247791d24","modified":1547195719551},{"_id":"themes/next/layout/_third-party/mathjax.swig","hash":"6d25596d6a7c57700d37b607f8d9a62d89708683","modified":1547195719552},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"fc93b1a7e6aed0dddb1f3910142b48d8ab61174e","modified":1547195719552},{"_id":"themes/next/layout/_third-party/schedule.swig","hash":"22369026c87fc23893c35a7f250b42f3bb1b60f1","modified":1547195719553},{"_id":"themes/next/layout/_third-party/scroll-cookie.swig","hash":"1ddb2336a1a19b47af3017047012c01ec5f54529","modified":1547195719553},{"_id":"themes/next/scripts/tags/button.js","hash":"62e6dbeb53d07627a048132c79630b45d9a8f2cc","modified":1547195719566},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"535fc542781021c4326dec24d8495cbb1387634a","modified":1547195719569},{"_id":"themes/next/scripts/tags/exturl.js","hash":"8d7e60f60779bde050d20fd76f6fdc36fc85e06d","modified":1547195719570},{"_id":"themes/next/scripts/tags/full-image.js","hash":"8eeb3fb89540299bdbb799edfdfdac3743b50596","modified":1547195719572},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"49252824cd53184dc9b97b2f2d87ff28e1b3ef27","modified":1547195719573},{"_id":"themes/next/scripts/tags/label.js","hash":"2f8f41a7316372f0d1ed6b51190dc4acd3e16fff","modified":1547195719574},{"_id":"themes/next/scripts/tags/lazy-image.js","hash":"eeeabede68cf263de9e6593ecf682f620da16f0a","modified":1547195719575},{"_id":"themes/next/scripts/tags/note.js","hash":"64de4e9d01cf3b491ffc7d53afdf148ee5ad9779","modified":1547195719575},{"_id":"themes/next/scripts/tags/tabs.js","hash":"5786545d51c38e8ca38d1bfc7dd9e946fc70a316","modified":1547195719576},{"_id":"themes/next/source/css/main.styl","hash":"20702c48d6053c92c5bcdbc68e8d0ef1369848a0","modified":1547195719651},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1547195719653},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1547195719654},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1547195719665},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1547195719666},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1547195719667},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1547195719667},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1547195719668},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1547195719668},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1547195719669},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1547195719670},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1547195719670},{"_id":"themes/next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1547195719670},{"_id":"themes/next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1547195719671},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1547195719672},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1547195719536},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1547195719537},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1547195719632},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1547195719632},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1547195719634},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1547195719649},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1547195719651},{"_id":"themes/next/layout/_partials/head/custom-head.swig","hash":"9e1b9666efa77f4cf8d8261bcfa445a9ac608e53","modified":1547195719525},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"7ce76358411184482bb0934e70037949dd0da8ca","modified":1547195719526},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"957701729b85fb0c5bfcf2fb99c19d54582f91ed","modified":1547195719529},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"959b7e04a96a5596056e4009b73b6489c117597e","modified":1547195719529},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"eefe2388ff3d424694045eda21346989b123977c","modified":1547195719530},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"23e23dc0f76ef3c631f24c65277adf7ea517b383","modified":1547195719531},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"1f1107468aaf03f7d0dcd7eb2b653e2813a675b4","modified":1547195719531},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"89c5a5240ecb223acfe1d12377df5562a943fd5d","modified":1547195719532},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"63315fcf210799f894208c9f512737096df84962","modified":1547195719532},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"069d1357c717572256e5cdee09574ebce529cbae","modified":1547195719535},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1547195719536},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1547195719538},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"60426bf73f8a89ba61fb1be2df3ad5398e32c4ef","modified":1547195719540},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"deda6a814ed48debc694c4e0c466f06c127163d0","modified":1547195719541},{"_id":"themes/next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"18e7bef8923d83ea42df6c97405e515a876cede4","modified":1547195719541},{"_id":"themes/next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"8160b27bee0aa372c7dc7c8476c05bae57f58d0f","modified":1547195719542},{"_id":"themes/next/layout/_third-party/analytics/facebook-sdk.swig","hash":"a234c5cd1f75ca5731e814d0dbb92fdcf9240d1b","modified":1547195719542},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"5d9943d74cc2e0a91badcf4f755c6de77eab193a","modified":1547195719543},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"3358d11b9a26185a2d36c96049e4340e701646e4","modified":1547195719544},{"_id":"themes/next/layout/_third-party/analytics/lean-analytics.swig","hash":"fc65b9c98a0a8ab43a5e7aabff6c5f03838e09c8","modified":1547195719544},{"_id":"themes/next/layout/_third-party/analytics/tencent-analytics.swig","hash":"3658414379e0e8a34c45c40feadc3edc8dc55f88","modified":1547195719545},{"_id":"themes/next/layout/_third-party/analytics/tencent-mta.swig","hash":"0ddc94ed4ba0c19627765fdf1abc4d8efbe53d5a","modified":1547195719545},{"_id":"themes/next/layout/_third-party/analytics/vkontakte-api.swig","hash":"c3971fd154d781088e1cc665035f8561a4098f4c","modified":1547195719546},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"0e3378f7c39b2b0f69638290873ede6b6b6825c0","modified":1547195719547},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"c316758546dc9ba6c60cb4d852c17ca6bb6d6724","modified":1547195719547},{"_id":"themes/next/layout/_third-party/comments/duoshuo.swig","hash":"a356b2185d40914447fde817eb3d358ab6b3e4c3","modified":1547195719548},{"_id":"themes/next/layout/_third-party/comments/hypercomments.swig","hash":"3e8dc5c6c912628a37e3b5f886bec7b2e5ed14ea","modified":1547195719548},{"_id":"themes/next/layout/_third-party/comments/index.swig","hash":"ee63aa2e49507b884a2d56778479cf01c723d751","modified":1547195719549},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"8a2e393d2e49f7bf560766d8a07cd461bf3fce4f","modified":1547195719549},{"_id":"themes/next/layout/_third-party/comments/youyan.swig","hash":"8b6650f77fe0a824c8075b2659e0403e0c78a705","modified":1547195719550},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"c747fb5c6b1f500e8f0c583e44195878b66e4e29","modified":1547195719555},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"385c066af96bee30be2459dbec8aae1f15d382f5","modified":1547195719556},{"_id":"themes/next/layout/_third-party/search/tinysou.swig","hash":"cb3a5d36dbe1630bab84e03a52733a46df7c219b","modified":1547195719557},{"_id":"themes/next/layout/_third-party/seo/baidu-push.swig","hash":"c057b17f79e8261680fbae8dc4e81317a127c799","modified":1547195719558},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"328d9a9696cc2ccf59c67d3c26000d569f46344c","modified":1547195719631},{"_id":"themes/next/source/css/_mixins/Gemini.styl","hash":"2aa5b7166a85a8aa34b17792ae4f58a5a96df6cc","modified":1547195719631},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"eaedfaf06dae94ba77a8f4893e2e434bf8859bac","modified":1547195719633},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"82f9055955920ed88a2ab6a20ab02169abb2c634","modified":1547195719633},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"49b5210fa62d6cbc6a98f57d89d5067a06ab3561","modified":1547195719649},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"c8d35a6b9e3bff6d8fdb66de853065af9d37562d","modified":1547195719649},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"cfee25d790e4f9b7d57f0dc7e2ea9c1649f08f11","modified":1547195719650},{"_id":"themes/next/source/css/_variables/base.styl","hash":"d477196c5699c8261b08e993a77ef67054d86166","modified":1547195719651},{"_id":"themes/next/source/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1547195719673},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1547195719673},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"6117f97b4984b8e33f21c726132da64ba678e4ed","modified":1547195719674},{"_id":"themes/next/source/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1547195719674},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1547195719675},{"_id":"themes/next/source/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1547195719676},{"_id":"themes/next/source/js/src/motion.js","hash":"dc0365b2fb315a8b43d3ef19b59d3a82a366fcc1","modified":1547195719676},{"_id":"themes/next/source/js/src/post-details.js","hash":"0693695a9512641daff63d99da772625a058ab18","modified":1547195719677},{"_id":"themes/next/source/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1547195719678},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1547195719679},{"_id":"themes/next/source/js/src/utils.js","hash":"2917c39c75b14b6dab7e1c46ab4d87b4df9fcd5d","modified":1547195719679},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1547195719688},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1547195719692},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","hash":"7fd2f3e2773555392ef40df40cae3bedb884f17a","modified":1547195719694},{"_id":"themes/next/source/lib/fastclick/.bower.json","hash":"93ebd5b35e632f714dcf1753e1f6db77ec74449b","modified":1547195719705},{"_id":"themes/next/source/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1547195719706},{"_id":"themes/next/source/lib/fastclick/README.md","hash":"1decd8e1adad2cd6db0ab50cf56de6035156f4ea","modified":1547195719706},{"_id":"themes/next/source/lib/fastclick/bower.json","hash":"13379463c7463b4b96d13556b46faa4cc38d81e6","modified":1547195719707},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"a2aaaf12378db56bd10596ba3daae30950eac051","modified":1547195719710},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1547195719710},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1547195719711},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1547195719711},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1547195719712},{"_id":"themes/next/source/lib/jquery/.bower.json","hash":"91745c2cc6c946c7275f952b2b0760b880cea69e","modified":1547195719724},{"_id":"themes/next/source/lib/jquery_lazyload/.bower.json","hash":"b7638afc93e9cd350d0783565ee9a7da6805ad8e","modified":1547195719726},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4891864c24c28efecd81a6a8d3f261145190f901","modified":1547195719727},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","hash":"895d50fa29759af7835256522e9dd7dac597765c","modified":1547195719728},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","hash":"65bc85d12197e71c40a55c0cd7f6823995a05222","modified":1547195719728},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1547195719729},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1547195719730},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1547195719730},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1547195719731},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1547195719732},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1547195719733},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1547195719733},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1547195719734},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1547195719734},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1547195719735},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1547195719735},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1547195719736},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1547195719736},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1547195719737},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1547195719737},{"_id":"themes/next/source/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1547195719738},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","hash":"dce4a3b65f8bf958f973690caa7ec4952f353b0c","modified":1547195719739},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","hash":"d8ea241a53c135a650f7335d2b6982b899fd58a9","modified":1547195719740},{"_id":"themes/next/source/lib/three/three-waves.min.js","hash":"d968cba6b3a50b3626a02d67b544f349d83b147c","modified":1547195719740},{"_id":"themes/next/source/lib/velocity/.bower.json","hash":"05f960846f1c7a93dab1d3f9a1121e86812e8c88","modified":1547195719746},{"_id":"themes/next/source/lib/velocity/bower.json","hash":"2ec99573e84c7117368beccb9e94b6bf35d2db03","modified":1547195719746},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1547195719748},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1547195719749},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1547195719749},{"_id":"themes/next/source/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1547195719725},{"_id":"themes/next/layout/_third-party/search/algolia-search/assets.swig","hash":"28ff4ed6714c59124569ffcbd10f1173d53ca923","modified":1547195719554},{"_id":"themes/next/layout/_third-party/search/algolia-search/dom.swig","hash":"ba698f49dd3a868c95b240d802f5b1b24ff287e4","modified":1547195719555},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"d026c8489f66ab6c12ad04bd37f1d5b6f2f3f0d1","modified":1547195719580},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"31050fc7a25784805b4843550151c93bfa55c9c8","modified":1547195719581},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1547195719584},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"0dfb4b3ba3180d7285e66f270e1d3fa0f132c3d2","modified":1547195719582},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"a6bb5256be6195e76addbda12f4ed7c662d65e7a","modified":1547195719584},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"711c8830886619d4f4a0598b0cde5499dce50c62","modified":1547195719598},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"dd8a3b22fc2f222ac6e6c05bd8a773fb039169c0","modified":1547195719615},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"2186be20e317505cd31886f1291429cc21f76703","modified":1547195719626},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"2915df7152ea095a6290ef69157fd67669e0e793","modified":1547195719627},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"9c25c75311e1bd4d68df031d3f2ae6d141a90766","modified":1547195719628},{"_id":"themes/next/source/css/_common/scaffolding/mobile.styl","hash":"86b6fd7f1b1be3ae98f8af6b23a6b1299c670ce9","modified":1547195719629},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"ece571f38180febaf02ace8187ead8318a300ea7","modified":1547195719629},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"a280a583b7615e939aaddbf778f5c108ef8a2a6c","modified":1547195719630},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"64f5d56c08d74a338813df1265580ca0cbf0190b","modified":1547195719630},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"bc8c388553bbcf95897459a466ba35bffd5ec5f0","modified":1547195719635},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"c2d079788d6fc2e9a191ccdae94e50d55bf849dc","modified":1547195719636},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"5ae7906dc7c1d9468c7f4b4a6feddddc555797a1","modified":1547195719636},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1547195719637},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"b0dcca862cd0cc6e732e33d975b476d744911742","modified":1547195719637},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"fda14bc35be2e1b332809b55b3d07155a833dbf4","modified":1547195719638},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1547195719638},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9a5581a770af8964064fef7afd3e16963e45547f","modified":1547195719639},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"0efa036a15c18f5abb058b7c0fad1dd9ac5eed4c","modified":1547195719641},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"8829bc556ca38bfec4add4f15a2f028092ac6d46","modified":1547195719641},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"82bbaa6322764779a1ac2e2c8390ce901c7972e2","modified":1547195719642},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1547195719642},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"a0e2030a606c934fb2c5c7373aaae04a1caac4c5","modified":1547195719643},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"c4ed249798296f60bda02351fe6404fb3ef2126f","modified":1547195719645},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"5b93958239d3d2bf9aeaede44eced2434d784462","modified":1547195719645},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"215de948be49bcf14f06d500cef9f7035e406a43","modified":1547195719646},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"2f878213cb24c5ddc18877f6d15ec5c5f57745ac","modified":1547195719647},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"e3e23751d4ad24e8714b425d768cf68e37de7ded","modified":1547195719647},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"69ecd6c97e7cdfd822ac8102b45ad0ede85050db","modified":1547195719648},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"79da92119bc246fe05d1626ac98426a83ec90a94","modified":1547195719678},{"_id":"themes/next/source/lib/Han/dist/han.min.css","hash":"a0c9e32549a8b8cf327ab9227b037f323cdb60ee","modified":1547195719686},{"_id":"themes/next/source/lib/Han/dist/han.min.js","hash":"f559c68a25065a14f47da954a7617d87263e409d","modified":1547195719687},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1547195719695},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1547195719696},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1547195719696},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1547195719697},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1547195719698},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1547195719698},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1547195719703},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1547195719704},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1547195719704},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1547195719708},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1547195719709},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1547195719713},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1547195719713},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1547195719714},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1547195719744},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1547195719745},{"_id":"themes/next/source/lib/Han/dist/han.css","hash":"bd40da3fba8735df5850956814e312bd7b3193d7","modified":1547195719684},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1547195719723},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1547195719747},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"8994ffcce84deac0471532f270f97c44fea54dc0","modified":1547195719586},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"ae1ca14e51de67b07dba8f61ec79ee0e2e344574","modified":1547195719588},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d27448f199fc2f9980b601bc22b87f08b5d64dd1","modified":1547195719588},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"8a2421cb9005352905fae9d41a847ae56957247e","modified":1547195719589},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"49c2b2c14a1e7fcc810c6be4b632975d0204c281","modified":1547195719591},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"6c00f6e0978f4d8f9a846a15579963728aaa6a17","modified":1547195719590},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"7778920dd105fa4de3a7ab206eeba30b1a7bac45","modified":1547195719595},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"4eff5b252d7b614e500fc7d52c97ce325e57d3ab","modified":1547195719595},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"2039590632bba3943c39319d80ef630af7928185","modified":1547195719596},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1547195719597},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"a82afbb72d83ee394aedc7b37ac0008a9823b4f4","modified":1547195719598},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"96f32ea6c3265a3889e6abe57587f6e2a2a40dfb","modified":1547195719592},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"740d37f428b8f4574a76fc95cc25e50e0565f45e","modified":1547195719593},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"b76387934fb6bb75212b23c1a194486892cc495e","modified":1547195719594},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"beccb53dcd658136fb91a0c5678dea8f37d6e0b6","modified":1547195719599},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"0f7f522cc6bfb3401d5afd62b0fcdf48bb2d604b","modified":1547195719600},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"f54367c0feda6986c030cc4d15a0ca6ceea14bcb","modified":1547195719601},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"88c7d75646b66b168213190ee4cd874609afd5e3","modified":1547195719602},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"2cdc094ecf907a02fce25ad4a607cd5c40da0f2b","modified":1547195719601},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"387ce23bba52b22a586b2dfb4ec618fe1ffd3926","modified":1547195719602},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"ed88c8b51d0517759c777e71a6bfbe2907bcd994","modified":1547195719603},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"a5d8617a24d7cb6c5ad91ea621183ca2c0917331","modified":1547195719603},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"ee554b1031ef0070a5916477939021800e3c9d27","modified":1547195719604},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"017074ef58166e2d69c53bb7590a0e7a8947a1ed","modified":1547195719605},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"a352ae5b1f8857393bf770d2e638bf15f0c9585d","modified":1547195719605},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"963105a531403d7aad6d9e5e23e3bfabb8ec065a","modified":1547195719606},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"10251257aceecb117233c9554dcf8ecfef8e2104","modified":1547195719606},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"08a500b2984f109b751f3697ca33172d1340591a","modified":1547195719607},{"_id":"themes/next/source/css/_common/components/post/post-wordcount.styl","hash":"4fda5d38c6c8d910e3bf5c74a48a8d4a3f3dc73d","modified":1547195719608},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"51eca243220cf57133a4becae9b78514bcfdc723","modified":1547195719608},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"65a64d5662637b66e2f039a5f58217afe7a6e800","modified":1547195719609},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"920343e41c124221a17f050bbb989494d44f7a24","modified":1547195719610},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"5f6ea57aabfa30a437059bf8352f1ad829dbd4ff","modified":1547195719611},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-dimmer.styl","hash":"efa5e5022e205b52786ce495d4879f5e7b8f84b2","modified":1547195719611},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"9486ddd2cb255227db102d09a7df4cae0fabad72","modified":1547195719612},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"45fa7193435a8eae9960267438750b4c9fa9587f","modified":1547195719612},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"77c92a449ce84d558d26d052681f2e0dd77c70c9","modified":1547195719613},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"f7784aba0c1cd20d824c918c120012d57a5eaa2a","modified":1547195719613},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"57d2c8a060f5e4e1a0aef9aae11a0016cf7ac5ba","modified":1547195719614},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"3623e7fa4324ec1307370f33d8f287a9e20a5578","modified":1547195719615},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"c2abe4d87148e23e15d49ee225bc650de60baf46","modified":1547195719616},{"_id":"themes/next/source/css/_common/components/tags/exturl.styl","hash":"1b3cc9f4e5a7f6e05b4100e9990b37b20d4a2005","modified":1547195719617},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"b8969e1654eec89a0fd10d88b337fee9cb03cd44","modified":1547195719617},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"4851b981020c5cbc354a1af9b831a2dcb3cf9d39","modified":1547195719618},{"_id":"themes/next/source/css/_common/components/tags/label.styl","hash":"4a457d265d62f287c63d48764ce45d9bcfc9ec5a","modified":1547195719619},{"_id":"themes/next/source/css/_common/components/tags/note-modern.styl","hash":"45df0cf4c97b47e05573bcd41028ee50f3fdf432","modified":1547195719619},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"32c9156bea5bac9e9ad0b4c08ffbca8b3d9aac4b","modified":1547195719620},{"_id":"themes/next/source/css/_common/components/tags/tabs.styl","hash":"4ab5deed8c3b0c338212380f678f8382672e1bcb","modified":1547195719620},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"ead0d0f2321dc71505788c7f689f92257cf14947","modified":1547195719621},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"fd42777b9125fd8969dc39d4f15473e2b91b4142","modified":1547195719622},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"93b08815c4d17e2b96fef8530ec1f1064dede6ef","modified":1547195719622},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"d4e6d8d7b34dc69994593c208f875ae8f7e8a3ae","modified":1547195719623},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"2340dd9b3202c61d73cc708b790fac5adddbfc7f","modified":1547195719624},{"_id":"themes/next/source/css/_common/components/third-party/han.styl","hash":"cce6772e2cdb4db85d35486ae4c6c59367fbdd40","modified":1547195719624},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"327b5f63d55ec26f7663185c1a778440588d9803","modified":1547195719625},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"d89c4b562b528e4746696b2ad8935764d133bdae","modified":1547195719625},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"aeff0e6e23725e8baea27c890ccbbf466024f767","modified":1547195719626},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"5dc4859c66305f871e56cba78f64bfe3bf1b5f01","modified":1547195719639},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1547195719640},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1547195719644},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1547195719681},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1547195719682},{"_id":"themes/next/source/lib/Han/dist/han.js","hash":"e345397e0585c9fed1449e614ec13e0224acf2ab","modified":1547195719685},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1547195719682},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1547195719684},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1547195719699},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1547195719700},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1547195719700},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1547195719701},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1547195719702},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1547195719702},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1547195719716},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1547195719718},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1547195719721},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1547195719722},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1547195719691},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1547195719720},{"_id":"themes/next/source/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1547195719743},{"_id":"themes/next/source/images/avatar.png","hash":"0143509d8b5f1dd4c1eac48c5a112ba2f09efd3b","modified":1547195719665},{"_id":"public/about/index.html","hash":"fc77b88e16f654268a45b5e987db0a4445f0bbe2","modified":1576256768061},{"_id":"public/memo/index.html","hash":"2001a546471bb70d3a46533835b844b5d06cd866","modified":1576256768061},{"_id":"public/2019/10/01/2019-10-01-sdm/index.html","hash":"68be88ddf3163d2c0c52ab4d98499ec01ef7915d","modified":1576256768061},{"_id":"public/2019/02/14/2019-02-14-vba/index.html","hash":"d1005261c84c494fa09a3fa19edf6dc054c02499","modified":1576256768061},{"_id":"public/2017/10/26/2017-10-26-romanticism/index.html","hash":"cd6a24ece8018c56e7cd8fafc56d094d4437e798","modified":1576256768061},{"_id":"public/2017/10/18/2017-10-18-revolt/index.html","hash":"782662a7f3f23c65e270a64fde3e645dd0b45009","modified":1576256768061},{"_id":"public/2017/10/01/2017-10-01-lullabye/index.html","hash":"55e504067a7dd911a4cd058a91a75864c119bb5c","modified":1576256768061},{"_id":"public/2017/09/19/2017-09-19-world-line-collect/index.html","hash":"73b22526788abf2866b64db40c6c5e0ea535770e","modified":1576256768061},{"_id":"public/2017/09/06/2017-09-06-dream-woods/index.html","hash":"ed3358af07e0af263e2be25121c22639f61385c8","modified":1576256768061},{"_id":"public/2017/08/06/2017-08-06-tiger-tea/index.html","hash":"3a2bf0cb1fabf9f2df0af5e3718372e628e0fe1e","modified":1576256768061},{"_id":"public/2017/07/30/2017-07-30-far-tommorrow/index.html","hash":"42e7471f71304d3e285b51efe8c6f654a00bb05e","modified":1576256768061},{"_id":"public/2017/01/01/2017-01-01-pain/index.html","hash":"e37d8b4cff3ed448ae6302f765844bc6f4ba0e62","modified":1576256768061},{"_id":"public/archives/index.html","hash":"7ac8e6f5505c9d484f29f465c8a634bf45eceb77","modified":1576256768061},{"_id":"public/archives/page/2/index.html","hash":"3c140e1053fa13d2ef42e448ed3152d7d0154e3e","modified":1576256768061},{"_id":"public/archives/page/3/index.html","hash":"8669e6159fe6a7720a8fea79ad79438a67b824e4","modified":1576256768061},{"_id":"public/archives/2017/index.html","hash":"699017cc7a22d1748ca71836bb1243d15488c50f","modified":1576256768061},{"_id":"public/archives/2017/01/index.html","hash":"5e44c49b15488af0eb4da19b40a79e183aefa2ad","modified":1576256768061},{"_id":"public/archives/2017/07/index.html","hash":"80f47e7f19de92101625596b3ed3fa93272334e4","modified":1576256768061},{"_id":"public/archives/2017/08/index.html","hash":"1cca7b30a0606b61a4a64ec5b978b4df91f9d909","modified":1576256768061},{"_id":"public/archives/2017/09/index.html","hash":"d083d01656b823439a3a64cf247c6d20f264ef58","modified":1576256768061},{"_id":"public/archives/2017/10/index.html","hash":"511b61cc5307d99ffdc8007d4c2b05a6c196af7d","modified":1576256768061},{"_id":"public/archives/2018/index.html","hash":"24bc1088ee8d64a0d596961ace4ac087d694fa1b","modified":1576256768061},{"_id":"public/archives/2018/12/index.html","hash":"ff16b3f3ccb3680a3e5c87d34afde6dc3d888f2d","modified":1576256768061},{"_id":"public/archives/2019/index.html","hash":"ad8df426fe3a5022da45751d787ee66f63b6fb6b","modified":1576256768061},{"_id":"public/archives/2019/01/index.html","hash":"adee333d171ca0c84f0b7bdb92f8462738369ff5","modified":1576256768061},{"_id":"public/archives/2019/02/index.html","hash":"f9fbc379647f0db33ab1993db466a878409f6c45","modified":1576256768061},{"_id":"public/archives/2019/06/index.html","hash":"b0ec16fe777ad1e26d05903cb5412fdd71d93809","modified":1576256768061},{"_id":"public/archives/2019/page/2/index.html","hash":"d8ca621bdd92f641e4abae984bd8fb49ad8953dd","modified":1576256768061},{"_id":"public/archives/2019/09/index.html","hash":"b5248d6917fb1bbd389371e7bd3e3bdd33914662","modified":1576256768061},{"_id":"public/archives/2019/10/index.html","hash":"b5fd85d8700209b9fafe5f62eba5e2dce492d086","modified":1576256768061},{"_id":"public/archives/2019/11/index.html","hash":"e72ae3e124b58ec4326295f94bb488231d26c9fc","modified":1576256768061},{"_id":"public/archives/2019/12/index.html","hash":"2ef55e113de6d029eaebedc3126800e6edf09fbf","modified":1576256768061},{"_id":"public/categories/develop/index.html","hash":"783bebcd019f2babb5922d865365fcb4ce7ea2d5","modified":1576256768061},{"_id":"public/categories/develop/page/2/index.html","hash":"4203414efdd76a96ffe2dd989f0185893e0b11ff","modified":1576256768061},{"_id":"public/2019/12/11/2019-12-11-asm-syntax/index.html","hash":"3a2abb91fffc59e638e3cc62ce6a7aa333e412be","modified":1576257214131},{"_id":"public/2019/11/29/2019-11-29-static-linking/index.html","hash":"2e9fd592df5e3938979e6ca69d1e5076126a8105","modified":1576256768061},{"_id":"public/2019/11/29/2019-12-06-is-a-and-has-a/index.html","hash":"aae9e356aa539d5a3240e589868a737602c70eeb","modified":1576256768061},{"_id":"public/2019/11/28/2019-11-28-pie-pic-linker-option/index.html","hash":"23a5f13f1abf8ee6f32af89798e72f35f80c30f2","modified":1576256768061},{"_id":"public/2019/11/25/2019-11-25-link-plt/index.html","hash":"d7b129e43fd2fbd703a941327418d8d8c1316765","modified":1576256768061},{"_id":"public/2019/11/23/2019-11-23-elf-hash/index.html","hash":"c3e0a653a2906eae8663d58bf65e922eb021a9f5","modified":1576256768061},{"_id":"public/2019/11/09/2019-11-09-pie-pic-got-plt/index.html","hash":"3cb4a35e63c23b54bd4152d3f4f0b56e99e3484b","modified":1576256768061},{"_id":"public/2019/11/05/2019-11-05-fast-check-linux/index.html","hash":"d094900feb614b28d82df7e1d9ccbdd00c97fa05","modified":1576256768061},{"_id":"public/2019/11/09/2019-11-12-elf-section-symbol/index.html","hash":"a8c2e9f314666e0857f25d4f3967d44bd4333a70","modified":1576256768061},{"_id":"public/2019/11/04/2019-11-04-aslr/index.html","hash":"4dc8896fcda96994edd631cb3526f17afd4bcaa1","modified":1576256768061},{"_id":"public/2019/09/16/2019-09-16-problem-domain/index.html","hash":"c3829252981061087080fda4c5621e9a3e2a51ae","modified":1576256768061},{"_id":"public/2019/06/08/2019-06-08-rvo/index.html","hash":"f271185cf624f7734ac88b349d6e38a34caf17ad","modified":1576256768061},{"_id":"public/2019/01/29/2019-01-17-Odyssey/index.html","hash":"b6da07555f4c0a390ef51183ce882f3192e79267","modified":1576256768061},{"_id":"public/2019/01/17/2019-01-17-type-system-erase/index.html","hash":"49c75a643d2337533843dda8f38471098a6b4439","modified":1576256768061},{"_id":"public/2019/01/11/2019-01-11-AT&T-INTEL-ASM/index.html","hash":"86394016de3a06e5602f02d9f0004bb9225dc21f","modified":1576256768061},{"_id":"public/2019/01/10/2019-01-10-unordered_map/index.html","hash":"3dbc9ae186fa169689a182011675ec1ebddc8f57","modified":1576256768061},{"_id":"public/2019/01/07/2019-01-08-fps-synchronization/index.html","hash":"1c169d1d91ac6aa3cca111f11241281db65eaa56","modified":1576256768061},{"_id":"public/2019/01/07/2019-01-07-elite/index.html","hash":"768c5616fd87f70b9ff55483a97ac0dfd20e628c","modified":1576256768061},{"_id":"public/2018/12/22/2018-12-22-attribute/index.html","hash":"1c00f6c143d50eab110a6da7e26bb00f5e294a94","modified":1576256768061},{"_id":"public/index.html","hash":"7f10c9fdf19789b8d4bc109c5357d067516af759","modified":1576257214131},{"_id":"public/page/2/index.html","hash":"9b01e88eec7bfb6d98bbe71f9a1fe4029df9f584","modified":1576256768061},{"_id":"public/page/3/index.html","hash":"1cc8ad9939c0a954e13196733edc4826cad40c9b","modified":1576256768061},{"_id":"public/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1576256768061},{"_id":"public/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1576256768061},{"_id":"public/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1576256768061},{"_id":"public/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1576256768061},{"_id":"public/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1576256768061},{"_id":"public/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1576256768061},{"_id":"public/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1576256768061},{"_id":"public/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1576256768061},{"_id":"public/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1576256768061},{"_id":"public/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1576256768061},{"_id":"public/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1576256768061},{"_id":"public/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1576256768061},{"_id":"public/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1576256768061},{"_id":"public/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1576256768061},{"_id":"public/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1576256768061},{"_id":"public/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1576256768061},{"_id":"public/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1576256768061},{"_id":"public/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1576256768061},{"_id":"public/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1576256768061},{"_id":"public/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1576256768061},{"_id":"public/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1576256768061},{"_id":"public/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1576256768061},{"_id":"public/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1576256768061},{"_id":"public/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1576256768061},{"_id":"public/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1576256768061},{"_id":"public/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1576256768061},{"_id":"public/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1576256768061},{"_id":"public/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1576256768061},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1576256768061},{"_id":"public/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1576256768061},{"_id":"public/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1576256768061},{"_id":"public/js/src/bootstrap.js","hash":"6117f97b4984b8e33f21c726132da64ba678e4ed","modified":1576256768061},{"_id":"public/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1576256768061},{"_id":"public/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1576256768061},{"_id":"public/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1576256768061},{"_id":"public/js/src/post-details.js","hash":"0693695a9512641daff63d99da772625a058ab18","modified":1576256768061},{"_id":"public/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1576256768061},{"_id":"public/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1576256768061},{"_id":"public/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1576256768061},{"_id":"public/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1576256768061},{"_id":"public/lib/canvas-ribbon/canvas-ribbon.js","hash":"7fd2f3e2773555392ef40df40cae3bedb884f17a","modified":1576256768061},{"_id":"public/lib/fastclick/bower.json","hash":"4dcecf83afddba148464d5339c93f6d0aa9f42e9","modified":1576256768061},{"_id":"public/lib/font-awesome/bower.json","hash":"64394a2a9aa00f8e321d8daa5e51a420f0e96dad","modified":1576256768061},{"_id":"public/lib/jquery_lazyload/bower.json","hash":"ae3c3b61e6e7f9e1d7e3585ad854380ecc04cf53","modified":1576256768061},{"_id":"public/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1576256768061},{"_id":"public/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1576256768061},{"_id":"public/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1576256768061},{"_id":"public/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1576256768061},{"_id":"public/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1576256768061},{"_id":"public/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1576256768061},{"_id":"public/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1576256768061},{"_id":"public/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1576256768061},{"_id":"public/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1576256768061},{"_id":"public/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1576256768061},{"_id":"public/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1576256768061},{"_id":"public/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1576256768061},{"_id":"public/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1576256768061},{"_id":"public/lib/velocity/bower.json","hash":"0ef14e7ccdfba5db6eb3f8fc6aa3b47282c36409","modified":1576256768061},{"_id":"public/js/src/schemes/pisces.js","hash":"79da92119bc246fe05d1626ac98426a83ec90a94","modified":1576256768061},{"_id":"public/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1576256768061},{"_id":"public/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1576256768061},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1576256768061},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1576256768061},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1576256768061},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1576256768061},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1576256768061},{"_id":"public/lib/fastclick/README.html","hash":"b9e008af0866799103e596e2eda466a33d7dde18","modified":1576256768061},{"_id":"public/lib/jquery_lazyload/README.html","hash":"9c91bba4263a20004f2c10772d438cfa8312c308","modified":1576256768061},{"_id":"public/lib/jquery_lazyload/CONTRIBUTING.html","hash":"7eecc5e472416b9870580c53b7ed0c44474ed23a","modified":1576256768061},{"_id":"public/css/main.css","hash":"adff10a7a1d8ac3ef84d1bef942b195a9502e121","modified":1576256768061},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1576256768061},{"_id":"public/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1576256768061},{"_id":"public/js/src/motion.js","hash":"dc0365b2fb315a8b43d3ef19b59d3a82a366fcc1","modified":1576256768061},{"_id":"public/js/src/utils.js","hash":"2917c39c75b14b6dab7e1c46ab4d87b4df9fcd5d","modified":1576256768061},{"_id":"public/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1576256768061},{"_id":"public/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1576256768061},{"_id":"public/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1576256768061},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1576256768061},{"_id":"public/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1576256768061},{"_id":"public/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1576256768061},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1576256768061},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1576256768061},{"_id":"public/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1576256768061},{"_id":"public/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1576256768061},{"_id":"public/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1576256768061},{"_id":"public/lib/three/canvas_lines.min.js","hash":"dce4a3b65f8bf958f973690caa7ec4952f353b0c","modified":1576256768061},{"_id":"public/lib/three/canvas_sphere.min.js","hash":"d8ea241a53c135a650f7335d2b6982b899fd58a9","modified":1576256768061},{"_id":"public/lib/three/three-waves.min.js","hash":"d968cba6b3a50b3626a02d67b544f349d83b147c","modified":1576256768061},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1576256768061},{"_id":"public/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1576256768061},{"_id":"public/lib/Han/dist/han.min.js","hash":"f559c68a25065a14f47da954a7617d87263e409d","modified":1576256768061},{"_id":"public/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1576256768061},{"_id":"public/lib/Han/dist/han.min.css","hash":"a0c9e32549a8b8cf327ab9227b037f323cdb60ee","modified":1576256768061},{"_id":"public/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1576256768061},{"_id":"public/lib/Han/dist/han.css","hash":"bd40da3fba8735df5850956814e312bd7b3193d7","modified":1576256768061},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1576256768061},{"_id":"public/lib/Han/dist/han.js","hash":"e345397e0585c9fed1449e614ec13e0224acf2ab","modified":1576256768061},{"_id":"public/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1576256768061},{"_id":"public/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1576256768061},{"_id":"public/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1576256768061},{"_id":"public/images/avatar.png","hash":"0143509d8b5f1dd4c1eac48c5a112ba2f09efd3b","modified":1576256768061},{"_id":"public/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1576256768061}],"Category":[{"name":"develop","_id":"ck44ekz1o000cr45h8u3he0mb"}],"Data":[],"Page":[{"layout":"default","title":"About","date":"2017-06-09T16:34:58.000Z","_content":"\n### 个人简介:  \n\n* 夏天  \n\n### 联系方式  \n\n* NONE  \n\n### 关于本站：\n\n* 如微风在耳边轻语 如夏虫在冬季沉眠   \n","source":"about/index.md","raw":"---\nlayout: default\ntitle: \"About\"\ndate: 2017-06-10 00:34:58\n---\n\n### 个人简介:  \n\n* 夏天  \n\n### 联系方式  \n\n* NONE  \n\n### 关于本站：\n\n* 如微风在耳边轻语 如夏虫在冬季沉眠   \n","updated":"2019-01-11T08:35:19.341Z","path":"about/index.html","comments":1,"_id":"ck44ekz160001r45hf9dffctb","content":"<h3><span id=\"个人简介\">个人简介:</span></h3><ul>\n<li>夏天  </li>\n</ul>\n<h3><span id=\"联系方式\">联系方式</span></h3><ul>\n<li>NONE  </li>\n</ul>\n<h3><span id=\"关于本站\">关于本站：</span></h3><ul>\n<li>如微风在耳边轻语 如夏虫在冬季沉眠</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"个人简介\"><a href=\"#个人简介\" class=\"headerlink\" title=\"个人简介:\"></a>个人简介:</h3><ul>\n<li>夏天  </li>\n</ul>\n<h3 id=\"联系方式\"><a href=\"#联系方式\" class=\"headerlink\" title=\"联系方式\"></a>联系方式</h3><ul>\n<li>NONE  </li>\n</ul>\n<h3 id=\"关于本站：\"><a href=\"#关于本站：\" class=\"headerlink\" title=\"关于本站：\"></a>关于本站：</h3><ul>\n<li>如微风在耳边轻语 如夏虫在冬季沉眠</li>\n</ul>\n"},{"layout":"default","title":"Memo","_content":"\n#### URL收藏\n* Markdown语法：<http://wowubuntu.com/markdown>  \n* Git简明操作: <http://rogerdudler.github.io/git-guide/index.zh.html>    \n* LUA5.3DOC: <http://cloudwu.github.io/lua53doc>  \n* VS背景娘插件 <https://marketplace.visualstudio.com/items?itemName=kbuchi.ClaudiaIDE>  \n\n#### Jekyll 本地调试环境搭建  \n* debian: apt-get install jekyll\n* mac: gem install jekyll\n* markdown previewer : atom==> <https://www.v2ex.com/t/249859>  \n* sublime  Ctrl+` <https://packagecontrol.io/installation#st3> install OmniMarkupPreviewer\n  \n<!-- Blog Comments -->\n<div class=\"media\">\n  <!-- UY BEGIN -->\n  <div id=\"uyan_frame\">\n  </div>\n  <script type=\"text/javascript\" src=\"http://v2.uyan.cc/code/uyan.js?uid=1511840\">\n  </script>\n  <!-- UY END -->\n</div>\n","source":"memo/index.md","raw":"---\nlayout: default\ntitle: \"Memo\"\n---\n\n#### URL收藏\n* Markdown语法：<http://wowubuntu.com/markdown>  \n* Git简明操作: <http://rogerdudler.github.io/git-guide/index.zh.html>    \n* LUA5.3DOC: <http://cloudwu.github.io/lua53doc>  \n* VS背景娘插件 <https://marketplace.visualstudio.com/items?itemName=kbuchi.ClaudiaIDE>  \n\n#### Jekyll 本地调试环境搭建  \n* debian: apt-get install jekyll\n* mac: gem install jekyll\n* markdown previewer : atom==> <https://www.v2ex.com/t/249859>  \n* sublime  Ctrl+` <https://packagecontrol.io/installation#st3> install OmniMarkupPreviewer\n  \n<!-- Blog Comments -->\n<div class=\"media\">\n  <!-- UY BEGIN -->\n  <div id=\"uyan_frame\">\n  </div>\n  <script type=\"text/javascript\" src=\"http://v2.uyan.cc/code/uyan.js?uid=1511840\">\n  </script>\n  <!-- UY END -->\n</div>\n","date":"2019-01-11T08:35:19.343Z","updated":"2019-01-11T08:35:19.343Z","path":"memo/index.html","comments":1,"_id":"ck44ekz1a0003r45hen0k5t9y","content":"<h4><span id=\"url收藏\">URL收藏</span></h4><ul>\n<li>Markdown语法：<a href=\"http://wowubuntu.com/markdown\" target=\"_blank\" rel=\"noopener\">http://wowubuntu.com/markdown</a>  </li>\n<li>Git简明操作: <a href=\"http://rogerdudler.github.io/git-guide/index.zh.html\" target=\"_blank\" rel=\"noopener\">http://rogerdudler.github.io/git-guide/index.zh.html</a>    </li>\n<li>LUA5.3DOC: <a href=\"http://cloudwu.github.io/lua53doc\" target=\"_blank\" rel=\"noopener\">http://cloudwu.github.io/lua53doc</a>  </li>\n<li>VS背景娘插件 <a href=\"https://marketplace.visualstudio.com/items?itemName=kbuchi.ClaudiaIDE\" target=\"_blank\" rel=\"noopener\">https://marketplace.visualstudio.com/items?itemName=kbuchi.ClaudiaIDE</a>  </li>\n</ul>\n<h4><span id=\"jekyll-本地调试环境搭建\">Jekyll 本地调试环境搭建</span></h4><ul>\n<li>debian: apt-get install jekyll</li>\n<li>mac: gem install jekyll</li>\n<li>markdown previewer : atom==&gt; <a href=\"https://www.v2ex.com/t/249859\" target=\"_blank\" rel=\"noopener\">https://www.v2ex.com/t/249859</a>  </li>\n<li>sublime  Ctrl+` <a href=\"https://packagecontrol.io/installation#st3\" target=\"_blank\" rel=\"noopener\">https://packagecontrol.io/installation#st3</a> install OmniMarkupPreviewer</li>\n</ul>\n<!-- Blog Comments -->\n<div class=\"media\">\n  <!-- UY BEGIN -->\n  <div id=\"uyan_frame\">\n  </div>\n  <script type=\"text/javascript\" src=\"http://v2.uyan.cc/code/uyan.js?uid=1511840\">\n  </script>\n  <!-- UY END -->\n</div>\n","site":{"data":{}},"excerpt":"","more":"<h4 id=\"URL收藏\"><a href=\"#URL收藏\" class=\"headerlink\" title=\"URL收藏\"></a>URL收藏</h4><ul>\n<li>Markdown语法：<a href=\"http://wowubuntu.com/markdown\" target=\"_blank\" rel=\"noopener\">http://wowubuntu.com/markdown</a>  </li>\n<li>Git简明操作: <a href=\"http://rogerdudler.github.io/git-guide/index.zh.html\" target=\"_blank\" rel=\"noopener\">http://rogerdudler.github.io/git-guide/index.zh.html</a>    </li>\n<li>LUA5.3DOC: <a href=\"http://cloudwu.github.io/lua53doc\" target=\"_blank\" rel=\"noopener\">http://cloudwu.github.io/lua53doc</a>  </li>\n<li>VS背景娘插件 <a href=\"https://marketplace.visualstudio.com/items?itemName=kbuchi.ClaudiaIDE\" target=\"_blank\" rel=\"noopener\">https://marketplace.visualstudio.com/items?itemName=kbuchi.ClaudiaIDE</a>  </li>\n</ul>\n<h4 id=\"Jekyll-本地调试环境搭建\"><a href=\"#Jekyll-本地调试环境搭建\" class=\"headerlink\" title=\"Jekyll 本地调试环境搭建\"></a>Jekyll 本地调试环境搭建</h4><ul>\n<li>debian: apt-get install jekyll</li>\n<li>mac: gem install jekyll</li>\n<li>markdown previewer : atom==&gt; <a href=\"https://www.v2ex.com/t/249859\" target=\"_blank\" rel=\"noopener\">https://www.v2ex.com/t/249859</a>  </li>\n<li>sublime  Ctrl+` <a href=\"https://packagecontrol.io/installation#st3\" target=\"_blank\" rel=\"noopener\">https://packagecontrol.io/installation#st3</a> install OmniMarkupPreviewer</li>\n</ul>\n<!-- Blog Comments -->\n<div class=\"media\">\n  <!-- UY BEGIN -->\n  <div id=\"uyan_frame\">\n  </div>\n  <script type=\"text/javascript\" src=\"http://v2.uyan.cc/code/uyan.js?uid=1511840\">\n  </script>\n  <!-- UY END -->\n</div>\n"}],"Post":[{"title":"从梦境展开 到回归梦境","date":"2016-12-31T19:21:00.000Z","author":"yawei.zhang","_content":"我想 真正的知识是来自于对痛苦的体验与思考  \n因为现实中走投无路的痛苦  \n所以寻求认知的改变  \n寻找知识的表征.     \n\n在那个并不存在的仲夏夜  \n我静静的躺在开满鲜花的山坡上, 夜色宁静如水, 萤火飞舞在我的周围.  \n我望着满天璀璨的繁星  \n一簇簇相拥的  \n一串串排好的  \n还有横越天际明沙般的  \n倒映在我的眼眸中  \n在黑暗中轻盈的流转    \n我问你看到的星空是否也如此般的湍急  \n我问你时间的指针是不是在兀自疯狂的旋转.   \n\n没有任何声音的回应 夜晚一如此的宁静.  \n我知道 时间之箭只从我身上划过 又如汹涌的河流奔向孤寂的黑暗中.  \n  <!-- more -->\n经验的快乐像是虚幻的拟春之物  \n喧嚣的人群只是遮蔽眼眸的盲流  \n我独自越过万水千山  \n走向空旷无垠的荒漠  \n没有迷人的风景  \n也没有鲜花和掌声  \n这是一个人烟罕至的边境  \n笼罩着天空的是格外真切的孤独和痛苦   \n在那世界的尽头  \n在所有存在都被虚无所吞噬的地方  \n一定还有着什么  \n那里是时空和因果的起点  \n或许自己穷尽生命所寻找的答案并不存在   \n也或许答案是什么也没有的虚无   \n而追寻 只是用另外一种痛苦的方式消退那本来的疼痛.     \n \n我回忆起少年时的一个梦境  \n我抱着课本从沾满露水的青草家园走来   \n雨后的辽阔的晴空   \n投射在水面倒影中斑驳的云彩  \n拂面吹来凉爽的微风  \n还有那翻过书页哗啦啦的声响  \n时间如同凝滞在岁月的琥珀中  \n我出神的望着远方.   \n\n从睡梦中醒来  \n我一如往常般记不起自己是在哪里  \n又是哪个时代  \n仿佛所有的记忆超越时间和空间的秩序糅杂成碎片挤压在一起   \n然后随着梦的消退   \n一点点重新铺展开来  \n这铺展开来的叫做现实  \n仿佛是来自于梦境   \n也或许会在某个黄昏的时候  \n重新回归于梦境.   \n\n","source":"_posts/2017-01-01-pain.md","raw":"---\ntitle: 从梦境展开 到回归梦境  \ndate: 2017-01-01 03:21:00\nauthor: yawei.zhang \n---\n我想 真正的知识是来自于对痛苦的体验与思考  \n因为现实中走投无路的痛苦  \n所以寻求认知的改变  \n寻找知识的表征.     \n\n在那个并不存在的仲夏夜  \n我静静的躺在开满鲜花的山坡上, 夜色宁静如水, 萤火飞舞在我的周围.  \n我望着满天璀璨的繁星  \n一簇簇相拥的  \n一串串排好的  \n还有横越天际明沙般的  \n倒映在我的眼眸中  \n在黑暗中轻盈的流转    \n我问你看到的星空是否也如此般的湍急  \n我问你时间的指针是不是在兀自疯狂的旋转.   \n\n没有任何声音的回应 夜晚一如此的宁静.  \n我知道 时间之箭只从我身上划过 又如汹涌的河流奔向孤寂的黑暗中.  \n  <!-- more -->\n经验的快乐像是虚幻的拟春之物  \n喧嚣的人群只是遮蔽眼眸的盲流  \n我独自越过万水千山  \n走向空旷无垠的荒漠  \n没有迷人的风景  \n也没有鲜花和掌声  \n这是一个人烟罕至的边境  \n笼罩着天空的是格外真切的孤独和痛苦   \n在那世界的尽头  \n在所有存在都被虚无所吞噬的地方  \n一定还有着什么  \n那里是时空和因果的起点  \n或许自己穷尽生命所寻找的答案并不存在   \n也或许答案是什么也没有的虚无   \n而追寻 只是用另外一种痛苦的方式消退那本来的疼痛.     \n \n我回忆起少年时的一个梦境  \n我抱着课本从沾满露水的青草家园走来   \n雨后的辽阔的晴空   \n投射在水面倒影中斑驳的云彩  \n拂面吹来凉爽的微风  \n还有那翻过书页哗啦啦的声响  \n时间如同凝滞在岁月的琥珀中  \n我出神的望着远方.   \n\n从睡梦中醒来  \n我一如往常般记不起自己是在哪里  \n又是哪个时代  \n仿佛所有的记忆超越时间和空间的秩序糅杂成碎片挤压在一起   \n然后随着梦的消退   \n一点点重新铺展开来  \n这铺展开来的叫做现实  \n仿佛是来自于梦境   \n也或许会在某个黄昏的时候  \n重新回归于梦境.   \n\n","slug":"2017-01-01-pain","published":1,"updated":"2019-01-17T14:03:51.591Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck44ekz0x0000r45hf21r40mu","content":"<p>我想 真正的知识是来自于对痛苦的体验与思考<br>因为现实中走投无路的痛苦<br>所以寻求认知的改变<br>寻找知识的表征.     </p>\n<p>在那个并不存在的仲夏夜<br>我静静的躺在开满鲜花的山坡上, 夜色宁静如水, 萤火飞舞在我的周围.<br>我望着满天璀璨的繁星<br>一簇簇相拥的<br>一串串排好的<br>还有横越天际明沙般的<br>倒映在我的眼眸中<br>在黑暗中轻盈的流转<br>我问你看到的星空是否也如此般的湍急<br>我问你时间的指针是不是在兀自疯狂的旋转.   </p>\n<p>没有任何声音的回应 夜晚一如此的宁静.<br>我知道 时间之箭只从我身上划过 又如汹涌的河流奔向孤寂的黑暗中.<br>  <a id=\"more\"></a><br>经验的快乐像是虚幻的拟春之物<br>喧嚣的人群只是遮蔽眼眸的盲流<br>我独自越过万水千山<br>走向空旷无垠的荒漠<br>没有迷人的风景<br>也没有鲜花和掌声<br>这是一个人烟罕至的边境<br>笼罩着天空的是格外真切的孤独和痛苦<br>在那世界的尽头<br>在所有存在都被虚无所吞噬的地方<br>一定还有着什么<br>那里是时空和因果的起点<br>或许自己穷尽生命所寻找的答案并不存在<br>也或许答案是什么也没有的虚无<br>而追寻 只是用另外一种痛苦的方式消退那本来的疼痛.     </p>\n<p>我回忆起少年时的一个梦境<br>我抱着课本从沾满露水的青草家园走来<br>雨后的辽阔的晴空<br>投射在水面倒影中斑驳的云彩<br>拂面吹来凉爽的微风<br>还有那翻过书页哗啦啦的声响<br>时间如同凝滞在岁月的琥珀中<br>我出神的望着远方.   </p>\n<p>从睡梦中醒来<br>我一如往常般记不起自己是在哪里<br>又是哪个时代<br>仿佛所有的记忆超越时间和空间的秩序糅杂成碎片挤压在一起<br>然后随着梦的消退<br>一点点重新铺展开来<br>这铺展开来的叫做现实<br>仿佛是来自于梦境<br>也或许会在某个黄昏的时候<br>重新回归于梦境.</p>\n","site":{"data":{}},"excerpt":"<p>我想 真正的知识是来自于对痛苦的体验与思考<br>因为现实中走投无路的痛苦<br>所以寻求认知的改变<br>寻找知识的表征.     </p>\n<p>在那个并不存在的仲夏夜<br>我静静的躺在开满鲜花的山坡上, 夜色宁静如水, 萤火飞舞在我的周围.<br>我望着满天璀璨的繁星<br>一簇簇相拥的<br>一串串排好的<br>还有横越天际明沙般的<br>倒映在我的眼眸中<br>在黑暗中轻盈的流转<br>我问你看到的星空是否也如此般的湍急<br>我问你时间的指针是不是在兀自疯狂的旋转.   </p>\n<p>没有任何声音的回应 夜晚一如此的宁静.<br>我知道 时间之箭只从我身上划过 又如汹涌的河流奔向孤寂的黑暗中.<br>","more":"<br>经验的快乐像是虚幻的拟春之物<br>喧嚣的人群只是遮蔽眼眸的盲流<br>我独自越过万水千山<br>走向空旷无垠的荒漠<br>没有迷人的风景<br>也没有鲜花和掌声<br>这是一个人烟罕至的边境<br>笼罩着天空的是格外真切的孤独和痛苦<br>在那世界的尽头<br>在所有存在都被虚无所吞噬的地方<br>一定还有着什么<br>那里是时空和因果的起点<br>或许自己穷尽生命所寻找的答案并不存在<br>也或许答案是什么也没有的虚无<br>而追寻 只是用另外一种痛苦的方式消退那本来的疼痛.     </p>\n<p>我回忆起少年时的一个梦境<br>我抱着课本从沾满露水的青草家园走来<br>雨后的辽阔的晴空<br>投射在水面倒影中斑驳的云彩<br>拂面吹来凉爽的微风<br>还有那翻过书页哗啦啦的声响<br>时间如同凝滞在岁月的琥珀中<br>我出神的望着远方.   </p>\n<p>从睡梦中醒来<br>我一如往常般记不起自己是在哪里<br>又是哪个时代<br>仿佛所有的记忆超越时间和空间的秩序糅杂成碎片挤压在一起<br>然后随着梦的消退<br>一点点重新铺展开来<br>这铺展开来的叫做现实<br>仿佛是来自于梦境<br>也或许会在某个黄昏的时候<br>重新回归于梦境.</p>"},{"title":"太久的明天 让人视而不见","date":"2017-07-29T19:21:00.000Z","author":"yawei.zhang","_content":"我的世界里没有光  所有的星星也都坠落   \n一个孤独的灵魂 游荡在黑色的夜 黑色的水 黑色的荒野中   \n我怀疑我是一个怪物 让人讨厌的 让人恐惧的 让人远离   \n我在想 我的存在是不是从来都是没有意义的 是错误的   \n我在想 为什么 自己还活着  是什么在支撑着如此痛苦的人生在继续旋转着  \n\n是意志力吗? 那种内在的 独立的 顽强的  源于感性体验而又超越感性的核心内驱力.  不是 我没有 我很脆弱.   \n是信念吗?  建立在成功的经验之上, 源于对自己能力于外界的可控性的充分的洞察,  不是 我没有 我没有成功的经验, 只有侥幸的成功.  \n\n是因为活着就不甘心死去,  生来就唾弃平庸吗?  可是明明什么都做不到, 失去的不能挽回, 得不到的永远在远方.   \n\n或者 从失败中寻找可怜的小幸福, 从平庸中获取细微的确定性,  然后想尽各种谎言欺骗自己的内心 告诉自己, 瞧那个人 还是挺优秀的 挺有希望的.  \n\n或者本来就是这样吧 把自己骗过去就好.   \n\n","source":"_posts/2017-07-30-far-tommorrow.md","raw":"---\ntitle: 太久的明天 让人视而不见  \ndate: 2017-07-30 03:21:00\nauthor: yawei.zhang \n---\n我的世界里没有光  所有的星星也都坠落   \n一个孤独的灵魂 游荡在黑色的夜 黑色的水 黑色的荒野中   \n我怀疑我是一个怪物 让人讨厌的 让人恐惧的 让人远离   \n我在想 我的存在是不是从来都是没有意义的 是错误的   \n我在想 为什么 自己还活着  是什么在支撑着如此痛苦的人生在继续旋转着  \n\n是意志力吗? 那种内在的 独立的 顽强的  源于感性体验而又超越感性的核心内驱力.  不是 我没有 我很脆弱.   \n是信念吗?  建立在成功的经验之上, 源于对自己能力于外界的可控性的充分的洞察,  不是 我没有 我没有成功的经验, 只有侥幸的成功.  \n\n是因为活着就不甘心死去,  生来就唾弃平庸吗?  可是明明什么都做不到, 失去的不能挽回, 得不到的永远在远方.   \n\n或者 从失败中寻找可怜的小幸福, 从平庸中获取细微的确定性,  然后想尽各种谎言欺骗自己的内心 告诉自己, 瞧那个人 还是挺优秀的 挺有希望的.  \n\n或者本来就是这样吧 把自己骗过去就好.   \n\n","slug":"2017-07-30-far-tommorrow","published":1,"updated":"2019-01-17T14:03:57.471Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck44ekz180002r45h2r2nf9jg","content":"<p>我的世界里没有光  所有的星星也都坠落<br>一个孤独的灵魂 游荡在黑色的夜 黑色的水 黑色的荒野中<br>我怀疑我是一个怪物 让人讨厌的 让人恐惧的 让人远离<br>我在想 我的存在是不是从来都是没有意义的 是错误的<br>我在想 为什么 自己还活着  是什么在支撑着如此痛苦的人生在继续旋转着  </p>\n<p>是意志力吗? 那种内在的 独立的 顽强的  源于感性体验而又超越感性的核心内驱力.  不是 我没有 我很脆弱.<br>是信念吗?  建立在成功的经验之上, 源于对自己能力于外界的可控性的充分的洞察,  不是 我没有 我没有成功的经验, 只有侥幸的成功.  </p>\n<p>是因为活着就不甘心死去,  生来就唾弃平庸吗?  可是明明什么都做不到, 失去的不能挽回, 得不到的永远在远方.   </p>\n<p>或者 从失败中寻找可怜的小幸福, 从平庸中获取细微的确定性,  然后想尽各种谎言欺骗自己的内心 告诉自己, 瞧那个人 还是挺优秀的 挺有希望的.  </p>\n<p>或者本来就是这样吧 把自己骗过去就好.</p>\n","site":{"data":{}},"excerpt":"","more":"<p>我的世界里没有光  所有的星星也都坠落<br>一个孤独的灵魂 游荡在黑色的夜 黑色的水 黑色的荒野中<br>我怀疑我是一个怪物 让人讨厌的 让人恐惧的 让人远离<br>我在想 我的存在是不是从来都是没有意义的 是错误的<br>我在想 为什么 自己还活着  是什么在支撑着如此痛苦的人生在继续旋转着  </p>\n<p>是意志力吗? 那种内在的 独立的 顽强的  源于感性体验而又超越感性的核心内驱力.  不是 我没有 我很脆弱.<br>是信念吗?  建立在成功的经验之上, 源于对自己能力于外界的可控性的充分的洞察,  不是 我没有 我没有成功的经验, 只有侥幸的成功.  </p>\n<p>是因为活着就不甘心死去,  生来就唾弃平庸吗?  可是明明什么都做不到, 失去的不能挽回, 得不到的永远在远方.   </p>\n<p>或者 从失败中寻找可怜的小幸福, 从平庸中获取细微的确定性,  然后想尽各种谎言欺骗自己的内心 告诉自己, 瞧那个人 还是挺优秀的 挺有希望的.  </p>\n<p>或者本来就是这样吧 把自己骗过去就好.</p>\n"},{"title":"wolrd line convergence","date":"2017-09-18T17:03:00.000Z","author":"yawei.zhang","_content":"disturb the world line convergence  failed ..  \nworldline changes   failed ..  \nprolog beginning .. \nprolog saved one moment .. \nprolog crash ..  \nback stack failed .. \ngarbage collect ..  \nundo this worldline ..  \nthrown into the unknown ...    \n\n\n\n","source":"_posts/2017-09-19-world-line-collect.md","raw":"---\ntitle: wolrd line convergence\ndate: 2017-09-19 01:03:00\nauthor: yawei.zhang \n---\ndisturb the world line convergence  failed ..  \nworldline changes   failed ..  \nprolog beginning .. \nprolog saved one moment .. \nprolog crash ..  \nback stack failed .. \ngarbage collect ..  \nundo this worldline ..  \nthrown into the unknown ...    \n\n\n\n","slug":"2017-09-19-world-line-collect","published":1,"updated":"2019-01-17T14:04:07.901Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck44ekz1c0004r45h5d803sxu","content":"<p>disturb the world line convergence  failed ..<br>worldline changes   failed ..<br>prolog beginning ..<br>prolog saved one moment ..<br>prolog crash ..<br>back stack failed ..<br>garbage collect ..<br>undo this worldline ..<br>thrown into the unknown …</p>\n","site":{"data":{}},"excerpt":"","more":"<p>disturb the world line convergence  failed ..<br>worldline changes   failed ..<br>prolog beginning ..<br>prolog saved one moment ..<br>prolog crash ..<br>back stack failed ..<br>garbage collect ..<br>undo this worldline ..<br>thrown into the unknown …</p>\n"},{"title":"老虎来喝下午茶","date":"2017-08-06T07:24:00.000Z","author":"yawei.zhang","_content":"```  \n    老虎来到我的家, 它怯生生的问\"我的肚子好饿, 可不可以与你们一起喝下午茶呢?\".  \n\n    老虎来到我的家，它大摇大摆地走进来，坐下来与妈妈和我喝下午茶.  \n\n    老虎来到我的家，它吃光了家里的所有食物，还喝光了家里的水.   \n\n    老虎离开我的家，它像绅士一样和我们说“谢谢”、“再见”.  \n\n    老虎离开我的家，它就再没有出现过.    \n\n```\n\n  **对于我爱的你,  就像那只怯生生的来喝下午茶的老虎,  在我毫无防备的时候闯进了我的生命里.    \n  而在我准备好迎接你的到来时,  当我们可以开始一场不那么狼狈和仓促的下午茶的时候,  你从我的世界离开了,  再也没有回来过**.   \n","source":"_posts/2017-08-06-tiger-tea.md","raw":"---\ntitle: 老虎来喝下午茶  \ndate: 2017-08-06 15:24:00\nauthor: yawei.zhang \n---\n```  \n    老虎来到我的家, 它怯生生的问\"我的肚子好饿, 可不可以与你们一起喝下午茶呢?\".  \n\n    老虎来到我的家，它大摇大摆地走进来，坐下来与妈妈和我喝下午茶.  \n\n    老虎来到我的家，它吃光了家里的所有食物，还喝光了家里的水.   \n\n    老虎离开我的家，它像绅士一样和我们说“谢谢”、“再见”.  \n\n    老虎离开我的家，它就再没有出现过.    \n\n```\n\n  **对于我爱的你,  就像那只怯生生的来喝下午茶的老虎,  在我毫无防备的时候闯进了我的生命里.    \n  而在我准备好迎接你的到来时,  当我们可以开始一场不那么狼狈和仓促的下午茶的时候,  你从我的世界离开了,  再也没有回来过**.   \n","slug":"2017-08-06-tiger-tea","published":1,"updated":"2019-01-17T14:04:00.782Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck44ekz1e0005r45he0awccrj","content":"<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">老虎来到我的家, 它怯生生的问&quot;我的肚子好饿, 可不可以与你们一起喝下午茶呢?&quot;.  </span><br><span class=\"line\"></span><br><span class=\"line\">老虎来到我的家，它大摇大摆地走进来，坐下来与妈妈和我喝下午茶.  </span><br><span class=\"line\"></span><br><span class=\"line\">老虎来到我的家，它吃光了家里的所有食物，还喝光了家里的水.   </span><br><span class=\"line\"></span><br><span class=\"line\">老虎离开我的家，它像绅士一样和我们说“谢谢”、“再见”.  </span><br><span class=\"line\"></span><br><span class=\"line\">老虎离开我的家，它就再没有出现过.</span><br></pre></td></tr></table></figure>\n\n<p>  <strong>对于我爱的你,  就像那只怯生生的来喝下午茶的老虎,  在我毫无防备的时候闯进了我的生命里.<br>  而在我准备好迎接你的到来时,  当我们可以开始一场不那么狼狈和仓促的下午茶的时候,  你从我的世界离开了,  再也没有回来过</strong>.</p>\n","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">老虎来到我的家, 它怯生生的问&quot;我的肚子好饿, 可不可以与你们一起喝下午茶呢?&quot;.  </span><br><span class=\"line\"></span><br><span class=\"line\">老虎来到我的家，它大摇大摆地走进来，坐下来与妈妈和我喝下午茶.  </span><br><span class=\"line\"></span><br><span class=\"line\">老虎来到我的家，它吃光了家里的所有食物，还喝光了家里的水.   </span><br><span class=\"line\"></span><br><span class=\"line\">老虎离开我的家，它像绅士一样和我们说“谢谢”、“再见”.  </span><br><span class=\"line\"></span><br><span class=\"line\">老虎离开我的家，它就再没有出现过.</span><br></pre></td></tr></table></figure>\n\n<p>  <strong>对于我爱的你,  就像那只怯生生的来喝下午茶的老虎,  在我毫无防备的时候闯进了我的生命里.<br>  而在我准备好迎接你的到来时,  当我们可以开始一场不那么狼狈和仓促的下午茶的时候,  你从我的世界离开了,  再也没有回来过</strong>.</p>\n"},{"title":"illusion","date":"2017-09-05T17:03:00.000Z","author":"yawei.zhang","_content":"\n梦的深处 斑驳的光影  \n如草蛇般穿行过忽明忽暗的丛莽  \n<!-- more -->\n爬满藤蔓植物的森林  \n似乎想起了什么 \n什么也没有想起来  \n现实如流矢没入不曾预期的句点  \n戛然而止   \n不 没有结束      \n梦境从这里延续  \n一切都从这里开始   \n现实才是梦的终结  \n我在这里  \nyou stay with me  \nWell I could sleep forever   \n\n\n\n\n\n\n","source":"_posts/2017-09-06-dream-woods.md","raw":"---\ntitle: illusion   \ndate: 2017-09-06 01:03:00\nauthor: yawei.zhang \n---\n\n梦的深处 斑驳的光影  \n如草蛇般穿行过忽明忽暗的丛莽  \n<!-- more -->\n爬满藤蔓植物的森林  \n似乎想起了什么 \n什么也没有想起来  \n现实如流矢没入不曾预期的句点  \n戛然而止   \n不 没有结束      \n梦境从这里延续  \n一切都从这里开始   \n现实才是梦的终结  \n我在这里  \nyou stay with me  \nWell I could sleep forever   \n\n\n\n\n\n\n","slug":"2017-09-06-dream-woods","published":1,"updated":"2019-01-17T14:04:04.446Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck44ekz1f0006r45hfbn627kp","content":"<p>梦的深处 斑驳的光影<br>如草蛇般穿行过忽明忽暗的丛莽  </p>\n<a id=\"more\"></a>\n<p>爬满藤蔓植物的森林<br>似乎想起了什么<br>什么也没有想起来<br>现实如流矢没入不曾预期的句点<br>戛然而止<br>不 没有结束<br>梦境从这里延续<br>一切都从这里开始<br>现实才是梦的终结<br>我在这里<br>you stay with me<br>Well I could sleep forever</p>\n","site":{"data":{}},"excerpt":"<p>梦的深处 斑驳的光影<br>如草蛇般穿行过忽明忽暗的丛莽  </p>","more":"<p>爬满藤蔓植物的森林<br>似乎想起了什么<br>什么也没有想起来<br>现实如流矢没入不曾预期的句点<br>戛然而止<br>不 没有结束<br>梦境从这里延续<br>一切都从这里开始<br>现实才是梦的终结<br>我在这里<br>you stay with me<br>Well I could sleep forever</p>"},{"title":"Lullabye For Lan","date":"2017-09-30T19:21:00.000Z","author":"yawei.zhang","_content":"\n","source":"_posts/2017-10-01-lullabye.md","raw":"---\ntitle: Lullabye For Lan\ndate: 2017-10-01 03:21:00\nauthor: yawei.zhang \n---\n\n","slug":"2017-10-01-lullabye","published":1,"updated":"2019-03-06T13:03:54.364Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck44ekz1h0007r45hcqmtg4qj","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"Revolt","date":"2017-10-17T19:21:00.000Z","author":"yawei.zhang","_content":"把自己埋在冰土里  \n跟自己说再见  \n跟这个世界说声晚安   \n听着心脏的跳动一点点消失  \n一点点的宁静      \n在我的脑海中   \n在我的坟墓边上有一朵小花   \n安静的在黑夜里摇曳   \n脉搏停止跳动的那一刻   \n躯体本能的求生欲望失去了意志上最后的束缚   \nRevolt  !   \n新的意志在死去的躯体上开始重建  \n   \n\n","source":"_posts/2017-10-18-revolt.md","raw":"---\ntitle: Revolt\ndate: 2017-10-18 03:21:00\nauthor: yawei.zhang \n---\n把自己埋在冰土里  \n跟自己说再见  \n跟这个世界说声晚安   \n听着心脏的跳动一点点消失  \n一点点的宁静      \n在我的脑海中   \n在我的坟墓边上有一朵小花   \n安静的在黑夜里摇曳   \n脉搏停止跳动的那一刻   \n躯体本能的求生欲望失去了意志上最后的束缚   \nRevolt  !   \n新的意志在死去的躯体上开始重建  \n   \n\n","slug":"2017-10-18-revolt","published":1,"updated":"2019-01-17T14:04:16.181Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck44ekz1i0008r45h2jmq0n46","content":"<p>把自己埋在冰土里<br>跟自己说再见<br>跟这个世界说声晚安<br>听着心脏的跳动一点点消失<br>一点点的宁静<br>在我的脑海中<br>在我的坟墓边上有一朵小花<br>安静的在黑夜里摇曳<br>脉搏停止跳动的那一刻<br>躯体本能的求生欲望失去了意志上最后的束缚<br>Revolt  !<br>新的意志在死去的躯体上开始重建</p>\n","site":{"data":{}},"excerpt":"","more":"<p>把自己埋在冰土里<br>跟自己说再见<br>跟这个世界说声晚安<br>听着心脏的跳动一点点消失<br>一点点的宁静<br>在我的脑海中<br>在我的坟墓边上有一朵小花<br>安静的在黑夜里摇曳<br>脉搏停止跳动的那一刻<br>躯体本能的求生欲望失去了意志上最后的束缚<br>Revolt  !<br>新的意志在死去的躯体上开始重建</p>\n"},{"title":"浪漫主义","date":"2017-10-25T19:21:00.000Z","author":"yawei.zhang","_content":"人的感受是正当的  也是自然的   \n因为要完成自己的职责 完成自己的目标 完成他人的所有期望    \n做一个正义的 温暖的  无限包容的 开放的  神圣的人  \n所以去承受自己所不能承受的痛苦  \n无限的束缚和压抑自我感受  \n变成一具非人的行尸  \n这并不可能存在  也一点不浪漫   \n \n浪漫是在悲剧的环境中乐观的正视并且尊重自己的感受  \n\n","source":"_posts/2017-10-26-romanticism.md","raw":"---\ntitle: 浪漫主义\ndate: 2017-10-26 03:21:00\nauthor: yawei.zhang \n---\n人的感受是正当的  也是自然的   \n因为要完成自己的职责 完成自己的目标 完成他人的所有期望    \n做一个正义的 温暖的  无限包容的 开放的  神圣的人  \n所以去承受自己所不能承受的痛苦  \n无限的束缚和压抑自我感受  \n变成一具非人的行尸  \n这并不可能存在  也一点不浪漫   \n \n浪漫是在悲剧的环境中乐观的正视并且尊重自己的感受  \n\n","slug":"2017-10-26-romanticism","published":1,"updated":"2019-01-17T14:04:19.253Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck44ekz1k0009r45h6up25swx","content":"<p>人的感受是正当的  也是自然的<br>因为要完成自己的职责 完成自己的目标 完成他人的所有期望<br>做一个正义的 温暖的  无限包容的 开放的  神圣的人<br>所以去承受自己所不能承受的痛苦<br>无限的束缚和压抑自我感受<br>变成一具非人的行尸<br>这并不可能存在  也一点不浪漫   </p>\n<p>浪漫是在悲剧的环境中乐观的正视并且尊重自己的感受</p>\n","site":{"data":{}},"excerpt":"","more":"<p>人的感受是正当的  也是自然的<br>因为要完成自己的职责 完成自己的目标 完成他人的所有期望<br>做一个正义的 温暖的  无限包容的 开放的  神圣的人<br>所以去承受自己所不能承受的痛苦<br>无限的束缚和压抑自我感受<br>变成一具非人的行尸<br>这并不可能存在  也一点不浪漫   </p>\n<p>浪漫是在悲剧的环境中乐观的正视并且尊重自己的感受</p>\n"},{"title":"unordered_map","date":"2019-01-10T09:21:00.000Z","author":"yawei.zhang","_content":"\n### 基本概念  \n* **哈希算法：** 根据设定的哈希函数H（key）和处理冲突方法将一组关键字映象到一个有限的地址区间上的算法。也称为散列算法、杂凑算法。  \n* **哈希表：** 数据经过哈希算法之后得到的集合。这样关键字和数据在集合中的位置存在一定的关系，可以根据这种关系快速查询。  \n* **非哈希表：** 与哈希表相对应，集合中的 数据和其存放位置没任何关联关系的集合。 由此可见，哈希算法是一种特殊的算法，能将任意数据散列后映射到有限的空间上，通常计算机软件中用作快速查找或加密使用。   \n* **哈希冲突：** 两个不同的输入值，根据同一散列函数计算出的散列值相同的现象叫做碰撞。    \n  <!-- more -->  \n\n### 常见的Hash函数  \n* **直接定址法：** 直接以关键字k或者k加上某个常数（k+c）作为哈希地址。  \n* **数字分析法：** 提取关键字中取值比较均匀的数字作为哈希地址。  \n* **除留余数法：** 用关键字k除以某个不大于哈希表长度m的数p，将所得余数作为哈希表地址。  \n* **分段叠加法：** 按照哈希表地址位数将关键字分成位数相等的几部分，其中最后一部分可以比较短。然后将这几部分相加，舍弃最高进位后的结果就是该关键字的哈希地址。  \n* **平方取中法：** 如果关键字各个部分分布都不均匀的话，可以先求出它的平方值，然后按照需求取中间的几位作为哈希地址。  \n* **伪随机数法：** 采用一个伪随机数当作哈希函数。  \n\n### 常见的解决冲突方案   \n\n#### 开放定址法\n从发生冲突的那个单元起，按照一定的次序，从哈希表中找到一个空闲的单元。然后把发生冲突的元素存入到该单元的一种方法。开放定址法需要的表长度要大于等于所需要存放的元素。  \n在开放定址法中解决冲突的方法有：线行探查法、平方探查法、双散列函数探查法。  \n开放定址法的缺点在于**删除元素的时候不能真的删除，否则会引起查找错误，只能做一个特殊标记。**只到有下个元素插入才能真正删除该元素。  \n\n* **线行探查法**   \n线行探查法是开放定址法中最简单的冲突处理方法，它从发生冲突的单元起，依次判断下一个单元是否为空，当达到最后一个单元时，再从表首依次判断。直到碰到空闲的单元或者探查完全部单元为止。  \n\n* **平方探查法**  \n平方探查法即是发生冲突时，用发生冲突的单元d[i], 加上 1²、 2²等。即d[i] + 1²，d[i] + 2², d[i] + 3²...直到找到空闲单元。\n在实际操作中，平方探查法不能探查到全部剩余的单元。不过在实际应用中，能探查到一半单元也就可以了。若探查到一半单元仍找不到一个空闲单元，表明此散列表太满，应该重新建立。  \n\n* **双散列函数探查法**  \n这种方法使用两个散列函数hl和h2。其中hl和前面的h一样，以关键字为自变量，产生一个0至m—l之间的数作为散列地址；h2也以关键字为自变量，产生一个l至m—1之间的、并和m互素的数(即m不能被该数整除)作为探查序列的地址增量(即步长)，探查序列的步长值是固定值l；对于平方探查法，探查序列的步长值是探查次数i的两倍减l；对于双散列函数探查法，其探查序列的步长值是同一关键字的另一散列函数的值。  \n\n#### 链地址法（拉链法）\n链接地址法的思路是将哈希值相同的元素构成一个同义词的单链表，并将单链表的头指针存放在哈希表的第i个单元中，查找、插入和删除主要在同义词链表中进行。链表法适用于经常进行插入和删除的情况。\n\n注：在java中，链接地址法也是HashMap解决哈希冲突的方法之一，jdk1.7完全采用单链表来存储同义词，**jdk1.8则采用了一种混合模式，对于链表长度大于8的，会转换为红黑树存储。**   \n\n#### 再哈希法  \n就是同时构造多个不同的哈希函数：  \nHi = RHi(key)   i= 1,2,3 ... k;\n当H1 = RH1(key)  发生冲突时，再用H2 = RH2(key) 进行计算，直到冲突不再产生，这种方法不易产生聚集，但是增加了计算时间。   \n\n#### 建立公共溢出区  \n将哈希表分为公共表和溢出表，当溢出发生时，将所有溢出数据统一放到溢出区。  \n\n\n### 与map的区别   \n#### 迭代器失效情况   \n\n##### unordered_map:   \n| 操作 | 失效情况  |\n| --- | ---  |\n| 所有只读操作 swap std::swap                     | 决不  \n| clear  rehash  reserve operator=               |  始终  \n| insert  emplace  emplace_hint  operator[]      | 仅若重哈希导致  \n| erase                                           | 仅为指向被擦除元素者  \n\n##### map (通常实现为红黑树,非强制标准):   \n| 操作 | 失效情况  |\n| --- | ---  |\n| insert  emplace  emplace_hint  operator[]      | 没有失效情况  \n| erase                                           | 仅为指向被擦除元素者  \n\n\n##### 其他 \n* map是有序的，unordered_map是无序的  \n* 两者之间的查找速度不同（log(N)和N）  \n* 由于hash要控制负载率在0-1之间，所以unordered_map消耗空间更大。  \n* 迭代器失效情况, map更稳健    \n* 遍历, unordered_map需要逐桶遍历  可能有大量的无效桶  .  \n* unordered_map不能反向遍历  \n* O(lgN)和常数级的差别很小。比如10000个元素的map，log_2(N) = 13.28，才不到14次。  \n* 散列表的时间复杂度仍然是O(N), 性能上map更稳定  \n\n","source":"_posts/2019-01-10-unordered_map.md","raw":"---\ntitle: unordered_map\ndate: 2019-01-10 17:21:00\ncategories: develop \nauthor: yawei.zhang \n---\n\n### 基本概念  \n* **哈希算法：** 根据设定的哈希函数H（key）和处理冲突方法将一组关键字映象到一个有限的地址区间上的算法。也称为散列算法、杂凑算法。  \n* **哈希表：** 数据经过哈希算法之后得到的集合。这样关键字和数据在集合中的位置存在一定的关系，可以根据这种关系快速查询。  \n* **非哈希表：** 与哈希表相对应，集合中的 数据和其存放位置没任何关联关系的集合。 由此可见，哈希算法是一种特殊的算法，能将任意数据散列后映射到有限的空间上，通常计算机软件中用作快速查找或加密使用。   \n* **哈希冲突：** 两个不同的输入值，根据同一散列函数计算出的散列值相同的现象叫做碰撞。    \n  <!-- more -->  \n\n### 常见的Hash函数  \n* **直接定址法：** 直接以关键字k或者k加上某个常数（k+c）作为哈希地址。  \n* **数字分析法：** 提取关键字中取值比较均匀的数字作为哈希地址。  \n* **除留余数法：** 用关键字k除以某个不大于哈希表长度m的数p，将所得余数作为哈希表地址。  \n* **分段叠加法：** 按照哈希表地址位数将关键字分成位数相等的几部分，其中最后一部分可以比较短。然后将这几部分相加，舍弃最高进位后的结果就是该关键字的哈希地址。  \n* **平方取中法：** 如果关键字各个部分分布都不均匀的话，可以先求出它的平方值，然后按照需求取中间的几位作为哈希地址。  \n* **伪随机数法：** 采用一个伪随机数当作哈希函数。  \n\n### 常见的解决冲突方案   \n\n#### 开放定址法\n从发生冲突的那个单元起，按照一定的次序，从哈希表中找到一个空闲的单元。然后把发生冲突的元素存入到该单元的一种方法。开放定址法需要的表长度要大于等于所需要存放的元素。  \n在开放定址法中解决冲突的方法有：线行探查法、平方探查法、双散列函数探查法。  \n开放定址法的缺点在于**删除元素的时候不能真的删除，否则会引起查找错误，只能做一个特殊标记。**只到有下个元素插入才能真正删除该元素。  \n\n* **线行探查法**   \n线行探查法是开放定址法中最简单的冲突处理方法，它从发生冲突的单元起，依次判断下一个单元是否为空，当达到最后一个单元时，再从表首依次判断。直到碰到空闲的单元或者探查完全部单元为止。  \n\n* **平方探查法**  \n平方探查法即是发生冲突时，用发生冲突的单元d[i], 加上 1²、 2²等。即d[i] + 1²，d[i] + 2², d[i] + 3²...直到找到空闲单元。\n在实际操作中，平方探查法不能探查到全部剩余的单元。不过在实际应用中，能探查到一半单元也就可以了。若探查到一半单元仍找不到一个空闲单元，表明此散列表太满，应该重新建立。  \n\n* **双散列函数探查法**  \n这种方法使用两个散列函数hl和h2。其中hl和前面的h一样，以关键字为自变量，产生一个0至m—l之间的数作为散列地址；h2也以关键字为自变量，产生一个l至m—1之间的、并和m互素的数(即m不能被该数整除)作为探查序列的地址增量(即步长)，探查序列的步长值是固定值l；对于平方探查法，探查序列的步长值是探查次数i的两倍减l；对于双散列函数探查法，其探查序列的步长值是同一关键字的另一散列函数的值。  \n\n#### 链地址法（拉链法）\n链接地址法的思路是将哈希值相同的元素构成一个同义词的单链表，并将单链表的头指针存放在哈希表的第i个单元中，查找、插入和删除主要在同义词链表中进行。链表法适用于经常进行插入和删除的情况。\n\n注：在java中，链接地址法也是HashMap解决哈希冲突的方法之一，jdk1.7完全采用单链表来存储同义词，**jdk1.8则采用了一种混合模式，对于链表长度大于8的，会转换为红黑树存储。**   \n\n#### 再哈希法  \n就是同时构造多个不同的哈希函数：  \nHi = RHi(key)   i= 1,2,3 ... k;\n当H1 = RH1(key)  发生冲突时，再用H2 = RH2(key) 进行计算，直到冲突不再产生，这种方法不易产生聚集，但是增加了计算时间。   \n\n#### 建立公共溢出区  \n将哈希表分为公共表和溢出表，当溢出发生时，将所有溢出数据统一放到溢出区。  \n\n\n### 与map的区别   \n#### 迭代器失效情况   \n\n##### unordered_map:   \n| 操作 | 失效情况  |\n| --- | ---  |\n| 所有只读操作 swap std::swap                     | 决不  \n| clear  rehash  reserve operator=               |  始终  \n| insert  emplace  emplace_hint  operator[]      | 仅若重哈希导致  \n| erase                                           | 仅为指向被擦除元素者  \n\n##### map (通常实现为红黑树,非强制标准):   \n| 操作 | 失效情况  |\n| --- | ---  |\n| insert  emplace  emplace_hint  operator[]      | 没有失效情况  \n| erase                                           | 仅为指向被擦除元素者  \n\n\n##### 其他 \n* map是有序的，unordered_map是无序的  \n* 两者之间的查找速度不同（log(N)和N）  \n* 由于hash要控制负载率在0-1之间，所以unordered_map消耗空间更大。  \n* 迭代器失效情况, map更稳健    \n* 遍历, unordered_map需要逐桶遍历  可能有大量的无效桶  .  \n* unordered_map不能反向遍历  \n* O(lgN)和常数级的差别很小。比如10000个元素的map，log_2(N) = 13.28，才不到14次。  \n* 散列表的时间复杂度仍然是O(N), 性能上map更稳定  \n\n","slug":"2019-01-10-unordered_map","published":1,"updated":"2019-01-17T14:04:32.657Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck44ekz1l000ar45h2l8t0sem","content":"<h3><span id=\"基本概念\">基本概念</span></h3><ul>\n<li><strong>哈希算法：</strong> 根据设定的哈希函数H（key）和处理冲突方法将一组关键字映象到一个有限的地址区间上的算法。也称为散列算法、杂凑算法。  </li>\n<li><strong>哈希表：</strong> 数据经过哈希算法之后得到的集合。这样关键字和数据在集合中的位置存在一定的关系，可以根据这种关系快速查询。  </li>\n<li><strong>非哈希表：</strong> 与哈希表相对应，集合中的 数据和其存放位置没任何关联关系的集合。 由此可见，哈希算法是一种特殊的算法，能将任意数据散列后映射到有限的空间上，通常计算机软件中用作快速查找或加密使用。   </li>\n<li><strong>哈希冲突：</strong> 两个不同的输入值，根据同一散列函数计算出的散列值相同的现象叫做碰撞。    <a id=\"more\"></a>  \n\n</li>\n</ul>\n<h3><span id=\"常见的hash函数\">常见的Hash函数</span></h3><ul>\n<li><strong>直接定址法：</strong> 直接以关键字k或者k加上某个常数（k+c）作为哈希地址。  </li>\n<li><strong>数字分析法：</strong> 提取关键字中取值比较均匀的数字作为哈希地址。  </li>\n<li><strong>除留余数法：</strong> 用关键字k除以某个不大于哈希表长度m的数p，将所得余数作为哈希表地址。  </li>\n<li><strong>分段叠加法：</strong> 按照哈希表地址位数将关键字分成位数相等的几部分，其中最后一部分可以比较短。然后将这几部分相加，舍弃最高进位后的结果就是该关键字的哈希地址。  </li>\n<li><strong>平方取中法：</strong> 如果关键字各个部分分布都不均匀的话，可以先求出它的平方值，然后按照需求取中间的几位作为哈希地址。  </li>\n<li><strong>伪随机数法：</strong> 采用一个伪随机数当作哈希函数。  </li>\n</ul>\n<h3><span id=\"常见的解决冲突方案\">常见的解决冲突方案</span></h3><h4><span id=\"开放定址法\">开放定址法</span></h4><p>从发生冲突的那个单元起，按照一定的次序，从哈希表中找到一个空闲的单元。然后把发生冲突的元素存入到该单元的一种方法。开放定址法需要的表长度要大于等于所需要存放的元素。<br>在开放定址法中解决冲突的方法有：线行探查法、平方探查法、双散列函数探查法。<br>开放定址法的缺点在于<strong>删除元素的时候不能真的删除，否则会引起查找错误，只能做一个特殊标记。</strong>只到有下个元素插入才能真正删除该元素。  </p>\n<ul>\n<li><p><strong>线行探查法</strong><br>线行探查法是开放定址法中最简单的冲突处理方法，它从发生冲突的单元起，依次判断下一个单元是否为空，当达到最后一个单元时，再从表首依次判断。直到碰到空闲的单元或者探查完全部单元为止。  </p>\n</li>\n<li><p><strong>平方探查法</strong><br>平方探查法即是发生冲突时，用发生冲突的单元d[i], 加上 1²、 2²等。即d[i] + 1²，d[i] + 2², d[i] + 3²…直到找到空闲单元。<br>在实际操作中，平方探查法不能探查到全部剩余的单元。不过在实际应用中，能探查到一半单元也就可以了。若探查到一半单元仍找不到一个空闲单元，表明此散列表太满，应该重新建立。  </p>\n</li>\n<li><p><strong>双散列函数探查法</strong><br>这种方法使用两个散列函数hl和h2。其中hl和前面的h一样，以关键字为自变量，产生一个0至m—l之间的数作为散列地址；h2也以关键字为自变量，产生一个l至m—1之间的、并和m互素的数(即m不能被该数整除)作为探查序列的地址增量(即步长)，探查序列的步长值是固定值l；对于平方探查法，探查序列的步长值是探查次数i的两倍减l；对于双散列函数探查法，其探查序列的步长值是同一关键字的另一散列函数的值。  </p>\n</li>\n</ul>\n<h4><span id=\"链地址法拉链法\">链地址法（拉链法）</span></h4><p>链接地址法的思路是将哈希值相同的元素构成一个同义词的单链表，并将单链表的头指针存放在哈希表的第i个单元中，查找、插入和删除主要在同义词链表中进行。链表法适用于经常进行插入和删除的情况。</p>\n<p>注：在java中，链接地址法也是HashMap解决哈希冲突的方法之一，jdk1.7完全采用单链表来存储同义词，<strong>jdk1.8则采用了一种混合模式，对于链表长度大于8的，会转换为红黑树存储。</strong>   </p>\n<h4><span id=\"再哈希法\">再哈希法</span></h4><p>就是同时构造多个不同的哈希函数：<br>Hi = RHi(key)   i= 1,2,3 … k;<br>当H1 = RH1(key)  发生冲突时，再用H2 = RH2(key) 进行计算，直到冲突不再产生，这种方法不易产生聚集，但是增加了计算时间。   </p>\n<h4><span id=\"建立公共溢出区\">建立公共溢出区</span></h4><p>将哈希表分为公共表和溢出表，当溢出发生时，将所有溢出数据统一放到溢出区。  </p>\n<h3><span id=\"与map的区别\">与map的区别</span></h3><h4><span id=\"迭代器失效情况\">迭代器失效情况</span></h4><h5><span id=\"unordered_map\">unordered_map:</span></h5><table>\n<thead>\n<tr>\n<th>操作</th>\n<th>失效情况</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>所有只读操作 swap std::swap</td>\n<td>决不</td>\n</tr>\n<tr>\n<td>clear  rehash  reserve operator=</td>\n<td>始终</td>\n</tr>\n<tr>\n<td>insert  emplace  emplace_hint  operator[]</td>\n<td>仅若重哈希导致</td>\n</tr>\n<tr>\n<td>erase</td>\n<td>仅为指向被擦除元素者</td>\n</tr>\n</tbody></table>\n<h5><span id=\"map-通常实现为红黑树非强制标准\">map (通常实现为红黑树,非强制标准):</span></h5><table>\n<thead>\n<tr>\n<th>操作</th>\n<th>失效情况</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>insert  emplace  emplace_hint  operator[]</td>\n<td>没有失效情况</td>\n</tr>\n<tr>\n<td>erase</td>\n<td>仅为指向被擦除元素者</td>\n</tr>\n</tbody></table>\n<h5><span id=\"其他\">其他</span></h5><ul>\n<li>map是有序的，unordered_map是无序的  </li>\n<li>两者之间的查找速度不同（log(N)和N）  </li>\n<li>由于hash要控制负载率在0-1之间，所以unordered_map消耗空间更大。  </li>\n<li>迭代器失效情况, map更稳健    </li>\n<li>遍历, unordered_map需要逐桶遍历  可能有大量的无效桶  .  </li>\n<li>unordered_map不能反向遍历  </li>\n<li>O(lgN)和常数级的差别很小。比如10000个元素的map，log_2(N) = 13.28，才不到14次。  </li>\n<li>散列表的时间复杂度仍然是O(N), 性能上map更稳定</li>\n</ul>\n","site":{"data":{}},"excerpt":"<h3 id=\"基本概念\"><a href=\"#基本概念\" class=\"headerlink\" title=\"基本概念\"></a>基本概念</h3><ul>\n<li><strong>哈希算法：</strong> 根据设定的哈希函数H（key）和处理冲突方法将一组关键字映象到一个有限的地址区间上的算法。也称为散列算法、杂凑算法。  </li>\n<li><strong>哈希表：</strong> 数据经过哈希算法之后得到的集合。这样关键字和数据在集合中的位置存在一定的关系，可以根据这种关系快速查询。  </li>\n<li><strong>非哈希表：</strong> 与哈希表相对应，集合中的 数据和其存放位置没任何关联关系的集合。 由此可见，哈希算法是一种特殊的算法，能将任意数据散列后映射到有限的空间上，通常计算机软件中用作快速查找或加密使用。   </li>\n<li><strong>哈希冲突：</strong> 两个不同的输入值，根据同一散列函数计算出的散列值相同的现象叫做碰撞。","more":"</li>\n</ul>\n<h3 id=\"常见的Hash函数\"><a href=\"#常见的Hash函数\" class=\"headerlink\" title=\"常见的Hash函数\"></a>常见的Hash函数</h3><ul>\n<li><strong>直接定址法：</strong> 直接以关键字k或者k加上某个常数（k+c）作为哈希地址。  </li>\n<li><strong>数字分析法：</strong> 提取关键字中取值比较均匀的数字作为哈希地址。  </li>\n<li><strong>除留余数法：</strong> 用关键字k除以某个不大于哈希表长度m的数p，将所得余数作为哈希表地址。  </li>\n<li><strong>分段叠加法：</strong> 按照哈希表地址位数将关键字分成位数相等的几部分，其中最后一部分可以比较短。然后将这几部分相加，舍弃最高进位后的结果就是该关键字的哈希地址。  </li>\n<li><strong>平方取中法：</strong> 如果关键字各个部分分布都不均匀的话，可以先求出它的平方值，然后按照需求取中间的几位作为哈希地址。  </li>\n<li><strong>伪随机数法：</strong> 采用一个伪随机数当作哈希函数。  </li>\n</ul>\n<h3 id=\"常见的解决冲突方案\"><a href=\"#常见的解决冲突方案\" class=\"headerlink\" title=\"常见的解决冲突方案\"></a>常见的解决冲突方案</h3><h4 id=\"开放定址法\"><a href=\"#开放定址法\" class=\"headerlink\" title=\"开放定址法\"></a>开放定址法</h4><p>从发生冲突的那个单元起，按照一定的次序，从哈希表中找到一个空闲的单元。然后把发生冲突的元素存入到该单元的一种方法。开放定址法需要的表长度要大于等于所需要存放的元素。<br>在开放定址法中解决冲突的方法有：线行探查法、平方探查法、双散列函数探查法。<br>开放定址法的缺点在于<strong>删除元素的时候不能真的删除，否则会引起查找错误，只能做一个特殊标记。</strong>只到有下个元素插入才能真正删除该元素。  </p>\n<ul>\n<li><p><strong>线行探查法</strong><br>线行探查法是开放定址法中最简单的冲突处理方法，它从发生冲突的单元起，依次判断下一个单元是否为空，当达到最后一个单元时，再从表首依次判断。直到碰到空闲的单元或者探查完全部单元为止。  </p>\n</li>\n<li><p><strong>平方探查法</strong><br>平方探查法即是发生冲突时，用发生冲突的单元d[i], 加上 1²、 2²等。即d[i] + 1²，d[i] + 2², d[i] + 3²…直到找到空闲单元。<br>在实际操作中，平方探查法不能探查到全部剩余的单元。不过在实际应用中，能探查到一半单元也就可以了。若探查到一半单元仍找不到一个空闲单元，表明此散列表太满，应该重新建立。  </p>\n</li>\n<li><p><strong>双散列函数探查法</strong><br>这种方法使用两个散列函数hl和h2。其中hl和前面的h一样，以关键字为自变量，产生一个0至m—l之间的数作为散列地址；h2也以关键字为自变量，产生一个l至m—1之间的、并和m互素的数(即m不能被该数整除)作为探查序列的地址增量(即步长)，探查序列的步长值是固定值l；对于平方探查法，探查序列的步长值是探查次数i的两倍减l；对于双散列函数探查法，其探查序列的步长值是同一关键字的另一散列函数的值。  </p>\n</li>\n</ul>\n<h4 id=\"链地址法（拉链法）\"><a href=\"#链地址法（拉链法）\" class=\"headerlink\" title=\"链地址法（拉链法）\"></a>链地址法（拉链法）</h4><p>链接地址法的思路是将哈希值相同的元素构成一个同义词的单链表，并将单链表的头指针存放在哈希表的第i个单元中，查找、插入和删除主要在同义词链表中进行。链表法适用于经常进行插入和删除的情况。</p>\n<p>注：在java中，链接地址法也是HashMap解决哈希冲突的方法之一，jdk1.7完全采用单链表来存储同义词，<strong>jdk1.8则采用了一种混合模式，对于链表长度大于8的，会转换为红黑树存储。</strong>   </p>\n<h4 id=\"再哈希法\"><a href=\"#再哈希法\" class=\"headerlink\" title=\"再哈希法\"></a>再哈希法</h4><p>就是同时构造多个不同的哈希函数：<br>Hi = RHi(key)   i= 1,2,3 … k;<br>当H1 = RH1(key)  发生冲突时，再用H2 = RH2(key) 进行计算，直到冲突不再产生，这种方法不易产生聚集，但是增加了计算时间。   </p>\n<h4 id=\"建立公共溢出区\"><a href=\"#建立公共溢出区\" class=\"headerlink\" title=\"建立公共溢出区\"></a>建立公共溢出区</h4><p>将哈希表分为公共表和溢出表，当溢出发生时，将所有溢出数据统一放到溢出区。  </p>\n<h3 id=\"与map的区别\"><a href=\"#与map的区别\" class=\"headerlink\" title=\"与map的区别\"></a>与map的区别</h3><h4 id=\"迭代器失效情况\"><a href=\"#迭代器失效情况\" class=\"headerlink\" title=\"迭代器失效情况\"></a>迭代器失效情况</h4><h5 id=\"unordered-map\"><a href=\"#unordered-map\" class=\"headerlink\" title=\"unordered_map:\"></a>unordered_map:</h5><table>\n<thead>\n<tr>\n<th>操作</th>\n<th>失效情况</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>所有只读操作 swap std::swap</td>\n<td>决不</td>\n</tr>\n<tr>\n<td>clear  rehash  reserve operator=</td>\n<td>始终</td>\n</tr>\n<tr>\n<td>insert  emplace  emplace_hint  operator[]</td>\n<td>仅若重哈希导致</td>\n</tr>\n<tr>\n<td>erase</td>\n<td>仅为指向被擦除元素者</td>\n</tr>\n</tbody></table>\n<h5 id=\"map-通常实现为红黑树-非强制标准\"><a href=\"#map-通常实现为红黑树-非强制标准\" class=\"headerlink\" title=\"map (通常实现为红黑树,非强制标准):\"></a>map (通常实现为红黑树,非强制标准):</h5><table>\n<thead>\n<tr>\n<th>操作</th>\n<th>失效情况</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>insert  emplace  emplace_hint  operator[]</td>\n<td>没有失效情况</td>\n</tr>\n<tr>\n<td>erase</td>\n<td>仅为指向被擦除元素者</td>\n</tr>\n</tbody></table>\n<h5 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h5><ul>\n<li>map是有序的，unordered_map是无序的  </li>\n<li>两者之间的查找速度不同（log(N)和N）  </li>\n<li>由于hash要控制负载率在0-1之间，所以unordered_map消耗空间更大。  </li>\n<li>迭代器失效情况, map更稳健    </li>\n<li>遍历, unordered_map需要逐桶遍历  可能有大量的无效桶  .  </li>\n<li>unordered_map不能反向遍历  </li>\n<li>O(lgN)和常数级的差别很小。比如10000个元素的map，log_2(N) = 13.28，才不到14次。  </li>\n<li>散列表的时间复杂度仍然是O(N), 性能上map更稳定</li>\n</ul>"},{"title":"编写VBA脚本示例代码","date":"2019-02-14T09:21:00.000Z","author":"yawei.zhang","_content":"\nVBA检测脚本   \n  <!-- more --> \n```\n\nFunction Match(str As String, pattern As String)\n    Dim reg As Object\n    Set reg = CreateObject(\"VBScript.Regexp\")\n    With reg\n        .Global = False '非全局则匹配到第一个即停止\n        .pattern = pattern '正则部分\n        Match = .Test(str) '返回结果\n    End With\nEnd Function\n\n\nPrivate Sub Workbook_BeforeSave(ByVal SaveAsUI As Boolean, Cancel As Boolean)\n\n\n    has_error = False '全局判定\n\n    For Each sht In Worksheets\n    \n        Dim matched As Boolean\n        \n        ' 跳过被#注释的sheet\n        matched = Match(sht.Name(), \"^#\")\n        If matched Then GoTo Continue\n        \n        '进行sheet内的格式检测\n        matched = Match(sht.Cells(1, 1).Value, \"^convert\")\n        If Not matched Then\n            MsgBox \"sheet:<\" & sht.Name() & \">格式错误: 数据表首行必须为convert声明, 否则请用#注释表名.\", vbOKOnly + vbExclamation\n            GoTo Error\n        End If\n        \nContinue:\n    Next\n    \n    \nFinish:\n    MsgBox (\"表格检测通过,已保存成功.\")\n    Exit Sub\n    \nError:\n    Dim ret\n    ret = MsgBox(\"表格检测失败,请根据提示修正后再次尝试保存!\", vbOKOnly + vbCritical)\n    'If Not ret = vbOK Then Cancel = True\n    Cancel = True\n    Exit Sub\n\nEnd Sub\n\n\n\n\n```\n","source":"_posts/2019-02-14-vba.md","raw":"---\ntitle: 编写VBA脚本示例代码 \ndate: 2019-02-14 17:21:00\ncategories: develop \nauthor: yawei.zhang \n---\n\nVBA检测脚本   \n  <!-- more --> \n```\n\nFunction Match(str As String, pattern As String)\n    Dim reg As Object\n    Set reg = CreateObject(\"VBScript.Regexp\")\n    With reg\n        .Global = False '非全局则匹配到第一个即停止\n        .pattern = pattern '正则部分\n        Match = .Test(str) '返回结果\n    End With\nEnd Function\n\n\nPrivate Sub Workbook_BeforeSave(ByVal SaveAsUI As Boolean, Cancel As Boolean)\n\n\n    has_error = False '全局判定\n\n    For Each sht In Worksheets\n    \n        Dim matched As Boolean\n        \n        ' 跳过被#注释的sheet\n        matched = Match(sht.Name(), \"^#\")\n        If matched Then GoTo Continue\n        \n        '进行sheet内的格式检测\n        matched = Match(sht.Cells(1, 1).Value, \"^convert\")\n        If Not matched Then\n            MsgBox \"sheet:<\" & sht.Name() & \">格式错误: 数据表首行必须为convert声明, 否则请用#注释表名.\", vbOKOnly + vbExclamation\n            GoTo Error\n        End If\n        \nContinue:\n    Next\n    \n    \nFinish:\n    MsgBox (\"表格检测通过,已保存成功.\")\n    Exit Sub\n    \nError:\n    Dim ret\n    ret = MsgBox(\"表格检测失败,请根据提示修正后再次尝试保存!\", vbOKOnly + vbCritical)\n    'If Not ret = vbOK Then Cancel = True\n    Cancel = True\n    Exit Sub\n\nEnd Sub\n\n\n\n\n```\n","slug":"2019-02-14-vba","published":1,"updated":"2019-02-19T07:17:01.822Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck44ekz1m000br45hdif4hxhh","content":"<p>VBA检测脚本<br>  <a id=\"more\"></a> </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">Function Match(str As String, pattern As String)</span><br><span class=\"line\">    Dim reg As Object</span><br><span class=\"line\">    Set reg &#x3D; CreateObject(&quot;VBScript.Regexp&quot;)</span><br><span class=\"line\">    With reg</span><br><span class=\"line\">        .Global &#x3D; False &#39;非全局则匹配到第一个即停止</span><br><span class=\"line\">        .pattern &#x3D; pattern &#39;正则部分</span><br><span class=\"line\">        Match &#x3D; .Test(str) &#39;返回结果</span><br><span class=\"line\">    End With</span><br><span class=\"line\">End Function</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">Private Sub Workbook_BeforeSave(ByVal SaveAsUI As Boolean, Cancel As Boolean)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    has_error &#x3D; False &#39;全局判定</span><br><span class=\"line\"></span><br><span class=\"line\">    For Each sht In Worksheets</span><br><span class=\"line\">    </span><br><span class=\"line\">        Dim matched As Boolean</span><br><span class=\"line\">        </span><br><span class=\"line\">        &#39; 跳过被#注释的sheet</span><br><span class=\"line\">        matched &#x3D; Match(sht.Name(), &quot;^#&quot;)</span><br><span class=\"line\">        If matched Then GoTo Continue</span><br><span class=\"line\">        </span><br><span class=\"line\">        &#39;进行sheet内的格式检测</span><br><span class=\"line\">        matched &#x3D; Match(sht.Cells(1, 1).Value, &quot;^convert&quot;)</span><br><span class=\"line\">        If Not matched Then</span><br><span class=\"line\">            MsgBox &quot;sheet:&lt;&quot; &amp; sht.Name() &amp; &quot;&gt;格式错误: 数据表首行必须为convert声明, 否则请用#注释表名.&quot;, vbOKOnly + vbExclamation</span><br><span class=\"line\">            GoTo Error</span><br><span class=\"line\">        End If</span><br><span class=\"line\">        </span><br><span class=\"line\">Continue:</span><br><span class=\"line\">    Next</span><br><span class=\"line\">    </span><br><span class=\"line\">    </span><br><span class=\"line\">Finish:</span><br><span class=\"line\">    MsgBox (&quot;表格检测通过,已保存成功.&quot;)</span><br><span class=\"line\">    Exit Sub</span><br><span class=\"line\">    </span><br><span class=\"line\">Error:</span><br><span class=\"line\">    Dim ret</span><br><span class=\"line\">    ret &#x3D; MsgBox(&quot;表格检测失败,请根据提示修正后再次尝试保存!&quot;, vbOKOnly + vbCritical)</span><br><span class=\"line\">    &#39;If Not ret &#x3D; vbOK Then Cancel &#x3D; True</span><br><span class=\"line\">    Cancel &#x3D; True</span><br><span class=\"line\">    Exit Sub</span><br><span class=\"line\"></span><br><span class=\"line\">End Sub</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<p>VBA检测脚本<br>","more":"</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">Function Match(str As String, pattern As String)</span><br><span class=\"line\">    Dim reg As Object</span><br><span class=\"line\">    Set reg &#x3D; CreateObject(&quot;VBScript.Regexp&quot;)</span><br><span class=\"line\">    With reg</span><br><span class=\"line\">        .Global &#x3D; False &#39;非全局则匹配到第一个即停止</span><br><span class=\"line\">        .pattern &#x3D; pattern &#39;正则部分</span><br><span class=\"line\">        Match &#x3D; .Test(str) &#39;返回结果</span><br><span class=\"line\">    End With</span><br><span class=\"line\">End Function</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">Private Sub Workbook_BeforeSave(ByVal SaveAsUI As Boolean, Cancel As Boolean)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    has_error &#x3D; False &#39;全局判定</span><br><span class=\"line\"></span><br><span class=\"line\">    For Each sht In Worksheets</span><br><span class=\"line\">    </span><br><span class=\"line\">        Dim matched As Boolean</span><br><span class=\"line\">        </span><br><span class=\"line\">        &#39; 跳过被#注释的sheet</span><br><span class=\"line\">        matched &#x3D; Match(sht.Name(), &quot;^#&quot;)</span><br><span class=\"line\">        If matched Then GoTo Continue</span><br><span class=\"line\">        </span><br><span class=\"line\">        &#39;进行sheet内的格式检测</span><br><span class=\"line\">        matched &#x3D; Match(sht.Cells(1, 1).Value, &quot;^convert&quot;)</span><br><span class=\"line\">        If Not matched Then</span><br><span class=\"line\">            MsgBox &quot;sheet:&lt;&quot; &amp; sht.Name() &amp; &quot;&gt;格式错误: 数据表首行必须为convert声明, 否则请用#注释表名.&quot;, vbOKOnly + vbExclamation</span><br><span class=\"line\">            GoTo Error</span><br><span class=\"line\">        End If</span><br><span class=\"line\">        </span><br><span class=\"line\">Continue:</span><br><span class=\"line\">    Next</span><br><span class=\"line\">    </span><br><span class=\"line\">    </span><br><span class=\"line\">Finish:</span><br><span class=\"line\">    MsgBox (&quot;表格检测通过,已保存成功.&quot;)</span><br><span class=\"line\">    Exit Sub</span><br><span class=\"line\">    </span><br><span class=\"line\">Error:</span><br><span class=\"line\">    Dim ret</span><br><span class=\"line\">    ret &#x3D; MsgBox(&quot;表格检测失败,请根据提示修正后再次尝试保存!&quot;, vbOKOnly + vbCritical)</span><br><span class=\"line\">    &#39;If Not ret &#x3D; vbOK Then Cancel &#x3D; True</span><br><span class=\"line\">    Cancel &#x3D; True</span><br><span class=\"line\">    Exit Sub</span><br><span class=\"line\"></span><br><span class=\"line\">End Sub</span><br></pre></td></tr></table></figure>"},{"title":"类型擦除","date":"2019-01-17T03:21:00.000Z","author":"yawei.zhang","_content":"\n### 类型擦除定义  \n\n** 不需要程序伴随类型修饰的操作语义成为擦除语义, 用来使程序在运行时不依赖类型.  **  \n\n### 类型擦除语义或者可实现类型擦除效果的实现方式   \n* 多态    \n* 闭包   \n* 模板 (可以在C++模板中应用鸭子风格)   \n* 容器 any/tuploe     \n\n  <!-- more --> \n### 扩展 JAVA的泛型实现方式 类型擦除  \n```\nList<String> l1 = new ArrayList<String>();\nList<Integer> l2 = new ArrayList<Integer>();\n\nSystem.out.println(l1.getClass() == l2.getClass());\n```\n> 输出为true  \n\n** 泛型信息只存在于代码编译阶段，在进入 JVM 之前，与泛型相关的信息会被擦除掉，专业术语叫做类型擦除。 **  \n\n** 泛型转译 **   \n\n```\npublic class Erasure <T>\n{\n    T object;\n    public Erasure(T object) \n    {\n        this.object = object;\n    }\n}\n```\n\n> Erasure 是一个泛型类，我们查看它在运行时的状态信息可以通过反射。  \n```\nErasure<String> erasure = new Erasure<String>(\"hello\");\nClass eclz = erasure.getClass();\nSystem.out.println(\"erasure class is:\"+eclz.getName());\n```\n> 打印的结果是  \n```\nerasure class is:com.frank.test.Erasure  \n```\n\n> 泛型类被类型擦除后，相应的类型就被替换成 Object 类型呢？  \n在泛型类被类型擦除的时候，之前泛型类中的类型参数部分如果没有指定上限，如 <T> 则会被转译成普通的 Object 类型，如果指定了上限如 <T extends String> 则类型参数就被替换成类型上限。   \n\n\n    类型擦除，是泛型能够与之前的 java 版本代码兼容共存的原因。但也因为类型擦除，它会抹掉很多继承相关的特性，这是它带来的局限性。\n\n理解类型擦除有利于我们绕过开发当中可能遇到的雷区，同样理解类型擦除也能让我们绕过泛型本身的一些限制。\n```\npublic class ToolTest \n{\n    public static void main(String[] args) \n    {\n        List<Integer> ls = new ArrayList<>();\n        ls.add(23);\n//      ls.add(\"text\");\n        Method method = ls.getClass().getDeclaredMethod(\"add\",Object.class);\n        method.invoke(ls,\"test\");\n        method.invoke(ls,42.9f);\n    }\n}\n```\n\n\n","source":"_posts/2019-01-17-type-system-erase.md","raw":"---\ntitle: 类型擦除\ndate: 2019-01-17 11:21:00\ncategories: develop \nauthor: yawei.zhang \n---\n\n### 类型擦除定义  \n\n** 不需要程序伴随类型修饰的操作语义成为擦除语义, 用来使程序在运行时不依赖类型.  **  \n\n### 类型擦除语义或者可实现类型擦除效果的实现方式   \n* 多态    \n* 闭包   \n* 模板 (可以在C++模板中应用鸭子风格)   \n* 容器 any/tuploe     \n\n  <!-- more --> \n### 扩展 JAVA的泛型实现方式 类型擦除  \n```\nList<String> l1 = new ArrayList<String>();\nList<Integer> l2 = new ArrayList<Integer>();\n\nSystem.out.println(l1.getClass() == l2.getClass());\n```\n> 输出为true  \n\n** 泛型信息只存在于代码编译阶段，在进入 JVM 之前，与泛型相关的信息会被擦除掉，专业术语叫做类型擦除。 **  \n\n** 泛型转译 **   \n\n```\npublic class Erasure <T>\n{\n    T object;\n    public Erasure(T object) \n    {\n        this.object = object;\n    }\n}\n```\n\n> Erasure 是一个泛型类，我们查看它在运行时的状态信息可以通过反射。  \n```\nErasure<String> erasure = new Erasure<String>(\"hello\");\nClass eclz = erasure.getClass();\nSystem.out.println(\"erasure class is:\"+eclz.getName());\n```\n> 打印的结果是  \n```\nerasure class is:com.frank.test.Erasure  \n```\n\n> 泛型类被类型擦除后，相应的类型就被替换成 Object 类型呢？  \n在泛型类被类型擦除的时候，之前泛型类中的类型参数部分如果没有指定上限，如 <T> 则会被转译成普通的 Object 类型，如果指定了上限如 <T extends String> 则类型参数就被替换成类型上限。   \n\n\n    类型擦除，是泛型能够与之前的 java 版本代码兼容共存的原因。但也因为类型擦除，它会抹掉很多继承相关的特性，这是它带来的局限性。\n\n理解类型擦除有利于我们绕过开发当中可能遇到的雷区，同样理解类型擦除也能让我们绕过泛型本身的一些限制。\n```\npublic class ToolTest \n{\n    public static void main(String[] args) \n    {\n        List<Integer> ls = new ArrayList<>();\n        ls.add(23);\n//      ls.add(\"text\");\n        Method method = ls.getClass().getDeclaredMethod(\"add\",Object.class);\n        method.invoke(ls,\"test\");\n        method.invoke(ls,42.9f);\n    }\n}\n```\n\n\n","slug":"2019-01-17-type-system-erase","published":1,"updated":"2019-02-19T07:16:59.703Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck44ekz1t000dr45hcas9e9ub","content":"<h3><span id=\"类型擦除定义\">类型擦除定义</span></h3><p>** 不需要程序伴随类型修饰的操作语义成为擦除语义, 用来使程序在运行时不依赖类型.  **  </p>\n<h3><span id=\"类型擦除语义或者可实现类型擦除效果的实现方式\">类型擦除语义或者可实现类型擦除效果的实现方式</span></h3><ul>\n<li><p>多态    </p>\n</li>\n<li><p>闭包   </p>\n</li>\n<li><p>模板 (可以在C++模板中应用鸭子风格)   </p>\n</li>\n<li><p>容器 any/tuploe     </p>\n<a id=\"more\"></a> \n<h3><span id=\"扩展-java的泛型实现方式-类型擦除\">扩展 JAVA的泛型实现方式 类型擦除</span></h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">List&lt;String&gt; l1 &#x3D; new ArrayList&lt;String&gt;();</span><br><span class=\"line\">List&lt;Integer&gt; l2 &#x3D; new ArrayList&lt;Integer&gt;();</span><br><span class=\"line\"></span><br><span class=\"line\">System.out.println(l1.getClass() &#x3D;&#x3D; l2.getClass());</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>输出为true  </p>\n</blockquote>\n</li>\n</ul>\n<p>** 泛型信息只存在于代码编译阶段，在进入 JVM 之前，与泛型相关的信息会被擦除掉，专业术语叫做类型擦除。 **  </p>\n<p>** 泛型转译 **   </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public class Erasure &lt;T&gt;</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    T object;</span><br><span class=\"line\">    public Erasure(T object) </span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        this.object &#x3D; object;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>Erasure 是一个泛型类，我们查看它在运行时的状态信息可以通过反射。  </p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Erasure&lt;String&gt; erasure &#x3D; new Erasure&lt;String&gt;(&quot;hello&quot;);</span><br><span class=\"line\">Class eclz &#x3D; erasure.getClass();</span><br><span class=\"line\">System.out.println(&quot;erasure class is:&quot;+eclz.getName());</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>打印的结果是  </p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">erasure class is:com.frank.test.Erasure</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>泛型类被类型擦除后，相应的类型就被替换成 Object 类型呢？<br>在泛型类被类型擦除的时候，之前泛型类中的类型参数部分如果没有指定上限，如 <t> 则会被转译成普通的 Object 类型，如果指定了上限如 <t extends=\"\" string=\"\"> 则类型参数就被替换成类型上限。   </t></t></p>\n</blockquote>\n<pre><code>类型擦除，是泛型能够与之前的 java 版本代码兼容共存的原因。但也因为类型擦除，它会抹掉很多继承相关的特性，这是它带来的局限性。</code></pre><p>理解类型擦除有利于我们绕过开发当中可能遇到的雷区，同样理解类型擦除也能让我们绕过泛型本身的一些限制。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public class ToolTest </span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    public static void main(String[] args) </span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        List&lt;Integer&gt; ls &#x3D; new ArrayList&lt;&gt;();</span><br><span class=\"line\">        ls.add(23);</span><br><span class=\"line\">&#x2F;&#x2F;      ls.add(&quot;text&quot;);</span><br><span class=\"line\">        Method method &#x3D; ls.getClass().getDeclaredMethod(&quot;add&quot;,Object.class);</span><br><span class=\"line\">        method.invoke(ls,&quot;test&quot;);</span><br><span class=\"line\">        method.invoke(ls,42.9f);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n","site":{"data":{}},"excerpt":"<h3 id=\"类型擦除定义\"><a href=\"#类型擦除定义\" class=\"headerlink\" title=\"类型擦除定义\"></a>类型擦除定义</h3><p>** 不需要程序伴随类型修饰的操作语义成为擦除语义, 用来使程序在运行时不依赖类型.  **  </p>\n<h3 id=\"类型擦除语义或者可实现类型擦除效果的实现方式\"><a href=\"#类型擦除语义或者可实现类型擦除效果的实现方式\" class=\"headerlink\" title=\"类型擦除语义或者可实现类型擦除效果的实现方式\"></a>类型擦除语义或者可实现类型擦除效果的实现方式</h3><ul>\n<li><p>多态    </p>\n</li>\n<li><p>闭包   </p>\n</li>\n<li><p>模板 (可以在C++模板中应用鸭子风格)   </p>\n</li>\n<li><p>容器 any/tuploe     </p>","more":"<h3 id=\"扩展-JAVA的泛型实现方式-类型擦除\"><a href=\"#扩展-JAVA的泛型实现方式-类型擦除\" class=\"headerlink\" title=\"扩展 JAVA的泛型实现方式 类型擦除\"></a>扩展 JAVA的泛型实现方式 类型擦除</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">List&lt;String&gt; l1 &#x3D; new ArrayList&lt;String&gt;();</span><br><span class=\"line\">List&lt;Integer&gt; l2 &#x3D; new ArrayList&lt;Integer&gt;();</span><br><span class=\"line\"></span><br><span class=\"line\">System.out.println(l1.getClass() &#x3D;&#x3D; l2.getClass());</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>输出为true  </p>\n</blockquote>\n</li>\n</ul>\n<p>** 泛型信息只存在于代码编译阶段，在进入 JVM 之前，与泛型相关的信息会被擦除掉，专业术语叫做类型擦除。 **  </p>\n<p>** 泛型转译 **   </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public class Erasure &lt;T&gt;</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    T object;</span><br><span class=\"line\">    public Erasure(T object) </span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        this.object &#x3D; object;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>Erasure 是一个泛型类，我们查看它在运行时的状态信息可以通过反射。  </p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Erasure&lt;String&gt; erasure &#x3D; new Erasure&lt;String&gt;(&quot;hello&quot;);</span><br><span class=\"line\">Class eclz &#x3D; erasure.getClass();</span><br><span class=\"line\">System.out.println(&quot;erasure class is:&quot;+eclz.getName());</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>打印的结果是  </p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">erasure class is:com.frank.test.Erasure</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>泛型类被类型擦除后，相应的类型就被替换成 Object 类型呢？<br>在泛型类被类型擦除的时候，之前泛型类中的类型参数部分如果没有指定上限，如 <T> 则会被转译成普通的 Object 类型，如果指定了上限如 <T extends String> 则类型参数就被替换成类型上限。   </p>\n</blockquote>\n<pre><code>类型擦除，是泛型能够与之前的 java 版本代码兼容共存的原因。但也因为类型擦除，它会抹掉很多继承相关的特性，这是它带来的局限性。</code></pre><p>理解类型擦除有利于我们绕过开发当中可能遇到的雷区，同样理解类型擦除也能让我们绕过泛型本身的一些限制。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public class ToolTest </span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    public static void main(String[] args) </span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        List&lt;Integer&gt; ls &#x3D; new ArrayList&lt;&gt;();</span><br><span class=\"line\">        ls.add(23);</span><br><span class=\"line\">&#x2F;&#x2F;      ls.add(&quot;text&quot;);</span><br><span class=\"line\">        Method method &#x3D; ls.getClass().getDeclaredMethod(&quot;add&quot;,Object.class);</span><br><span class=\"line\">        method.invoke(ls,&quot;test&quot;);</span><br><span class=\"line\">        method.invoke(ls,42.9f);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"SDM模型","date":"2019-09-30T16:00:00.000Z","author":"yawei.zhang","_content":" \n### SDM框架对系统发展生命周期的过程描述  \nSDM(软件开发方法)框架是在SDLC在软件开发早起\n* (SDM框架)软件开发过程有以下基本的核心活动内容\n  * 需求分析 (Requirements analysis)  \n  * 领域设计 (Software design)  \n  * 系统设计 (Software engineering)  \n  * 编码开发 (Software construction)  \n  * 功能验证 (Software testing)  \n  * 错误修正 (Debugging)    \n  * 部署交付 (Software deployment)  \n  * 维护 (Software maintenance)   \n<!-- more --> \n根据所面临的现实问题以及所在环境的不同, 这些核心活动内容会在结构关系以及流程顺序上有相应的调整或者取舍 形成不同的规范/模型/框架等.   \n\n例如:  \n* 线性过程的瀑布式开发模型 SDLC:专注于完整正确的计划   \n* 快速迭代的敏捷开发   : 持续交付来响应频繁变更的计划(快速试错) \n* 加强发布协调的DevOps   \n\n同设计模式一样, 这些模型提炼自对现实问题的具体解决过程, 在实际应用中并不需要一定去拘泥某个规范.  \n实际上, 在一个具备一定规模的项目中, 往往同时存在多种不同的开发方式共同组成适合该项目的开发过程,  这种方式也称之为'混合模型',  在混合模型中,  允许一个项目沿着最有效的路径去组织属于自己的活动内容,  合适现实问题解决模型才是最恰当的.  \n\n","source":"_posts/2019-10-01-sdm.md","raw":"---\ntitle: SDM模型  \ndate: 2019-10-01\ncategories: develop \nauthor: yawei.zhang \n---\n \n### SDM框架对系统发展生命周期的过程描述  \nSDM(软件开发方法)框架是在SDLC在软件开发早起\n* (SDM框架)软件开发过程有以下基本的核心活动内容\n  * 需求分析 (Requirements analysis)  \n  * 领域设计 (Software design)  \n  * 系统设计 (Software engineering)  \n  * 编码开发 (Software construction)  \n  * 功能验证 (Software testing)  \n  * 错误修正 (Debugging)    \n  * 部署交付 (Software deployment)  \n  * 维护 (Software maintenance)   \n<!-- more --> \n根据所面临的现实问题以及所在环境的不同, 这些核心活动内容会在结构关系以及流程顺序上有相应的调整或者取舍 形成不同的规范/模型/框架等.   \n\n例如:  \n* 线性过程的瀑布式开发模型 SDLC:专注于完整正确的计划   \n* 快速迭代的敏捷开发   : 持续交付来响应频繁变更的计划(快速试错) \n* 加强发布协调的DevOps   \n\n同设计模式一样, 这些模型提炼自对现实问题的具体解决过程, 在实际应用中并不需要一定去拘泥某个规范.  \n实际上, 在一个具备一定规模的项目中, 往往同时存在多种不同的开发方式共同组成适合该项目的开发过程,  这种方式也称之为'混合模型',  在混合模型中,  允许一个项目沿着最有效的路径去组织属于自己的活动内容,  合适现实问题解决模型才是最恰当的.  \n\n","slug":"2019-10-01-sdm","published":1,"updated":"2019-11-04T08:55:43.984Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck44ekz1t000er45h9w6a4ose","content":"<h3><span id=\"sdm框架对系统发展生命周期的过程描述\">SDM框架对系统发展生命周期的过程描述</span></h3><p>SDM(软件开发方法)框架是在SDLC在软件开发早起</p>\n<ul>\n<li>(SDM框架)软件开发过程有以下基本的核心活动内容<ul>\n<li>需求分析 (Requirements analysis)  </li>\n<li>领域设计 (Software design)  </li>\n<li>系统设计 (Software engineering)  </li>\n<li>编码开发 (Software construction)  </li>\n<li>功能验证 (Software testing)  </li>\n<li>错误修正 (Debugging)    </li>\n<li>部署交付 (Software deployment)  </li>\n<li>维护 (Software maintenance)   <a id=\"more\"></a> \n根据所面临的现实问题以及所在环境的不同, 这些核心活动内容会在结构关系以及流程顺序上有相应的调整或者取舍 形成不同的规范/模型/框架等.   </li>\n</ul>\n</li>\n</ul>\n<p>例如:  </p>\n<ul>\n<li>线性过程的瀑布式开发模型 SDLC:专注于完整正确的计划   </li>\n<li>快速迭代的敏捷开发   : 持续交付来响应频繁变更的计划(快速试错) </li>\n<li>加强发布协调的DevOps   </li>\n</ul>\n<p>同设计模式一样, 这些模型提炼自对现实问题的具体解决过程, 在实际应用中并不需要一定去拘泥某个规范.<br>实际上, 在一个具备一定规模的项目中, 往往同时存在多种不同的开发方式共同组成适合该项目的开发过程,  这种方式也称之为’混合模型’,  在混合模型中,  允许一个项目沿着最有效的路径去组织属于自己的活动内容,  合适现实问题解决模型才是最恰当的.</p>\n","site":{"data":{}},"excerpt":"<h3 id=\"SDM框架对系统发展生命周期的过程描述\"><a href=\"#SDM框架对系统发展生命周期的过程描述\" class=\"headerlink\" title=\"SDM框架对系统发展生命周期的过程描述\"></a>SDM框架对系统发展生命周期的过程描述</h3><p>SDM(软件开发方法)框架是在SDLC在软件开发早起</p>\n<ul>\n<li>(SDM框架)软件开发过程有以下基本的核心活动内容<ul>\n<li>需求分析 (Requirements analysis)  </li>\n<li>领域设计 (Software design)  </li>\n<li>系统设计 (Software engineering)  </li>\n<li>编码开发 (Software construction)  </li>\n<li>功能验证 (Software testing)  </li>\n<li>错误修正 (Debugging)    </li>\n<li>部署交付 (Software deployment)  </li>\n<li>维护 (Software maintenance)","more":"根据所面临的现实问题以及所在环境的不同, 这些核心活动内容会在结构关系以及流程顺序上有相应的调整或者取舍 形成不同的规范/模型/框架等.   </li>\n</ul>\n</li>\n</ul>\n<p>例如:  </p>\n<ul>\n<li>线性过程的瀑布式开发模型 SDLC:专注于完整正确的计划   </li>\n<li>快速迭代的敏捷开发   : 持续交付来响应频繁变更的计划(快速试错) </li>\n<li>加强发布协调的DevOps   </li>\n</ul>\n<p>同设计模式一样, 这些模型提炼自对现实问题的具体解决过程, 在实际应用中并不需要一定去拘泥某个规范.<br>实际上, 在一个具备一定规模的项目中, 往往同时存在多种不同的开发方式共同组成适合该项目的开发过程,  这种方式也称之为’混合模型’,  在混合模型中,  允许一个项目沿着最有效的路径去组织属于自己的活动内容,  合适现实问题解决模型才是最恰当的.</p>"},{"title":"位置无关代码","date":"2019-11-08T16:00:00.000Z","author":"yawei.zhang","_content":"### ELF文件   \n###### 内存布局  \n\n| LINKING VIEW \n| -\n| ELF HEADER\n| PROGRAM HEADER TABLE OPTIONAL \n| SECTION 1  \n| SECTION 2\n| SECTION n ...\n| SECTION HEADER TABLE  \n\n###### 执行视图  \n| EXECUTION VIEW \n| - \n| PROGRAM HEADER TABLE \n| SEGMENT 1 \n| SEGMENT 2 \n| SEGMENT N ...\n| SECTION HEADER TABLE OPTIONAL \n\n###### 主要区别    \n* PROGRAM HEADER TABLE是运行时对应SEGMENT的TABLE 所以在目标文件中并不需要存在 实际上GCC代码编译出来的目标文件也不存在该\n* 节 SECTION  (目标文件中的SECTION是和SECTION HEADER TABLE中的条目一一对应, 用于链接器对代码进行重定位(非PIC会重定位))\n  * .TEXT\n  * .BSS\n  * .DATA  \n  \n* 分段  SEGMENT (载入内存后以SEGMENT组织, SEGMENT对应PROGRAM HEADER TABLE 中的条目, 目标代码中的SECTION会组织到各个SEGMENT中)  \n  * .TEXT的内容会组织到代码段中  \n  * .DATA .BSS的内容会包含在数据段中  \n\n<!-- more --> \n\n\n### 分析过程   \n 通过命令 readelf a.out -S section 查看SECTION 可以看到.plt .plt.got的信息  \n 旗标FLAG中 A代表分配内存  X代表执行 W为可写  见末尾KEY说明  \n ```\n 文件：a.out\n共有 36 个节头，从偏移量 0x2c00 开始：\n\n节头：\n  [号] 名称              类型             地址              偏移量              大小              全体大小        旗标   链接   信息   对齐\n  [ 0]                   NULL             0000000000000000  00000000       0000000000000000  0000000000000000           0     0     0\n  [ 1] .interp           PROGBITS         0000000000000238  00000238       000000000000001c  0000000000000000   A       0     0     1\n  [ 2] .note.ABI-tag     NOTE             0000000000000254  00000254       0000000000000020  0000000000000000   A       0     0     4\n  [ 3] .note.gnu.build-i NOTE             0000000000000274  00000274       0000000000000024  0000000000000000   A       0     0     4\n  [ 4] .gnu.hash         GNU_HASH         0000000000000298  00000298       000000000000001c  0000000000000000   A       5     0     8\n  [ 5] .dynsym           DYNSYM           00000000000002b8  000002b8       00000000000000f0  0000000000000018   A       6     1     8\n  [ 6] .dynstr           STRTAB           00000000000003a8  000003a8       00000000000000c9  0000000000000000   A       0     0     1\n  [ 7] .gnu.version      VERSYM           0000000000000472  00000472       0000000000000014  0000000000000002   A       5     0     2\n  [ 8] .gnu.version_r    VERNEED          0000000000000488  00000488       0000000000000020  0000000000000000   A       6     1     8\n  [ 9] .rela.dyn         RELA             00000000000004a8  000004a8       00000000000000d8  0000000000000018   A       5     0     8\n  [10] .rela.plt         RELA             0000000000000580  00000580       0000000000000048  0000000000000018  AI       5    24     8\n  [11] .init             PROGBITS         00000000000005c8  000005c8       0000000000000017  0000000000000000  AX       0     0     4\n  [12] .plt              PROGBITS         00000000000005e0  000005e0       0000000000000040  0000000000000010  AX       0     0     16\n  [13] .plt.got          PROGBITS         0000000000000620  00000620       0000000000000008  0000000000000000  AX       0     0     8\n  [14] .text             PROGBITS         0000000000000630  00000630       0000000000000212  0000000000000000  AX       0     0     16\n  [15] .fini             PROGBITS         0000000000000844  00000844       0000000000000009  0000000000000000  AX       0     0     4\n  [16] .rodata           PROGBITS         0000000000000850  00000850       0000000000000027  0000000000000000   A       0     0     4\n  [17] .eh_frame_hdr     PROGBITS         0000000000000878  00000878       000000000000003c  0000000000000000   A       0     0     4\n  [18] .eh_frame         PROGBITS         00000000000008b8  000008b8       000000000000010c  0000000000000000   A       0     0     8\n  [19] .init_array       INIT_ARRAY       0000000000200da8  00000da8       0000000000000008  0000000000000008  WA       0     0     8\n  [20] .fini_array       FINI_ARRAY       0000000000200db0  00000db0       0000000000000008  0000000000000008  WA       0     0     8\n  [21] .jcr              PROGBITS         0000000000200db8  00000db8       0000000000000008  0000000000000000  WA       0     0     8\n  [22] .dynamic          DYNAMIC          0000000000200dc0  00000dc0       0000000000000210  0000000000000010  WA       6     0     8\n  [23] .got              PROGBITS         0000000000200fd0  00000fd0       0000000000000030  0000000000000008  WA       0     0     8\n  [24] .got.plt          PROGBITS         0000000000201000  00001000       0000000000000030  0000000000000008  WA       0     0     8\n  [25] .data             PROGBITS         0000000000201030  00001030       0000000000000010  0000000000000000  WA       0     0     8\n  [26] .bss              NOBITS           0000000000201040  00001040       0000000000000008  0000000000000000  WA       0     0     1\n  [27] .comment          PROGBITS         0000000000000000  00001040       000000000000002d  0000000000000001  MS       0     0     1\n  [28] .debug_aranges    PROGBITS         0000000000000000  0000106d       0000000000000030  0000000000000000           0     0     1\n  [29] .debug_info       PROGBITS         0000000000000000  0000109d       0000000000000973  0000000000000000           0     0     1\n  [30] .debug_abbrev     PROGBITS         0000000000000000  00001a10       0000000000000211  0000000000000000           0     0     1\n  [31] .debug_line       PROGBITS         0000000000000000  00001c21       0000000000000155  0000000000000000           0     0     1\n  [32] .debug_str        PROGBITS         0000000000000000  00001d76       00000000000003d7  0000000000000001  MS       0     0     1\n  [33] .symtab           SYMTAB           0000000000000000  00002150       0000000000000708  0000000000000018          34    52     8\n  [34] .strtab           STRTAB           0000000000000000  00002858       0000000000000256  0000000000000000           0     0     1\n  [35] .shstrtab         STRTAB           0000000000000000  00002aae       000000000000014c  0000000000000000           0     0     1\nKey to Flags:\n  W (write), A (alloc), X (execute), M (merge), S (strings), I (info),\n  L (link order), O (extra OS processing required), G (group), T (TLS),\n  C (compressed), x (unknown), o (OS specific), E (exclude),\n  l (large), p (processor specific)\n ```\n\n\n\n https://www.cnblogs.com/jiqingwu/p/elf_format_research_01.html\n https://blog.csdn.net/qq_32400847/article/details/71001693\n http://www.wowotech.net/basic_subject/pic.html\n https://blog.csdn.net/loushuai/article/details/50493603","source":"_posts/2019-11-09-pie-pic-got-plt.md","raw":"---\ntitle: 位置无关代码    \ndate: 2019-11-09\ncategories: develop \nauthor: yawei.zhang \n---\n### ELF文件   \n###### 内存布局  \n\n| LINKING VIEW \n| -\n| ELF HEADER\n| PROGRAM HEADER TABLE OPTIONAL \n| SECTION 1  \n| SECTION 2\n| SECTION n ...\n| SECTION HEADER TABLE  \n\n###### 执行视图  \n| EXECUTION VIEW \n| - \n| PROGRAM HEADER TABLE \n| SEGMENT 1 \n| SEGMENT 2 \n| SEGMENT N ...\n| SECTION HEADER TABLE OPTIONAL \n\n###### 主要区别    \n* PROGRAM HEADER TABLE是运行时对应SEGMENT的TABLE 所以在目标文件中并不需要存在 实际上GCC代码编译出来的目标文件也不存在该\n* 节 SECTION  (目标文件中的SECTION是和SECTION HEADER TABLE中的条目一一对应, 用于链接器对代码进行重定位(非PIC会重定位))\n  * .TEXT\n  * .BSS\n  * .DATA  \n  \n* 分段  SEGMENT (载入内存后以SEGMENT组织, SEGMENT对应PROGRAM HEADER TABLE 中的条目, 目标代码中的SECTION会组织到各个SEGMENT中)  \n  * .TEXT的内容会组织到代码段中  \n  * .DATA .BSS的内容会包含在数据段中  \n\n<!-- more --> \n\n\n### 分析过程   \n 通过命令 readelf a.out -S section 查看SECTION 可以看到.plt .plt.got的信息  \n 旗标FLAG中 A代表分配内存  X代表执行 W为可写  见末尾KEY说明  \n ```\n 文件：a.out\n共有 36 个节头，从偏移量 0x2c00 开始：\n\n节头：\n  [号] 名称              类型             地址              偏移量              大小              全体大小        旗标   链接   信息   对齐\n  [ 0]                   NULL             0000000000000000  00000000       0000000000000000  0000000000000000           0     0     0\n  [ 1] .interp           PROGBITS         0000000000000238  00000238       000000000000001c  0000000000000000   A       0     0     1\n  [ 2] .note.ABI-tag     NOTE             0000000000000254  00000254       0000000000000020  0000000000000000   A       0     0     4\n  [ 3] .note.gnu.build-i NOTE             0000000000000274  00000274       0000000000000024  0000000000000000   A       0     0     4\n  [ 4] .gnu.hash         GNU_HASH         0000000000000298  00000298       000000000000001c  0000000000000000   A       5     0     8\n  [ 5] .dynsym           DYNSYM           00000000000002b8  000002b8       00000000000000f0  0000000000000018   A       6     1     8\n  [ 6] .dynstr           STRTAB           00000000000003a8  000003a8       00000000000000c9  0000000000000000   A       0     0     1\n  [ 7] .gnu.version      VERSYM           0000000000000472  00000472       0000000000000014  0000000000000002   A       5     0     2\n  [ 8] .gnu.version_r    VERNEED          0000000000000488  00000488       0000000000000020  0000000000000000   A       6     1     8\n  [ 9] .rela.dyn         RELA             00000000000004a8  000004a8       00000000000000d8  0000000000000018   A       5     0     8\n  [10] .rela.plt         RELA             0000000000000580  00000580       0000000000000048  0000000000000018  AI       5    24     8\n  [11] .init             PROGBITS         00000000000005c8  000005c8       0000000000000017  0000000000000000  AX       0     0     4\n  [12] .plt              PROGBITS         00000000000005e0  000005e0       0000000000000040  0000000000000010  AX       0     0     16\n  [13] .plt.got          PROGBITS         0000000000000620  00000620       0000000000000008  0000000000000000  AX       0     0     8\n  [14] .text             PROGBITS         0000000000000630  00000630       0000000000000212  0000000000000000  AX       0     0     16\n  [15] .fini             PROGBITS         0000000000000844  00000844       0000000000000009  0000000000000000  AX       0     0     4\n  [16] .rodata           PROGBITS         0000000000000850  00000850       0000000000000027  0000000000000000   A       0     0     4\n  [17] .eh_frame_hdr     PROGBITS         0000000000000878  00000878       000000000000003c  0000000000000000   A       0     0     4\n  [18] .eh_frame         PROGBITS         00000000000008b8  000008b8       000000000000010c  0000000000000000   A       0     0     8\n  [19] .init_array       INIT_ARRAY       0000000000200da8  00000da8       0000000000000008  0000000000000008  WA       0     0     8\n  [20] .fini_array       FINI_ARRAY       0000000000200db0  00000db0       0000000000000008  0000000000000008  WA       0     0     8\n  [21] .jcr              PROGBITS         0000000000200db8  00000db8       0000000000000008  0000000000000000  WA       0     0     8\n  [22] .dynamic          DYNAMIC          0000000000200dc0  00000dc0       0000000000000210  0000000000000010  WA       6     0     8\n  [23] .got              PROGBITS         0000000000200fd0  00000fd0       0000000000000030  0000000000000008  WA       0     0     8\n  [24] .got.plt          PROGBITS         0000000000201000  00001000       0000000000000030  0000000000000008  WA       0     0     8\n  [25] .data             PROGBITS         0000000000201030  00001030       0000000000000010  0000000000000000  WA       0     0     8\n  [26] .bss              NOBITS           0000000000201040  00001040       0000000000000008  0000000000000000  WA       0     0     1\n  [27] .comment          PROGBITS         0000000000000000  00001040       000000000000002d  0000000000000001  MS       0     0     1\n  [28] .debug_aranges    PROGBITS         0000000000000000  0000106d       0000000000000030  0000000000000000           0     0     1\n  [29] .debug_info       PROGBITS         0000000000000000  0000109d       0000000000000973  0000000000000000           0     0     1\n  [30] .debug_abbrev     PROGBITS         0000000000000000  00001a10       0000000000000211  0000000000000000           0     0     1\n  [31] .debug_line       PROGBITS         0000000000000000  00001c21       0000000000000155  0000000000000000           0     0     1\n  [32] .debug_str        PROGBITS         0000000000000000  00001d76       00000000000003d7  0000000000000001  MS       0     0     1\n  [33] .symtab           SYMTAB           0000000000000000  00002150       0000000000000708  0000000000000018          34    52     8\n  [34] .strtab           STRTAB           0000000000000000  00002858       0000000000000256  0000000000000000           0     0     1\n  [35] .shstrtab         STRTAB           0000000000000000  00002aae       000000000000014c  0000000000000000           0     0     1\nKey to Flags:\n  W (write), A (alloc), X (execute), M (merge), S (strings), I (info),\n  L (link order), O (extra OS processing required), G (group), T (TLS),\n  C (compressed), x (unknown), o (OS specific), E (exclude),\n  l (large), p (processor specific)\n ```\n\n\n\n https://www.cnblogs.com/jiqingwu/p/elf_format_research_01.html\n https://blog.csdn.net/qq_32400847/article/details/71001693\n http://www.wowotech.net/basic_subject/pic.html\n https://blog.csdn.net/loushuai/article/details/50493603","slug":"2019-11-09-pie-pic-got-plt","published":1,"updated":"2019-11-12T14:03:54.423Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck44ekz1v000fr45haf5ifkvx","content":"<h3><span id=\"elf文件\">ELF文件</span></h3><h6><span id=\"内存布局\">内存布局</span></h6><table>\n<thead>\n<tr>\n<th>LINKING VIEW</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>ELF HEADER</td>\n</tr>\n<tr>\n<td>PROGRAM HEADER TABLE OPTIONAL</td>\n</tr>\n<tr>\n<td>SECTION 1</td>\n</tr>\n<tr>\n<td>SECTION 2</td>\n</tr>\n<tr>\n<td>SECTION n …</td>\n</tr>\n<tr>\n<td>SECTION HEADER TABLE</td>\n</tr>\n</tbody></table>\n<h6><span id=\"执行视图\">执行视图</span></h6><table>\n<thead>\n<tr>\n<th>EXECUTION VIEW</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>PROGRAM HEADER TABLE</td>\n</tr>\n<tr>\n<td>SEGMENT 1</td>\n</tr>\n<tr>\n<td>SEGMENT 2</td>\n</tr>\n<tr>\n<td>SEGMENT N …</td>\n</tr>\n<tr>\n<td>SECTION HEADER TABLE OPTIONAL</td>\n</tr>\n</tbody></table>\n<h6><span id=\"主要区别\">主要区别</span></h6><ul>\n<li><p>PROGRAM HEADER TABLE是运行时对应SEGMENT的TABLE 所以在目标文件中并不需要存在 实际上GCC代码编译出来的目标文件也不存在该</p>\n</li>\n<li><p>节 SECTION  (目标文件中的SECTION是和SECTION HEADER TABLE中的条目一一对应, 用于链接器对代码进行重定位(非PIC会重定位))</p>\n<ul>\n<li>.TEXT</li>\n<li>.BSS</li>\n<li>.DATA  </li>\n</ul>\n</li>\n<li><p>分段  SEGMENT (载入内存后以SEGMENT组织, SEGMENT对应PROGRAM HEADER TABLE 中的条目, 目标代码中的SECTION会组织到各个SEGMENT中)  </p>\n<ul>\n<li>.TEXT的内容会组织到代码段中  </li>\n<li>.DATA .BSS的内容会包含在数据段中  </li>\n</ul>\n</li>\n</ul>\n<a id=\"more\"></a> \n\n\n<h3><span id=\"分析过程\">分析过程</span></h3><p> 通过命令 readelf a.out -S section 查看SECTION 可以看到.plt .plt.got的信息<br> 旗标FLAG中 A代表分配内存  X代表执行 W为可写  见末尾KEY说明<br> <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> 文件：a.out</span><br><span class=\"line\">共有 36 个节头，从偏移量 0x2c00 开始：</span><br><span class=\"line\"></span><br><span class=\"line\">节头：</span><br><span class=\"line\">  [号] 名称              类型             地址              偏移量              大小              全体大小        旗标   链接   信息   对齐</span><br><span class=\"line\">  [ 0]                   NULL             0000000000000000  00000000       0000000000000000  0000000000000000           0     0     0</span><br><span class=\"line\">  [ 1] .interp           PROGBITS         0000000000000238  00000238       000000000000001c  0000000000000000   A       0     0     1</span><br><span class=\"line\">  [ 2] .note.ABI-tag     NOTE             0000000000000254  00000254       0000000000000020  0000000000000000   A       0     0     4</span><br><span class=\"line\">  [ 3] .note.gnu.build-i NOTE             0000000000000274  00000274       0000000000000024  0000000000000000   A       0     0     4</span><br><span class=\"line\">  [ 4] .gnu.hash         GNU_HASH         0000000000000298  00000298       000000000000001c  0000000000000000   A       5     0     8</span><br><span class=\"line\">  [ 5] .dynsym           DYNSYM           00000000000002b8  000002b8       00000000000000f0  0000000000000018   A       6     1     8</span><br><span class=\"line\">  [ 6] .dynstr           STRTAB           00000000000003a8  000003a8       00000000000000c9  0000000000000000   A       0     0     1</span><br><span class=\"line\">  [ 7] .gnu.version      VERSYM           0000000000000472  00000472       0000000000000014  0000000000000002   A       5     0     2</span><br><span class=\"line\">  [ 8] .gnu.version_r    VERNEED          0000000000000488  00000488       0000000000000020  0000000000000000   A       6     1     8</span><br><span class=\"line\">  [ 9] .rela.dyn         RELA             00000000000004a8  000004a8       00000000000000d8  0000000000000018   A       5     0     8</span><br><span class=\"line\">  [10] .rela.plt         RELA             0000000000000580  00000580       0000000000000048  0000000000000018  AI       5    24     8</span><br><span class=\"line\">  [11] .init             PROGBITS         00000000000005c8  000005c8       0000000000000017  0000000000000000  AX       0     0     4</span><br><span class=\"line\">  [12] .plt              PROGBITS         00000000000005e0  000005e0       0000000000000040  0000000000000010  AX       0     0     16</span><br><span class=\"line\">  [13] .plt.got          PROGBITS         0000000000000620  00000620       0000000000000008  0000000000000000  AX       0     0     8</span><br><span class=\"line\">  [14] .text             PROGBITS         0000000000000630  00000630       0000000000000212  0000000000000000  AX       0     0     16</span><br><span class=\"line\">  [15] .fini             PROGBITS         0000000000000844  00000844       0000000000000009  0000000000000000  AX       0     0     4</span><br><span class=\"line\">  [16] .rodata           PROGBITS         0000000000000850  00000850       0000000000000027  0000000000000000   A       0     0     4</span><br><span class=\"line\">  [17] .eh_frame_hdr     PROGBITS         0000000000000878  00000878       000000000000003c  0000000000000000   A       0     0     4</span><br><span class=\"line\">  [18] .eh_frame         PROGBITS         00000000000008b8  000008b8       000000000000010c  0000000000000000   A       0     0     8</span><br><span class=\"line\">  [19] .init_array       INIT_ARRAY       0000000000200da8  00000da8       0000000000000008  0000000000000008  WA       0     0     8</span><br><span class=\"line\">  [20] .fini_array       FINI_ARRAY       0000000000200db0  00000db0       0000000000000008  0000000000000008  WA       0     0     8</span><br><span class=\"line\">  [21] .jcr              PROGBITS         0000000000200db8  00000db8       0000000000000008  0000000000000000  WA       0     0     8</span><br><span class=\"line\">  [22] .dynamic          DYNAMIC          0000000000200dc0  00000dc0       0000000000000210  0000000000000010  WA       6     0     8</span><br><span class=\"line\">  [23] .got              PROGBITS         0000000000200fd0  00000fd0       0000000000000030  0000000000000008  WA       0     0     8</span><br><span class=\"line\">  [24] .got.plt          PROGBITS         0000000000201000  00001000       0000000000000030  0000000000000008  WA       0     0     8</span><br><span class=\"line\">  [25] .data             PROGBITS         0000000000201030  00001030       0000000000000010  0000000000000000  WA       0     0     8</span><br><span class=\"line\">  [26] .bss              NOBITS           0000000000201040  00001040       0000000000000008  0000000000000000  WA       0     0     1</span><br><span class=\"line\">  [27] .comment          PROGBITS         0000000000000000  00001040       000000000000002d  0000000000000001  MS       0     0     1</span><br><span class=\"line\">  [28] .debug_aranges    PROGBITS         0000000000000000  0000106d       0000000000000030  0000000000000000           0     0     1</span><br><span class=\"line\">  [29] .debug_info       PROGBITS         0000000000000000  0000109d       0000000000000973  0000000000000000           0     0     1</span><br><span class=\"line\">  [30] .debug_abbrev     PROGBITS         0000000000000000  00001a10       0000000000000211  0000000000000000           0     0     1</span><br><span class=\"line\">  [31] .debug_line       PROGBITS         0000000000000000  00001c21       0000000000000155  0000000000000000           0     0     1</span><br><span class=\"line\">  [32] .debug_str        PROGBITS         0000000000000000  00001d76       00000000000003d7  0000000000000001  MS       0     0     1</span><br><span class=\"line\">  [33] .symtab           SYMTAB           0000000000000000  00002150       0000000000000708  0000000000000018          34    52     8</span><br><span class=\"line\">  [34] .strtab           STRTAB           0000000000000000  00002858       0000000000000256  0000000000000000           0     0     1</span><br><span class=\"line\">  [35] .shstrtab         STRTAB           0000000000000000  00002aae       000000000000014c  0000000000000000           0     0     1</span><br><span class=\"line\">Key to Flags:</span><br><span class=\"line\">  W (write), A (alloc), X (execute), M (merge), S (strings), I (info),</span><br><span class=\"line\">  L (link order), O (extra OS processing required), G (group), T (TLS),</span><br><span class=\"line\">  C (compressed), x (unknown), o (OS specific), E (exclude),</span><br><span class=\"line\">  l (large), p (processor specific)</span><br></pre></td></tr></table></figure></p>\n<p> <a href=\"https://www.cnblogs.com/jiqingwu/p/elf_format_research_01.html\" target=\"_blank\" rel=\"noopener\">https://www.cnblogs.com/jiqingwu/p/elf_format_research_01.html</a><br> <a href=\"https://blog.csdn.net/qq_32400847/article/details/71001693\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/qq_32400847/article/details/71001693</a><br> <a href=\"http://www.wowotech.net/basic_subject/pic.html\" target=\"_blank\" rel=\"noopener\">http://www.wowotech.net/basic_subject/pic.html</a><br> <a href=\"https://blog.csdn.net/loushuai/article/details/50493603\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/loushuai/article/details/50493603</a></p>\n","site":{"data":{}},"excerpt":"<h3 id=\"ELF文件\"><a href=\"#ELF文件\" class=\"headerlink\" title=\"ELF文件\"></a>ELF文件</h3><h6 id=\"内存布局\"><a href=\"#内存布局\" class=\"headerlink\" title=\"内存布局\"></a>内存布局</h6><table>\n<thead>\n<tr>\n<th>LINKING VIEW</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>ELF HEADER</td>\n</tr>\n<tr>\n<td>PROGRAM HEADER TABLE OPTIONAL</td>\n</tr>\n<tr>\n<td>SECTION 1</td>\n</tr>\n<tr>\n<td>SECTION 2</td>\n</tr>\n<tr>\n<td>SECTION n …</td>\n</tr>\n<tr>\n<td>SECTION HEADER TABLE</td>\n</tr>\n</tbody></table>\n<h6 id=\"执行视图\"><a href=\"#执行视图\" class=\"headerlink\" title=\"执行视图\"></a>执行视图</h6><table>\n<thead>\n<tr>\n<th>EXECUTION VIEW</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>PROGRAM HEADER TABLE</td>\n</tr>\n<tr>\n<td>SEGMENT 1</td>\n</tr>\n<tr>\n<td>SEGMENT 2</td>\n</tr>\n<tr>\n<td>SEGMENT N …</td>\n</tr>\n<tr>\n<td>SECTION HEADER TABLE OPTIONAL</td>\n</tr>\n</tbody></table>\n<h6 id=\"主要区别\"><a href=\"#主要区别\" class=\"headerlink\" title=\"主要区别\"></a>主要区别</h6><ul>\n<li><p>PROGRAM HEADER TABLE是运行时对应SEGMENT的TABLE 所以在目标文件中并不需要存在 实际上GCC代码编译出来的目标文件也不存在该</p>\n</li>\n<li><p>节 SECTION  (目标文件中的SECTION是和SECTION HEADER TABLE中的条目一一对应, 用于链接器对代码进行重定位(非PIC会重定位))</p>\n<ul>\n<li>.TEXT</li>\n<li>.BSS</li>\n<li>.DATA  </li>\n</ul>\n</li>\n<li><p>分段  SEGMENT (载入内存后以SEGMENT组织, SEGMENT对应PROGRAM HEADER TABLE 中的条目, 目标代码中的SECTION会组织到各个SEGMENT中)  </p>\n<ul>\n<li>.TEXT的内容会组织到代码段中  </li>\n<li>.DATA .BSS的内容会包含在数据段中  </li>\n</ul>\n</li>\n</ul>","more":"<h3 id=\"分析过程\"><a href=\"#分析过程\" class=\"headerlink\" title=\"分析过程\"></a>分析过程</h3><p> 通过命令 readelf a.out -S section 查看SECTION 可以看到.plt .plt.got的信息<br> 旗标FLAG中 A代表分配内存  X代表执行 W为可写  见末尾KEY说明<br> <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> 文件：a.out</span><br><span class=\"line\">共有 36 个节头，从偏移量 0x2c00 开始：</span><br><span class=\"line\"></span><br><span class=\"line\">节头：</span><br><span class=\"line\">  [号] 名称              类型             地址              偏移量              大小              全体大小        旗标   链接   信息   对齐</span><br><span class=\"line\">  [ 0]                   NULL             0000000000000000  00000000       0000000000000000  0000000000000000           0     0     0</span><br><span class=\"line\">  [ 1] .interp           PROGBITS         0000000000000238  00000238       000000000000001c  0000000000000000   A       0     0     1</span><br><span class=\"line\">  [ 2] .note.ABI-tag     NOTE             0000000000000254  00000254       0000000000000020  0000000000000000   A       0     0     4</span><br><span class=\"line\">  [ 3] .note.gnu.build-i NOTE             0000000000000274  00000274       0000000000000024  0000000000000000   A       0     0     4</span><br><span class=\"line\">  [ 4] .gnu.hash         GNU_HASH         0000000000000298  00000298       000000000000001c  0000000000000000   A       5     0     8</span><br><span class=\"line\">  [ 5] .dynsym           DYNSYM           00000000000002b8  000002b8       00000000000000f0  0000000000000018   A       6     1     8</span><br><span class=\"line\">  [ 6] .dynstr           STRTAB           00000000000003a8  000003a8       00000000000000c9  0000000000000000   A       0     0     1</span><br><span class=\"line\">  [ 7] .gnu.version      VERSYM           0000000000000472  00000472       0000000000000014  0000000000000002   A       5     0     2</span><br><span class=\"line\">  [ 8] .gnu.version_r    VERNEED          0000000000000488  00000488       0000000000000020  0000000000000000   A       6     1     8</span><br><span class=\"line\">  [ 9] .rela.dyn         RELA             00000000000004a8  000004a8       00000000000000d8  0000000000000018   A       5     0     8</span><br><span class=\"line\">  [10] .rela.plt         RELA             0000000000000580  00000580       0000000000000048  0000000000000018  AI       5    24     8</span><br><span class=\"line\">  [11] .init             PROGBITS         00000000000005c8  000005c8       0000000000000017  0000000000000000  AX       0     0     4</span><br><span class=\"line\">  [12] .plt              PROGBITS         00000000000005e0  000005e0       0000000000000040  0000000000000010  AX       0     0     16</span><br><span class=\"line\">  [13] .plt.got          PROGBITS         0000000000000620  00000620       0000000000000008  0000000000000000  AX       0     0     8</span><br><span class=\"line\">  [14] .text             PROGBITS         0000000000000630  00000630       0000000000000212  0000000000000000  AX       0     0     16</span><br><span class=\"line\">  [15] .fini             PROGBITS         0000000000000844  00000844       0000000000000009  0000000000000000  AX       0     0     4</span><br><span class=\"line\">  [16] .rodata           PROGBITS         0000000000000850  00000850       0000000000000027  0000000000000000   A       0     0     4</span><br><span class=\"line\">  [17] .eh_frame_hdr     PROGBITS         0000000000000878  00000878       000000000000003c  0000000000000000   A       0     0     4</span><br><span class=\"line\">  [18] .eh_frame         PROGBITS         00000000000008b8  000008b8       000000000000010c  0000000000000000   A       0     0     8</span><br><span class=\"line\">  [19] .init_array       INIT_ARRAY       0000000000200da8  00000da8       0000000000000008  0000000000000008  WA       0     0     8</span><br><span class=\"line\">  [20] .fini_array       FINI_ARRAY       0000000000200db0  00000db0       0000000000000008  0000000000000008  WA       0     0     8</span><br><span class=\"line\">  [21] .jcr              PROGBITS         0000000000200db8  00000db8       0000000000000008  0000000000000000  WA       0     0     8</span><br><span class=\"line\">  [22] .dynamic          DYNAMIC          0000000000200dc0  00000dc0       0000000000000210  0000000000000010  WA       6     0     8</span><br><span class=\"line\">  [23] .got              PROGBITS         0000000000200fd0  00000fd0       0000000000000030  0000000000000008  WA       0     0     8</span><br><span class=\"line\">  [24] .got.plt          PROGBITS         0000000000201000  00001000       0000000000000030  0000000000000008  WA       0     0     8</span><br><span class=\"line\">  [25] .data             PROGBITS         0000000000201030  00001030       0000000000000010  0000000000000000  WA       0     0     8</span><br><span class=\"line\">  [26] .bss              NOBITS           0000000000201040  00001040       0000000000000008  0000000000000000  WA       0     0     1</span><br><span class=\"line\">  [27] .comment          PROGBITS         0000000000000000  00001040       000000000000002d  0000000000000001  MS       0     0     1</span><br><span class=\"line\">  [28] .debug_aranges    PROGBITS         0000000000000000  0000106d       0000000000000030  0000000000000000           0     0     1</span><br><span class=\"line\">  [29] .debug_info       PROGBITS         0000000000000000  0000109d       0000000000000973  0000000000000000           0     0     1</span><br><span class=\"line\">  [30] .debug_abbrev     PROGBITS         0000000000000000  00001a10       0000000000000211  0000000000000000           0     0     1</span><br><span class=\"line\">  [31] .debug_line       PROGBITS         0000000000000000  00001c21       0000000000000155  0000000000000000           0     0     1</span><br><span class=\"line\">  [32] .debug_str        PROGBITS         0000000000000000  00001d76       00000000000003d7  0000000000000001  MS       0     0     1</span><br><span class=\"line\">  [33] .symtab           SYMTAB           0000000000000000  00002150       0000000000000708  0000000000000018          34    52     8</span><br><span class=\"line\">  [34] .strtab           STRTAB           0000000000000000  00002858       0000000000000256  0000000000000000           0     0     1</span><br><span class=\"line\">  [35] .shstrtab         STRTAB           0000000000000000  00002aae       000000000000014c  0000000000000000           0     0     1</span><br><span class=\"line\">Key to Flags:</span><br><span class=\"line\">  W (write), A (alloc), X (execute), M (merge), S (strings), I (info),</span><br><span class=\"line\">  L (link order), O (extra OS processing required), G (group), T (TLS),</span><br><span class=\"line\">  C (compressed), x (unknown), o (OS specific), E (exclude),</span><br><span class=\"line\">  l (large), p (processor specific)</span><br></pre></td></tr></table></figure></p>\n<p> <a href=\"https://www.cnblogs.com/jiqingwu/p/elf_format_research_01.html\" target=\"_blank\" rel=\"noopener\">https://www.cnblogs.com/jiqingwu/p/elf_format_research_01.html</a><br> <a href=\"https://blog.csdn.net/qq_32400847/article/details/71001693\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/qq_32400847/article/details/71001693</a><br> <a href=\"http://www.wowotech.net/basic_subject/pic.html\" target=\"_blank\" rel=\"noopener\">http://www.wowotech.net/basic_subject/pic.html</a><br> <a href=\"https://blog.csdn.net/loushuai/article/details/50493603\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/loushuai/article/details/50493603</a></p>"},{"title":"ELF的hash算法","date":"2019-11-22T16:00:00.000Z","author":"yawei.zhang","_content":"\n### ..1. 目录  \n\n---  \n\n<!-- TOC -->\n\n- [..1. 目录](#1-目录)\n- [ELF HASH](#elf-hash)\n\t\t\t- [使用elf hash获取符号所在的偏移地址](#使用elf-hash获取符号所在的偏移地址)\n\t\t\t- [结论](#结论)\n- [ELF HASH源码](#elf-hash源码)\n\n<!-- /TOC -->\n\n### ELF HASH\nELF的哈希表提供了对符号表的访问 \n组织结构如下:     \n\n| labels\n|-----  \n| nbucket\n| nchain\n| bucket[0]\n| …\n| bucket[nbucket-1]\n| chain[0]\n| …\n| chain[nchain-1]\n\n###### 说明\n\n* bucket和chain的数量是相等的  \n* 每个符号值对应一个字符串  \n* 基本查找流程 \n  * 使用elf_hash得到hash值   \n  * 对hash值取模计算存放的符号值的桶  \n  * 如果该桶内没有数据则结束\n  * 如果桶内内有数据不匹配   \n    * 以该符号值为下标的 chain 中存在下一个符号值 \n    * 重复该步骤直到找到和目标字符串匹配   \n  * 找到符号值对应的字符串以及符号加载时的偏移信息和符号地址信息   \n\n###### 结论  \n* chain 的数量必然大于符号的数量  \n* 不考虑性能, 桶的数量可以小于符号的数量 也可以同时小于chain的数量   \n* 遇到冲突后从 chain 表中查找以出现冲突的符号值为下标位置的chain, 如果该chain无内容则从符号表中查找匹配的符号的值填充该chain  \n  * 如果有内容并且符号值依然冲突, 则用该冲突的符号值为索引继续查找下一个 \n  * 最差情况则相当于直接遍历符号表   \n\n\n<!-- more -->\n\n### ELF HASH源码   \nlinux 2.4.0 -> irqueue.c  \n[linux main](https://www.unix.com/man-page/osx/3ELF/elf_hash/)  \n```\n/*\n *    This function hash the input string ''name'' using the ELF hash\n *    function for strings.\n */\nstatic unsigned int hash(char* name)\n{\n    unsigned int h = 0;\n    unsigned int g;\n\n    while(*name) {\n        h = (h<<4) + *name++;\n        if ((g = (h & 0xf0000000)))\n            h ^=g>>24;\n        h &=~g;\n    }\n    return h;\n}\n```\n\n\n[vDSO/parse_vdso.c](https://elixir.bootlin.com/linux/v3.16/source/Documentation/vDSO/parse_vdso.c#L222)   \n使用elf hash获取符号所在的偏移地址   \n```\nvoid *vdso_sym(const char *version, const char *name)\n{\n\tunsigned long ver_hash;\n\tif (!vdso_info.valid)\n\t\treturn 0;\n\n\tver_hash = elf_hash(version);\n\tELF(Word) chain = vdso_info.bucket[elf_hash(name) % vdso_info.nbucket];\n\n\tfor (; chain != STN_UNDEF; chain = vdso_info.chain[chain]) {\n\t\tELF(Sym) *sym = &vdso_info.symtab[chain];\n\n\t\t/* Check for a defined global or weak function w/ right name. */\n\t\tif (ELF64_ST_TYPE(sym->st_info) != STT_FUNC)\n\t\t\tcontinue;\n\t\tif (ELF64_ST_BIND(sym->st_info) != STB_GLOBAL &&\n\t\t    ELF64_ST_BIND(sym->st_info) != STB_WEAK)\n\t\t\tcontinue;\n\t\tif (sym->st_shndx == SHN_UNDEF)\n\t\t\tcontinue;\n\t\tif (strcmp(name, vdso_info.symstrings + sym->st_name))\n\t\t\tcontinue;\n\n\t\t/* Check symbol version. */\n\t\tif (vdso_info.versym\n\t\t    && !vdso_match_version(vdso_info.versym[chain],\n\t\t\t\t\t   version, ver_hash))\n\t\t\tcontinue;\n\n\t\treturn (void *)(vdso_info.load_offset + sym->st_value);\n\t}\n\n\treturn 0;\n}\n```\n\n\n\n\n\n","source":"_posts/2019-11-23-elf-hash.md","raw":"---\ntitle: ELF的hash算法    \ndate: 2019-11-23\ncategories: develop \nauthor: yawei.zhang \n---\n\n### ..1. 目录  \n\n---  \n\n<!-- TOC -->\n\n- [..1. 目录](#1-目录)\n- [ELF HASH](#elf-hash)\n\t\t\t- [使用elf hash获取符号所在的偏移地址](#使用elf-hash获取符号所在的偏移地址)\n\t\t\t- [结论](#结论)\n- [ELF HASH源码](#elf-hash源码)\n\n<!-- /TOC -->\n\n### ELF HASH\nELF的哈希表提供了对符号表的访问 \n组织结构如下:     \n\n| labels\n|-----  \n| nbucket\n| nchain\n| bucket[0]\n| …\n| bucket[nbucket-1]\n| chain[0]\n| …\n| chain[nchain-1]\n\n###### 说明\n\n* bucket和chain的数量是相等的  \n* 每个符号值对应一个字符串  \n* 基本查找流程 \n  * 使用elf_hash得到hash值   \n  * 对hash值取模计算存放的符号值的桶  \n  * 如果该桶内没有数据则结束\n  * 如果桶内内有数据不匹配   \n    * 以该符号值为下标的 chain 中存在下一个符号值 \n    * 重复该步骤直到找到和目标字符串匹配   \n  * 找到符号值对应的字符串以及符号加载时的偏移信息和符号地址信息   \n\n###### 结论  \n* chain 的数量必然大于符号的数量  \n* 不考虑性能, 桶的数量可以小于符号的数量 也可以同时小于chain的数量   \n* 遇到冲突后从 chain 表中查找以出现冲突的符号值为下标位置的chain, 如果该chain无内容则从符号表中查找匹配的符号的值填充该chain  \n  * 如果有内容并且符号值依然冲突, 则用该冲突的符号值为索引继续查找下一个 \n  * 最差情况则相当于直接遍历符号表   \n\n\n<!-- more -->\n\n### ELF HASH源码   \nlinux 2.4.0 -> irqueue.c  \n[linux main](https://www.unix.com/man-page/osx/3ELF/elf_hash/)  \n```\n/*\n *    This function hash the input string ''name'' using the ELF hash\n *    function for strings.\n */\nstatic unsigned int hash(char* name)\n{\n    unsigned int h = 0;\n    unsigned int g;\n\n    while(*name) {\n        h = (h<<4) + *name++;\n        if ((g = (h & 0xf0000000)))\n            h ^=g>>24;\n        h &=~g;\n    }\n    return h;\n}\n```\n\n\n[vDSO/parse_vdso.c](https://elixir.bootlin.com/linux/v3.16/source/Documentation/vDSO/parse_vdso.c#L222)   \n使用elf hash获取符号所在的偏移地址   \n```\nvoid *vdso_sym(const char *version, const char *name)\n{\n\tunsigned long ver_hash;\n\tif (!vdso_info.valid)\n\t\treturn 0;\n\n\tver_hash = elf_hash(version);\n\tELF(Word) chain = vdso_info.bucket[elf_hash(name) % vdso_info.nbucket];\n\n\tfor (; chain != STN_UNDEF; chain = vdso_info.chain[chain]) {\n\t\tELF(Sym) *sym = &vdso_info.symtab[chain];\n\n\t\t/* Check for a defined global or weak function w/ right name. */\n\t\tif (ELF64_ST_TYPE(sym->st_info) != STT_FUNC)\n\t\t\tcontinue;\n\t\tif (ELF64_ST_BIND(sym->st_info) != STB_GLOBAL &&\n\t\t    ELF64_ST_BIND(sym->st_info) != STB_WEAK)\n\t\t\tcontinue;\n\t\tif (sym->st_shndx == SHN_UNDEF)\n\t\t\tcontinue;\n\t\tif (strcmp(name, vdso_info.symstrings + sym->st_name))\n\t\t\tcontinue;\n\n\t\t/* Check symbol version. */\n\t\tif (vdso_info.versym\n\t\t    && !vdso_match_version(vdso_info.versym[chain],\n\t\t\t\t\t   version, ver_hash))\n\t\t\tcontinue;\n\n\t\treturn (void *)(vdso_info.load_offset + sym->st_value);\n\t}\n\n\treturn 0;\n}\n```\n\n\n\n\n\n","slug":"2019-11-23-elf-hash","published":1,"updated":"2019-11-25T08:49:18.952Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck44ekz1x000hr45h9cy80da3","content":"<h3><span id=\"1-目录\">..1. 目录</span></h3><hr>\n<!-- TOC -->\n\n<ul>\n<li><a href=\"#1-目录\">..1. 目录</a></li>\n<li><a href=\"#elf-hash\">ELF HASH</a><pre><code>- [使用elf hash获取符号所在的偏移地址](#使用elf-hash获取符号所在的偏移地址)\n- [结论](#结论)</code></pre></li>\n<li><a href=\"#elf-hash源码\">ELF HASH源码</a></li>\n</ul>\n<!-- /TOC -->\n\n<h3><span id=\"elf-hash\">ELF HASH</span></h3><p>ELF的哈希表提供了对符号表的访问<br>组织结构如下:     </p>\n<table>\n<thead>\n<tr>\n<th>labels</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>nbucket</td>\n</tr>\n<tr>\n<td>nchain</td>\n</tr>\n<tr>\n<td>bucket[0]</td>\n</tr>\n<tr>\n<td>…</td>\n</tr>\n<tr>\n<td>bucket[nbucket-1]</td>\n</tr>\n<tr>\n<td>chain[0]</td>\n</tr>\n<tr>\n<td>…</td>\n</tr>\n<tr>\n<td>chain[nchain-1]</td>\n</tr>\n</tbody></table>\n<h6><span id=\"说明\">说明</span></h6><ul>\n<li>bucket和chain的数量是相等的  </li>\n<li>每个符号值对应一个字符串  </li>\n<li>基本查找流程 <ul>\n<li>使用elf_hash得到hash值   </li>\n<li>对hash值取模计算存放的符号值的桶  </li>\n<li>如果该桶内没有数据则结束</li>\n<li>如果桶内内有数据不匹配   <ul>\n<li>以该符号值为下标的 chain 中存在下一个符号值 </li>\n<li>重复该步骤直到找到和目标字符串匹配   </li>\n</ul>\n</li>\n<li>找到符号值对应的字符串以及符号加载时的偏移信息和符号地址信息   </li>\n</ul>\n</li>\n</ul>\n<h6><span id=\"结论\">结论</span></h6><ul>\n<li>chain 的数量必然大于符号的数量  </li>\n<li>不考虑性能, 桶的数量可以小于符号的数量 也可以同时小于chain的数量   </li>\n<li>遇到冲突后从 chain 表中查找以出现冲突的符号值为下标位置的chain, 如果该chain无内容则从符号表中查找匹配的符号的值填充该chain  <ul>\n<li>如果有内容并且符号值依然冲突, 则用该冲突的符号值为索引继续查找下一个 </li>\n<li>最差情况则相当于直接遍历符号表   </li>\n</ul>\n</li>\n</ul>\n<a id=\"more\"></a>\n\n<h3><span id=\"elf-hash源码\">ELF HASH源码</span></h3><p>linux 2.4.0 -&gt; irqueue.c<br><a href=\"https://www.unix.com/man-page/osx/3ELF/elf_hash/\" target=\"_blank\" rel=\"noopener\">linux main</a>  </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;*</span><br><span class=\"line\"> *    This function hash the input string &#39;&#39;name&#39;&#39; using the ELF hash</span><br><span class=\"line\"> *    function for strings.</span><br><span class=\"line\"> *&#x2F;</span><br><span class=\"line\">static unsigned int hash(char* name)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    unsigned int h &#x3D; 0;</span><br><span class=\"line\">    unsigned int g;</span><br><span class=\"line\"></span><br><span class=\"line\">    while(*name) &#123;</span><br><span class=\"line\">        h &#x3D; (h&lt;&lt;4) + *name++;</span><br><span class=\"line\">        if ((g &#x3D; (h &amp; 0xf0000000)))</span><br><span class=\"line\">            h ^&#x3D;g&gt;&gt;24;</span><br><span class=\"line\">        h &amp;&#x3D;~g;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    return h;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n<p><a href=\"https://elixir.bootlin.com/linux/v3.16/source/Documentation/vDSO/parse_vdso.c#L222\" target=\"_blank\" rel=\"noopener\">vDSO/parse_vdso.c</a><br>使用elf hash获取符号所在的偏移地址   </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">void *vdso_sym(const char *version, const char *name)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tunsigned long ver_hash;</span><br><span class=\"line\">\tif (!vdso_info.valid)</span><br><span class=\"line\">\t\treturn 0;</span><br><span class=\"line\"></span><br><span class=\"line\">\tver_hash &#x3D; elf_hash(version);</span><br><span class=\"line\">\tELF(Word) chain &#x3D; vdso_info.bucket[elf_hash(name) % vdso_info.nbucket];</span><br><span class=\"line\"></span><br><span class=\"line\">\tfor (; chain !&#x3D; STN_UNDEF; chain &#x3D; vdso_info.chain[chain]) &#123;</span><br><span class=\"line\">\t\tELF(Sym) *sym &#x3D; &amp;vdso_info.symtab[chain];</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t&#x2F;* Check for a defined global or weak function w&#x2F; right name. *&#x2F;</span><br><span class=\"line\">\t\tif (ELF64_ST_TYPE(sym-&gt;st_info) !&#x3D; STT_FUNC)</span><br><span class=\"line\">\t\t\tcontinue;</span><br><span class=\"line\">\t\tif (ELF64_ST_BIND(sym-&gt;st_info) !&#x3D; STB_GLOBAL &amp;&amp;</span><br><span class=\"line\">\t\t    ELF64_ST_BIND(sym-&gt;st_info) !&#x3D; STB_WEAK)</span><br><span class=\"line\">\t\t\tcontinue;</span><br><span class=\"line\">\t\tif (sym-&gt;st_shndx &#x3D;&#x3D; SHN_UNDEF)</span><br><span class=\"line\">\t\t\tcontinue;</span><br><span class=\"line\">\t\tif (strcmp(name, vdso_info.symstrings + sym-&gt;st_name))</span><br><span class=\"line\">\t\t\tcontinue;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t&#x2F;* Check symbol version. *&#x2F;</span><br><span class=\"line\">\t\tif (vdso_info.versym</span><br><span class=\"line\">\t\t    &amp;&amp; !vdso_match_version(vdso_info.versym[chain],</span><br><span class=\"line\">\t\t\t\t\t   version, ver_hash))</span><br><span class=\"line\">\t\t\tcontinue;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\treturn (void *)(vdso_info.load_offset + sym-&gt;st_value);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\treturn 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n","site":{"data":{}},"excerpt":"<h3 id=\"1-目录\"><a href=\"#1-目录\" class=\"headerlink\" title=\"..1. 目录\"></a>..1. 目录</h3><hr>\n<!-- TOC -->\n\n<ul>\n<li><a href=\"#1-目录\">..1. 目录</a></li>\n<li><a href=\"#elf-hash\">ELF HASH</a><pre><code>- [使用elf hash获取符号所在的偏移地址](#使用elf-hash获取符号所在的偏移地址)\n- [结论](#结论)</code></pre></li>\n<li><a href=\"#elf-hash源码\">ELF HASH源码</a></li>\n</ul>\n<!-- /TOC -->\n\n<h3 id=\"ELF-HASH\"><a href=\"#ELF-HASH\" class=\"headerlink\" title=\"ELF HASH\"></a>ELF HASH</h3><p>ELF的哈希表提供了对符号表的访问<br>组织结构如下:     </p>\n<table>\n<thead>\n<tr>\n<th>labels</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>nbucket</td>\n</tr>\n<tr>\n<td>nchain</td>\n</tr>\n<tr>\n<td>bucket[0]</td>\n</tr>\n<tr>\n<td>…</td>\n</tr>\n<tr>\n<td>bucket[nbucket-1]</td>\n</tr>\n<tr>\n<td>chain[0]</td>\n</tr>\n<tr>\n<td>…</td>\n</tr>\n<tr>\n<td>chain[nchain-1]</td>\n</tr>\n</tbody></table>\n<h6 id=\"说明\"><a href=\"#说明\" class=\"headerlink\" title=\"说明\"></a>说明</h6><ul>\n<li>bucket和chain的数量是相等的  </li>\n<li>每个符号值对应一个字符串  </li>\n<li>基本查找流程 <ul>\n<li>使用elf_hash得到hash值   </li>\n<li>对hash值取模计算存放的符号值的桶  </li>\n<li>如果该桶内没有数据则结束</li>\n<li>如果桶内内有数据不匹配   <ul>\n<li>以该符号值为下标的 chain 中存在下一个符号值 </li>\n<li>重复该步骤直到找到和目标字符串匹配   </li>\n</ul>\n</li>\n<li>找到符号值对应的字符串以及符号加载时的偏移信息和符号地址信息   </li>\n</ul>\n</li>\n</ul>\n<h6 id=\"结论\"><a href=\"#结论\" class=\"headerlink\" title=\"结论\"></a>结论</h6><ul>\n<li>chain 的数量必然大于符号的数量  </li>\n<li>不考虑性能, 桶的数量可以小于符号的数量 也可以同时小于chain的数量   </li>\n<li>遇到冲突后从 chain 表中查找以出现冲突的符号值为下标位置的chain, 如果该chain无内容则从符号表中查找匹配的符号的值填充该chain  <ul>\n<li>如果有内容并且符号值依然冲突, 则用该冲突的符号值为索引继续查找下一个 </li>\n<li>最差情况则相当于直接遍历符号表   </li>\n</ul>\n</li>\n</ul>","more":"<h3 id=\"ELF-HASH源码\"><a href=\"#ELF-HASH源码\" class=\"headerlink\" title=\"ELF HASH源码\"></a>ELF HASH源码</h3><p>linux 2.4.0 -&gt; irqueue.c<br><a href=\"https://www.unix.com/man-page/osx/3ELF/elf_hash/\" target=\"_blank\" rel=\"noopener\">linux main</a>  </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;*</span><br><span class=\"line\"> *    This function hash the input string &#39;&#39;name&#39;&#39; using the ELF hash</span><br><span class=\"line\"> *    function for strings.</span><br><span class=\"line\"> *&#x2F;</span><br><span class=\"line\">static unsigned int hash(char* name)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    unsigned int h &#x3D; 0;</span><br><span class=\"line\">    unsigned int g;</span><br><span class=\"line\"></span><br><span class=\"line\">    while(*name) &#123;</span><br><span class=\"line\">        h &#x3D; (h&lt;&lt;4) + *name++;</span><br><span class=\"line\">        if ((g &#x3D; (h &amp; 0xf0000000)))</span><br><span class=\"line\">            h ^&#x3D;g&gt;&gt;24;</span><br><span class=\"line\">        h &amp;&#x3D;~g;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    return h;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n<p><a href=\"https://elixir.bootlin.com/linux/v3.16/source/Documentation/vDSO/parse_vdso.c#L222\" target=\"_blank\" rel=\"noopener\">vDSO/parse_vdso.c</a><br>使用elf hash获取符号所在的偏移地址   </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">void *vdso_sym(const char *version, const char *name)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tunsigned long ver_hash;</span><br><span class=\"line\">\tif (!vdso_info.valid)</span><br><span class=\"line\">\t\treturn 0;</span><br><span class=\"line\"></span><br><span class=\"line\">\tver_hash &#x3D; elf_hash(version);</span><br><span class=\"line\">\tELF(Word) chain &#x3D; vdso_info.bucket[elf_hash(name) % vdso_info.nbucket];</span><br><span class=\"line\"></span><br><span class=\"line\">\tfor (; chain !&#x3D; STN_UNDEF; chain &#x3D; vdso_info.chain[chain]) &#123;</span><br><span class=\"line\">\t\tELF(Sym) *sym &#x3D; &amp;vdso_info.symtab[chain];</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t&#x2F;* Check for a defined global or weak function w&#x2F; right name. *&#x2F;</span><br><span class=\"line\">\t\tif (ELF64_ST_TYPE(sym-&gt;st_info) !&#x3D; STT_FUNC)</span><br><span class=\"line\">\t\t\tcontinue;</span><br><span class=\"line\">\t\tif (ELF64_ST_BIND(sym-&gt;st_info) !&#x3D; STB_GLOBAL &amp;&amp;</span><br><span class=\"line\">\t\t    ELF64_ST_BIND(sym-&gt;st_info) !&#x3D; STB_WEAK)</span><br><span class=\"line\">\t\t\tcontinue;</span><br><span class=\"line\">\t\tif (sym-&gt;st_shndx &#x3D;&#x3D; SHN_UNDEF)</span><br><span class=\"line\">\t\t\tcontinue;</span><br><span class=\"line\">\t\tif (strcmp(name, vdso_info.symstrings + sym-&gt;st_name))</span><br><span class=\"line\">\t\t\tcontinue;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t&#x2F;* Check symbol version. *&#x2F;</span><br><span class=\"line\">\t\tif (vdso_info.versym</span><br><span class=\"line\">\t\t    &amp;&amp; !vdso_match_version(vdso_info.versym[chain],</span><br><span class=\"line\">\t\t\t\t\t   version, ver_hash))</span><br><span class=\"line\">\t\t\tcontinue;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\treturn (void *)(vdso_info.load_offset + sym-&gt;st_value);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\treturn 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"PLT procedure linkage table  过程链接表","date":"2019-11-24T16:00:00.000Z","author":"yawei.zhang","_content":"\n### 目录  \n\n<!-- TOC -->\n- [目录](#目录)\n- [调测工具](#调测工具)\n  - [PEDA插件](#peda插件)\n- [汇编和寄存器说明](#汇编和寄存器说明)\n- [PLT基本定义和流程说明](#plt基本定义和流程说明)\n- [GOT数据部分](#got数据部分)\n      - [缺点](#缺点)\n      - [优点](#优点)\n- [测试代码](#测试代码)\n- [elf文件和指令分析](#elf文件和指令分析)\n<!-- /TOC -->\n\n\n### 调测工具   \n\n* readelf -a  查看elf信息  \n* objdump -S 查看汇编指令  \n* ldd 查看动态加载   \n* gdb  \n  * gdb 通过```  layout regs  ```打开寄存器显示, 通过```set disassemble-next-line on```打开汇编  \n  * gdb 通过peda插件字节显示汇编和寄存器  和上面的原生方式选择一个即可    \n  * gdb关闭ASLR：\n    * set disable-randomization on\n  * 开启ASLR：\n    * set disable-randomization off\n  * 查看ASLR状态：\n    * show disable-randomization\n  * disas反汇编命令，直接disas是反汇编当前函数\n    * disas /r (显示汇编指令对应十六进制值)   \n    * disas /m (如果有源码，显示对应行源码)   \n  * intel语法\n    * set disassembly-flavor intel\n    * set disassembly-flavor att\n\n<!-- more -->\n#### PEDA插件  \npeda默认设置的是intel的语法风格\n```\ngit clone https://github.com/longld/peda.git ~/peda\necho \"source ~/peda/peda.py\" >> ~/.gdbinit\necho \"DONE! debug your program with gdb and enjoy\"\n```  \n* aslr -- Show/set ASLR setting of GDB\n* checksec -- Check for various security options of binary\n* dumpargs -- Display arguments passed to a function when stopped at a call instruction\n* dumprop -- Dump all ROP gadgets in specific memory range\n* elfheader -- Get headers information from debugged ELF file\n* elfsymbol -- Get non-debugging symbol information from an ELF file\n* lookup -- Search for all addresses/references to addresses which belong to a memory range\n* patch -- Patch memory start at an address with string/hexstring/int\n* pattern -- Generate, search, or write a cyclic pattern to memory\n* procinfo -- Display various info from /proc/pid/\n* pshow -- Show various PEDA options and other settings\n* pset -- Set various PEDA options and other settings\n* readelf -- Get headers information from an ELF file\n* ropgadget -- Get common ROP gadgets of binary or library\n* ropsearch -- Search for ROP gadgets in memory\n* searchmem|find -- Search for a pattern in memory; support regex search\n* shellcode -- Generate or download common shellcodes.\n* skeleton -- Generate python exploit code template\n* vmmap -- Get virtual mapping address ranges of section(s) in debugged process\n* xormem -- XOR a memory region with a key\n\n### 汇编和寄存器说明  \n\n\"@\"符号表示“将符号左边的变量钳制在符号右边的地址\n\n* 寄存器单位  \n  * E开头是32位  \n  * R开头是64位  \n  \n* 一般寄存器:AX BX CX DX\n  * AX:累加寄存器 是加法乘法指令的缺省寄存器\n  * BX:基址寄存器 内存寻址时存放基地址\n  * CX:计数寄存器 是重复(REP)前缀指令和LOOP指令的内定计数器  \n  * DX:数据寄存器 用来放整数除法产生的余数  \n\n* 索引寄存器:SI DI  源/目标索引寄存器\"(source/destination index)  \n  * SI:来源索引寄存器  字符串操作指令中, DS:ESI指向源串  \n  * DI:目的索引寄存器  字符串操作指令中, ES:EDI指向目标串\n\n* 指针寄存器\n  * SP:堆栈指针寄存器 专门用作堆栈指针 被形象地称为栈顶指针  \n  * BP:基址指针寄存器 经常被用作高级语言函数调用的\"框架指针|栈帧指针\"(frame pointer)  \n    * 在EBP上方分别是原来的EBP 返回地址 参数  \n    * EBP下方是(函数)的临时变量  \n  * IP: 指令指针 Instruction Pointer 存放下次将要执行的指令在代码段的偏移量 (不考虑预读队列)  \n    * 概念上是PC 程序计数器  X86体系下叫IP \n\n\n### PLT基本定义和流程说明   \n\n1. 为本地的函数生成对应的 函数符号.plt 命名的过程  \n2. 为本地的符号生成带偏移信息的符号表  \n3. 每个映像文件都生成一个GOT表, 第一项保存基址位置, 第二项保存link_map, link_map通过前后指针把所有映像文件(库)和符号表串联起来   \n4. 运行时对位置无关的函数和全局变量的访问通过GOT表访问   \n5. GOT表会在模块加载时候填充好变量的真正地址以及plt过程的惰性获取代码入口    \n   1. PLT过程 类似函数钩子 \n      1. 本模块对位置无关的函数访问先call 函数@.plt过程  \n      2. 该过程会先直接跳转到GOT中对应位置保存的地址处  \n         1. 如果未获取实际位置, 则跳转到到该过程的下一行代码   \n         2. 压入当前函数符号在GOT中的编号并jmp到符号解析函数_dl_runtime_resolve_xsave进行解析  \n         3. 通过link_map进行遍历查找 _dl_fixup \n         4. 填充GOT表\n         5. (这里实际会call到真实函数并返回到call 函数@.plt的位置)  \n      3. 进入实际函数执行并返回到 call 函数@.plt的位置\n\n### GOT数据部分   \n不需要PLT的额外部分   \n\n###### 缺点  \n为了性能需要一个寄存器存储GOT表的位置??? \n运行时要经过计算来获得\n符号的地址, 从某种方面来说也对运行速度有点小影响.  \n\n###### 优点\n位置无关代码的优点就跟他名字一样, 可以保证加载到任意地址都能\n正常执行, 这也是每个动态链接库都需要支持的.\n\n### 测试代码   \n\n### elf文件和指令分析   \n[rip+0x2006e4]        # 0x555555754fd8  0x00007ffff7dd7048\n[rip+0x2006d0]        # 0x555555754fd0  0x00007ffff7dd7030\n\n[rip+0x20074f]        # 0x7ffff7dd6fc8  0x00007ffff7dd7050\n[rip+0x20073b]        # 0x7ffff7dd6fc0  0x00007ffff7dd7038\n\n\n[rip+0x20073e]        # 0x7ffff7dd6fd8  0x00007ffff7dd7030\n[rip+0x20073a]        # 0x7ffff7dd6fe0  0x00007ffff7dd7048\n\n\n","source":"_posts/2019-11-25-link-plt.md","raw":"---\ntitle: PLT procedure linkage table  过程链接表    \ndate: 2019-11-25\ncategories: develop \nauthor: yawei.zhang \n---\n\n### 目录  \n\n<!-- TOC -->\n- [目录](#目录)\n- [调测工具](#调测工具)\n  - [PEDA插件](#peda插件)\n- [汇编和寄存器说明](#汇编和寄存器说明)\n- [PLT基本定义和流程说明](#plt基本定义和流程说明)\n- [GOT数据部分](#got数据部分)\n      - [缺点](#缺点)\n      - [优点](#优点)\n- [测试代码](#测试代码)\n- [elf文件和指令分析](#elf文件和指令分析)\n<!-- /TOC -->\n\n\n### 调测工具   \n\n* readelf -a  查看elf信息  \n* objdump -S 查看汇编指令  \n* ldd 查看动态加载   \n* gdb  \n  * gdb 通过```  layout regs  ```打开寄存器显示, 通过```set disassemble-next-line on```打开汇编  \n  * gdb 通过peda插件字节显示汇编和寄存器  和上面的原生方式选择一个即可    \n  * gdb关闭ASLR：\n    * set disable-randomization on\n  * 开启ASLR：\n    * set disable-randomization off\n  * 查看ASLR状态：\n    * show disable-randomization\n  * disas反汇编命令，直接disas是反汇编当前函数\n    * disas /r (显示汇编指令对应十六进制值)   \n    * disas /m (如果有源码，显示对应行源码)   \n  * intel语法\n    * set disassembly-flavor intel\n    * set disassembly-flavor att\n\n<!-- more -->\n#### PEDA插件  \npeda默认设置的是intel的语法风格\n```\ngit clone https://github.com/longld/peda.git ~/peda\necho \"source ~/peda/peda.py\" >> ~/.gdbinit\necho \"DONE! debug your program with gdb and enjoy\"\n```  \n* aslr -- Show/set ASLR setting of GDB\n* checksec -- Check for various security options of binary\n* dumpargs -- Display arguments passed to a function when stopped at a call instruction\n* dumprop -- Dump all ROP gadgets in specific memory range\n* elfheader -- Get headers information from debugged ELF file\n* elfsymbol -- Get non-debugging symbol information from an ELF file\n* lookup -- Search for all addresses/references to addresses which belong to a memory range\n* patch -- Patch memory start at an address with string/hexstring/int\n* pattern -- Generate, search, or write a cyclic pattern to memory\n* procinfo -- Display various info from /proc/pid/\n* pshow -- Show various PEDA options and other settings\n* pset -- Set various PEDA options and other settings\n* readelf -- Get headers information from an ELF file\n* ropgadget -- Get common ROP gadgets of binary or library\n* ropsearch -- Search for ROP gadgets in memory\n* searchmem|find -- Search for a pattern in memory; support regex search\n* shellcode -- Generate or download common shellcodes.\n* skeleton -- Generate python exploit code template\n* vmmap -- Get virtual mapping address ranges of section(s) in debugged process\n* xormem -- XOR a memory region with a key\n\n### 汇编和寄存器说明  \n\n\"@\"符号表示“将符号左边的变量钳制在符号右边的地址\n\n* 寄存器单位  \n  * E开头是32位  \n  * R开头是64位  \n  \n* 一般寄存器:AX BX CX DX\n  * AX:累加寄存器 是加法乘法指令的缺省寄存器\n  * BX:基址寄存器 内存寻址时存放基地址\n  * CX:计数寄存器 是重复(REP)前缀指令和LOOP指令的内定计数器  \n  * DX:数据寄存器 用来放整数除法产生的余数  \n\n* 索引寄存器:SI DI  源/目标索引寄存器\"(source/destination index)  \n  * SI:来源索引寄存器  字符串操作指令中, DS:ESI指向源串  \n  * DI:目的索引寄存器  字符串操作指令中, ES:EDI指向目标串\n\n* 指针寄存器\n  * SP:堆栈指针寄存器 专门用作堆栈指针 被形象地称为栈顶指针  \n  * BP:基址指针寄存器 经常被用作高级语言函数调用的\"框架指针|栈帧指针\"(frame pointer)  \n    * 在EBP上方分别是原来的EBP 返回地址 参数  \n    * EBP下方是(函数)的临时变量  \n  * IP: 指令指针 Instruction Pointer 存放下次将要执行的指令在代码段的偏移量 (不考虑预读队列)  \n    * 概念上是PC 程序计数器  X86体系下叫IP \n\n\n### PLT基本定义和流程说明   \n\n1. 为本地的函数生成对应的 函数符号.plt 命名的过程  \n2. 为本地的符号生成带偏移信息的符号表  \n3. 每个映像文件都生成一个GOT表, 第一项保存基址位置, 第二项保存link_map, link_map通过前后指针把所有映像文件(库)和符号表串联起来   \n4. 运行时对位置无关的函数和全局变量的访问通过GOT表访问   \n5. GOT表会在模块加载时候填充好变量的真正地址以及plt过程的惰性获取代码入口    \n   1. PLT过程 类似函数钩子 \n      1. 本模块对位置无关的函数访问先call 函数@.plt过程  \n      2. 该过程会先直接跳转到GOT中对应位置保存的地址处  \n         1. 如果未获取实际位置, 则跳转到到该过程的下一行代码   \n         2. 压入当前函数符号在GOT中的编号并jmp到符号解析函数_dl_runtime_resolve_xsave进行解析  \n         3. 通过link_map进行遍历查找 _dl_fixup \n         4. 填充GOT表\n         5. (这里实际会call到真实函数并返回到call 函数@.plt的位置)  \n      3. 进入实际函数执行并返回到 call 函数@.plt的位置\n\n### GOT数据部分   \n不需要PLT的额外部分   \n\n###### 缺点  \n为了性能需要一个寄存器存储GOT表的位置??? \n运行时要经过计算来获得\n符号的地址, 从某种方面来说也对运行速度有点小影响.  \n\n###### 优点\n位置无关代码的优点就跟他名字一样, 可以保证加载到任意地址都能\n正常执行, 这也是每个动态链接库都需要支持的.\n\n### 测试代码   \n\n### elf文件和指令分析   \n[rip+0x2006e4]        # 0x555555754fd8  0x00007ffff7dd7048\n[rip+0x2006d0]        # 0x555555754fd0  0x00007ffff7dd7030\n\n[rip+0x20074f]        # 0x7ffff7dd6fc8  0x00007ffff7dd7050\n[rip+0x20073b]        # 0x7ffff7dd6fc0  0x00007ffff7dd7038\n\n\n[rip+0x20073e]        # 0x7ffff7dd6fd8  0x00007ffff7dd7030\n[rip+0x20073a]        # 0x7ffff7dd6fe0  0x00007ffff7dd7048\n\n\n","slug":"2019-11-25-link-plt","published":1,"updated":"2019-12-06T07:41:45.131Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck44ekz1y000ir45h5jpkgp8z","content":"<h3><span id=\"目录\">目录</span></h3><!-- TOC -->\n<ul>\n<li><a href=\"#目录\">目录</a></li>\n<li><a href=\"#调测工具\">调测工具</a><ul>\n<li><a href=\"#peda插件\">PEDA插件</a></li>\n</ul>\n</li>\n<li><a href=\"#汇编和寄存器说明\">汇编和寄存器说明</a></li>\n<li><a href=\"#plt基本定义和流程说明\">PLT基本定义和流程说明</a></li>\n<li><a href=\"#got数据部分\">GOT数据部分</a><pre><code>- [缺点](#缺点)\n- [优点](#优点)</code></pre></li>\n<li><a href=\"#测试代码\">测试代码</a></li>\n<li><a href=\"#elf文件和指令分析\">elf文件和指令分析</a><!-- /TOC -->\n\n\n</li>\n</ul>\n<h3><span id=\"调测工具\">调测工具</span></h3><ul>\n<li>readelf -a  查看elf信息  </li>\n<li>objdump -S 查看汇编指令  </li>\n<li>ldd 查看动态加载   </li>\n<li>gdb  <ul>\n<li>gdb 通过<code>layout regs</code>打开寄存器显示, 通过<code>set disassemble-next-line on</code>打开汇编  </li>\n<li>gdb 通过peda插件字节显示汇编和寄存器  和上面的原生方式选择一个即可    </li>\n<li>gdb关闭ASLR：<ul>\n<li>set disable-randomization on</li>\n</ul>\n</li>\n<li>开启ASLR：<ul>\n<li>set disable-randomization off</li>\n</ul>\n</li>\n<li>查看ASLR状态：<ul>\n<li>show disable-randomization</li>\n</ul>\n</li>\n<li>disas反汇编命令，直接disas是反汇编当前函数<ul>\n<li>disas /r (显示汇编指令对应十六进制值)   </li>\n<li>disas /m (如果有源码，显示对应行源码)   </li>\n</ul>\n</li>\n<li>intel语法<ul>\n<li>set disassembly-flavor intel</li>\n<li>set disassembly-flavor att</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<a id=\"more\"></a>\n<h4><span id=\"peda插件\">PEDA插件</span></h4><p>peda默认设置的是intel的语法风格</p>\n<pre><code>git clone https://github.com/longld/peda.git ~/peda\necho &quot;source ~/peda/peda.py&quot; &gt;&gt; ~/.gdbinit\necho &quot;DONE! debug your program with gdb and enjoy&quot;</code></pre><ul>\n<li>aslr – Show/set ASLR setting of GDB</li>\n<li>checksec – Check for various security options of binary</li>\n<li>dumpargs – Display arguments passed to a function when stopped at a call instruction</li>\n<li>dumprop – Dump all ROP gadgets in specific memory range</li>\n<li>elfheader – Get headers information from debugged ELF file</li>\n<li>elfsymbol – Get non-debugging symbol information from an ELF file</li>\n<li>lookup – Search for all addresses/references to addresses which belong to a memory range</li>\n<li>patch – Patch memory start at an address with string/hexstring/int</li>\n<li>pattern – Generate, search, or write a cyclic pattern to memory</li>\n<li>procinfo – Display various info from /proc/pid/</li>\n<li>pshow – Show various PEDA options and other settings</li>\n<li>pset – Set various PEDA options and other settings</li>\n<li>readelf – Get headers information from an ELF file</li>\n<li>ropgadget – Get common ROP gadgets of binary or library</li>\n<li>ropsearch – Search for ROP gadgets in memory</li>\n<li>searchmem|find – Search for a pattern in memory; support regex search</li>\n<li>shellcode – Generate or download common shellcodes.</li>\n<li>skeleton – Generate python exploit code template</li>\n<li>vmmap – Get virtual mapping address ranges of section(s) in debugged process</li>\n<li>xormem – XOR a memory region with a key</li>\n</ul>\n<h3><span id=\"汇编和寄存器说明\">汇编和寄存器说明</span></h3><p>“@”符号表示“将符号左边的变量钳制在符号右边的地址</p>\n<ul>\n<li><p>寄存器单位  </p>\n<ul>\n<li>E开头是32位  </li>\n<li>R开头是64位  </li>\n</ul>\n</li>\n<li><p>一般寄存器:AX BX CX DX</p>\n<ul>\n<li>AX:累加寄存器 是加法乘法指令的缺省寄存器</li>\n<li>BX:基址寄存器 内存寻址时存放基地址</li>\n<li>CX:计数寄存器 是重复(REP)前缀指令和LOOP指令的内定计数器  </li>\n<li>DX:数据寄存器 用来放整数除法产生的余数  </li>\n</ul>\n</li>\n<li><p>索引寄存器:SI DI  源/目标索引寄存器”(source/destination index)  </p>\n<ul>\n<li>SI:来源索引寄存器  字符串操作指令中, DS:ESI指向源串  </li>\n<li>DI:目的索引寄存器  字符串操作指令中, ES:EDI指向目标串</li>\n</ul>\n</li>\n<li><p>指针寄存器</p>\n<ul>\n<li>SP:堆栈指针寄存器 专门用作堆栈指针 被形象地称为栈顶指针  </li>\n<li>BP:基址指针寄存器 经常被用作高级语言函数调用的”框架指针|栈帧指针”(frame pointer)  <ul>\n<li>在EBP上方分别是原来的EBP 返回地址 参数  </li>\n<li>EBP下方是(函数)的临时变量  </li>\n</ul>\n</li>\n<li>IP: 指令指针 Instruction Pointer 存放下次将要执行的指令在代码段的偏移量 (不考虑预读队列)  <ul>\n<li>概念上是PC 程序计数器  X86体系下叫IP </li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3><span id=\"plt基本定义和流程说明\">PLT基本定义和流程说明</span></h3><ol>\n<li>为本地的函数生成对应的 函数符号.plt 命名的过程  </li>\n<li>为本地的符号生成带偏移信息的符号表  </li>\n<li>每个映像文件都生成一个GOT表, 第一项保存基址位置, 第二项保存link_map, link_map通过前后指针把所有映像文件(库)和符号表串联起来   </li>\n<li>运行时对位置无关的函数和全局变量的访问通过GOT表访问   </li>\n<li>GOT表会在模块加载时候填充好变量的真正地址以及plt过程的惰性获取代码入口    <ol>\n<li>PLT过程 类似函数钩子 <ol>\n<li>本模块对位置无关的函数访问先call 函数@.plt过程  </li>\n<li>该过程会先直接跳转到GOT中对应位置保存的地址处  <ol>\n<li>如果未获取实际位置, 则跳转到到该过程的下一行代码   </li>\n<li>压入当前函数符号在GOT中的编号并jmp到符号解析函数_dl_runtime_resolve_xsave进行解析  </li>\n<li>通过link_map进行遍历查找 _dl_fixup </li>\n<li>填充GOT表</li>\n<li>(这里实际会call到真实函数并返回到call 函数@.plt的位置)  </li>\n</ol>\n</li>\n<li>进入实际函数执行并返回到 call 函数@.plt的位置</li>\n</ol>\n</li>\n</ol>\n</li>\n</ol>\n<h3><span id=\"got数据部分\">GOT数据部分</span></h3><p>不需要PLT的额外部分   </p>\n<h6><span id=\"缺点\">缺点</span></h6><p>为了性能需要一个寄存器存储GOT表的位置???<br>运行时要经过计算来获得<br>符号的地址, 从某种方面来说也对运行速度有点小影响.  </p>\n<h6><span id=\"优点\">优点</span></h6><p>位置无关代码的优点就跟他名字一样, 可以保证加载到任意地址都能<br>正常执行, 这也是每个动态链接库都需要支持的.</p>\n<h3><span id=\"测试代码\">测试代码</span></h3><h3><span id=\"elf文件和指令分析\">elf文件和指令分析</span></h3><p>[rip+0x2006e4]        # 0x555555754fd8  0x00007ffff7dd7048<br>[rip+0x2006d0]        # 0x555555754fd0  0x00007ffff7dd7030</p>\n<p>[rip+0x20074f]        # 0x7ffff7dd6fc8  0x00007ffff7dd7050<br>[rip+0x20073b]        # 0x7ffff7dd6fc0  0x00007ffff7dd7038</p>\n<p>[rip+0x20073e]        # 0x7ffff7dd6fd8  0x00007ffff7dd7030<br>[rip+0x20073a]        # 0x7ffff7dd6fe0  0x00007ffff7dd7048</p>\n","site":{"data":{}},"excerpt":"<h3 id=\"目录\"><a href=\"#目录\" class=\"headerlink\" title=\"目录\"></a>目录</h3><!-- TOC -->\n<ul>\n<li><a href=\"#目录\">目录</a></li>\n<li><a href=\"#调测工具\">调测工具</a><ul>\n<li><a href=\"#peda插件\">PEDA插件</a></li>\n</ul>\n</li>\n<li><a href=\"#汇编和寄存器说明\">汇编和寄存器说明</a></li>\n<li><a href=\"#plt基本定义和流程说明\">PLT基本定义和流程说明</a></li>\n<li><a href=\"#got数据部分\">GOT数据部分</a><pre><code>- [缺点](#缺点)\n- [优点](#优点)</code></pre></li>\n<li><a href=\"#测试代码\">测试代码</a></li>\n<li><a href=\"#elf文件和指令分析\">elf文件和指令分析</a><!-- /TOC -->\n\n\n</li>\n</ul>\n<h3 id=\"调测工具\"><a href=\"#调测工具\" class=\"headerlink\" title=\"调测工具\"></a>调测工具</h3><ul>\n<li>readelf -a  查看elf信息  </li>\n<li>objdump -S 查看汇编指令  </li>\n<li>ldd 查看动态加载   </li>\n<li>gdb  <ul>\n<li>gdb 通过<code>layout regs</code>打开寄存器显示, 通过<code>set disassemble-next-line on</code>打开汇编  </li>\n<li>gdb 通过peda插件字节显示汇编和寄存器  和上面的原生方式选择一个即可    </li>\n<li>gdb关闭ASLR：<ul>\n<li>set disable-randomization on</li>\n</ul>\n</li>\n<li>开启ASLR：<ul>\n<li>set disable-randomization off</li>\n</ul>\n</li>\n<li>查看ASLR状态：<ul>\n<li>show disable-randomization</li>\n</ul>\n</li>\n<li>disas反汇编命令，直接disas是反汇编当前函数<ul>\n<li>disas /r (显示汇编指令对应十六进制值)   </li>\n<li>disas /m (如果有源码，显示对应行源码)   </li>\n</ul>\n</li>\n<li>intel语法<ul>\n<li>set disassembly-flavor intel</li>\n<li>set disassembly-flavor att</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>","more":"<h4 id=\"PEDA插件\"><a href=\"#PEDA插件\" class=\"headerlink\" title=\"PEDA插件\"></a>PEDA插件</h4><p>peda默认设置的是intel的语法风格</p>\n<pre><code>git clone https://github.com/longld/peda.git ~/peda\necho &quot;source ~/peda/peda.py&quot; &gt;&gt; ~/.gdbinit\necho &quot;DONE! debug your program with gdb and enjoy&quot;</code></pre><ul>\n<li>aslr – Show/set ASLR setting of GDB</li>\n<li>checksec – Check for various security options of binary</li>\n<li>dumpargs – Display arguments passed to a function when stopped at a call instruction</li>\n<li>dumprop – Dump all ROP gadgets in specific memory range</li>\n<li>elfheader – Get headers information from debugged ELF file</li>\n<li>elfsymbol – Get non-debugging symbol information from an ELF file</li>\n<li>lookup – Search for all addresses/references to addresses which belong to a memory range</li>\n<li>patch – Patch memory start at an address with string/hexstring/int</li>\n<li>pattern – Generate, search, or write a cyclic pattern to memory</li>\n<li>procinfo – Display various info from /proc/pid/</li>\n<li>pshow – Show various PEDA options and other settings</li>\n<li>pset – Set various PEDA options and other settings</li>\n<li>readelf – Get headers information from an ELF file</li>\n<li>ropgadget – Get common ROP gadgets of binary or library</li>\n<li>ropsearch – Search for ROP gadgets in memory</li>\n<li>searchmem|find – Search for a pattern in memory; support regex search</li>\n<li>shellcode – Generate or download common shellcodes.</li>\n<li>skeleton – Generate python exploit code template</li>\n<li>vmmap – Get virtual mapping address ranges of section(s) in debugged process</li>\n<li>xormem – XOR a memory region with a key</li>\n</ul>\n<h3 id=\"汇编和寄存器说明\"><a href=\"#汇编和寄存器说明\" class=\"headerlink\" title=\"汇编和寄存器说明\"></a>汇编和寄存器说明</h3><p>“@”符号表示“将符号左边的变量钳制在符号右边的地址</p>\n<ul>\n<li><p>寄存器单位  </p>\n<ul>\n<li>E开头是32位  </li>\n<li>R开头是64位  </li>\n</ul>\n</li>\n<li><p>一般寄存器:AX BX CX DX</p>\n<ul>\n<li>AX:累加寄存器 是加法乘法指令的缺省寄存器</li>\n<li>BX:基址寄存器 内存寻址时存放基地址</li>\n<li>CX:计数寄存器 是重复(REP)前缀指令和LOOP指令的内定计数器  </li>\n<li>DX:数据寄存器 用来放整数除法产生的余数  </li>\n</ul>\n</li>\n<li><p>索引寄存器:SI DI  源/目标索引寄存器”(source/destination index)  </p>\n<ul>\n<li>SI:来源索引寄存器  字符串操作指令中, DS:ESI指向源串  </li>\n<li>DI:目的索引寄存器  字符串操作指令中, ES:EDI指向目标串</li>\n</ul>\n</li>\n<li><p>指针寄存器</p>\n<ul>\n<li>SP:堆栈指针寄存器 专门用作堆栈指针 被形象地称为栈顶指针  </li>\n<li>BP:基址指针寄存器 经常被用作高级语言函数调用的”框架指针|栈帧指针”(frame pointer)  <ul>\n<li>在EBP上方分别是原来的EBP 返回地址 参数  </li>\n<li>EBP下方是(函数)的临时变量  </li>\n</ul>\n</li>\n<li>IP: 指令指针 Instruction Pointer 存放下次将要执行的指令在代码段的偏移量 (不考虑预读队列)  <ul>\n<li>概念上是PC 程序计数器  X86体系下叫IP </li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"PLT基本定义和流程说明\"><a href=\"#PLT基本定义和流程说明\" class=\"headerlink\" title=\"PLT基本定义和流程说明\"></a>PLT基本定义和流程说明</h3><ol>\n<li>为本地的函数生成对应的 函数符号.plt 命名的过程  </li>\n<li>为本地的符号生成带偏移信息的符号表  </li>\n<li>每个映像文件都生成一个GOT表, 第一项保存基址位置, 第二项保存link_map, link_map通过前后指针把所有映像文件(库)和符号表串联起来   </li>\n<li>运行时对位置无关的函数和全局变量的访问通过GOT表访问   </li>\n<li>GOT表会在模块加载时候填充好变量的真正地址以及plt过程的惰性获取代码入口    <ol>\n<li>PLT过程 类似函数钩子 <ol>\n<li>本模块对位置无关的函数访问先call 函数@.plt过程  </li>\n<li>该过程会先直接跳转到GOT中对应位置保存的地址处  <ol>\n<li>如果未获取实际位置, 则跳转到到该过程的下一行代码   </li>\n<li>压入当前函数符号在GOT中的编号并jmp到符号解析函数_dl_runtime_resolve_xsave进行解析  </li>\n<li>通过link_map进行遍历查找 _dl_fixup </li>\n<li>填充GOT表</li>\n<li>(这里实际会call到真实函数并返回到call 函数@.plt的位置)  </li>\n</ol>\n</li>\n<li>进入实际函数执行并返回到 call 函数@.plt的位置</li>\n</ol>\n</li>\n</ol>\n</li>\n</ol>\n<h3 id=\"GOT数据部分\"><a href=\"#GOT数据部分\" class=\"headerlink\" title=\"GOT数据部分\"></a>GOT数据部分</h3><p>不需要PLT的额外部分   </p>\n<h6 id=\"缺点\"><a href=\"#缺点\" class=\"headerlink\" title=\"缺点\"></a>缺点</h6><p>为了性能需要一个寄存器存储GOT表的位置???<br>运行时要经过计算来获得<br>符号的地址, 从某种方面来说也对运行速度有点小影响.  </p>\n<h6 id=\"优点\"><a href=\"#优点\" class=\"headerlink\" title=\"优点\"></a>优点</h6><p>位置无关代码的优点就跟他名字一样, 可以保证加载到任意地址都能<br>正常执行, 这也是每个动态链接库都需要支持的.</p>\n<h3 id=\"测试代码\"><a href=\"#测试代码\" class=\"headerlink\" title=\"测试代码\"></a>测试代码</h3><h3 id=\"elf文件和指令分析\"><a href=\"#elf文件和指令分析\" class=\"headerlink\" title=\"elf文件和指令分析\"></a>elf文件和指令分析</h3><p>[rip+0x2006e4]        # 0x555555754fd8  0x00007ffff7dd7048<br>[rip+0x2006d0]        # 0x555555754fd0  0x00007ffff7dd7030</p>\n<p>[rip+0x20074f]        # 0x7ffff7dd6fc8  0x00007ffff7dd7050<br>[rip+0x20073b]        # 0x7ffff7dd6fc0  0x00007ffff7dd7038</p>\n<p>[rip+0x20073e]        # 0x7ffff7dd6fd8  0x00007ffff7dd7030<br>[rip+0x20073a]        # 0x7ffff7dd6fe0  0x00007ffff7dd7048</p>"},{"title":"位置无关代码生成(重定位)选项和说明 GCC","date":"2019-11-27T16:00:00.000Z","author":"yawei.zhang","_content":"\n### 目录  \n- [目录](#目录)\n- [选项说明](#选项说明)\n\n\n### 选项说明      \n\n\n* -rdynamic  \n  * 该选项指示链接器添加所有的符号到动态符号表, 不仅仅是用到的部分  \n  * 在INTEL X64 linux gcc-6 未测试出该选项有否的异同 (也可认为是默认存在)   \n    * 无论是否用过都会添加  \n\n* -fpic    (position-independent code)  编译选项和链接选项  \n  * 用于生成PIC 位置无关代码 的共享库, 在链接到EXE时如果GOT表超过某些特定机器指定的最大值时会返回错误, 这时需要使用-fPIC进行重新编译和链接   \n* -fPIC 编译选项和链接选项  \n  * 和-fpic一样, 但是回避掉了GOT大小的限制问题  \n  * 在编译和链接时都需要指定    \n\n\n* -fPIE  编译选项 \n  * 编译位置无关代码, 和PIC相同, 但是PIE假定了编译出的目标文件用于链接成可执行文件  \n  * 主要是访问外部符号时是否使用PLT/GOT  \n  * 实际可用-fPIC代替(不假定目标文件的最终链接目的)   \n  * -fpie 和-fpic一样  \n\n* -pie  链接器选项\n  * 用于生成 位置无关可执行文件 的可执行文件  \n  * 生成的可执行文件的ELF类型不是EXEC而是和共享库一样DYN\n  * 需要-fPIE配合使用 否则会出现访问外部符号时候无法正确找到的错误  \n    * 这个问题等同用PIC链接非PIC编译的库\n\n* 其他备注  \n\n  * -no-pie  新版本g++比如6版本 默认启用pie 如不需要则要显式去除  \n    * 部分编译器支持  \n\n  * -fno-plt  \n    * 部分编译器支持  \n\n  * -fno-jump-tables\n    * 部分编译器支持  \n  \n  * 动态库查找路径\n    * 链接时如果要使用-l 则需要先-L指定目录  \n    * 运行时如果不在系统指定目录的库需要设置LD_LIBRARY_PATH或者配置文件\n      * 例如 简单设置export LD_LIBRARY_PATH=\"./\" 路径    \n  \n  * --static 组织在链接时使用动态库\n\n  * --shared 生成动态库\n\n  * --static-libgcc 链接静态libgcc库\n\n  * --shared-libgcc 链接动态libgcc库\n\n  * -static和-shared可以同时存在 这样会创建共享库 但该共享库引用的其他库会静态地链接到该共享库中  \n    * -Wl,--whole-archive 告诉链接器对其后面出现的静态库包含的函数和变量打包到动态库  \n    * -Wl,--no-whole-archive 关掉特性  \n      * 举例  -Wl,--whole-archive -la -lb -lc -Wl,--no-whole-archive\n\n  * dlopen动态load共享库\n","source":"_posts/2019-11-28-pie-pic-linker-option.md","raw":"---\ntitle: 位置无关代码生成(重定位)选项和说明 GCC     \ndate: 2019-11-28\ncategories: develop \nauthor: yawei.zhang \n---\n\n### 目录  \n- [目录](#目录)\n- [选项说明](#选项说明)\n\n\n### 选项说明      \n\n\n* -rdynamic  \n  * 该选项指示链接器添加所有的符号到动态符号表, 不仅仅是用到的部分  \n  * 在INTEL X64 linux gcc-6 未测试出该选项有否的异同 (也可认为是默认存在)   \n    * 无论是否用过都会添加  \n\n* -fpic    (position-independent code)  编译选项和链接选项  \n  * 用于生成PIC 位置无关代码 的共享库, 在链接到EXE时如果GOT表超过某些特定机器指定的最大值时会返回错误, 这时需要使用-fPIC进行重新编译和链接   \n* -fPIC 编译选项和链接选项  \n  * 和-fpic一样, 但是回避掉了GOT大小的限制问题  \n  * 在编译和链接时都需要指定    \n\n\n* -fPIE  编译选项 \n  * 编译位置无关代码, 和PIC相同, 但是PIE假定了编译出的目标文件用于链接成可执行文件  \n  * 主要是访问外部符号时是否使用PLT/GOT  \n  * 实际可用-fPIC代替(不假定目标文件的最终链接目的)   \n  * -fpie 和-fpic一样  \n\n* -pie  链接器选项\n  * 用于生成 位置无关可执行文件 的可执行文件  \n  * 生成的可执行文件的ELF类型不是EXEC而是和共享库一样DYN\n  * 需要-fPIE配合使用 否则会出现访问外部符号时候无法正确找到的错误  \n    * 这个问题等同用PIC链接非PIC编译的库\n\n* 其他备注  \n\n  * -no-pie  新版本g++比如6版本 默认启用pie 如不需要则要显式去除  \n    * 部分编译器支持  \n\n  * -fno-plt  \n    * 部分编译器支持  \n\n  * -fno-jump-tables\n    * 部分编译器支持  \n  \n  * 动态库查找路径\n    * 链接时如果要使用-l 则需要先-L指定目录  \n    * 运行时如果不在系统指定目录的库需要设置LD_LIBRARY_PATH或者配置文件\n      * 例如 简单设置export LD_LIBRARY_PATH=\"./\" 路径    \n  \n  * --static 组织在链接时使用动态库\n\n  * --shared 生成动态库\n\n  * --static-libgcc 链接静态libgcc库\n\n  * --shared-libgcc 链接动态libgcc库\n\n  * -static和-shared可以同时存在 这样会创建共享库 但该共享库引用的其他库会静态地链接到该共享库中  \n    * -Wl,--whole-archive 告诉链接器对其后面出现的静态库包含的函数和变量打包到动态库  \n    * -Wl,--no-whole-archive 关掉特性  \n      * 举例  -Wl,--whole-archive -la -lb -lc -Wl,--no-whole-archive\n\n  * dlopen动态load共享库\n","slug":"2019-11-28-pie-pic-linker-option","published":1,"updated":"2019-12-02T14:16:48.940Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck44ekz22000lr45hefhw1ih2","content":"<h3><span id=\"目录\">目录</span></h3><ul>\n<li><a href=\"#目录\">目录</a></li>\n<li><a href=\"#选项说明\">选项说明</a></li>\n</ul>\n<h3><span id=\"选项说明\">选项说明</span></h3><ul>\n<li><p>-rdynamic  </p>\n<ul>\n<li>该选项指示链接器添加所有的符号到动态符号表, 不仅仅是用到的部分  </li>\n<li>在INTEL X64 linux gcc-6 未测试出该选项有否的异同 (也可认为是默认存在)   <ul>\n<li>无论是否用过都会添加  </li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>-fpic    (position-independent code)  编译选项和链接选项  </p>\n<ul>\n<li>用于生成PIC 位置无关代码 的共享库, 在链接到EXE时如果GOT表超过某些特定机器指定的最大值时会返回错误, 这时需要使用-fPIC进行重新编译和链接   </li>\n</ul>\n</li>\n<li><p>-fPIC 编译选项和链接选项  </p>\n<ul>\n<li>和-fpic一样, 但是回避掉了GOT大小的限制问题  </li>\n<li>在编译和链接时都需要指定    </li>\n</ul>\n</li>\n</ul>\n<ul>\n<li><p>-fPIE  编译选项 </p>\n<ul>\n<li>编译位置无关代码, 和PIC相同, 但是PIE假定了编译出的目标文件用于链接成可执行文件  </li>\n<li>主要是访问外部符号时是否使用PLT/GOT  </li>\n<li>实际可用-fPIC代替(不假定目标文件的最终链接目的)   </li>\n<li>-fpie 和-fpic一样  </li>\n</ul>\n</li>\n<li><p>-pie  链接器选项</p>\n<ul>\n<li>用于生成 位置无关可执行文件 的可执行文件  </li>\n<li>生成的可执行文件的ELF类型不是EXEC而是和共享库一样DYN</li>\n<li>需要-fPIE配合使用 否则会出现访问外部符号时候无法正确找到的错误  <ul>\n<li>这个问题等同用PIC链接非PIC编译的库</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>其他备注  </p>\n<ul>\n<li><p>-no-pie  新版本g++比如6版本 默认启用pie 如不需要则要显式去除  </p>\n<ul>\n<li>部分编译器支持  </li>\n</ul>\n</li>\n<li><p>-fno-plt  </p>\n<ul>\n<li>部分编译器支持  </li>\n</ul>\n</li>\n<li><p>-fno-jump-tables</p>\n<ul>\n<li>部分编译器支持  </li>\n</ul>\n</li>\n<li><p>动态库查找路径</p>\n<ul>\n<li>链接时如果要使用-l 则需要先-L指定目录  </li>\n<li>运行时如果不在系统指定目录的库需要设置LD_LIBRARY_PATH或者配置文件<ul>\n<li>例如 简单设置export LD_LIBRARY_PATH=”./“ 路径    </li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>–static 组织在链接时使用动态库</p>\n</li>\n<li><p>–shared 生成动态库</p>\n</li>\n<li><p>–static-libgcc 链接静态libgcc库</p>\n</li>\n<li><p>–shared-libgcc 链接动态libgcc库</p>\n</li>\n<li><p>-static和-shared可以同时存在 这样会创建共享库 但该共享库引用的其他库会静态地链接到该共享库中  </p>\n<ul>\n<li>-Wl,–whole-archive 告诉链接器对其后面出现的静态库包含的函数和变量打包到动态库  </li>\n<li>-Wl,–no-whole-archive 关掉特性  <ul>\n<li>举例  -Wl,–whole-archive -la -lb -lc -Wl,–no-whole-archive</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>dlopen动态load共享库</p>\n</li>\n</ul>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"目录\"><a href=\"#目录\" class=\"headerlink\" title=\"目录\"></a>目录</h3><ul>\n<li><a href=\"#目录\">目录</a></li>\n<li><a href=\"#选项说明\">选项说明</a></li>\n</ul>\n<h3 id=\"选项说明\"><a href=\"#选项说明\" class=\"headerlink\" title=\"选项说明\"></a>选项说明</h3><ul>\n<li><p>-rdynamic  </p>\n<ul>\n<li>该选项指示链接器添加所有的符号到动态符号表, 不仅仅是用到的部分  </li>\n<li>在INTEL X64 linux gcc-6 未测试出该选项有否的异同 (也可认为是默认存在)   <ul>\n<li>无论是否用过都会添加  </li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>-fpic    (position-independent code)  编译选项和链接选项  </p>\n<ul>\n<li>用于生成PIC 位置无关代码 的共享库, 在链接到EXE时如果GOT表超过某些特定机器指定的最大值时会返回错误, 这时需要使用-fPIC进行重新编译和链接   </li>\n</ul>\n</li>\n<li><p>-fPIC 编译选项和链接选项  </p>\n<ul>\n<li>和-fpic一样, 但是回避掉了GOT大小的限制问题  </li>\n<li>在编译和链接时都需要指定    </li>\n</ul>\n</li>\n</ul>\n<ul>\n<li><p>-fPIE  编译选项 </p>\n<ul>\n<li>编译位置无关代码, 和PIC相同, 但是PIE假定了编译出的目标文件用于链接成可执行文件  </li>\n<li>主要是访问外部符号时是否使用PLT/GOT  </li>\n<li>实际可用-fPIC代替(不假定目标文件的最终链接目的)   </li>\n<li>-fpie 和-fpic一样  </li>\n</ul>\n</li>\n<li><p>-pie  链接器选项</p>\n<ul>\n<li>用于生成 位置无关可执行文件 的可执行文件  </li>\n<li>生成的可执行文件的ELF类型不是EXEC而是和共享库一样DYN</li>\n<li>需要-fPIE配合使用 否则会出现访问外部符号时候无法正确找到的错误  <ul>\n<li>这个问题等同用PIC链接非PIC编译的库</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>其他备注  </p>\n<ul>\n<li><p>-no-pie  新版本g++比如6版本 默认启用pie 如不需要则要显式去除  </p>\n<ul>\n<li>部分编译器支持  </li>\n</ul>\n</li>\n<li><p>-fno-plt  </p>\n<ul>\n<li>部分编译器支持  </li>\n</ul>\n</li>\n<li><p>-fno-jump-tables</p>\n<ul>\n<li>部分编译器支持  </li>\n</ul>\n</li>\n<li><p>动态库查找路径</p>\n<ul>\n<li>链接时如果要使用-l 则需要先-L指定目录  </li>\n<li>运行时如果不在系统指定目录的库需要设置LD_LIBRARY_PATH或者配置文件<ul>\n<li>例如 简单设置export LD_LIBRARY_PATH=”./“ 路径    </li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>–static 组织在链接时使用动态库</p>\n</li>\n<li><p>–shared 生成动态库</p>\n</li>\n<li><p>–static-libgcc 链接静态libgcc库</p>\n</li>\n<li><p>–shared-libgcc 链接动态libgcc库</p>\n</li>\n<li><p>-static和-shared可以同时存在 这样会创建共享库 但该共享库引用的其他库会静态地链接到该共享库中  </p>\n<ul>\n<li>-Wl,–whole-archive 告诉链接器对其后面出现的静态库包含的函数和变量打包到动态库  </li>\n<li>-Wl,–no-whole-archive 关掉特性  <ul>\n<li>举例  -Wl,–whole-archive -la -lb -lc -Wl,–no-whole-archive</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>dlopen动态load共享库</p>\n</li>\n</ul>\n</li>\n</ul>\n"},{"title":"AS-A 和 HAS-A 概念","date":"2019-11-28T16:00:00.000Z","author":"yawei.zhang","_content":"\n### 目录  \n\n---  \n\n<!-- TOC -->\n\n- [目录](#目录)\n- [词的关系概括](#词的关系概括)\n    - [polysemy 词汇蕴含规则](#polysemy-词汇蕴含规则)\n        - [linear polysemy 线性多义](#linear-polysemy-线性多义)\n        - [non-linear polysemy 非线性多义](#non-linear-polysemy-非线性多义)\n        - [一词多义](#一词多义)\n    - [hyperonym–hyponym 上下义关系](#hyperonymhyponym-上下义关系)\n    - [autonymy 反义关系](#autonymy-反义关系)\n    - [synonymy 同义关系](#synonymy-同义关系)\n- [语义聚合关系](#语义聚合关系)\n    - [上下义词](#上下义词)\n    - [总分词](#总分词)\n    - [类义词(狭义)](#类义词狭义)\n- [面向对象中的关系](#面向对象中的关系)\n    - [类型和实例关系](#类型和实例关系)\n    - [hyperonym–hyponym (supertype–subtype) 上下义关系, 超类子类关系  IS-A 关系 继承/泛化关系](#hyperonymhyponym-supertypesubtype-上下义关系-超类子类关系--is-a-关系-继承泛化关系)\n    - [holonym–meronym  整体部分关系 HAS-A 关系](#holonymmeronym--整体部分关系-has-a-关系)\n- [集合关系](#集合关系)\n\n<!-- /TOC -->\n### 词的关系概括  \n#### polysemy 词汇蕴含规则     \n##### linear polysemy 线性多义\n* autohyponymy, where the basic sense leads to a specialised sense  基本意义->特殊意义  \n* automeronymy, where the basic sense leads to a subpart sense 基本意义->部分意义  整体->局部  \n* autohyperonymy or autosuperordination, where the basic sense leads to a wider sense   基本意义->宽泛意义  下位->上位意义  \n* autoholonymy, where the basic sense leads to a larger sense  基本意义->更多意义 \n##### non-linear polysemy 非线性多义  \n* metonymy  转喻 借喻    \n* metaphor 隐喻  \n##### 一词多义    \n* 原始意义与衍生意义(派生)   \n* 普通意义与特殊意义  \n* 抽象意义与具体意义  \n* 字面意义与比喻意义  \n#### hyperonym–hyponym 上下义关系  \n#### autonymy 反义关系  \n#### synonymy 同义关系 \n\n\n### 语义聚合关系\n#### 上下义词  \n上下义关系代表了概念上的蕴含关系, 或者说在类型层级上, 下位类一定带有上位类的所有属性.  可以用 IS A 来表达.  \n\n例如 上义词 水果  下义词 香蕉.  香蕉 IS A 水果  但是不能反过来说 水果 IS A  香蕉   \n\n上下义关系也可以进入 'A包含B'的格式,  比如说香蕉包含水果的属性  \n\n#### 总分词 \n整体部分关系   用HAS A来表达  \n\n例如 门  和  门套/门板    可以进入'A包含B'的格式 但是不能用  'B是A'的格式   \n\n#### 类义词(狭义) \n多元关系中的同级词语  例如门下的 门套和门板的关系  \n\n\n\n\n### 面向对象中的关系   \n#### 类型和实例关系   \n* Type–token distinction  例如一个语句中  rose is a rose 中有三个type 4个token   \n  * type == classes  \n  * object == instances ==token  \n* type of    \n  * (实例)的类型     \n* instance of   \n  * (类型) 的实例  \n\n#### hyperonym–hyponym (supertype–subtype) 上下义关系, 超类子类关系  IS-A 关系 继承/泛化关系     \n* 子类包含所有超类的属性/方法 可以用 \"子类 IS A 父类\" 来进行判定和使用   \n* 所有可以对超类适用的规范同样也可以适用于其子类   \n  * 李氏替换原则\n    * Functions that use pointers or references to base classes must be able to use objects of derived classes without knowing it.  \n    * 使用基类对象指针或引用的函数必须能够在不了解衍生类的条件下使用衍生类的对象   \n    * 李氏替换原则中 避免重写父类的非抽象方法, 而多态的实现是通过重写抽象方法实现.   \n    * 面向对象中的抽象方法是定义方法的声明规范而不约束其实现因此扔可 概括为上句 \" 所有可以对超类适用的规范同样也可以适用于其子类\"   \n\n#### holonym–meronym  整体部分关系 HAS-A 关系  \n\n*  aggregation 聚合关系  不存在所属权  HAS-A 关系  \n   *  部分可以脱离/超出整体的生命周期独立存在 比如家庭成员和家庭  玩家和工会  \n  \n*  composition 组成关系  存在所属权  PART-OF| HAS-A 关系 \n   * 部分不可以脱离整体的生命周期管理 比如四肢和人体  \n   * 对于编程来讲, 我们实例化玩家对象, 实例化背包对象, 玩家下线需要连带清理背包对象.   \n  \n*  containment 包含关系   member-of | contains-a | part-of|HAS-A 关系  \n   *  对成员的访问必须经过整体  成员为内涵状态  \n   *  对于C++来说 privete:下的数据成员必须使用该类的接口访问  \n   *  例如玩家对象和玩家的等级属性  \n\n\n\n\n### 集合关系\n从更抽象的角度来说\nIS-A的关系判定为  A 是不是 B的特化 (specialization)\n从集合关系来讲则为 A ⊃ B   A是不是B的真超集   \n\n\nHAS-A的关系判定为 B 是不是 A的组成部分\n从集合关系来讲则为 B ⊂ A         B 是不是A的的真子集   \n\n\nALIAS-A (没有这个术语) 的关系则是 A = B 即 别名.   \n\n\n从集合角度来讲, 如果B是A的特化, 那么A同时也是B的构成,  即:\n* B ⊃ A(IS-A) 可以推导出 A ⊂ B (HAS-A)  \n* 但是IS-A限定了 A ⊂ B(HAS-A) 不可以推导出B ⊃ A (IS-A)     (IS-A限定特化后具有相同的拓扑结构)\n\n因此\n\n这IS-A这种关系 是 HAS-A 的特化.  即  IS-A  ⊃ HAS-A \n\n换成具体到OO语言里,  继承是一种特殊的聚合方式.\n聚合更具有一般化的性质 更松散  \n\n因此 IS-A  is a  HAS-A  通过IS-A到HAS-A的转化可获得更好的一般性(泛化)  泛化转关联本身也是一种泛化\n\n","source":"_posts/2019-12-06-is-a-and-has-a.md","raw":"---\ntitle: AS-A 和 HAS-A 概念  \ndate: 2019-11-29\ncategories: develop \nauthor: yawei.zhang \n---\n\n### 目录  \n\n---  \n\n<!-- TOC -->\n\n- [目录](#目录)\n- [词的关系概括](#词的关系概括)\n    - [polysemy 词汇蕴含规则](#polysemy-词汇蕴含规则)\n        - [linear polysemy 线性多义](#linear-polysemy-线性多义)\n        - [non-linear polysemy 非线性多义](#non-linear-polysemy-非线性多义)\n        - [一词多义](#一词多义)\n    - [hyperonym–hyponym 上下义关系](#hyperonymhyponym-上下义关系)\n    - [autonymy 反义关系](#autonymy-反义关系)\n    - [synonymy 同义关系](#synonymy-同义关系)\n- [语义聚合关系](#语义聚合关系)\n    - [上下义词](#上下义词)\n    - [总分词](#总分词)\n    - [类义词(狭义)](#类义词狭义)\n- [面向对象中的关系](#面向对象中的关系)\n    - [类型和实例关系](#类型和实例关系)\n    - [hyperonym–hyponym (supertype–subtype) 上下义关系, 超类子类关系  IS-A 关系 继承/泛化关系](#hyperonymhyponym-supertypesubtype-上下义关系-超类子类关系--is-a-关系-继承泛化关系)\n    - [holonym–meronym  整体部分关系 HAS-A 关系](#holonymmeronym--整体部分关系-has-a-关系)\n- [集合关系](#集合关系)\n\n<!-- /TOC -->\n### 词的关系概括  \n#### polysemy 词汇蕴含规则     \n##### linear polysemy 线性多义\n* autohyponymy, where the basic sense leads to a specialised sense  基本意义->特殊意义  \n* automeronymy, where the basic sense leads to a subpart sense 基本意义->部分意义  整体->局部  \n* autohyperonymy or autosuperordination, where the basic sense leads to a wider sense   基本意义->宽泛意义  下位->上位意义  \n* autoholonymy, where the basic sense leads to a larger sense  基本意义->更多意义 \n##### non-linear polysemy 非线性多义  \n* metonymy  转喻 借喻    \n* metaphor 隐喻  \n##### 一词多义    \n* 原始意义与衍生意义(派生)   \n* 普通意义与特殊意义  \n* 抽象意义与具体意义  \n* 字面意义与比喻意义  \n#### hyperonym–hyponym 上下义关系  \n#### autonymy 反义关系  \n#### synonymy 同义关系 \n\n\n### 语义聚合关系\n#### 上下义词  \n上下义关系代表了概念上的蕴含关系, 或者说在类型层级上, 下位类一定带有上位类的所有属性.  可以用 IS A 来表达.  \n\n例如 上义词 水果  下义词 香蕉.  香蕉 IS A 水果  但是不能反过来说 水果 IS A  香蕉   \n\n上下义关系也可以进入 'A包含B'的格式,  比如说香蕉包含水果的属性  \n\n#### 总分词 \n整体部分关系   用HAS A来表达  \n\n例如 门  和  门套/门板    可以进入'A包含B'的格式 但是不能用  'B是A'的格式   \n\n#### 类义词(狭义) \n多元关系中的同级词语  例如门下的 门套和门板的关系  \n\n\n\n\n### 面向对象中的关系   \n#### 类型和实例关系   \n* Type–token distinction  例如一个语句中  rose is a rose 中有三个type 4个token   \n  * type == classes  \n  * object == instances ==token  \n* type of    \n  * (实例)的类型     \n* instance of   \n  * (类型) 的实例  \n\n#### hyperonym–hyponym (supertype–subtype) 上下义关系, 超类子类关系  IS-A 关系 继承/泛化关系     \n* 子类包含所有超类的属性/方法 可以用 \"子类 IS A 父类\" 来进行判定和使用   \n* 所有可以对超类适用的规范同样也可以适用于其子类   \n  * 李氏替换原则\n    * Functions that use pointers or references to base classes must be able to use objects of derived classes without knowing it.  \n    * 使用基类对象指针或引用的函数必须能够在不了解衍生类的条件下使用衍生类的对象   \n    * 李氏替换原则中 避免重写父类的非抽象方法, 而多态的实现是通过重写抽象方法实现.   \n    * 面向对象中的抽象方法是定义方法的声明规范而不约束其实现因此扔可 概括为上句 \" 所有可以对超类适用的规范同样也可以适用于其子类\"   \n\n#### holonym–meronym  整体部分关系 HAS-A 关系  \n\n*  aggregation 聚合关系  不存在所属权  HAS-A 关系  \n   *  部分可以脱离/超出整体的生命周期独立存在 比如家庭成员和家庭  玩家和工会  \n  \n*  composition 组成关系  存在所属权  PART-OF| HAS-A 关系 \n   * 部分不可以脱离整体的生命周期管理 比如四肢和人体  \n   * 对于编程来讲, 我们实例化玩家对象, 实例化背包对象, 玩家下线需要连带清理背包对象.   \n  \n*  containment 包含关系   member-of | contains-a | part-of|HAS-A 关系  \n   *  对成员的访问必须经过整体  成员为内涵状态  \n   *  对于C++来说 privete:下的数据成员必须使用该类的接口访问  \n   *  例如玩家对象和玩家的等级属性  \n\n\n\n\n### 集合关系\n从更抽象的角度来说\nIS-A的关系判定为  A 是不是 B的特化 (specialization)\n从集合关系来讲则为 A ⊃ B   A是不是B的真超集   \n\n\nHAS-A的关系判定为 B 是不是 A的组成部分\n从集合关系来讲则为 B ⊂ A         B 是不是A的的真子集   \n\n\nALIAS-A (没有这个术语) 的关系则是 A = B 即 别名.   \n\n\n从集合角度来讲, 如果B是A的特化, 那么A同时也是B的构成,  即:\n* B ⊃ A(IS-A) 可以推导出 A ⊂ B (HAS-A)  \n* 但是IS-A限定了 A ⊂ B(HAS-A) 不可以推导出B ⊃ A (IS-A)     (IS-A限定特化后具有相同的拓扑结构)\n\n因此\n\n这IS-A这种关系 是 HAS-A 的特化.  即  IS-A  ⊃ HAS-A \n\n换成具体到OO语言里,  继承是一种特殊的聚合方式.\n聚合更具有一般化的性质 更松散  \n\n因此 IS-A  is a  HAS-A  通过IS-A到HAS-A的转化可获得更好的一般性(泛化)  泛化转关联本身也是一种泛化\n\n","slug":"2019-12-06-is-a-and-has-a","published":1,"updated":"2019-12-10T07:09:03.899Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck44ekz25000nr45h9qhihkms","content":"<h3><span id=\"目录\">目录</span></h3><hr>\n<!-- TOC -->\n\n<ul>\n<li><a href=\"#目录\">目录</a></li>\n<li><a href=\"#词的关系概括\">词的关系概括</a><ul>\n<li><a href=\"#polysemy-词汇蕴含规则\">polysemy 词汇蕴含规则</a><ul>\n<li><a href=\"#linear-polysemy-线性多义\">linear polysemy 线性多义</a></li>\n<li><a href=\"#non-linear-polysemy-非线性多义\">non-linear polysemy 非线性多义</a></li>\n<li><a href=\"#一词多义\">一词多义</a></li>\n</ul>\n</li>\n<li><a href=\"#hyperonymhyponym-上下义关系\">hyperonym–hyponym 上下义关系</a></li>\n<li><a href=\"#autonymy-反义关系\">autonymy 反义关系</a></li>\n<li><a href=\"#synonymy-同义关系\">synonymy 同义关系</a></li>\n</ul>\n</li>\n<li><a href=\"#语义聚合关系\">语义聚合关系</a><ul>\n<li><a href=\"#上下义词\">上下义词</a></li>\n<li><a href=\"#总分词\">总分词</a></li>\n<li><a href=\"#类义词狭义\">类义词(狭义)</a></li>\n</ul>\n</li>\n<li><a href=\"#面向对象中的关系\">面向对象中的关系</a><ul>\n<li><a href=\"#类型和实例关系\">类型和实例关系</a></li>\n<li><a href=\"#hyperonymhyponym-supertypesubtype-上下义关系-超类子类关系--is-a-关系-继承泛化关系\">hyperonym–hyponym (supertype–subtype) 上下义关系, 超类子类关系  IS-A 关系 继承/泛化关系</a></li>\n<li><a href=\"#holonymmeronym--整体部分关系-has-a-关系\">holonym–meronym  整体部分关系 HAS-A 关系</a></li>\n</ul>\n</li>\n<li><a href=\"#集合关系\">集合关系</a></li>\n</ul>\n<!-- /TOC -->\n<h3><span id=\"词的关系概括\">词的关系概括</span></h3><h4><span id=\"polysemy-词汇蕴含规则\">polysemy 词汇蕴含规则</span></h4><h5><span id=\"linear-polysemy-线性多义\">linear polysemy 线性多义</span></h5><ul>\n<li>autohyponymy, where the basic sense leads to a specialised sense  基本意义-&gt;特殊意义  </li>\n<li>automeronymy, where the basic sense leads to a subpart sense 基本意义-&gt;部分意义  整体-&gt;局部  </li>\n<li>autohyperonymy or autosuperordination, where the basic sense leads to a wider sense   基本意义-&gt;宽泛意义  下位-&gt;上位意义  </li>\n<li>autoholonymy, where the basic sense leads to a larger sense  基本意义-&gt;更多意义 <h5><span id=\"non-linear-polysemy-非线性多义\">non-linear polysemy 非线性多义</span></h5></li>\n<li>metonymy  转喻 借喻    </li>\n<li>metaphor 隐喻  <h5><span id=\"一词多义\">一词多义</span></h5></li>\n<li>原始意义与衍生意义(派生)   </li>\n<li>普通意义与特殊意义  </li>\n<li>抽象意义与具体意义  </li>\n<li>字面意义与比喻意义  <h4><span id=\"hyperonymhyponym-上下义关系\">hyperonym–hyponym 上下义关系</span></h4><h4><span id=\"autonymy-反义关系\">autonymy 反义关系</span></h4><h4><span id=\"synonymy-同义关系\">synonymy 同义关系</span></h4></li>\n</ul>\n<h3><span id=\"语义聚合关系\">语义聚合关系</span></h3><h4><span id=\"上下义词\">上下义词</span></h4><p>上下义关系代表了概念上的蕴含关系, 或者说在类型层级上, 下位类一定带有上位类的所有属性.  可以用 IS A 来表达.  </p>\n<p>例如 上义词 水果  下义词 香蕉.  香蕉 IS A 水果  但是不能反过来说 水果 IS A  香蕉   </p>\n<p>上下义关系也可以进入 ‘A包含B’的格式,  比如说香蕉包含水果的属性  </p>\n<h4><span id=\"总分词\">总分词</span></h4><p>整体部分关系   用HAS A来表达  </p>\n<p>例如 门  和  门套/门板    可以进入’A包含B’的格式 但是不能用  ‘B是A’的格式   </p>\n<h4><span id=\"类义词狭义\">类义词(狭义)</span></h4><p>多元关系中的同级词语  例如门下的 门套和门板的关系  </p>\n<h3><span id=\"面向对象中的关系\">面向对象中的关系</span></h3><h4><span id=\"类型和实例关系\">类型和实例关系</span></h4><ul>\n<li>Type–token distinction  例如一个语句中  rose is a rose 中有三个type 4个token   <ul>\n<li>type == classes  </li>\n<li>object == instances ==token  </li>\n</ul>\n</li>\n<li>type of    <ul>\n<li>(实例)的类型     </li>\n</ul>\n</li>\n<li>instance of   <ul>\n<li>(类型) 的实例  </li>\n</ul>\n</li>\n</ul>\n<h4><span id=\"hyperonymhyponym-supertypesubtype-上下义关系-超类子类关系-is-a-关系-继承泛化关系\">hyperonym–hyponym (supertype–subtype) 上下义关系, 超类子类关系  IS-A 关系 继承/泛化关系</span></h4><ul>\n<li>子类包含所有超类的属性/方法 可以用 “子类 IS A 父类” 来进行判定和使用   </li>\n<li>所有可以对超类适用的规范同样也可以适用于其子类   <ul>\n<li>李氏替换原则<ul>\n<li>Functions that use pointers or references to base classes must be able to use objects of derived classes without knowing it.  </li>\n<li>使用基类对象指针或引用的函数必须能够在不了解衍生类的条件下使用衍生类的对象   </li>\n<li>李氏替换原则中 避免重写父类的非抽象方法, 而多态的实现是通过重写抽象方法实现.   </li>\n<li>面向对象中的抽象方法是定义方法的声明规范而不约束其实现因此扔可 概括为上句 “ 所有可以对超类适用的规范同样也可以适用于其子类”   </li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h4><span id=\"holonymmeronym-整体部分关系-has-a-关系\">holonym–meronym  整体部分关系 HAS-A 关系</span></h4><ul>\n<li><p>aggregation 聚合关系  不存在所属权  HAS-A 关系  </p>\n<ul>\n<li>部分可以脱离/超出整体的生命周期独立存在 比如家庭成员和家庭  玩家和工会  </li>\n</ul>\n</li>\n<li><p>composition 组成关系  存在所属权  PART-OF| HAS-A 关系 </p>\n<ul>\n<li>部分不可以脱离整体的生命周期管理 比如四肢和人体  </li>\n<li>对于编程来讲, 我们实例化玩家对象, 实例化背包对象, 玩家下线需要连带清理背包对象.   </li>\n</ul>\n</li>\n<li><p>containment 包含关系   member-of | contains-a | part-of|HAS-A 关系  </p>\n<ul>\n<li>对成员的访问必须经过整体  成员为内涵状态  </li>\n<li>对于C++来说 privete:下的数据成员必须使用该类的接口访问  </li>\n<li>例如玩家对象和玩家的等级属性  </li>\n</ul>\n</li>\n</ul>\n<h3><span id=\"集合关系\">集合关系</span></h3><p>从更抽象的角度来说<br>IS-A的关系判定为  A 是不是 B的特化 (specialization)<br>从集合关系来讲则为 A ⊃ B   A是不是B的真超集   </p>\n<p>HAS-A的关系判定为 B 是不是 A的组成部分<br>从集合关系来讲则为 B ⊂ A         B 是不是A的的真子集   </p>\n<p>ALIAS-A (没有这个术语) 的关系则是 A = B 即 别名.   </p>\n<p>从集合角度来讲, 如果B是A的特化, 那么A同时也是B的构成,  即:</p>\n<ul>\n<li>B ⊃ A(IS-A) 可以推导出 A ⊂ B (HAS-A)  </li>\n<li>但是IS-A限定了 A ⊂ B(HAS-A) 不可以推导出B ⊃ A (IS-A)     (IS-A限定特化后具有相同的拓扑结构)</li>\n</ul>\n<p>因此</p>\n<p>这IS-A这种关系 是 HAS-A 的特化.  即  IS-A  ⊃ HAS-A </p>\n<p>换成具体到OO语言里,  继承是一种特殊的聚合方式.<br>聚合更具有一般化的性质 更松散  </p>\n<p>因此 IS-A  is a  HAS-A  通过IS-A到HAS-A的转化可获得更好的一般性(泛化)  泛化转关联本身也是一种泛化</p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"目录\"><a href=\"#目录\" class=\"headerlink\" title=\"目录\"></a>目录</h3><hr>\n<!-- TOC -->\n\n<ul>\n<li><a href=\"#目录\">目录</a></li>\n<li><a href=\"#词的关系概括\">词的关系概括</a><ul>\n<li><a href=\"#polysemy-词汇蕴含规则\">polysemy 词汇蕴含规则</a><ul>\n<li><a href=\"#linear-polysemy-线性多义\">linear polysemy 线性多义</a></li>\n<li><a href=\"#non-linear-polysemy-非线性多义\">non-linear polysemy 非线性多义</a></li>\n<li><a href=\"#一词多义\">一词多义</a></li>\n</ul>\n</li>\n<li><a href=\"#hyperonymhyponym-上下义关系\">hyperonym–hyponym 上下义关系</a></li>\n<li><a href=\"#autonymy-反义关系\">autonymy 反义关系</a></li>\n<li><a href=\"#synonymy-同义关系\">synonymy 同义关系</a></li>\n</ul>\n</li>\n<li><a href=\"#语义聚合关系\">语义聚合关系</a><ul>\n<li><a href=\"#上下义词\">上下义词</a></li>\n<li><a href=\"#总分词\">总分词</a></li>\n<li><a href=\"#类义词狭义\">类义词(狭义)</a></li>\n</ul>\n</li>\n<li><a href=\"#面向对象中的关系\">面向对象中的关系</a><ul>\n<li><a href=\"#类型和实例关系\">类型和实例关系</a></li>\n<li><a href=\"#hyperonymhyponym-supertypesubtype-上下义关系-超类子类关系--is-a-关系-继承泛化关系\">hyperonym–hyponym (supertype–subtype) 上下义关系, 超类子类关系  IS-A 关系 继承/泛化关系</a></li>\n<li><a href=\"#holonymmeronym--整体部分关系-has-a-关系\">holonym–meronym  整体部分关系 HAS-A 关系</a></li>\n</ul>\n</li>\n<li><a href=\"#集合关系\">集合关系</a></li>\n</ul>\n<!-- /TOC -->\n<h3 id=\"词的关系概括\"><a href=\"#词的关系概括\" class=\"headerlink\" title=\"词的关系概括\"></a>词的关系概括</h3><h4 id=\"polysemy-词汇蕴含规则\"><a href=\"#polysemy-词汇蕴含规则\" class=\"headerlink\" title=\"polysemy 词汇蕴含规则\"></a>polysemy 词汇蕴含规则</h4><h5 id=\"linear-polysemy-线性多义\"><a href=\"#linear-polysemy-线性多义\" class=\"headerlink\" title=\"linear polysemy 线性多义\"></a>linear polysemy 线性多义</h5><ul>\n<li>autohyponymy, where the basic sense leads to a specialised sense  基本意义-&gt;特殊意义  </li>\n<li>automeronymy, where the basic sense leads to a subpart sense 基本意义-&gt;部分意义  整体-&gt;局部  </li>\n<li>autohyperonymy or autosuperordination, where the basic sense leads to a wider sense   基本意义-&gt;宽泛意义  下位-&gt;上位意义  </li>\n<li>autoholonymy, where the basic sense leads to a larger sense  基本意义-&gt;更多意义 <h5 id=\"non-linear-polysemy-非线性多义\"><a href=\"#non-linear-polysemy-非线性多义\" class=\"headerlink\" title=\"non-linear polysemy 非线性多义\"></a>non-linear polysemy 非线性多义</h5></li>\n<li>metonymy  转喻 借喻    </li>\n<li>metaphor 隐喻  <h5 id=\"一词多义\"><a href=\"#一词多义\" class=\"headerlink\" title=\"一词多义\"></a>一词多义</h5></li>\n<li>原始意义与衍生意义(派生)   </li>\n<li>普通意义与特殊意义  </li>\n<li>抽象意义与具体意义  </li>\n<li>字面意义与比喻意义  <h4 id=\"hyperonym–hyponym-上下义关系\"><a href=\"#hyperonym–hyponym-上下义关系\" class=\"headerlink\" title=\"hyperonym–hyponym 上下义关系\"></a>hyperonym–hyponym 上下义关系</h4><h4 id=\"autonymy-反义关系\"><a href=\"#autonymy-反义关系\" class=\"headerlink\" title=\"autonymy 反义关系\"></a>autonymy 反义关系</h4><h4 id=\"synonymy-同义关系\"><a href=\"#synonymy-同义关系\" class=\"headerlink\" title=\"synonymy 同义关系\"></a>synonymy 同义关系</h4></li>\n</ul>\n<h3 id=\"语义聚合关系\"><a href=\"#语义聚合关系\" class=\"headerlink\" title=\"语义聚合关系\"></a>语义聚合关系</h3><h4 id=\"上下义词\"><a href=\"#上下义词\" class=\"headerlink\" title=\"上下义词\"></a>上下义词</h4><p>上下义关系代表了概念上的蕴含关系, 或者说在类型层级上, 下位类一定带有上位类的所有属性.  可以用 IS A 来表达.  </p>\n<p>例如 上义词 水果  下义词 香蕉.  香蕉 IS A 水果  但是不能反过来说 水果 IS A  香蕉   </p>\n<p>上下义关系也可以进入 ‘A包含B’的格式,  比如说香蕉包含水果的属性  </p>\n<h4 id=\"总分词\"><a href=\"#总分词\" class=\"headerlink\" title=\"总分词\"></a>总分词</h4><p>整体部分关系   用HAS A来表达  </p>\n<p>例如 门  和  门套/门板    可以进入’A包含B’的格式 但是不能用  ‘B是A’的格式   </p>\n<h4 id=\"类义词-狭义\"><a href=\"#类义词-狭义\" class=\"headerlink\" title=\"类义词(狭义)\"></a>类义词(狭义)</h4><p>多元关系中的同级词语  例如门下的 门套和门板的关系  </p>\n<h3 id=\"面向对象中的关系\"><a href=\"#面向对象中的关系\" class=\"headerlink\" title=\"面向对象中的关系\"></a>面向对象中的关系</h3><h4 id=\"类型和实例关系\"><a href=\"#类型和实例关系\" class=\"headerlink\" title=\"类型和实例关系\"></a>类型和实例关系</h4><ul>\n<li>Type–token distinction  例如一个语句中  rose is a rose 中有三个type 4个token   <ul>\n<li>type == classes  </li>\n<li>object == instances ==token  </li>\n</ul>\n</li>\n<li>type of    <ul>\n<li>(实例)的类型     </li>\n</ul>\n</li>\n<li>instance of   <ul>\n<li>(类型) 的实例  </li>\n</ul>\n</li>\n</ul>\n<h4 id=\"hyperonym–hyponym-supertype–subtype-上下义关系-超类子类关系-IS-A-关系-继承-泛化关系\"><a href=\"#hyperonym–hyponym-supertype–subtype-上下义关系-超类子类关系-IS-A-关系-继承-泛化关系\" class=\"headerlink\" title=\"hyperonym–hyponym (supertype–subtype) 上下义关系, 超类子类关系  IS-A 关系 继承/泛化关系\"></a>hyperonym–hyponym (supertype–subtype) 上下义关系, 超类子类关系  IS-A 关系 继承/泛化关系</h4><ul>\n<li>子类包含所有超类的属性/方法 可以用 “子类 IS A 父类” 来进行判定和使用   </li>\n<li>所有可以对超类适用的规范同样也可以适用于其子类   <ul>\n<li>李氏替换原则<ul>\n<li>Functions that use pointers or references to base classes must be able to use objects of derived classes without knowing it.  </li>\n<li>使用基类对象指针或引用的函数必须能够在不了解衍生类的条件下使用衍生类的对象   </li>\n<li>李氏替换原则中 避免重写父类的非抽象方法, 而多态的实现是通过重写抽象方法实现.   </li>\n<li>面向对象中的抽象方法是定义方法的声明规范而不约束其实现因此扔可 概括为上句 “ 所有可以对超类适用的规范同样也可以适用于其子类”   </li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"holonym–meronym-整体部分关系-HAS-A-关系\"><a href=\"#holonym–meronym-整体部分关系-HAS-A-关系\" class=\"headerlink\" title=\"holonym–meronym  整体部分关系 HAS-A 关系\"></a>holonym–meronym  整体部分关系 HAS-A 关系</h4><ul>\n<li><p>aggregation 聚合关系  不存在所属权  HAS-A 关系  </p>\n<ul>\n<li>部分可以脱离/超出整体的生命周期独立存在 比如家庭成员和家庭  玩家和工会  </li>\n</ul>\n</li>\n<li><p>composition 组成关系  存在所属权  PART-OF| HAS-A 关系 </p>\n<ul>\n<li>部分不可以脱离整体的生命周期管理 比如四肢和人体  </li>\n<li>对于编程来讲, 我们实例化玩家对象, 实例化背包对象, 玩家下线需要连带清理背包对象.   </li>\n</ul>\n</li>\n<li><p>containment 包含关系   member-of | contains-a | part-of|HAS-A 关系  </p>\n<ul>\n<li>对成员的访问必须经过整体  成员为内涵状态  </li>\n<li>对于C++来说 privete:下的数据成员必须使用该类的接口访问  </li>\n<li>例如玩家对象和玩家的等级属性  </li>\n</ul>\n</li>\n</ul>\n<h3 id=\"集合关系\"><a href=\"#集合关系\" class=\"headerlink\" title=\"集合关系\"></a>集合关系</h3><p>从更抽象的角度来说<br>IS-A的关系判定为  A 是不是 B的特化 (specialization)<br>从集合关系来讲则为 A ⊃ B   A是不是B的真超集   </p>\n<p>HAS-A的关系判定为 B 是不是 A的组成部分<br>从集合关系来讲则为 B ⊂ A         B 是不是A的的真子集   </p>\n<p>ALIAS-A (没有这个术语) 的关系则是 A = B 即 别名.   </p>\n<p>从集合角度来讲, 如果B是A的特化, 那么A同时也是B的构成,  即:</p>\n<ul>\n<li>B ⊃ A(IS-A) 可以推导出 A ⊂ B (HAS-A)  </li>\n<li>但是IS-A限定了 A ⊂ B(HAS-A) 不可以推导出B ⊃ A (IS-A)     (IS-A限定特化后具有相同的拓扑结构)</li>\n</ul>\n<p>因此</p>\n<p>这IS-A这种关系 是 HAS-A 的特化.  即  IS-A  ⊃ HAS-A </p>\n<p>换成具体到OO语言里,  继承是一种特殊的聚合方式.<br>聚合更具有一般化的性质 更松散  </p>\n<p>因此 IS-A  is a  HAS-A  通过IS-A到HAS-A的转化可获得更好的一般性(泛化)  泛化转关联本身也是一种泛化</p>\n"},{"title":"MMO属性中英文对照","date":"2018-12-22T09:21:00.000Z","author":"yawei.zhang","_content":"\n[wwowwiki属性说明](http://wowwiki.wikia.com/wiki/Attribute)  \n\n---  \n###  一级属性 | 主要属性  \nStrength STR 力量 \n>  gain 1 melee attack power per point of strength .  每点力量增加1点攻击 力  \n> Strength does not affect the chance to land a critical strike. Strength does not improve the chance to block.  \n> 力量不会影响致命一击的机会。力量不会增加阻挡的机会。  \n<!-- more -->\n\nAgility AGI 敏捷 \n> Increases attack power with ranged weapons (not including wands) or melee weapons for certain classes.  \n> 增加使用远程武器(不包括魔杖)或近战武器的攻击强度 对某些类型而言. \n\nIntellect INT 智力   \n> increases spell power by 1 per point at level 80 or above. Intellect is now the main source of spell power for most cases. \n> 每点智力增加1点法术强度在80级以及之后. 智力现在是法强的主要来源, 在大多数情况下.  \n> 杂注 智力也可以提升法力上限, 回蓝速度等 \n\nStamina STA 耐力  \n> Stamina provides 1 health per stamina for the first 20 points of stamina, and 60 health per point of stamina thereafter.  \n> 前20点耐力提供1点生命每耐力，之后为60点生命值每耐力。 \n\nSpirit SPI 精神 \n> Increases in-combat mana regeneration for healers. It's the primary attribute for mana regeneration of healers. \n> 增加healers在战斗中的魔法恢复.  他是healers回复法力(魔法)的主要属性  \n\n\n---  \n### 二级属性 | 次要属性 | 直接参与战斗计算 \n\nMastery 掌握熟练度  \n\n###### Physical combat  物理对抗   \n\nWeapon damage 武器伤害\n> 战武器增加近战伤害 远程武器增加远程伤害 ... \n\nHit 命中  \n> 增加近战中的命中率  \n\nAttack power AP 攻击强度 攻击力   (Melee 近战)\n\nAttack Speed 攻击速度  \n\nRanged Attack Power RAP 远程攻击力\n\nArmor penetration 护甲穿透  \n> 这个护甲对应魔兽里的 无甲 轻甲,重甲,  穿刺, 攻城类的对抗计算, 不存在护甲消耗概念, 类似攻击力/防御力计算   \n> 护盾 一般是可消耗的 \n\n###### Enhancements 增益  \n\nCritical strike 暴击 \n\nCrushing blow 破碎打击  \n\nHaste 急速  \n> Haste is a secondary attribute that increases attack speed, ranged attack speed and casting speed.   \n> 急速是次要属性，可提高攻击速度，远程攻击速度和施法速度。  \n> It also increases these attributes for the player's pets, increases the regeneration rate of some resources, and increases the tick rate of most of the player's damage over time and heal over time effects.   \n> 它还增加了玩家宠物的这些属性，增加了一些资源的再生率，增加随着时间的推移的效果 例如大部分DOT HOT等。\n> Spell haste also reduces the length of the global cooldown for spells and some melee abilities.    \n> 法术急速也减少了法术和一些近战技能的全局冷却时间。对于大多数类，基本GCD是1.5秒，而Haste可以将它减少到最小0.75秒（需要100％急速） \n\n\nExpertise 专精  \n\n###### Spell combat  法术对抗\n\nSpell power SP 法强 \n>  Increases damage and healing of spells  \n\nSpell hit  法术命中  \n\nSpell crit chance 法术暴击 \n\nSpell penetration 法术穿透 \n\nCasting speed 施法速度  \n\n\n###### Defense  防御 \n\nHelped prevent physical damage by reducing the chance to be hit or critically hit. Additionally, it also increased block, dodge and parry.  \n通过减少被击中或受到重击的机会来帮助防止物理伤害。此外，它还增加了阻挡，闪避和招架。  \n\nAvoidance 避免攻击  \n\nMiss 命中失败\n> 来源于dodage属性的公式计算结果   \n\n\nDodge 躲避 \n> 躲避传入近战攻击的机会。远程攻击不能被躲避。  \n\nParry 格挡  \n> 它是用近战武器招架近战攻击的机会。远程攻击无法格挡。\n> 魔兽中的格挡更类似一个被动buff,  防御者产生格挡后会提升(甚至重置)一次攻击间隔(攻击速度而言). 从更高的视角来看 这是一个绑定到英雄成长的被动buff.  \n\nAbsorb 偏转  \n> 类似格挡 属于同一位置\n\nImmune 免疫 \n> 目标存在一个buff或者状态,标签导致对该目标的法术/效果被豁免.  \n\nEvade 回避  \n> 怪物在返回原始位置时免疫所有攻击和控制, 并且恢复健康状态  .  \n\nBlock 阻挡  \n> Chance to block melee and ranged attacks with a shield. Warrior and paladin tanks receive additional block chance through their respective mastery and abilities such as [Shield Block].   \n> 用盾牌阻挡近战和远程攻击的机会。战士和圣骑士坦克通过他们各自的掌握和能力获得额外的阻挡机会，例如[盾牌挡]  \n> 阻止等级 - 提高阻止攻击的几率。删除了大灾变，徽标，小 大灾变。\n> 阻挡值 - 通常仅在代表吸收的固定损伤量的防护罩上的值。删除了大灾变，徽标，小 大灾变。  \n\nArmor 护甲 \n> 减少受到的物理伤害。  \n\nBonus Armor 额外护甲  \n\nResistance 抵抗  \n> 减少魔法攻击造成的伤害。  \n\nResilience 韧性(恢复力)  \n\n---   \n### 三级属性 | 特征属性提升  \n\nIndestructible rating 坚不可摧 \n\nMultistrike rating 多次击打 \n> 触发第二次打击的概率   \n \nLeech rating 吸血/水蛭  \n> Leech is a new minor stat that converts a percentage of damage and/or healing done to self-healing.  \n> 将一定比例的伤害或者治疗转化为自我修复 \n\nVersatility rating  多功能级别  \n> 例如 1%的伤害提升同时降低受到伤害的0.5% \n\n\n---  \n### 杂项  \nSwing 动作  \n> 两次swing的间隔一般接近攻击速度   \n> 魔兽的动作只有前摇  \n\nmelee weapons  近战武器\nranged weapons 远程武器 \n\ndiminishing 收益减免  \n\nHealth 血 \nMana 魔法 \nmove speed  移速\nattack speed 攻速  \nregen 回复(血蓝)\n\nRage 怒气  \nattack 攻击  \n\nlucky 幸运  \ncurse 诅咒\n\nhit 命中  \ndodge 闪避 \n\ncrithit 暴击  \ncrithit resist 抗暴 \n\nresist 抗\n\ndamage 伤害 \n\npct 比例 \n\ndexterity 灵巧 \n\nelite 精英  \n\nMitigation 减轻缓和 \nBonus 增强 \n\ncritical strike 致命一击\n\nBlock 阻止\n\nAvoidance 回避 \nmiss 丢失  \ndodge 闪避  \nparry 格挡 \n\nabsorb 吸收  \nDeflect 扭曲 \nEvade 逃避 \nImmune 免疫\nReflect 反弹\n\nResilience 恢复力/ 伤害减免\n\nDefense 防御  \n\n普通-Normal (大部分近战单位)\n\n穿刺-Pierce (大部分远程攻击单位)\n\n攻城-Siege (攻城单位)\n\n混乱-Chaos (一些野外生物，强力召唤单位)\n\n魔法-Magic (大部分的魔法单位和空中单位)\n> 魔法攻击对虚无形态的单位附加66%额外伤害。 \n\n英雄-Hero\n\n武器类型 \n> 普通-Normal\n> 远程-Missile\n\n火炮-Artillery\n> 一般是攻城型单位的武器类型，特点是在杀死单位时有暴尸的效果。\n\n直接-Instant\n> 不同于一般的远程武器，它的特点是速度快，一般远程武器从发出“子弹”到“子弹”打到敌方单位都有可见的飞行路线，如女巫的攻击；而直接类型的武器是没有的，火枪手和蒸汽坦克都是很好的例子。\n\n溅射-Splash\n> 对攻击目标附近的单位造成一定的伤害，有全伤害范围、1/2伤害范围、1/4伤害范围的说明。\n\n特殊武器类型\n> Mbounce:Missile+bounce远程反弹 女猎手特有的攻击方式，女猎手虽然是普通攻击，但是是远程的。\n> Msplash:Missile+splash 远程溅射 很多高等级远程单位的攻击方式。\n> Aline:Artillery+line 火炮直线 投刃车特有攻击方式。注意的是，这是投刃车研究好穿刺剑刃后的武器类型，在那之前，他只是火炮类型，只能攻击一个单位。直线攻击的特点是当攻击一个目标时，目标附近有攻击者的敌对单位，就对这个单位造成同等的伤害。有点类似于反弹，但是反弹对第二个目标的伤害是有减成的。\n> Mline:Missile+line 远程直线 狮鹫骑士特有攻击方式。注意的是，这是狮鹫骑士研究好风暴战锤后的武器类型，在那之前，他只是远程类型，只能攻击一个单位。\n\n护甲类型\n\n无甲-Unarmored (大部分魔法单位)\n> 一些无甲单位是出于平衡性的设定，比如女猎手、石像鬼、角鹰兽、风暴之鸦形态下的猛禽德鲁伊。\n轻甲-Light (大部分空中单位)\n\n中甲-Medium (大部分远程攻击单位和农民)\n\n重甲-Heavy (大部分近战单位)\n\n城甲-Fort (建筑)\n","source":"_posts/2018-12-22-attribute.md","raw":"---\ntitle: MMO属性中英文对照  \ndate: 2018-12-22 17:21:00\nauthor: yawei.zhang \n---\n\n[wwowwiki属性说明](http://wowwiki.wikia.com/wiki/Attribute)  \n\n---  \n###  一级属性 | 主要属性  \nStrength STR 力量 \n>  gain 1 melee attack power per point of strength .  每点力量增加1点攻击 力  \n> Strength does not affect the chance to land a critical strike. Strength does not improve the chance to block.  \n> 力量不会影响致命一击的机会。力量不会增加阻挡的机会。  \n<!-- more -->\n\nAgility AGI 敏捷 \n> Increases attack power with ranged weapons (not including wands) or melee weapons for certain classes.  \n> 增加使用远程武器(不包括魔杖)或近战武器的攻击强度 对某些类型而言. \n\nIntellect INT 智力   \n> increases spell power by 1 per point at level 80 or above. Intellect is now the main source of spell power for most cases. \n> 每点智力增加1点法术强度在80级以及之后. 智力现在是法强的主要来源, 在大多数情况下.  \n> 杂注 智力也可以提升法力上限, 回蓝速度等 \n\nStamina STA 耐力  \n> Stamina provides 1 health per stamina for the first 20 points of stamina, and 60 health per point of stamina thereafter.  \n> 前20点耐力提供1点生命每耐力，之后为60点生命值每耐力。 \n\nSpirit SPI 精神 \n> Increases in-combat mana regeneration for healers. It's the primary attribute for mana regeneration of healers. \n> 增加healers在战斗中的魔法恢复.  他是healers回复法力(魔法)的主要属性  \n\n\n---  \n### 二级属性 | 次要属性 | 直接参与战斗计算 \n\nMastery 掌握熟练度  \n\n###### Physical combat  物理对抗   \n\nWeapon damage 武器伤害\n> 战武器增加近战伤害 远程武器增加远程伤害 ... \n\nHit 命中  \n> 增加近战中的命中率  \n\nAttack power AP 攻击强度 攻击力   (Melee 近战)\n\nAttack Speed 攻击速度  \n\nRanged Attack Power RAP 远程攻击力\n\nArmor penetration 护甲穿透  \n> 这个护甲对应魔兽里的 无甲 轻甲,重甲,  穿刺, 攻城类的对抗计算, 不存在护甲消耗概念, 类似攻击力/防御力计算   \n> 护盾 一般是可消耗的 \n\n###### Enhancements 增益  \n\nCritical strike 暴击 \n\nCrushing blow 破碎打击  \n\nHaste 急速  \n> Haste is a secondary attribute that increases attack speed, ranged attack speed and casting speed.   \n> 急速是次要属性，可提高攻击速度，远程攻击速度和施法速度。  \n> It also increases these attributes for the player's pets, increases the regeneration rate of some resources, and increases the tick rate of most of the player's damage over time and heal over time effects.   \n> 它还增加了玩家宠物的这些属性，增加了一些资源的再生率，增加随着时间的推移的效果 例如大部分DOT HOT等。\n> Spell haste also reduces the length of the global cooldown for spells and some melee abilities.    \n> 法术急速也减少了法术和一些近战技能的全局冷却时间。对于大多数类，基本GCD是1.5秒，而Haste可以将它减少到最小0.75秒（需要100％急速） \n\n\nExpertise 专精  \n\n###### Spell combat  法术对抗\n\nSpell power SP 法强 \n>  Increases damage and healing of spells  \n\nSpell hit  法术命中  \n\nSpell crit chance 法术暴击 \n\nSpell penetration 法术穿透 \n\nCasting speed 施法速度  \n\n\n###### Defense  防御 \n\nHelped prevent physical damage by reducing the chance to be hit or critically hit. Additionally, it also increased block, dodge and parry.  \n通过减少被击中或受到重击的机会来帮助防止物理伤害。此外，它还增加了阻挡，闪避和招架。  \n\nAvoidance 避免攻击  \n\nMiss 命中失败\n> 来源于dodage属性的公式计算结果   \n\n\nDodge 躲避 \n> 躲避传入近战攻击的机会。远程攻击不能被躲避。  \n\nParry 格挡  \n> 它是用近战武器招架近战攻击的机会。远程攻击无法格挡。\n> 魔兽中的格挡更类似一个被动buff,  防御者产生格挡后会提升(甚至重置)一次攻击间隔(攻击速度而言). 从更高的视角来看 这是一个绑定到英雄成长的被动buff.  \n\nAbsorb 偏转  \n> 类似格挡 属于同一位置\n\nImmune 免疫 \n> 目标存在一个buff或者状态,标签导致对该目标的法术/效果被豁免.  \n\nEvade 回避  \n> 怪物在返回原始位置时免疫所有攻击和控制, 并且恢复健康状态  .  \n\nBlock 阻挡  \n> Chance to block melee and ranged attacks with a shield. Warrior and paladin tanks receive additional block chance through their respective mastery and abilities such as [Shield Block].   \n> 用盾牌阻挡近战和远程攻击的机会。战士和圣骑士坦克通过他们各自的掌握和能力获得额外的阻挡机会，例如[盾牌挡]  \n> 阻止等级 - 提高阻止攻击的几率。删除了大灾变，徽标，小 大灾变。\n> 阻挡值 - 通常仅在代表吸收的固定损伤量的防护罩上的值。删除了大灾变，徽标，小 大灾变。  \n\nArmor 护甲 \n> 减少受到的物理伤害。  \n\nBonus Armor 额外护甲  \n\nResistance 抵抗  \n> 减少魔法攻击造成的伤害。  \n\nResilience 韧性(恢复力)  \n\n---   \n### 三级属性 | 特征属性提升  \n\nIndestructible rating 坚不可摧 \n\nMultistrike rating 多次击打 \n> 触发第二次打击的概率   \n \nLeech rating 吸血/水蛭  \n> Leech is a new minor stat that converts a percentage of damage and/or healing done to self-healing.  \n> 将一定比例的伤害或者治疗转化为自我修复 \n\nVersatility rating  多功能级别  \n> 例如 1%的伤害提升同时降低受到伤害的0.5% \n\n\n---  \n### 杂项  \nSwing 动作  \n> 两次swing的间隔一般接近攻击速度   \n> 魔兽的动作只有前摇  \n\nmelee weapons  近战武器\nranged weapons 远程武器 \n\ndiminishing 收益减免  \n\nHealth 血 \nMana 魔法 \nmove speed  移速\nattack speed 攻速  \nregen 回复(血蓝)\n\nRage 怒气  \nattack 攻击  \n\nlucky 幸运  \ncurse 诅咒\n\nhit 命中  \ndodge 闪避 \n\ncrithit 暴击  \ncrithit resist 抗暴 \n\nresist 抗\n\ndamage 伤害 \n\npct 比例 \n\ndexterity 灵巧 \n\nelite 精英  \n\nMitigation 减轻缓和 \nBonus 增强 \n\ncritical strike 致命一击\n\nBlock 阻止\n\nAvoidance 回避 \nmiss 丢失  \ndodge 闪避  \nparry 格挡 \n\nabsorb 吸收  \nDeflect 扭曲 \nEvade 逃避 \nImmune 免疫\nReflect 反弹\n\nResilience 恢复力/ 伤害减免\n\nDefense 防御  \n\n普通-Normal (大部分近战单位)\n\n穿刺-Pierce (大部分远程攻击单位)\n\n攻城-Siege (攻城单位)\n\n混乱-Chaos (一些野外生物，强力召唤单位)\n\n魔法-Magic (大部分的魔法单位和空中单位)\n> 魔法攻击对虚无形态的单位附加66%额外伤害。 \n\n英雄-Hero\n\n武器类型 \n> 普通-Normal\n> 远程-Missile\n\n火炮-Artillery\n> 一般是攻城型单位的武器类型，特点是在杀死单位时有暴尸的效果。\n\n直接-Instant\n> 不同于一般的远程武器，它的特点是速度快，一般远程武器从发出“子弹”到“子弹”打到敌方单位都有可见的飞行路线，如女巫的攻击；而直接类型的武器是没有的，火枪手和蒸汽坦克都是很好的例子。\n\n溅射-Splash\n> 对攻击目标附近的单位造成一定的伤害，有全伤害范围、1/2伤害范围、1/4伤害范围的说明。\n\n特殊武器类型\n> Mbounce:Missile+bounce远程反弹 女猎手特有的攻击方式，女猎手虽然是普通攻击，但是是远程的。\n> Msplash:Missile+splash 远程溅射 很多高等级远程单位的攻击方式。\n> Aline:Artillery+line 火炮直线 投刃车特有攻击方式。注意的是，这是投刃车研究好穿刺剑刃后的武器类型，在那之前，他只是火炮类型，只能攻击一个单位。直线攻击的特点是当攻击一个目标时，目标附近有攻击者的敌对单位，就对这个单位造成同等的伤害。有点类似于反弹，但是反弹对第二个目标的伤害是有减成的。\n> Mline:Missile+line 远程直线 狮鹫骑士特有攻击方式。注意的是，这是狮鹫骑士研究好风暴战锤后的武器类型，在那之前，他只是远程类型，只能攻击一个单位。\n\n护甲类型\n\n无甲-Unarmored (大部分魔法单位)\n> 一些无甲单位是出于平衡性的设定，比如女猎手、石像鬼、角鹰兽、风暴之鸦形态下的猛禽德鲁伊。\n轻甲-Light (大部分空中单位)\n\n中甲-Medium (大部分远程攻击单位和农民)\n\n重甲-Heavy (大部分近战单位)\n\n城甲-Fort (建筑)\n","slug":"2018-12-22-attribute","published":1,"updated":"2019-01-17T14:04:23.182Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck44ekz2m000vr45h0vmuanug","content":"<p><a href=\"http://wowwiki.wikia.com/wiki/Attribute\" target=\"_blank\" rel=\"noopener\">wwowwiki属性说明</a>  </p>\n<hr>\n<h3><span id=\"一级属性-主要属性\">一级属性 | 主要属性</span></h3><p>Strength STR 力量 </p>\n<blockquote>\n<p> gain 1 melee attack power per point of strength .  每点力量增加1点攻击 力<br>Strength does not affect the chance to land a critical strike. Strength does not improve the chance to block.<br>力量不会影响致命一击的机会。力量不会增加阻挡的机会。  </p>\n</blockquote>\n<a id=\"more\"></a>\n\n<p>Agility AGI 敏捷 </p>\n<blockquote>\n<p>Increases attack power with ranged weapons (not including wands) or melee weapons for certain classes.<br>增加使用远程武器(不包括魔杖)或近战武器的攻击强度 对某些类型而言. </p>\n</blockquote>\n<p>Intellect INT 智力   </p>\n<blockquote>\n<p>increases spell power by 1 per point at level 80 or above. Intellect is now the main source of spell power for most cases.<br>每点智力增加1点法术强度在80级以及之后. 智力现在是法强的主要来源, 在大多数情况下.<br>杂注 智力也可以提升法力上限, 回蓝速度等 </p>\n</blockquote>\n<p>Stamina STA 耐力  </p>\n<blockquote>\n<p>Stamina provides 1 health per stamina for the first 20 points of stamina, and 60 health per point of stamina thereafter.<br>前20点耐力提供1点生命每耐力，之后为60点生命值每耐力。 </p>\n</blockquote>\n<p>Spirit SPI 精神 </p>\n<blockquote>\n<p>Increases in-combat mana regeneration for healers. It’s the primary attribute for mana regeneration of healers.<br>增加healers在战斗中的魔法恢复.  他是healers回复法力(魔法)的主要属性  </p>\n</blockquote>\n<hr>\n<h3><span id=\"二级属性-次要属性-直接参与战斗计算\">二级属性 | 次要属性 | 直接参与战斗计算</span></h3><p>Mastery 掌握熟练度  </p>\n<h6><span id=\"physical-combat-物理对抗\">Physical combat  物理对抗</span></h6><p>Weapon damage 武器伤害</p>\n<blockquote>\n<p>战武器增加近战伤害 远程武器增加远程伤害 … </p>\n</blockquote>\n<p>Hit 命中  </p>\n<blockquote>\n<p>增加近战中的命中率  </p>\n</blockquote>\n<p>Attack power AP 攻击强度 攻击力   (Melee 近战)</p>\n<p>Attack Speed 攻击速度  </p>\n<p>Ranged Attack Power RAP 远程攻击力</p>\n<p>Armor penetration 护甲穿透  </p>\n<blockquote>\n<p>这个护甲对应魔兽里的 无甲 轻甲,重甲,  穿刺, 攻城类的对抗计算, 不存在护甲消耗概念, 类似攻击力/防御力计算<br>护盾 一般是可消耗的 </p>\n</blockquote>\n<h6><span id=\"enhancements-增益\">Enhancements 增益</span></h6><p>Critical strike 暴击 </p>\n<p>Crushing blow 破碎打击  </p>\n<p>Haste 急速  </p>\n<blockquote>\n<p>Haste is a secondary attribute that increases attack speed, ranged attack speed and casting speed.<br>急速是次要属性，可提高攻击速度，远程攻击速度和施法速度。<br>It also increases these attributes for the player’s pets, increases the regeneration rate of some resources, and increases the tick rate of most of the player’s damage over time and heal over time effects.<br>它还增加了玩家宠物的这些属性，增加了一些资源的再生率，增加随着时间的推移的效果 例如大部分DOT HOT等。<br>Spell haste also reduces the length of the global cooldown for spells and some melee abilities.<br>法术急速也减少了法术和一些近战技能的全局冷却时间。对于大多数类，基本GCD是1.5秒，而Haste可以将它减少到最小0.75秒（需要100％急速） </p>\n</blockquote>\n<p>Expertise 专精  </p>\n<h6><span id=\"spell-combat-法术对抗\">Spell combat  法术对抗</span></h6><p>Spell power SP 法强 </p>\n<blockquote>\n<p> Increases damage and healing of spells  </p>\n</blockquote>\n<p>Spell hit  法术命中  </p>\n<p>Spell crit chance 法术暴击 </p>\n<p>Spell penetration 法术穿透 </p>\n<p>Casting speed 施法速度  </p>\n<h6><span id=\"defense-防御\">Defense  防御</span></h6><p>Helped prevent physical damage by reducing the chance to be hit or critically hit. Additionally, it also increased block, dodge and parry.<br>通过减少被击中或受到重击的机会来帮助防止物理伤害。此外，它还增加了阻挡，闪避和招架。  </p>\n<p>Avoidance 避免攻击  </p>\n<p>Miss 命中失败</p>\n<blockquote>\n<p>来源于dodage属性的公式计算结果   </p>\n</blockquote>\n<p>Dodge 躲避 </p>\n<blockquote>\n<p>躲避传入近战攻击的机会。远程攻击不能被躲避。  </p>\n</blockquote>\n<p>Parry 格挡  </p>\n<blockquote>\n<p>它是用近战武器招架近战攻击的机会。远程攻击无法格挡。<br>魔兽中的格挡更类似一个被动buff,  防御者产生格挡后会提升(甚至重置)一次攻击间隔(攻击速度而言). 从更高的视角来看 这是一个绑定到英雄成长的被动buff.  </p>\n</blockquote>\n<p>Absorb 偏转  </p>\n<blockquote>\n<p>类似格挡 属于同一位置</p>\n</blockquote>\n<p>Immune 免疫 </p>\n<blockquote>\n<p>目标存在一个buff或者状态,标签导致对该目标的法术/效果被豁免.  </p>\n</blockquote>\n<p>Evade 回避  </p>\n<blockquote>\n<p>怪物在返回原始位置时免疫所有攻击和控制, 并且恢复健康状态  .  </p>\n</blockquote>\n<p>Block 阻挡  </p>\n<blockquote>\n<p>Chance to block melee and ranged attacks with a shield. Warrior and paladin tanks receive additional block chance through their respective mastery and abilities such as [Shield Block].<br>用盾牌阻挡近战和远程攻击的机会。战士和圣骑士坦克通过他们各自的掌握和能力获得额外的阻挡机会，例如[盾牌挡]<br>阻止等级 - 提高阻止攻击的几率。删除了大灾变，徽标，小 大灾变。<br>阻挡值 - 通常仅在代表吸收的固定损伤量的防护罩上的值。删除了大灾变，徽标，小 大灾变。  </p>\n</blockquote>\n<p>Armor 护甲 </p>\n<blockquote>\n<p>减少受到的物理伤害。  </p>\n</blockquote>\n<p>Bonus Armor 额外护甲  </p>\n<p>Resistance 抵抗  </p>\n<blockquote>\n<p>减少魔法攻击造成的伤害。  </p>\n</blockquote>\n<p>Resilience 韧性(恢复力)  </p>\n<hr>\n<h3><span id=\"三级属性-特征属性提升\">三级属性 | 特征属性提升</span></h3><p>Indestructible rating 坚不可摧 </p>\n<p>Multistrike rating 多次击打 </p>\n<blockquote>\n<p>触发第二次打击的概率   </p>\n</blockquote>\n<p>Leech rating 吸血/水蛭  </p>\n<blockquote>\n<p>Leech is a new minor stat that converts a percentage of damage and/or healing done to self-healing.<br>将一定比例的伤害或者治疗转化为自我修复 </p>\n</blockquote>\n<p>Versatility rating  多功能级别  </p>\n<blockquote>\n<p>例如 1%的伤害提升同时降低受到伤害的0.5% </p>\n</blockquote>\n<hr>\n<h3><span id=\"杂项\">杂项</span></h3><p>Swing 动作  </p>\n<blockquote>\n<p>两次swing的间隔一般接近攻击速度<br>魔兽的动作只有前摇  </p>\n</blockquote>\n<p>melee weapons  近战武器<br>ranged weapons 远程武器 </p>\n<p>diminishing 收益减免  </p>\n<p>Health 血<br>Mana 魔法<br>move speed  移速<br>attack speed 攻速<br>regen 回复(血蓝)</p>\n<p>Rage 怒气<br>attack 攻击  </p>\n<p>lucky 幸运<br>curse 诅咒</p>\n<p>hit 命中<br>dodge 闪避 </p>\n<p>crithit 暴击<br>crithit resist 抗暴 </p>\n<p>resist 抗</p>\n<p>damage 伤害 </p>\n<p>pct 比例 </p>\n<p>dexterity 灵巧 </p>\n<p>elite 精英  </p>\n<p>Mitigation 减轻缓和<br>Bonus 增强 </p>\n<p>critical strike 致命一击</p>\n<p>Block 阻止</p>\n<p>Avoidance 回避<br>miss 丢失<br>dodge 闪避<br>parry 格挡 </p>\n<p>absorb 吸收<br>Deflect 扭曲<br>Evade 逃避<br>Immune 免疫<br>Reflect 反弹</p>\n<p>Resilience 恢复力/ 伤害减免</p>\n<p>Defense 防御  </p>\n<p>普通-Normal (大部分近战单位)</p>\n<p>穿刺-Pierce (大部分远程攻击单位)</p>\n<p>攻城-Siege (攻城单位)</p>\n<p>混乱-Chaos (一些野外生物，强力召唤单位)</p>\n<p>魔法-Magic (大部分的魔法单位和空中单位)</p>\n<blockquote>\n<p>魔法攻击对虚无形态的单位附加66%额外伤害。 </p>\n</blockquote>\n<p>英雄-Hero</p>\n<p>武器类型 </p>\n<blockquote>\n<p>普通-Normal<br>远程-Missile</p>\n</blockquote>\n<p>火炮-Artillery</p>\n<blockquote>\n<p>一般是攻城型单位的武器类型，特点是在杀死单位时有暴尸的效果。</p>\n</blockquote>\n<p>直接-Instant</p>\n<blockquote>\n<p>不同于一般的远程武器，它的特点是速度快，一般远程武器从发出“子弹”到“子弹”打到敌方单位都有可见的飞行路线，如女巫的攻击；而直接类型的武器是没有的，火枪手和蒸汽坦克都是很好的例子。</p>\n</blockquote>\n<p>溅射-Splash</p>\n<blockquote>\n<p>对攻击目标附近的单位造成一定的伤害，有全伤害范围、1/2伤害范围、1/4伤害范围的说明。</p>\n</blockquote>\n<p>特殊武器类型</p>\n<blockquote>\n<p>Mbounce:Missile+bounce远程反弹 女猎手特有的攻击方式，女猎手虽然是普通攻击，但是是远程的。<br>Msplash:Missile+splash 远程溅射 很多高等级远程单位的攻击方式。<br>Aline:Artillery+line 火炮直线 投刃车特有攻击方式。注意的是，这是投刃车研究好穿刺剑刃后的武器类型，在那之前，他只是火炮类型，只能攻击一个单位。直线攻击的特点是当攻击一个目标时，目标附近有攻击者的敌对单位，就对这个单位造成同等的伤害。有点类似于反弹，但是反弹对第二个目标的伤害是有减成的。<br>Mline:Missile+line 远程直线 狮鹫骑士特有攻击方式。注意的是，这是狮鹫骑士研究好风暴战锤后的武器类型，在那之前，他只是远程类型，只能攻击一个单位。</p>\n</blockquote>\n<p>护甲类型</p>\n<p>无甲-Unarmored (大部分魔法单位)</p>\n<blockquote>\n<p>一些无甲单位是出于平衡性的设定，比如女猎手、石像鬼、角鹰兽、风暴之鸦形态下的猛禽德鲁伊。<br>轻甲-Light (大部分空中单位)</p>\n</blockquote>\n<p>中甲-Medium (大部分远程攻击单位和农民)</p>\n<p>重甲-Heavy (大部分近战单位)</p>\n<p>城甲-Fort (建筑)</p>\n","site":{"data":{}},"excerpt":"<p><a href=\"http://wowwiki.wikia.com/wiki/Attribute\" target=\"_blank\" rel=\"noopener\">wwowwiki属性说明</a>  </p>\n<hr>\n<h3 id=\"一级属性-主要属性\"><a href=\"#一级属性-主要属性\" class=\"headerlink\" title=\"一级属性 | 主要属性\"></a>一级属性 | 主要属性</h3><p>Strength STR 力量 </p>\n<blockquote>\n<p> gain 1 melee attack power per point of strength .  每点力量增加1点攻击 力<br>Strength does not affect the chance to land a critical strike. Strength does not improve the chance to block.<br>力量不会影响致命一击的机会。力量不会增加阻挡的机会。  </p>\n</blockquote>","more":"<p>Agility AGI 敏捷 </p>\n<blockquote>\n<p>Increases attack power with ranged weapons (not including wands) or melee weapons for certain classes.<br>增加使用远程武器(不包括魔杖)或近战武器的攻击强度 对某些类型而言. </p>\n</blockquote>\n<p>Intellect INT 智力   </p>\n<blockquote>\n<p>increases spell power by 1 per point at level 80 or above. Intellect is now the main source of spell power for most cases.<br>每点智力增加1点法术强度在80级以及之后. 智力现在是法强的主要来源, 在大多数情况下.<br>杂注 智力也可以提升法力上限, 回蓝速度等 </p>\n</blockquote>\n<p>Stamina STA 耐力  </p>\n<blockquote>\n<p>Stamina provides 1 health per stamina for the first 20 points of stamina, and 60 health per point of stamina thereafter.<br>前20点耐力提供1点生命每耐力，之后为60点生命值每耐力。 </p>\n</blockquote>\n<p>Spirit SPI 精神 </p>\n<blockquote>\n<p>Increases in-combat mana regeneration for healers. It’s the primary attribute for mana regeneration of healers.<br>增加healers在战斗中的魔法恢复.  他是healers回复法力(魔法)的主要属性  </p>\n</blockquote>\n<hr>\n<h3 id=\"二级属性-次要属性-直接参与战斗计算\"><a href=\"#二级属性-次要属性-直接参与战斗计算\" class=\"headerlink\" title=\"二级属性 | 次要属性 | 直接参与战斗计算\"></a>二级属性 | 次要属性 | 直接参与战斗计算</h3><p>Mastery 掌握熟练度  </p>\n<h6 id=\"Physical-combat-物理对抗\"><a href=\"#Physical-combat-物理对抗\" class=\"headerlink\" title=\"Physical combat  物理对抗\"></a>Physical combat  物理对抗</h6><p>Weapon damage 武器伤害</p>\n<blockquote>\n<p>战武器增加近战伤害 远程武器增加远程伤害 … </p>\n</blockquote>\n<p>Hit 命中  </p>\n<blockquote>\n<p>增加近战中的命中率  </p>\n</blockquote>\n<p>Attack power AP 攻击强度 攻击力   (Melee 近战)</p>\n<p>Attack Speed 攻击速度  </p>\n<p>Ranged Attack Power RAP 远程攻击力</p>\n<p>Armor penetration 护甲穿透  </p>\n<blockquote>\n<p>这个护甲对应魔兽里的 无甲 轻甲,重甲,  穿刺, 攻城类的对抗计算, 不存在护甲消耗概念, 类似攻击力/防御力计算<br>护盾 一般是可消耗的 </p>\n</blockquote>\n<h6 id=\"Enhancements-增益\"><a href=\"#Enhancements-增益\" class=\"headerlink\" title=\"Enhancements 增益\"></a>Enhancements 增益</h6><p>Critical strike 暴击 </p>\n<p>Crushing blow 破碎打击  </p>\n<p>Haste 急速  </p>\n<blockquote>\n<p>Haste is a secondary attribute that increases attack speed, ranged attack speed and casting speed.<br>急速是次要属性，可提高攻击速度，远程攻击速度和施法速度。<br>It also increases these attributes for the player’s pets, increases the regeneration rate of some resources, and increases the tick rate of most of the player’s damage over time and heal over time effects.<br>它还增加了玩家宠物的这些属性，增加了一些资源的再生率，增加随着时间的推移的效果 例如大部分DOT HOT等。<br>Spell haste also reduces the length of the global cooldown for spells and some melee abilities.<br>法术急速也减少了法术和一些近战技能的全局冷却时间。对于大多数类，基本GCD是1.5秒，而Haste可以将它减少到最小0.75秒（需要100％急速） </p>\n</blockquote>\n<p>Expertise 专精  </p>\n<h6 id=\"Spell-combat-法术对抗\"><a href=\"#Spell-combat-法术对抗\" class=\"headerlink\" title=\"Spell combat  法术对抗\"></a>Spell combat  法术对抗</h6><p>Spell power SP 法强 </p>\n<blockquote>\n<p> Increases damage and healing of spells  </p>\n</blockquote>\n<p>Spell hit  法术命中  </p>\n<p>Spell crit chance 法术暴击 </p>\n<p>Spell penetration 法术穿透 </p>\n<p>Casting speed 施法速度  </p>\n<h6 id=\"Defense-防御\"><a href=\"#Defense-防御\" class=\"headerlink\" title=\"Defense  防御\"></a>Defense  防御</h6><p>Helped prevent physical damage by reducing the chance to be hit or critically hit. Additionally, it also increased block, dodge and parry.<br>通过减少被击中或受到重击的机会来帮助防止物理伤害。此外，它还增加了阻挡，闪避和招架。  </p>\n<p>Avoidance 避免攻击  </p>\n<p>Miss 命中失败</p>\n<blockquote>\n<p>来源于dodage属性的公式计算结果   </p>\n</blockquote>\n<p>Dodge 躲避 </p>\n<blockquote>\n<p>躲避传入近战攻击的机会。远程攻击不能被躲避。  </p>\n</blockquote>\n<p>Parry 格挡  </p>\n<blockquote>\n<p>它是用近战武器招架近战攻击的机会。远程攻击无法格挡。<br>魔兽中的格挡更类似一个被动buff,  防御者产生格挡后会提升(甚至重置)一次攻击间隔(攻击速度而言). 从更高的视角来看 这是一个绑定到英雄成长的被动buff.  </p>\n</blockquote>\n<p>Absorb 偏转  </p>\n<blockquote>\n<p>类似格挡 属于同一位置</p>\n</blockquote>\n<p>Immune 免疫 </p>\n<blockquote>\n<p>目标存在一个buff或者状态,标签导致对该目标的法术/效果被豁免.  </p>\n</blockquote>\n<p>Evade 回避  </p>\n<blockquote>\n<p>怪物在返回原始位置时免疫所有攻击和控制, 并且恢复健康状态  .  </p>\n</blockquote>\n<p>Block 阻挡  </p>\n<blockquote>\n<p>Chance to block melee and ranged attacks with a shield. Warrior and paladin tanks receive additional block chance through their respective mastery and abilities such as [Shield Block].<br>用盾牌阻挡近战和远程攻击的机会。战士和圣骑士坦克通过他们各自的掌握和能力获得额外的阻挡机会，例如[盾牌挡]<br>阻止等级 - 提高阻止攻击的几率。删除了大灾变，徽标，小 大灾变。<br>阻挡值 - 通常仅在代表吸收的固定损伤量的防护罩上的值。删除了大灾变，徽标，小 大灾变。  </p>\n</blockquote>\n<p>Armor 护甲 </p>\n<blockquote>\n<p>减少受到的物理伤害。  </p>\n</blockquote>\n<p>Bonus Armor 额外护甲  </p>\n<p>Resistance 抵抗  </p>\n<blockquote>\n<p>减少魔法攻击造成的伤害。  </p>\n</blockquote>\n<p>Resilience 韧性(恢复力)  </p>\n<hr>\n<h3 id=\"三级属性-特征属性提升\"><a href=\"#三级属性-特征属性提升\" class=\"headerlink\" title=\"三级属性 | 特征属性提升\"></a>三级属性 | 特征属性提升</h3><p>Indestructible rating 坚不可摧 </p>\n<p>Multistrike rating 多次击打 </p>\n<blockquote>\n<p>触发第二次打击的概率   </p>\n</blockquote>\n<p>Leech rating 吸血/水蛭  </p>\n<blockquote>\n<p>Leech is a new minor stat that converts a percentage of damage and/or healing done to self-healing.<br>将一定比例的伤害或者治疗转化为自我修复 </p>\n</blockquote>\n<p>Versatility rating  多功能级别  </p>\n<blockquote>\n<p>例如 1%的伤害提升同时降低受到伤害的0.5% </p>\n</blockquote>\n<hr>\n<h3 id=\"杂项\"><a href=\"#杂项\" class=\"headerlink\" title=\"杂项\"></a>杂项</h3><p>Swing 动作  </p>\n<blockquote>\n<p>两次swing的间隔一般接近攻击速度<br>魔兽的动作只有前摇  </p>\n</blockquote>\n<p>melee weapons  近战武器<br>ranged weapons 远程武器 </p>\n<p>diminishing 收益减免  </p>\n<p>Health 血<br>Mana 魔法<br>move speed  移速<br>attack speed 攻速<br>regen 回复(血蓝)</p>\n<p>Rage 怒气<br>attack 攻击  </p>\n<p>lucky 幸运<br>curse 诅咒</p>\n<p>hit 命中<br>dodge 闪避 </p>\n<p>crithit 暴击<br>crithit resist 抗暴 </p>\n<p>resist 抗</p>\n<p>damage 伤害 </p>\n<p>pct 比例 </p>\n<p>dexterity 灵巧 </p>\n<p>elite 精英  </p>\n<p>Mitigation 减轻缓和<br>Bonus 增强 </p>\n<p>critical strike 致命一击</p>\n<p>Block 阻止</p>\n<p>Avoidance 回避<br>miss 丢失<br>dodge 闪避<br>parry 格挡 </p>\n<p>absorb 吸收<br>Deflect 扭曲<br>Evade 逃避<br>Immune 免疫<br>Reflect 反弹</p>\n<p>Resilience 恢复力/ 伤害减免</p>\n<p>Defense 防御  </p>\n<p>普通-Normal (大部分近战单位)</p>\n<p>穿刺-Pierce (大部分远程攻击单位)</p>\n<p>攻城-Siege (攻城单位)</p>\n<p>混乱-Chaos (一些野外生物，强力召唤单位)</p>\n<p>魔法-Magic (大部分的魔法单位和空中单位)</p>\n<blockquote>\n<p>魔法攻击对虚无形态的单位附加66%额外伤害。 </p>\n</blockquote>\n<p>英雄-Hero</p>\n<p>武器类型 </p>\n<blockquote>\n<p>普通-Normal<br>远程-Missile</p>\n</blockquote>\n<p>火炮-Artillery</p>\n<blockquote>\n<p>一般是攻城型单位的武器类型，特点是在杀死单位时有暴尸的效果。</p>\n</blockquote>\n<p>直接-Instant</p>\n<blockquote>\n<p>不同于一般的远程武器，它的特点是速度快，一般远程武器从发出“子弹”到“子弹”打到敌方单位都有可见的飞行路线，如女巫的攻击；而直接类型的武器是没有的，火枪手和蒸汽坦克都是很好的例子。</p>\n</blockquote>\n<p>溅射-Splash</p>\n<blockquote>\n<p>对攻击目标附近的单位造成一定的伤害，有全伤害范围、1/2伤害范围、1/4伤害范围的说明。</p>\n</blockquote>\n<p>特殊武器类型</p>\n<blockquote>\n<p>Mbounce:Missile+bounce远程反弹 女猎手特有的攻击方式，女猎手虽然是普通攻击，但是是远程的。<br>Msplash:Missile+splash 远程溅射 很多高等级远程单位的攻击方式。<br>Aline:Artillery+line 火炮直线 投刃车特有攻击方式。注意的是，这是投刃车研究好穿刺剑刃后的武器类型，在那之前，他只是火炮类型，只能攻击一个单位。直线攻击的特点是当攻击一个目标时，目标附近有攻击者的敌对单位，就对这个单位造成同等的伤害。有点类似于反弹，但是反弹对第二个目标的伤害是有减成的。<br>Mline:Missile+line 远程直线 狮鹫骑士特有攻击方式。注意的是，这是狮鹫骑士研究好风暴战锤后的武器类型，在那之前，他只是远程类型，只能攻击一个单位。</p>\n</blockquote>\n<p>护甲类型</p>\n<p>无甲-Unarmored (大部分魔法单位)</p>\n<blockquote>\n<p>一些无甲单位是出于平衡性的设定，比如女猎手、石像鬼、角鹰兽、风暴之鸦形态下的猛禽德鲁伊。<br>轻甲-Light (大部分空中单位)</p>\n</blockquote>\n<p>中甲-Medium (大部分远程攻击单位和农民)</p>\n<p>重甲-Heavy (大部分近战单位)</p>\n<p>城甲-Fort (建筑)</p>"},{"title":"ELITE","date":"2019-01-06T19:21:00.000Z","author":"yawei.zhang","_content":"\n\n\n### 对事物有极强的好奇心，并愿意与有好奇心的人惺惺相惜  \n---  \n\n在我看来，「好奇心」是辨别一个人是否聪明的「入门标准」。所谓入门标准，是指：[有好奇心的人未必聪明，但没有好奇心的人几乎一定不聪明。](#)  \n\n这里所说的「好奇心」，不是指爱八卦或者窥探别人的隐私之类，而是指：[在大部分人习以为常的场景下，有探究规律本质的欲望。](#)  \n\n> 举个例子：人类在地球上生活了那么多年，看了那么多日出日落，都没觉得有什么奇怪的地方。  \n> 但有一个人突然很好奇，为什么太阳从东边升起，西边落下，两次日出的时间间隔又差不多？  \n> 能意识到这个问题的人，就有成为聪明人的潜质。  \n\n当然，「好奇心」是可以伪造的。有些人，为了证明自己很有好奇心（继而证明自己很聪明），总是喜欢问各种各样「不明觉厉」的问题。  \n\n为此，我特意添上了后半句话：真正有好奇心的人，是愿意和另一个有好奇心的人惺惺相惜的。  \n\n如果你看到一个人，自己喜欢问很多问题，但是在别人提类似问题的时候却显得十分不耐烦，那就并不能说明他是一个有好奇心的人，只能说明他是「好表现」的人。   \n\n对于辨别一个人是否真正有好奇心，我这边有一个小 trick：   \n> 和人聊天时，有时对方会提到星座。如果他表现得对星座这个话题很感兴趣，我可能会向他抛出一个问题：   \n> **为什么很多人会觉得 处（chǔ）女座 的人有强（qiǎng）迫症呢？**   \n\n这个问题是很开放的，并没有什么标准答案。但我注意到，有相当一部分人会对这个问题表现出鄙夷和不耐烦，而他们本身却不是不相信星座的人。后来的事实证明，那些几乎都是不太聪明的人。   \n\n  <!-- more -->\n### 能在一件事情上极为专注\n---  \n\n「专注力」是另一个辨别一个人是否聪明的「入门标准」，即：高效的人未必聪明，但聪明的人必然高效。   \n\n这并不是说「聪明人」总能把自己的一天安排得井井有条。实际上，很多「聪明人」并非勤奋，有些甚至十分懒惰，但无论是勤奋的聪明人，还是懒惰的聪明人，都 总能在需要竭尽全力去做一件事情的时候调动起自己所有的注意力。在这段时间内，他能达到比常人高效很多倍的程度。    \n\n这真是一种天赋，硬生生地拉开了「聪明人」和「不太聪明的人」的距离。   \n\n```\n以上 2 条是聪明人的「入门标准」，但凡是聪明人，总该具备。  \n而下面 8 条则是聪明人的「进阶标准」，是聪明人容易具备的特性，但偶有几条不符合，也无妨。  \n```\n\n### 有极强的概括和拓展能力，并善于对不同的人用不同的方式解释同一个事件   \n---  \n\n正如很多回答所提到的，能用简单的语言去概括和抽象复杂的事件，是聪明人的另一个显著标志。   \n\n但聪明人同样知道，无论一个概括如何精准，都无法完全避免信息的缺失。因此，他们不仅仅会抽象一个复杂事件，也懂得如何去还原它——这意味着他们不仅需要拥有概括能力，并且懂得那些丢失的信息具有什么特性，从而便于自己拓展回去，甚至拓展更多。   \n\n有了这两方面的能力，他就可以把一件事情用各种不同的方式和信息量去描述。这使得在面对各种（与事情相关度不一）关心事件的人时，他可以依据对方对事物的了解水平，去选择最合适的讲解方式了。  \n\n\n### 用发展的眼光看问题，会不断修正对事物的印象   \n---  \n\n人们总说，我们对一件事或一个人的第一印象是非常重要的。   \n\n从心理学的角度说，这句话当然是对的。但我观察后发现，在平庸的环境中，这句话几乎可以成为金科玉律，但对聪明的人，这句话却可能不太适用。   \n\n这是因为，聪明人非常乐于用发展的眼光看问题，他们相信，事物是不断变化的。除此之外，他们十分乐于接受变化后的事物，对感兴趣的事物，他们热衷于比较变化前和变化后事物的区别，然后思考变化的原因。  \n\n与之相对的，大部分不太聪明的人却对事物的变化十分不敏感。这可能源于他们对事物认知方式的缺陷：他们中的很多人，喜欢给一个人和一件事贴上「标签」以便于记忆，这使得「去标签化」会让他们感到极为不适。  \n\n\n### 大多数在骨子里争强好胜，但也更愿意臣服于事实   \n---  \n\n什么叫「骨子里争强好胜」呢？ 就是说，虽然他们未必热爱口舌上的辩论，但在内心中，通常总有着稳定而难以侵犯的处世原则（他自己未必能感知到，但确实存在），一旦你试图动摇他的原则，他一定会不惜一切代价捍卫它。   \n\n事实上，他们的处世原则也往往是逻辑上高度自洽的，因为他们通常对「逻辑」有着高度的认同。这就使得，如果你用事实和逻辑去挑战他，他也更愿意承认自己的错误。  \n\n和聪明人辩论是很舒服的，因为他们十分清楚什么状况下该认输，极少会在不占理的情况下胡搅蛮缠。  \n\n\n### 在讨论问题时，会提前确认好口径和立场，这使得他们之间更容易达成共识  \n---  \n\n他们深知，世界上大部分无谓的争论，其本质在于定义和立场的不同。  \n\n因此，在讨论问题前，他们习惯于先去确认一些并不显而易见的概念的定义（在他们眼里，很多概念绝非普通人眼里那样显而易见），以及讨论问题的双方所在的立场。确认了这些以后，讨论问题往往会变得十分轻松，也十分容易达成共识。  \n\n\n### 往往能包容事物的多样性  \n---  \n\n这世上有很多反对同性恋、反对吃狗肉的人，而这些人在「聪明人」之中极为罕见。  \n\n他们知道，同性恋的人虽然和自己的性取向不同，但对社会并没有什么显性的害处；   \n他们知道，虽然自己不吃狗肉，但对有些人来说，吃狗肉和吃鸡肉、鸭肉、猪肉并没有太大的区别，这也不会对自己造成什么影响，所以没有必要去反对它。   \n\n对与自己不同而无害的「异类」的包容，从另一角度看，源于他们对自身「适应力」的自信。他们能和各种各样的人和睦相处，因此无需通过渴望别人和自己一样来获得安全感。   \n\n（当然，在这一点上，会有一小部分反例，如阿斯伯格综合征患者）   \n\n特别地，这种对自身适应力的自信，也会让他们在「独处」的时候也毫不费力。这也是很多回答中所提到的：聪明的人，一定善于独处。  \n\n\n### 鲜见低质量的社交   \n---  \n\n有一句很著名的话，「要知道，比你厉害的人通常是懒得鸟你的」。这确实是残酷的现实。   \n\n比如，在大学里，很多人喜欢在夜里和朋友们漫无目的地出去喝酒吹牛。  \n但在「聪明人」的群体中，这种情形则要少见得多。这不是说他们不近人情，他们不这么做，是因为 他们有意识地去控制「漫无目的」社交的时间。  \n\n「聪明人」往往更能感受到生命的短暂。自己的时间是宝贵的，即使要社交，也要用在刀刃上。与其和狐朋狗友喝个一醉方休，不如和身边一些拥有特殊能力和资源的人多聊聊天。如果暂时找不到，他们也更愿意一个人呆着。   \n\n\n### 很少因为自己的身份产生优越感，这使得能在特定问题上能虚心向比自己层次低的人请教   \n---  \n\n「聪明人」可能也会有优越感，但这种优越感不会来自于他们的身份，而是来自于他们的实力。   \n\n比如，一个考上北大的人，如果整天炫耀自己是北大的学生，他可能并不是特别聪明。因为这种优越感来自于「北大」这个身份，这就意味着，他在潜意识中觉得自己的身份高于自己的真实实力。   \n\n而一个真正聪明的人，对自己的能力高度自信，这使得他无需利用身份去证明自己的厉害。   \n\n这是一种更为健康的心态，一个对自己足够自信的人，很少会摆什么架子，这就使得他更愿意在特定的问题上毫不做作地虚心向比自己层次低的人请教。  \n\n\n### 善于在不同的人面前展现截然不同的个性   \n---  \n\n「聪明人」不会在所有人面前都让自己显得聪明。   \n\n因为他们知道，和不同的人，应该用什么方式社交，才能达到最高效、让自己最舒服的状态。  \n而在一些人面前显得聪明，反而会让他背负很多本不必背负的责任，从而成为他的累赘。  \n\n「聪明」是个大杀器，得好好掂量着用才能发挥最大的威力。   \n\n所以你看，很多聪明人在别人面前总显得傻乎乎的。   \n\n而那些真正傻乎乎的人，却以为自己才是聪明人呢~   \n","source":"_posts/2019-01-07-elite.md","raw":"---\ntitle: ELITE\ndate: 2019-01-07 03:21:00\nauthor: yawei.zhang \n---\n\n\n\n### 对事物有极强的好奇心，并愿意与有好奇心的人惺惺相惜  \n---  \n\n在我看来，「好奇心」是辨别一个人是否聪明的「入门标准」。所谓入门标准，是指：[有好奇心的人未必聪明，但没有好奇心的人几乎一定不聪明。](#)  \n\n这里所说的「好奇心」，不是指爱八卦或者窥探别人的隐私之类，而是指：[在大部分人习以为常的场景下，有探究规律本质的欲望。](#)  \n\n> 举个例子：人类在地球上生活了那么多年，看了那么多日出日落，都没觉得有什么奇怪的地方。  \n> 但有一个人突然很好奇，为什么太阳从东边升起，西边落下，两次日出的时间间隔又差不多？  \n> 能意识到这个问题的人，就有成为聪明人的潜质。  \n\n当然，「好奇心」是可以伪造的。有些人，为了证明自己很有好奇心（继而证明自己很聪明），总是喜欢问各种各样「不明觉厉」的问题。  \n\n为此，我特意添上了后半句话：真正有好奇心的人，是愿意和另一个有好奇心的人惺惺相惜的。  \n\n如果你看到一个人，自己喜欢问很多问题，但是在别人提类似问题的时候却显得十分不耐烦，那就并不能说明他是一个有好奇心的人，只能说明他是「好表现」的人。   \n\n对于辨别一个人是否真正有好奇心，我这边有一个小 trick：   \n> 和人聊天时，有时对方会提到星座。如果他表现得对星座这个话题很感兴趣，我可能会向他抛出一个问题：   \n> **为什么很多人会觉得 处（chǔ）女座 的人有强（qiǎng）迫症呢？**   \n\n这个问题是很开放的，并没有什么标准答案。但我注意到，有相当一部分人会对这个问题表现出鄙夷和不耐烦，而他们本身却不是不相信星座的人。后来的事实证明，那些几乎都是不太聪明的人。   \n\n  <!-- more -->\n### 能在一件事情上极为专注\n---  \n\n「专注力」是另一个辨别一个人是否聪明的「入门标准」，即：高效的人未必聪明，但聪明的人必然高效。   \n\n这并不是说「聪明人」总能把自己的一天安排得井井有条。实际上，很多「聪明人」并非勤奋，有些甚至十分懒惰，但无论是勤奋的聪明人，还是懒惰的聪明人，都 总能在需要竭尽全力去做一件事情的时候调动起自己所有的注意力。在这段时间内，他能达到比常人高效很多倍的程度。    \n\n这真是一种天赋，硬生生地拉开了「聪明人」和「不太聪明的人」的距离。   \n\n```\n以上 2 条是聪明人的「入门标准」，但凡是聪明人，总该具备。  \n而下面 8 条则是聪明人的「进阶标准」，是聪明人容易具备的特性，但偶有几条不符合，也无妨。  \n```\n\n### 有极强的概括和拓展能力，并善于对不同的人用不同的方式解释同一个事件   \n---  \n\n正如很多回答所提到的，能用简单的语言去概括和抽象复杂的事件，是聪明人的另一个显著标志。   \n\n但聪明人同样知道，无论一个概括如何精准，都无法完全避免信息的缺失。因此，他们不仅仅会抽象一个复杂事件，也懂得如何去还原它——这意味着他们不仅需要拥有概括能力，并且懂得那些丢失的信息具有什么特性，从而便于自己拓展回去，甚至拓展更多。   \n\n有了这两方面的能力，他就可以把一件事情用各种不同的方式和信息量去描述。这使得在面对各种（与事情相关度不一）关心事件的人时，他可以依据对方对事物的了解水平，去选择最合适的讲解方式了。  \n\n\n### 用发展的眼光看问题，会不断修正对事物的印象   \n---  \n\n人们总说，我们对一件事或一个人的第一印象是非常重要的。   \n\n从心理学的角度说，这句话当然是对的。但我观察后发现，在平庸的环境中，这句话几乎可以成为金科玉律，但对聪明的人，这句话却可能不太适用。   \n\n这是因为，聪明人非常乐于用发展的眼光看问题，他们相信，事物是不断变化的。除此之外，他们十分乐于接受变化后的事物，对感兴趣的事物，他们热衷于比较变化前和变化后事物的区别，然后思考变化的原因。  \n\n与之相对的，大部分不太聪明的人却对事物的变化十分不敏感。这可能源于他们对事物认知方式的缺陷：他们中的很多人，喜欢给一个人和一件事贴上「标签」以便于记忆，这使得「去标签化」会让他们感到极为不适。  \n\n\n### 大多数在骨子里争强好胜，但也更愿意臣服于事实   \n---  \n\n什么叫「骨子里争强好胜」呢？ 就是说，虽然他们未必热爱口舌上的辩论，但在内心中，通常总有着稳定而难以侵犯的处世原则（他自己未必能感知到，但确实存在），一旦你试图动摇他的原则，他一定会不惜一切代价捍卫它。   \n\n事实上，他们的处世原则也往往是逻辑上高度自洽的，因为他们通常对「逻辑」有着高度的认同。这就使得，如果你用事实和逻辑去挑战他，他也更愿意承认自己的错误。  \n\n和聪明人辩论是很舒服的，因为他们十分清楚什么状况下该认输，极少会在不占理的情况下胡搅蛮缠。  \n\n\n### 在讨论问题时，会提前确认好口径和立场，这使得他们之间更容易达成共识  \n---  \n\n他们深知，世界上大部分无谓的争论，其本质在于定义和立场的不同。  \n\n因此，在讨论问题前，他们习惯于先去确认一些并不显而易见的概念的定义（在他们眼里，很多概念绝非普通人眼里那样显而易见），以及讨论问题的双方所在的立场。确认了这些以后，讨论问题往往会变得十分轻松，也十分容易达成共识。  \n\n\n### 往往能包容事物的多样性  \n---  \n\n这世上有很多反对同性恋、反对吃狗肉的人，而这些人在「聪明人」之中极为罕见。  \n\n他们知道，同性恋的人虽然和自己的性取向不同，但对社会并没有什么显性的害处；   \n他们知道，虽然自己不吃狗肉，但对有些人来说，吃狗肉和吃鸡肉、鸭肉、猪肉并没有太大的区别，这也不会对自己造成什么影响，所以没有必要去反对它。   \n\n对与自己不同而无害的「异类」的包容，从另一角度看，源于他们对自身「适应力」的自信。他们能和各种各样的人和睦相处，因此无需通过渴望别人和自己一样来获得安全感。   \n\n（当然，在这一点上，会有一小部分反例，如阿斯伯格综合征患者）   \n\n特别地，这种对自身适应力的自信，也会让他们在「独处」的时候也毫不费力。这也是很多回答中所提到的：聪明的人，一定善于独处。  \n\n\n### 鲜见低质量的社交   \n---  \n\n有一句很著名的话，「要知道，比你厉害的人通常是懒得鸟你的」。这确实是残酷的现实。   \n\n比如，在大学里，很多人喜欢在夜里和朋友们漫无目的地出去喝酒吹牛。  \n但在「聪明人」的群体中，这种情形则要少见得多。这不是说他们不近人情，他们不这么做，是因为 他们有意识地去控制「漫无目的」社交的时间。  \n\n「聪明人」往往更能感受到生命的短暂。自己的时间是宝贵的，即使要社交，也要用在刀刃上。与其和狐朋狗友喝个一醉方休，不如和身边一些拥有特殊能力和资源的人多聊聊天。如果暂时找不到，他们也更愿意一个人呆着。   \n\n\n### 很少因为自己的身份产生优越感，这使得能在特定问题上能虚心向比自己层次低的人请教   \n---  \n\n「聪明人」可能也会有优越感，但这种优越感不会来自于他们的身份，而是来自于他们的实力。   \n\n比如，一个考上北大的人，如果整天炫耀自己是北大的学生，他可能并不是特别聪明。因为这种优越感来自于「北大」这个身份，这就意味着，他在潜意识中觉得自己的身份高于自己的真实实力。   \n\n而一个真正聪明的人，对自己的能力高度自信，这使得他无需利用身份去证明自己的厉害。   \n\n这是一种更为健康的心态，一个对自己足够自信的人，很少会摆什么架子，这就使得他更愿意在特定的问题上毫不做作地虚心向比自己层次低的人请教。  \n\n\n### 善于在不同的人面前展现截然不同的个性   \n---  \n\n「聪明人」不会在所有人面前都让自己显得聪明。   \n\n因为他们知道，和不同的人，应该用什么方式社交，才能达到最高效、让自己最舒服的状态。  \n而在一些人面前显得聪明，反而会让他背负很多本不必背负的责任，从而成为他的累赘。  \n\n「聪明」是个大杀器，得好好掂量着用才能发挥最大的威力。   \n\n所以你看，很多聪明人在别人面前总显得傻乎乎的。   \n\n而那些真正傻乎乎的人，却以为自己才是聪明人呢~   \n","slug":"2019-01-07-elite","published":1,"updated":"2019-01-17T14:04:25.997Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck44ekz2m000wr45h7wwza2yc","content":"<h3><span id=\"对事物有极强的好奇心并愿意与有好奇心的人惺惺相惜\">对事物有极强的好奇心，并愿意与有好奇心的人惺惺相惜</span></h3><hr>\n<p>在我看来，「好奇心」是辨别一个人是否聪明的「入门标准」。所谓入门标准，是指：<a href=\"#\">有好奇心的人未必聪明，但没有好奇心的人几乎一定不聪明。</a>  </p>\n<p>这里所说的「好奇心」，不是指爱八卦或者窥探别人的隐私之类，而是指：<a href=\"#\">在大部分人习以为常的场景下，有探究规律本质的欲望。</a>  </p>\n<blockquote>\n<p>举个例子：人类在地球上生活了那么多年，看了那么多日出日落，都没觉得有什么奇怪的地方。<br>但有一个人突然很好奇，为什么太阳从东边升起，西边落下，两次日出的时间间隔又差不多？<br>能意识到这个问题的人，就有成为聪明人的潜质。  </p>\n</blockquote>\n<p>当然，「好奇心」是可以伪造的。有些人，为了证明自己很有好奇心（继而证明自己很聪明），总是喜欢问各种各样「不明觉厉」的问题。  </p>\n<p>为此，我特意添上了后半句话：真正有好奇心的人，是愿意和另一个有好奇心的人惺惺相惜的。  </p>\n<p>如果你看到一个人，自己喜欢问很多问题，但是在别人提类似问题的时候却显得十分不耐烦，那就并不能说明他是一个有好奇心的人，只能说明他是「好表现」的人。   </p>\n<p>对于辨别一个人是否真正有好奇心，我这边有一个小 trick：   </p>\n<blockquote>\n<p>和人聊天时，有时对方会提到星座。如果他表现得对星座这个话题很感兴趣，我可能会向他抛出一个问题：<br><strong>为什么很多人会觉得 处（chǔ）女座 的人有强（qiǎng）迫症呢？</strong>   </p>\n</blockquote>\n<p>这个问题是很开放的，并没有什么标准答案。但我注意到，有相当一部分人会对这个问题表现出鄙夷和不耐烦，而他们本身却不是不相信星座的人。后来的事实证明，那些几乎都是不太聪明的人。   </p>\n  <a id=\"more\"></a>\n<h3><span id=\"能在一件事情上极为专注\">能在一件事情上极为专注</span></h3><hr>\n<p>「专注力」是另一个辨别一个人是否聪明的「入门标准」，即：高效的人未必聪明，但聪明的人必然高效。   </p>\n<p>这并不是说「聪明人」总能把自己的一天安排得井井有条。实际上，很多「聪明人」并非勤奋，有些甚至十分懒惰，但无论是勤奋的聪明人，还是懒惰的聪明人，都 总能在需要竭尽全力去做一件事情的时候调动起自己所有的注意力。在这段时间内，他能达到比常人高效很多倍的程度。    </p>\n<p>这真是一种天赋，硬生生地拉开了「聪明人」和「不太聪明的人」的距离。   </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">以上 2 条是聪明人的「入门标准」，但凡是聪明人，总该具备。  </span><br><span class=\"line\">而下面 8 条则是聪明人的「进阶标准」，是聪明人容易具备的特性，但偶有几条不符合，也无妨。</span><br></pre></td></tr></table></figure>\n\n<h3><span id=\"有极强的概括和拓展能力并善于对不同的人用不同的方式解释同一个事件\">有极强的概括和拓展能力，并善于对不同的人用不同的方式解释同一个事件</span></h3><hr>\n<p>正如很多回答所提到的，能用简单的语言去概括和抽象复杂的事件，是聪明人的另一个显著标志。   </p>\n<p>但聪明人同样知道，无论一个概括如何精准，都无法完全避免信息的缺失。因此，他们不仅仅会抽象一个复杂事件，也懂得如何去还原它——这意味着他们不仅需要拥有概括能力，并且懂得那些丢失的信息具有什么特性，从而便于自己拓展回去，甚至拓展更多。   </p>\n<p>有了这两方面的能力，他就可以把一件事情用各种不同的方式和信息量去描述。这使得在面对各种（与事情相关度不一）关心事件的人时，他可以依据对方对事物的了解水平，去选择最合适的讲解方式了。  </p>\n<h3><span id=\"用发展的眼光看问题会不断修正对事物的印象\">用发展的眼光看问题，会不断修正对事物的印象</span></h3><hr>\n<p>人们总说，我们对一件事或一个人的第一印象是非常重要的。   </p>\n<p>从心理学的角度说，这句话当然是对的。但我观察后发现，在平庸的环境中，这句话几乎可以成为金科玉律，但对聪明的人，这句话却可能不太适用。   </p>\n<p>这是因为，聪明人非常乐于用发展的眼光看问题，他们相信，事物是不断变化的。除此之外，他们十分乐于接受变化后的事物，对感兴趣的事物，他们热衷于比较变化前和变化后事物的区别，然后思考变化的原因。  </p>\n<p>与之相对的，大部分不太聪明的人却对事物的变化十分不敏感。这可能源于他们对事物认知方式的缺陷：他们中的很多人，喜欢给一个人和一件事贴上「标签」以便于记忆，这使得「去标签化」会让他们感到极为不适。  </p>\n<h3><span id=\"大多数在骨子里争强好胜但也更愿意臣服于事实\">大多数在骨子里争强好胜，但也更愿意臣服于事实</span></h3><hr>\n<p>什么叫「骨子里争强好胜」呢？ 就是说，虽然他们未必热爱口舌上的辩论，但在内心中，通常总有着稳定而难以侵犯的处世原则（他自己未必能感知到，但确实存在），一旦你试图动摇他的原则，他一定会不惜一切代价捍卫它。   </p>\n<p>事实上，他们的处世原则也往往是逻辑上高度自洽的，因为他们通常对「逻辑」有着高度的认同。这就使得，如果你用事实和逻辑去挑战他，他也更愿意承认自己的错误。  </p>\n<p>和聪明人辩论是很舒服的，因为他们十分清楚什么状况下该认输，极少会在不占理的情况下胡搅蛮缠。  </p>\n<h3><span id=\"在讨论问题时会提前确认好口径和立场这使得他们之间更容易达成共识\">在讨论问题时，会提前确认好口径和立场，这使得他们之间更容易达成共识</span></h3><hr>\n<p>他们深知，世界上大部分无谓的争论，其本质在于定义和立场的不同。  </p>\n<p>因此，在讨论问题前，他们习惯于先去确认一些并不显而易见的概念的定义（在他们眼里，很多概念绝非普通人眼里那样显而易见），以及讨论问题的双方所在的立场。确认了这些以后，讨论问题往往会变得十分轻松，也十分容易达成共识。  </p>\n<h3><span id=\"往往能包容事物的多样性\">往往能包容事物的多样性</span></h3><hr>\n<p>这世上有很多反对同性恋、反对吃狗肉的人，而这些人在「聪明人」之中极为罕见。  </p>\n<p>他们知道，同性恋的人虽然和自己的性取向不同，但对社会并没有什么显性的害处；<br>他们知道，虽然自己不吃狗肉，但对有些人来说，吃狗肉和吃鸡肉、鸭肉、猪肉并没有太大的区别，这也不会对自己造成什么影响，所以没有必要去反对它。   </p>\n<p>对与自己不同而无害的「异类」的包容，从另一角度看，源于他们对自身「适应力」的自信。他们能和各种各样的人和睦相处，因此无需通过渴望别人和自己一样来获得安全感。   </p>\n<p>（当然，在这一点上，会有一小部分反例，如阿斯伯格综合征患者）   </p>\n<p>特别地，这种对自身适应力的自信，也会让他们在「独处」的时候也毫不费力。这也是很多回答中所提到的：聪明的人，一定善于独处。  </p>\n<h3><span id=\"鲜见低质量的社交\">鲜见低质量的社交</span></h3><hr>\n<p>有一句很著名的话，「要知道，比你厉害的人通常是懒得鸟你的」。这确实是残酷的现实。   </p>\n<p>比如，在大学里，很多人喜欢在夜里和朋友们漫无目的地出去喝酒吹牛。<br>但在「聪明人」的群体中，这种情形则要少见得多。这不是说他们不近人情，他们不这么做，是因为 他们有意识地去控制「漫无目的」社交的时间。  </p>\n<p>「聪明人」往往更能感受到生命的短暂。自己的时间是宝贵的，即使要社交，也要用在刀刃上。与其和狐朋狗友喝个一醉方休，不如和身边一些拥有特殊能力和资源的人多聊聊天。如果暂时找不到，他们也更愿意一个人呆着。   </p>\n<h3><span id=\"很少因为自己的身份产生优越感这使得能在特定问题上能虚心向比自己层次低的人请教\">很少因为自己的身份产生优越感，这使得能在特定问题上能虚心向比自己层次低的人请教</span></h3><hr>\n<p>「聪明人」可能也会有优越感，但这种优越感不会来自于他们的身份，而是来自于他们的实力。   </p>\n<p>比如，一个考上北大的人，如果整天炫耀自己是北大的学生，他可能并不是特别聪明。因为这种优越感来自于「北大」这个身份，这就意味着，他在潜意识中觉得自己的身份高于自己的真实实力。   </p>\n<p>而一个真正聪明的人，对自己的能力高度自信，这使得他无需利用身份去证明自己的厉害。   </p>\n<p>这是一种更为健康的心态，一个对自己足够自信的人，很少会摆什么架子，这就使得他更愿意在特定的问题上毫不做作地虚心向比自己层次低的人请教。  </p>\n<h3><span id=\"善于在不同的人面前展现截然不同的个性\">善于在不同的人面前展现截然不同的个性</span></h3><hr>\n<p>「聪明人」不会在所有人面前都让自己显得聪明。   </p>\n<p>因为他们知道，和不同的人，应该用什么方式社交，才能达到最高效、让自己最舒服的状态。<br>而在一些人面前显得聪明，反而会让他背负很多本不必背负的责任，从而成为他的累赘。  </p>\n<p>「聪明」是个大杀器，得好好掂量着用才能发挥最大的威力。   </p>\n<p>所以你看，很多聪明人在别人面前总显得傻乎乎的。   </p>\n<p>而那些真正傻乎乎的人，却以为自己才是聪明人呢~</p>\n","site":{"data":{}},"excerpt":"<h3 id=\"对事物有极强的好奇心，并愿意与有好奇心的人惺惺相惜\"><a href=\"#对事物有极强的好奇心，并愿意与有好奇心的人惺惺相惜\" class=\"headerlink\" title=\"对事物有极强的好奇心，并愿意与有好奇心的人惺惺相惜\"></a>对事物有极强的好奇心，并愿意与有好奇心的人惺惺相惜</h3><hr>\n<p>在我看来，「好奇心」是辨别一个人是否聪明的「入门标准」。所谓入门标准，是指：<a href=\"#\">有好奇心的人未必聪明，但没有好奇心的人几乎一定不聪明。</a>  </p>\n<p>这里所说的「好奇心」，不是指爱八卦或者窥探别人的隐私之类，而是指：<a href=\"#\">在大部分人习以为常的场景下，有探究规律本质的欲望。</a>  </p>\n<blockquote>\n<p>举个例子：人类在地球上生活了那么多年，看了那么多日出日落，都没觉得有什么奇怪的地方。<br>但有一个人突然很好奇，为什么太阳从东边升起，西边落下，两次日出的时间间隔又差不多？<br>能意识到这个问题的人，就有成为聪明人的潜质。  </p>\n</blockquote>\n<p>当然，「好奇心」是可以伪造的。有些人，为了证明自己很有好奇心（继而证明自己很聪明），总是喜欢问各种各样「不明觉厉」的问题。  </p>\n<p>为此，我特意添上了后半句话：真正有好奇心的人，是愿意和另一个有好奇心的人惺惺相惜的。  </p>\n<p>如果你看到一个人，自己喜欢问很多问题，但是在别人提类似问题的时候却显得十分不耐烦，那就并不能说明他是一个有好奇心的人，只能说明他是「好表现」的人。   </p>\n<p>对于辨别一个人是否真正有好奇心，我这边有一个小 trick：   </p>\n<blockquote>\n<p>和人聊天时，有时对方会提到星座。如果他表现得对星座这个话题很感兴趣，我可能会向他抛出一个问题：<br><strong>为什么很多人会觉得 处（chǔ）女座 的人有强（qiǎng）迫症呢？</strong>   </p>\n</blockquote>\n<p>这个问题是很开放的，并没有什么标准答案。但我注意到，有相当一部分人会对这个问题表现出鄙夷和不耐烦，而他们本身却不是不相信星座的人。后来的事实证明，那些几乎都是不太聪明的人。   </p>","more":"<h3 id=\"能在一件事情上极为专注\"><a href=\"#能在一件事情上极为专注\" class=\"headerlink\" title=\"能在一件事情上极为专注\"></a>能在一件事情上极为专注</h3><hr>\n<p>「专注力」是另一个辨别一个人是否聪明的「入门标准」，即：高效的人未必聪明，但聪明的人必然高效。   </p>\n<p>这并不是说「聪明人」总能把自己的一天安排得井井有条。实际上，很多「聪明人」并非勤奋，有些甚至十分懒惰，但无论是勤奋的聪明人，还是懒惰的聪明人，都 总能在需要竭尽全力去做一件事情的时候调动起自己所有的注意力。在这段时间内，他能达到比常人高效很多倍的程度。    </p>\n<p>这真是一种天赋，硬生生地拉开了「聪明人」和「不太聪明的人」的距离。   </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">以上 2 条是聪明人的「入门标准」，但凡是聪明人，总该具备。  </span><br><span class=\"line\">而下面 8 条则是聪明人的「进阶标准」，是聪明人容易具备的特性，但偶有几条不符合，也无妨。</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"有极强的概括和拓展能力，并善于对不同的人用不同的方式解释同一个事件\"><a href=\"#有极强的概括和拓展能力，并善于对不同的人用不同的方式解释同一个事件\" class=\"headerlink\" title=\"有极强的概括和拓展能力，并善于对不同的人用不同的方式解释同一个事件\"></a>有极强的概括和拓展能力，并善于对不同的人用不同的方式解释同一个事件</h3><hr>\n<p>正如很多回答所提到的，能用简单的语言去概括和抽象复杂的事件，是聪明人的另一个显著标志。   </p>\n<p>但聪明人同样知道，无论一个概括如何精准，都无法完全避免信息的缺失。因此，他们不仅仅会抽象一个复杂事件，也懂得如何去还原它——这意味着他们不仅需要拥有概括能力，并且懂得那些丢失的信息具有什么特性，从而便于自己拓展回去，甚至拓展更多。   </p>\n<p>有了这两方面的能力，他就可以把一件事情用各种不同的方式和信息量去描述。这使得在面对各种（与事情相关度不一）关心事件的人时，他可以依据对方对事物的了解水平，去选择最合适的讲解方式了。  </p>\n<h3 id=\"用发展的眼光看问题，会不断修正对事物的印象\"><a href=\"#用发展的眼光看问题，会不断修正对事物的印象\" class=\"headerlink\" title=\"用发展的眼光看问题，会不断修正对事物的印象\"></a>用发展的眼光看问题，会不断修正对事物的印象</h3><hr>\n<p>人们总说，我们对一件事或一个人的第一印象是非常重要的。   </p>\n<p>从心理学的角度说，这句话当然是对的。但我观察后发现，在平庸的环境中，这句话几乎可以成为金科玉律，但对聪明的人，这句话却可能不太适用。   </p>\n<p>这是因为，聪明人非常乐于用发展的眼光看问题，他们相信，事物是不断变化的。除此之外，他们十分乐于接受变化后的事物，对感兴趣的事物，他们热衷于比较变化前和变化后事物的区别，然后思考变化的原因。  </p>\n<p>与之相对的，大部分不太聪明的人却对事物的变化十分不敏感。这可能源于他们对事物认知方式的缺陷：他们中的很多人，喜欢给一个人和一件事贴上「标签」以便于记忆，这使得「去标签化」会让他们感到极为不适。  </p>\n<h3 id=\"大多数在骨子里争强好胜，但也更愿意臣服于事实\"><a href=\"#大多数在骨子里争强好胜，但也更愿意臣服于事实\" class=\"headerlink\" title=\"大多数在骨子里争强好胜，但也更愿意臣服于事实\"></a>大多数在骨子里争强好胜，但也更愿意臣服于事实</h3><hr>\n<p>什么叫「骨子里争强好胜」呢？ 就是说，虽然他们未必热爱口舌上的辩论，但在内心中，通常总有着稳定而难以侵犯的处世原则（他自己未必能感知到，但确实存在），一旦你试图动摇他的原则，他一定会不惜一切代价捍卫它。   </p>\n<p>事实上，他们的处世原则也往往是逻辑上高度自洽的，因为他们通常对「逻辑」有着高度的认同。这就使得，如果你用事实和逻辑去挑战他，他也更愿意承认自己的错误。  </p>\n<p>和聪明人辩论是很舒服的，因为他们十分清楚什么状况下该认输，极少会在不占理的情况下胡搅蛮缠。  </p>\n<h3 id=\"在讨论问题时，会提前确认好口径和立场，这使得他们之间更容易达成共识\"><a href=\"#在讨论问题时，会提前确认好口径和立场，这使得他们之间更容易达成共识\" class=\"headerlink\" title=\"在讨论问题时，会提前确认好口径和立场，这使得他们之间更容易达成共识\"></a>在讨论问题时，会提前确认好口径和立场，这使得他们之间更容易达成共识</h3><hr>\n<p>他们深知，世界上大部分无谓的争论，其本质在于定义和立场的不同。  </p>\n<p>因此，在讨论问题前，他们习惯于先去确认一些并不显而易见的概念的定义（在他们眼里，很多概念绝非普通人眼里那样显而易见），以及讨论问题的双方所在的立场。确认了这些以后，讨论问题往往会变得十分轻松，也十分容易达成共识。  </p>\n<h3 id=\"往往能包容事物的多样性\"><a href=\"#往往能包容事物的多样性\" class=\"headerlink\" title=\"往往能包容事物的多样性\"></a>往往能包容事物的多样性</h3><hr>\n<p>这世上有很多反对同性恋、反对吃狗肉的人，而这些人在「聪明人」之中极为罕见。  </p>\n<p>他们知道，同性恋的人虽然和自己的性取向不同，但对社会并没有什么显性的害处；<br>他们知道，虽然自己不吃狗肉，但对有些人来说，吃狗肉和吃鸡肉、鸭肉、猪肉并没有太大的区别，这也不会对自己造成什么影响，所以没有必要去反对它。   </p>\n<p>对与自己不同而无害的「异类」的包容，从另一角度看，源于他们对自身「适应力」的自信。他们能和各种各样的人和睦相处，因此无需通过渴望别人和自己一样来获得安全感。   </p>\n<p>（当然，在这一点上，会有一小部分反例，如阿斯伯格综合征患者）   </p>\n<p>特别地，这种对自身适应力的自信，也会让他们在「独处」的时候也毫不费力。这也是很多回答中所提到的：聪明的人，一定善于独处。  </p>\n<h3 id=\"鲜见低质量的社交\"><a href=\"#鲜见低质量的社交\" class=\"headerlink\" title=\"鲜见低质量的社交\"></a>鲜见低质量的社交</h3><hr>\n<p>有一句很著名的话，「要知道，比你厉害的人通常是懒得鸟你的」。这确实是残酷的现实。   </p>\n<p>比如，在大学里，很多人喜欢在夜里和朋友们漫无目的地出去喝酒吹牛。<br>但在「聪明人」的群体中，这种情形则要少见得多。这不是说他们不近人情，他们不这么做，是因为 他们有意识地去控制「漫无目的」社交的时间。  </p>\n<p>「聪明人」往往更能感受到生命的短暂。自己的时间是宝贵的，即使要社交，也要用在刀刃上。与其和狐朋狗友喝个一醉方休，不如和身边一些拥有特殊能力和资源的人多聊聊天。如果暂时找不到，他们也更愿意一个人呆着。   </p>\n<h3 id=\"很少因为自己的身份产生优越感，这使得能在特定问题上能虚心向比自己层次低的人请教\"><a href=\"#很少因为自己的身份产生优越感，这使得能在特定问题上能虚心向比自己层次低的人请教\" class=\"headerlink\" title=\"很少因为自己的身份产生优越感，这使得能在特定问题上能虚心向比自己层次低的人请教\"></a>很少因为自己的身份产生优越感，这使得能在特定问题上能虚心向比自己层次低的人请教</h3><hr>\n<p>「聪明人」可能也会有优越感，但这种优越感不会来自于他们的身份，而是来自于他们的实力。   </p>\n<p>比如，一个考上北大的人，如果整天炫耀自己是北大的学生，他可能并不是特别聪明。因为这种优越感来自于「北大」这个身份，这就意味着，他在潜意识中觉得自己的身份高于自己的真实实力。   </p>\n<p>而一个真正聪明的人，对自己的能力高度自信，这使得他无需利用身份去证明自己的厉害。   </p>\n<p>这是一种更为健康的心态，一个对自己足够自信的人，很少会摆什么架子，这就使得他更愿意在特定的问题上毫不做作地虚心向比自己层次低的人请教。  </p>\n<h3 id=\"善于在不同的人面前展现截然不同的个性\"><a href=\"#善于在不同的人面前展现截然不同的个性\" class=\"headerlink\" title=\"善于在不同的人面前展现截然不同的个性\"></a>善于在不同的人面前展现截然不同的个性</h3><hr>\n<p>「聪明人」不会在所有人面前都让自己显得聪明。   </p>\n<p>因为他们知道，和不同的人，应该用什么方式社交，才能达到最高效、让自己最舒服的状态。<br>而在一些人面前显得聪明，反而会让他背负很多本不必背负的责任，从而成为他的累赘。  </p>\n<p>「聪明」是个大杀器，得好好掂量着用才能发挥最大的威力。   </p>\n<p>所以你看，很多聪明人在别人面前总显得傻乎乎的。   </p>\n<p>而那些真正傻乎乎的人，却以为自己才是聪明人呢~</p>"},{"title":"FPS游戏同步术语","date":"2019-01-07T09:21:00.000Z","author":"yawei.zhang","_content":"\n在一个采用C/S架构的游戏中，客户端和服务端的游戏状态有差异是不可避免的。客户端和服务端各自都维护了一份游戏状态。这两份游戏状态依赖网络包通信保持同步。但由于各客户端到服务端的时延具有不确定性，游戏状态同步变得非常困难。通常服务端在游戏拓扑中承载的是状态仲裁者的角色，客户端玩家看到的“经验证”的有效游戏状态总是延后于服务端的游戏状态。  \n\n网络时延是必然存在的，所以游戏状态的不同步也是必然存在的。但我们可以通过技术手段尽量减轻不同步问题对用户体验带来的影响。  \n  <!-- more -->  \n  \n1）**Latency**：Latency指的是数据包从客户端发送到服务端再收到服务端回包所用的时间，通常被称为RTT。虽然单程的数据包传输时间并不总是等于RTT/2，但是简单起见我们可以认为两者是相等的。下文说到Latency都是说一个RTT时间，单程Latency则是指RTT/2。\n\n80年代有个工具叫ping使用ICMP echo测试延迟，所以人们常把RTT和ping联系起来。ping这个指令现在还在用。\n\n2）**Hit Box**：角色的3D模型代表了哪些区域是参与到“命中”计算的。你看不到hit box，你只能看到模型。hit box可能比模型大，也可能比模型小，也有可能很不精确，这都取决于具体的实现。我们知道，tick rate会影响命中判定，但是hit box不精确可能对玩家在是否命中方面的感受影响更大。\n\n3）**Tick Rate**：Tick Rate指游戏服务端更新游戏状态的频率。单位是hertz。如果服务器的Tick Rate是64，这就意味着服务端每秒钟最多向客户端发送64次数据包。这些同步数据包包括了游戏状态更新，比如player和场景对象位置等。一次tick的长度就是其持续时间，单位为ms。\n\n比如，64 rate时tick长度是15.6ms，20 rate时是50ms，10 rate时是100ms\n\n4）**Client Update Rate**：这是客户端接收服务端更新的频率。比如说，如果client update rate是20，而服务器tick rate是64，那么从体验上来说，这个客户端实际是在和一个tick rate为20的服务器联机。通常这个是配在客户端本地的，也有可能是写死的。\n\n5）**Framerate**：这个是指客户端每秒最多可以渲染多少帧，通常被称为FPS\n\n6）**Refresh Rate**：显示设备每秒钟刷新多少次。单位为hertz。如果framerate是30，一个显示频率为60的设备将把每个画面显示两次。反过来，如果framerate是120，但是显示频率为60，那么显示设备只能显示每秒60帧。显示设备的频率比framerate大，提升framerate才有意义。大多数显示设备频率是60或120。\n\n7）**Interpolation**：这是一种平滑场景对象移动的技术。实际上内插值所做的就是在场景对象的两个位置之间做插值，以让运动过程平滑。插值延迟通常是2tick，也不尽然。举个内插值的例子，如果一个玩家沿着一条直线移动，在tick1的时候位置在0.5m，在tick2的时候位置在1m，内插值的作用就是让客户端看起来是平滑的从0.5m移到1m。但是服务器实际看到的是离散的位置，要么在0.5m或1m，不可能在中间的某个位置。如果没有插值，游戏的抖动将非常明显，特别是在从服务端更新了一个运动对象的位置后。内插值只在客户端做，实际上减慢了将整个游戏状态绘制到屏幕上的速率。\n\n8）**Extrapolation**：这是客户端补偿延迟的另一种技术。客户端将场景对象的位置做外插值，这样就不会导致绘制的时候没有更新到新数据。通常优先使用内插值，特别是FPS游戏，因为玩家的移动是不可预期的，外插值的结果可能通常是错的。\n\n9）**Lag Compensation**：延迟补偿是服务端减小客户端延迟影响的一种方法。如果没有延迟补偿，或者延迟补偿做的不好，由于客户端看到的是经过延迟后的游戏状态，玩家要命中目标就必须使用一些预判技巧。实际上，延迟补偿所做的，就是当服务器从客户端收到操作（比如开枪）后，将操作发生时间往回调一个单向时延的时间。服务端游戏状态和客户端游戏状态的时间差异（也被称为\"Client Delay\"）可用下式给出：\n\nClientDelay = (1/2 * Latency) + InterpolationDelay\n\n延迟补偿的实际操作步骤：\n\n1.  Player A看到Player B向一个角落跑去\n2.  Player A开枪，其客户端把这个操作发送给服务器\n3.  假定A的延迟的一半是Xms，那么Xms后服务器将收到Player A的操作\n4.  服务器从记录的历史信息中找到A开枪时B所在的位置。一般情况下，服务器应该往回看 (Xms + Player A's interpolation delay) 来回滚到A开枪时的游戏状态。但是这个时间是可以调的，取决于开发者希望延迟补偿算法如何工作。\n5.  服务器判定这次的开枪是否命中。如果子弹的轨迹和目标模型的hit box相交，就认为是命中了。在这个例子中，我们假定命中了。在Player B看来，他觉得自己已经躲到墙后面了。但是Player B看到的游戏状态所处的时间和Server认定的开枪时间是有差异的，可以表示为：  \n    (1/2 * PlayerALatency + 1/2 * PlayerBLatency + TimeSinceLastTick)\n6.  在下一次tick中，服务器使用计算结果更新所有客户端：Player A看到自己命中了目标，Player B看到自己掉血或挂掉了。\n\n需要注意的是，如果两个玩家对射，而且都命中了，游戏如何处理就取决于实现了。比如说在CS:GO中，如果先收到的射击操作命中了目标玩家，那么后续收到的那个玩家的射击就会被丢弃。这样就避免了两个玩家的射击请求在同一帧，然后都命中，都挂掉。在Overwatch中，这种情况是可能的。这里是有取舍的。\n\n按照CS:GO的做法，网络较好的玩家是有很大优势的。经常会有“我在挂掉前打中了目标，但是他没死”的情况。你甚至在挂掉前能听到你的枪响和命中的声音，却没对目标造成伤害。\n\n若是在Overwatch中，玩家反应时间的差异对结果影响较小。比如说，如果服务器tick rate是64，若Player A比Player B早15ms射击，那么双方的射击都是在同一个15.6ms tick之内，所以最终结果是双方都命中，都死掉了。\n\n如果延迟补偿过度，就会出现“我朝目标早前的位置开枪，却还是命中他了”。  \n若延迟补偿不足，则会出现“我必须对目标的移动做预判，这样才能命中”。  \n服务器做延迟补偿所记录的历史数据应该是有限的，不然高延迟的玩家会明显拖累其他玩家的游戏体验。\n\n在Overwatch中，服务端延迟补偿也被称为Favoring the shooter，也就是说，如果你在自己屏幕上瞄准了目标并射击，那么很大概率将命中目标。也有例外情况。比如，若你射击目标的那一刻，目标跳跃躲开了，这时服务器认为目标做了一个完美的闪避，可能会被判断未命中。所以计算命中时并不总是使用射击那一刻的信息。这是为了玩家体验打的补丁。\n\n如果你是要设计一套同步方案，根据设计目的不同可能有不同的方案。公平性、即时反馈、网络流量等都可能是重要的设计目标。可以参考以下因素：\n\n1）网络链接。延迟越低越好。选择一个延迟最低的服务器开始游戏是很重要的。网络上的拥塞程度也会导致网络延迟。延迟补偿可以帮助解决“射击和命中”的问题，但是如果你的网络不好，更多的情况下，你可能会体验到“已经跑到墙后面还是被打中”或者“我先射击但还是死掉了”的情况。\n\n2）如果你的客户端frame rate很低（只要低于显示设备刷新频率或跟他差不多），会导致感受延迟变大，通常比tick rate带来的问题更严重。\n\n3）尽量使用内插值。大多数游戏使用的内插值间隔是tick间隔的两倍，主要考虑到如果一个数据包丢掉了，玩家的移动中断也不会在屏幕上表现出来。如果网络状况很好，没有丢包，把插值间隔设置为tick间隔是没有问题的。但是如果有丢包，就会导致抖动。比如在CS:GO中，这对体验的影响比把服务端tick rate从20调高到64带来的体验影响更明显。如果这个值设的太低，会导致极大的抖动。\n\n4）如果有可能，你应该增加游戏的client update rate来优化体验。其代价是CPU和带宽消耗。对于客户端来说，除非你家的网络带宽非常低，增加CPU和带宽消耗是可以接受的。\n\n5）如果你的显示设备刷新率是60hz，那么很有可能你根本感受不到tick rate在64和128会有什么差异，因为由于tick rate差异导致的改变根本无法通过你的显示设备体现出来。\n\n6）通常来说，服务端tick rate越高，用户交互就越流畅，也更准确。当然网络同步量也越大。如果我们对比tick rate64（CS:GO比赛）和20（Overwatch Beta服务器宣传的帧率），两者因为帧率差异导致的最大可感受延迟是35ms.平均情况下是17.5ms.大多数人是察觉不到其中的差异的，但是有经验的玩家通常是能感受到的。高的tick rate并不会影响到延迟补偿的工作。所以有时候，你还是会有明明自己已经跑到墙后面了可是还是死了的体验。把tick rate提高到64并不能解决这个问题。\n\n7）Responsiveness: 当你按下按键的时候，需要能立刻看到反馈。这对动作游戏和FPS游戏都是非常重要的。有多个因素会影响即时反馈。首先，客户端发送玩家的输入应该是即时的。其次，客户端不等服务端回应就根据玩家的输入做状态预测和插值。在Overwatch中，客户端会维护一个历史纪录用于验证客户端预测的准确性。最后，服务端tick rate也会影响反馈。投射物的模拟也应和玩家做类似处理，并加上飞行时间，让玩家对反馈产生的时间有预期。\n\n8）处理丢包。在Overwatch中，丢包是通过在客户端加速“命令帧”和在服务端设置命令缓存来解决的. 首先，系统采用确定性模拟技术，将时间量化为“命令帧”。每个命令帧都固定为16毫秒（比赛时是7毫秒）。服务端和客户端模拟都运行在保持同步的时钟和这个量化值之上，保持固定的更新频率。当客户端意识到丢包时，会比约定频率更快的模拟，而服务端则将命令缓冲区增大。客户端发送指令的频率加快，而服务端缓冲变大以容忍更多的丢包。客户端的指令数据包包含了未经服务端确认过的所有指令，这样服务端就有机会在实际模拟并发送确认包前更新缓冲区。\n","source":"_posts/2019-01-08-fps-synchronization.md","raw":"---\ntitle: FPS游戏同步术语\ndate: 2019-01-07 17:21:00\ncategories: develop \nauthor: yawei.zhang \n---\n\n在一个采用C/S架构的游戏中，客户端和服务端的游戏状态有差异是不可避免的。客户端和服务端各自都维护了一份游戏状态。这两份游戏状态依赖网络包通信保持同步。但由于各客户端到服务端的时延具有不确定性，游戏状态同步变得非常困难。通常服务端在游戏拓扑中承载的是状态仲裁者的角色，客户端玩家看到的“经验证”的有效游戏状态总是延后于服务端的游戏状态。  \n\n网络时延是必然存在的，所以游戏状态的不同步也是必然存在的。但我们可以通过技术手段尽量减轻不同步问题对用户体验带来的影响。  \n  <!-- more -->  \n  \n1）**Latency**：Latency指的是数据包从客户端发送到服务端再收到服务端回包所用的时间，通常被称为RTT。虽然单程的数据包传输时间并不总是等于RTT/2，但是简单起见我们可以认为两者是相等的。下文说到Latency都是说一个RTT时间，单程Latency则是指RTT/2。\n\n80年代有个工具叫ping使用ICMP echo测试延迟，所以人们常把RTT和ping联系起来。ping这个指令现在还在用。\n\n2）**Hit Box**：角色的3D模型代表了哪些区域是参与到“命中”计算的。你看不到hit box，你只能看到模型。hit box可能比模型大，也可能比模型小，也有可能很不精确，这都取决于具体的实现。我们知道，tick rate会影响命中判定，但是hit box不精确可能对玩家在是否命中方面的感受影响更大。\n\n3）**Tick Rate**：Tick Rate指游戏服务端更新游戏状态的频率。单位是hertz。如果服务器的Tick Rate是64，这就意味着服务端每秒钟最多向客户端发送64次数据包。这些同步数据包包括了游戏状态更新，比如player和场景对象位置等。一次tick的长度就是其持续时间，单位为ms。\n\n比如，64 rate时tick长度是15.6ms，20 rate时是50ms，10 rate时是100ms\n\n4）**Client Update Rate**：这是客户端接收服务端更新的频率。比如说，如果client update rate是20，而服务器tick rate是64，那么从体验上来说，这个客户端实际是在和一个tick rate为20的服务器联机。通常这个是配在客户端本地的，也有可能是写死的。\n\n5）**Framerate**：这个是指客户端每秒最多可以渲染多少帧，通常被称为FPS\n\n6）**Refresh Rate**：显示设备每秒钟刷新多少次。单位为hertz。如果framerate是30，一个显示频率为60的设备将把每个画面显示两次。反过来，如果framerate是120，但是显示频率为60，那么显示设备只能显示每秒60帧。显示设备的频率比framerate大，提升framerate才有意义。大多数显示设备频率是60或120。\n\n7）**Interpolation**：这是一种平滑场景对象移动的技术。实际上内插值所做的就是在场景对象的两个位置之间做插值，以让运动过程平滑。插值延迟通常是2tick，也不尽然。举个内插值的例子，如果一个玩家沿着一条直线移动，在tick1的时候位置在0.5m，在tick2的时候位置在1m，内插值的作用就是让客户端看起来是平滑的从0.5m移到1m。但是服务器实际看到的是离散的位置，要么在0.5m或1m，不可能在中间的某个位置。如果没有插值，游戏的抖动将非常明显，特别是在从服务端更新了一个运动对象的位置后。内插值只在客户端做，实际上减慢了将整个游戏状态绘制到屏幕上的速率。\n\n8）**Extrapolation**：这是客户端补偿延迟的另一种技术。客户端将场景对象的位置做外插值，这样就不会导致绘制的时候没有更新到新数据。通常优先使用内插值，特别是FPS游戏，因为玩家的移动是不可预期的，外插值的结果可能通常是错的。\n\n9）**Lag Compensation**：延迟补偿是服务端减小客户端延迟影响的一种方法。如果没有延迟补偿，或者延迟补偿做的不好，由于客户端看到的是经过延迟后的游戏状态，玩家要命中目标就必须使用一些预判技巧。实际上，延迟补偿所做的，就是当服务器从客户端收到操作（比如开枪）后，将操作发生时间往回调一个单向时延的时间。服务端游戏状态和客户端游戏状态的时间差异（也被称为\"Client Delay\"）可用下式给出：\n\nClientDelay = (1/2 * Latency) + InterpolationDelay\n\n延迟补偿的实际操作步骤：\n\n1.  Player A看到Player B向一个角落跑去\n2.  Player A开枪，其客户端把这个操作发送给服务器\n3.  假定A的延迟的一半是Xms，那么Xms后服务器将收到Player A的操作\n4.  服务器从记录的历史信息中找到A开枪时B所在的位置。一般情况下，服务器应该往回看 (Xms + Player A's interpolation delay) 来回滚到A开枪时的游戏状态。但是这个时间是可以调的，取决于开发者希望延迟补偿算法如何工作。\n5.  服务器判定这次的开枪是否命中。如果子弹的轨迹和目标模型的hit box相交，就认为是命中了。在这个例子中，我们假定命中了。在Player B看来，他觉得自己已经躲到墙后面了。但是Player B看到的游戏状态所处的时间和Server认定的开枪时间是有差异的，可以表示为：  \n    (1/2 * PlayerALatency + 1/2 * PlayerBLatency + TimeSinceLastTick)\n6.  在下一次tick中，服务器使用计算结果更新所有客户端：Player A看到自己命中了目标，Player B看到自己掉血或挂掉了。\n\n需要注意的是，如果两个玩家对射，而且都命中了，游戏如何处理就取决于实现了。比如说在CS:GO中，如果先收到的射击操作命中了目标玩家，那么后续收到的那个玩家的射击就会被丢弃。这样就避免了两个玩家的射击请求在同一帧，然后都命中，都挂掉。在Overwatch中，这种情况是可能的。这里是有取舍的。\n\n按照CS:GO的做法，网络较好的玩家是有很大优势的。经常会有“我在挂掉前打中了目标，但是他没死”的情况。你甚至在挂掉前能听到你的枪响和命中的声音，却没对目标造成伤害。\n\n若是在Overwatch中，玩家反应时间的差异对结果影响较小。比如说，如果服务器tick rate是64，若Player A比Player B早15ms射击，那么双方的射击都是在同一个15.6ms tick之内，所以最终结果是双方都命中，都死掉了。\n\n如果延迟补偿过度，就会出现“我朝目标早前的位置开枪，却还是命中他了”。  \n若延迟补偿不足，则会出现“我必须对目标的移动做预判，这样才能命中”。  \n服务器做延迟补偿所记录的历史数据应该是有限的，不然高延迟的玩家会明显拖累其他玩家的游戏体验。\n\n在Overwatch中，服务端延迟补偿也被称为Favoring the shooter，也就是说，如果你在自己屏幕上瞄准了目标并射击，那么很大概率将命中目标。也有例外情况。比如，若你射击目标的那一刻，目标跳跃躲开了，这时服务器认为目标做了一个完美的闪避，可能会被判断未命中。所以计算命中时并不总是使用射击那一刻的信息。这是为了玩家体验打的补丁。\n\n如果你是要设计一套同步方案，根据设计目的不同可能有不同的方案。公平性、即时反馈、网络流量等都可能是重要的设计目标。可以参考以下因素：\n\n1）网络链接。延迟越低越好。选择一个延迟最低的服务器开始游戏是很重要的。网络上的拥塞程度也会导致网络延迟。延迟补偿可以帮助解决“射击和命中”的问题，但是如果你的网络不好，更多的情况下，你可能会体验到“已经跑到墙后面还是被打中”或者“我先射击但还是死掉了”的情况。\n\n2）如果你的客户端frame rate很低（只要低于显示设备刷新频率或跟他差不多），会导致感受延迟变大，通常比tick rate带来的问题更严重。\n\n3）尽量使用内插值。大多数游戏使用的内插值间隔是tick间隔的两倍，主要考虑到如果一个数据包丢掉了，玩家的移动中断也不会在屏幕上表现出来。如果网络状况很好，没有丢包，把插值间隔设置为tick间隔是没有问题的。但是如果有丢包，就会导致抖动。比如在CS:GO中，这对体验的影响比把服务端tick rate从20调高到64带来的体验影响更明显。如果这个值设的太低，会导致极大的抖动。\n\n4）如果有可能，你应该增加游戏的client update rate来优化体验。其代价是CPU和带宽消耗。对于客户端来说，除非你家的网络带宽非常低，增加CPU和带宽消耗是可以接受的。\n\n5）如果你的显示设备刷新率是60hz，那么很有可能你根本感受不到tick rate在64和128会有什么差异，因为由于tick rate差异导致的改变根本无法通过你的显示设备体现出来。\n\n6）通常来说，服务端tick rate越高，用户交互就越流畅，也更准确。当然网络同步量也越大。如果我们对比tick rate64（CS:GO比赛）和20（Overwatch Beta服务器宣传的帧率），两者因为帧率差异导致的最大可感受延迟是35ms.平均情况下是17.5ms.大多数人是察觉不到其中的差异的，但是有经验的玩家通常是能感受到的。高的tick rate并不会影响到延迟补偿的工作。所以有时候，你还是会有明明自己已经跑到墙后面了可是还是死了的体验。把tick rate提高到64并不能解决这个问题。\n\n7）Responsiveness: 当你按下按键的时候，需要能立刻看到反馈。这对动作游戏和FPS游戏都是非常重要的。有多个因素会影响即时反馈。首先，客户端发送玩家的输入应该是即时的。其次，客户端不等服务端回应就根据玩家的输入做状态预测和插值。在Overwatch中，客户端会维护一个历史纪录用于验证客户端预测的准确性。最后，服务端tick rate也会影响反馈。投射物的模拟也应和玩家做类似处理，并加上飞行时间，让玩家对反馈产生的时间有预期。\n\n8）处理丢包。在Overwatch中，丢包是通过在客户端加速“命令帧”和在服务端设置命令缓存来解决的. 首先，系统采用确定性模拟技术，将时间量化为“命令帧”。每个命令帧都固定为16毫秒（比赛时是7毫秒）。服务端和客户端模拟都运行在保持同步的时钟和这个量化值之上，保持固定的更新频率。当客户端意识到丢包时，会比约定频率更快的模拟，而服务端则将命令缓冲区增大。客户端发送指令的频率加快，而服务端缓冲变大以容忍更多的丢包。客户端的指令数据包包含了未经服务端确认过的所有指令，这样服务端就有机会在实际模拟并发送确认包前更新缓冲区。\n","slug":"2019-01-08-fps-synchronization","published":1,"updated":"2019-01-17T14:04:29.967Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck44ekz2n000xr45h6vokejt2","content":"<p>在一个采用C/S架构的游戏中，客户端和服务端的游戏状态有差异是不可避免的。客户端和服务端各自都维护了一份游戏状态。这两份游戏状态依赖网络包通信保持同步。但由于各客户端到服务端的时延具有不确定性，游戏状态同步变得非常困难。通常服务端在游戏拓扑中承载的是状态仲裁者的角色，客户端玩家看到的“经验证”的有效游戏状态总是延后于服务端的游戏状态。  </p>\n<p>网络时延是必然存在的，所以游戏状态的不同步也是必然存在的。但我们可以通过技术手段尽量减轻不同步问题对用户体验带来的影响。<br>  <a id=\"more\"></a>  </p>\n<p>1）<strong>Latency</strong>：Latency指的是数据包从客户端发送到服务端再收到服务端回包所用的时间，通常被称为RTT。虽然单程的数据包传输时间并不总是等于RTT/2，但是简单起见我们可以认为两者是相等的。下文说到Latency都是说一个RTT时间，单程Latency则是指RTT/2。</p>\n<p>80年代有个工具叫ping使用ICMP echo测试延迟，所以人们常把RTT和ping联系起来。ping这个指令现在还在用。</p>\n<p>2）<strong>Hit Box</strong>：角色的3D模型代表了哪些区域是参与到“命中”计算的。你看不到hit box，你只能看到模型。hit box可能比模型大，也可能比模型小，也有可能很不精确，这都取决于具体的实现。我们知道，tick rate会影响命中判定，但是hit box不精确可能对玩家在是否命中方面的感受影响更大。</p>\n<p>3）<strong>Tick Rate</strong>：Tick Rate指游戏服务端更新游戏状态的频率。单位是hertz。如果服务器的Tick Rate是64，这就意味着服务端每秒钟最多向客户端发送64次数据包。这些同步数据包包括了游戏状态更新，比如player和场景对象位置等。一次tick的长度就是其持续时间，单位为ms。</p>\n<p>比如，64 rate时tick长度是15.6ms，20 rate时是50ms，10 rate时是100ms</p>\n<p>4）<strong>Client Update Rate</strong>：这是客户端接收服务端更新的频率。比如说，如果client update rate是20，而服务器tick rate是64，那么从体验上来说，这个客户端实际是在和一个tick rate为20的服务器联机。通常这个是配在客户端本地的，也有可能是写死的。</p>\n<p>5）<strong>Framerate</strong>：这个是指客户端每秒最多可以渲染多少帧，通常被称为FPS</p>\n<p>6）<strong>Refresh Rate</strong>：显示设备每秒钟刷新多少次。单位为hertz。如果framerate是30，一个显示频率为60的设备将把每个画面显示两次。反过来，如果framerate是120，但是显示频率为60，那么显示设备只能显示每秒60帧。显示设备的频率比framerate大，提升framerate才有意义。大多数显示设备频率是60或120。</p>\n<p>7）<strong>Interpolation</strong>：这是一种平滑场景对象移动的技术。实际上内插值所做的就是在场景对象的两个位置之间做插值，以让运动过程平滑。插值延迟通常是2tick，也不尽然。举个内插值的例子，如果一个玩家沿着一条直线移动，在tick1的时候位置在0.5m，在tick2的时候位置在1m，内插值的作用就是让客户端看起来是平滑的从0.5m移到1m。但是服务器实际看到的是离散的位置，要么在0.5m或1m，不可能在中间的某个位置。如果没有插值，游戏的抖动将非常明显，特别是在从服务端更新了一个运动对象的位置后。内插值只在客户端做，实际上减慢了将整个游戏状态绘制到屏幕上的速率。</p>\n<p>8）<strong>Extrapolation</strong>：这是客户端补偿延迟的另一种技术。客户端将场景对象的位置做外插值，这样就不会导致绘制的时候没有更新到新数据。通常优先使用内插值，特别是FPS游戏，因为玩家的移动是不可预期的，外插值的结果可能通常是错的。</p>\n<p>9）<strong>Lag Compensation</strong>：延迟补偿是服务端减小客户端延迟影响的一种方法。如果没有延迟补偿，或者延迟补偿做的不好，由于客户端看到的是经过延迟后的游戏状态，玩家要命中目标就必须使用一些预判技巧。实际上，延迟补偿所做的，就是当服务器从客户端收到操作（比如开枪）后，将操作发生时间往回调一个单向时延的时间。服务端游戏状态和客户端游戏状态的时间差异（也被称为”Client Delay”）可用下式给出：</p>\n<p>ClientDelay = (1/2 * Latency) + InterpolationDelay</p>\n<p>延迟补偿的实际操作步骤：</p>\n<ol>\n<li>Player A看到Player B向一个角落跑去</li>\n<li>Player A开枪，其客户端把这个操作发送给服务器</li>\n<li>假定A的延迟的一半是Xms，那么Xms后服务器将收到Player A的操作</li>\n<li>服务器从记录的历史信息中找到A开枪时B所在的位置。一般情况下，服务器应该往回看 (Xms + Player A’s interpolation delay) 来回滚到A开枪时的游戏状态。但是这个时间是可以调的，取决于开发者希望延迟补偿算法如何工作。</li>\n<li>服务器判定这次的开枪是否命中。如果子弹的轨迹和目标模型的hit box相交，就认为是命中了。在这个例子中，我们假定命中了。在Player B看来，他觉得自己已经躲到墙后面了。但是Player B看到的游戏状态所处的时间和Server认定的开枪时间是有差异的，可以表示为：<br>(1/2 * PlayerALatency + 1/2 * PlayerBLatency + TimeSinceLastTick)</li>\n<li>在下一次tick中，服务器使用计算结果更新所有客户端：Player A看到自己命中了目标，Player B看到自己掉血或挂掉了。</li>\n</ol>\n<p>需要注意的是，如果两个玩家对射，而且都命中了，游戏如何处理就取决于实现了。比如说在CS:GO中，如果先收到的射击操作命中了目标玩家，那么后续收到的那个玩家的射击就会被丢弃。这样就避免了两个玩家的射击请求在同一帧，然后都命中，都挂掉。在Overwatch中，这种情况是可能的。这里是有取舍的。</p>\n<p>按照CS:GO的做法，网络较好的玩家是有很大优势的。经常会有“我在挂掉前打中了目标，但是他没死”的情况。你甚至在挂掉前能听到你的枪响和命中的声音，却没对目标造成伤害。</p>\n<p>若是在Overwatch中，玩家反应时间的差异对结果影响较小。比如说，如果服务器tick rate是64，若Player A比Player B早15ms射击，那么双方的射击都是在同一个15.6ms tick之内，所以最终结果是双方都命中，都死掉了。</p>\n<p>如果延迟补偿过度，就会出现“我朝目标早前的位置开枪，却还是命中他了”。<br>若延迟补偿不足，则会出现“我必须对目标的移动做预判，这样才能命中”。<br>服务器做延迟补偿所记录的历史数据应该是有限的，不然高延迟的玩家会明显拖累其他玩家的游戏体验。</p>\n<p>在Overwatch中，服务端延迟补偿也被称为Favoring the shooter，也就是说，如果你在自己屏幕上瞄准了目标并射击，那么很大概率将命中目标。也有例外情况。比如，若你射击目标的那一刻，目标跳跃躲开了，这时服务器认为目标做了一个完美的闪避，可能会被判断未命中。所以计算命中时并不总是使用射击那一刻的信息。这是为了玩家体验打的补丁。</p>\n<p>如果你是要设计一套同步方案，根据设计目的不同可能有不同的方案。公平性、即时反馈、网络流量等都可能是重要的设计目标。可以参考以下因素：</p>\n<p>1）网络链接。延迟越低越好。选择一个延迟最低的服务器开始游戏是很重要的。网络上的拥塞程度也会导致网络延迟。延迟补偿可以帮助解决“射击和命中”的问题，但是如果你的网络不好，更多的情况下，你可能会体验到“已经跑到墙后面还是被打中”或者“我先射击但还是死掉了”的情况。</p>\n<p>2）如果你的客户端frame rate很低（只要低于显示设备刷新频率或跟他差不多），会导致感受延迟变大，通常比tick rate带来的问题更严重。</p>\n<p>3）尽量使用内插值。大多数游戏使用的内插值间隔是tick间隔的两倍，主要考虑到如果一个数据包丢掉了，玩家的移动中断也不会在屏幕上表现出来。如果网络状况很好，没有丢包，把插值间隔设置为tick间隔是没有问题的。但是如果有丢包，就会导致抖动。比如在CS:GO中，这对体验的影响比把服务端tick rate从20调高到64带来的体验影响更明显。如果这个值设的太低，会导致极大的抖动。</p>\n<p>4）如果有可能，你应该增加游戏的client update rate来优化体验。其代价是CPU和带宽消耗。对于客户端来说，除非你家的网络带宽非常低，增加CPU和带宽消耗是可以接受的。</p>\n<p>5）如果你的显示设备刷新率是60hz，那么很有可能你根本感受不到tick rate在64和128会有什么差异，因为由于tick rate差异导致的改变根本无法通过你的显示设备体现出来。</p>\n<p>6）通常来说，服务端tick rate越高，用户交互就越流畅，也更准确。当然网络同步量也越大。如果我们对比tick rate64（CS:GO比赛）和20（Overwatch Beta服务器宣传的帧率），两者因为帧率差异导致的最大可感受延迟是35ms.平均情况下是17.5ms.大多数人是察觉不到其中的差异的，但是有经验的玩家通常是能感受到的。高的tick rate并不会影响到延迟补偿的工作。所以有时候，你还是会有明明自己已经跑到墙后面了可是还是死了的体验。把tick rate提高到64并不能解决这个问题。</p>\n<p>7）Responsiveness: 当你按下按键的时候，需要能立刻看到反馈。这对动作游戏和FPS游戏都是非常重要的。有多个因素会影响即时反馈。首先，客户端发送玩家的输入应该是即时的。其次，客户端不等服务端回应就根据玩家的输入做状态预测和插值。在Overwatch中，客户端会维护一个历史纪录用于验证客户端预测的准确性。最后，服务端tick rate也会影响反馈。投射物的模拟也应和玩家做类似处理，并加上飞行时间，让玩家对反馈产生的时间有预期。</p>\n<p>8）处理丢包。在Overwatch中，丢包是通过在客户端加速“命令帧”和在服务端设置命令缓存来解决的. 首先，系统采用确定性模拟技术，将时间量化为“命令帧”。每个命令帧都固定为16毫秒（比赛时是7毫秒）。服务端和客户端模拟都运行在保持同步的时钟和这个量化值之上，保持固定的更新频率。当客户端意识到丢包时，会比约定频率更快的模拟，而服务端则将命令缓冲区增大。客户端发送指令的频率加快，而服务端缓冲变大以容忍更多的丢包。客户端的指令数据包包含了未经服务端确认过的所有指令，这样服务端就有机会在实际模拟并发送确认包前更新缓冲区。</p>\n","site":{"data":{}},"excerpt":"<p>在一个采用C/S架构的游戏中，客户端和服务端的游戏状态有差异是不可避免的。客户端和服务端各自都维护了一份游戏状态。这两份游戏状态依赖网络包通信保持同步。但由于各客户端到服务端的时延具有不确定性，游戏状态同步变得非常困难。通常服务端在游戏拓扑中承载的是状态仲裁者的角色，客户端玩家看到的“经验证”的有效游戏状态总是延后于服务端的游戏状态。  </p>\n<p>网络时延是必然存在的，所以游戏状态的不同步也是必然存在的。但我们可以通过技术手段尽量减轻不同步问题对用户体验带来的影响。<br>","more":"</p>\n<p>1）<strong>Latency</strong>：Latency指的是数据包从客户端发送到服务端再收到服务端回包所用的时间，通常被称为RTT。虽然单程的数据包传输时间并不总是等于RTT/2，但是简单起见我们可以认为两者是相等的。下文说到Latency都是说一个RTT时间，单程Latency则是指RTT/2。</p>\n<p>80年代有个工具叫ping使用ICMP echo测试延迟，所以人们常把RTT和ping联系起来。ping这个指令现在还在用。</p>\n<p>2）<strong>Hit Box</strong>：角色的3D模型代表了哪些区域是参与到“命中”计算的。你看不到hit box，你只能看到模型。hit box可能比模型大，也可能比模型小，也有可能很不精确，这都取决于具体的实现。我们知道，tick rate会影响命中判定，但是hit box不精确可能对玩家在是否命中方面的感受影响更大。</p>\n<p>3）<strong>Tick Rate</strong>：Tick Rate指游戏服务端更新游戏状态的频率。单位是hertz。如果服务器的Tick Rate是64，这就意味着服务端每秒钟最多向客户端发送64次数据包。这些同步数据包包括了游戏状态更新，比如player和场景对象位置等。一次tick的长度就是其持续时间，单位为ms。</p>\n<p>比如，64 rate时tick长度是15.6ms，20 rate时是50ms，10 rate时是100ms</p>\n<p>4）<strong>Client Update Rate</strong>：这是客户端接收服务端更新的频率。比如说，如果client update rate是20，而服务器tick rate是64，那么从体验上来说，这个客户端实际是在和一个tick rate为20的服务器联机。通常这个是配在客户端本地的，也有可能是写死的。</p>\n<p>5）<strong>Framerate</strong>：这个是指客户端每秒最多可以渲染多少帧，通常被称为FPS</p>\n<p>6）<strong>Refresh Rate</strong>：显示设备每秒钟刷新多少次。单位为hertz。如果framerate是30，一个显示频率为60的设备将把每个画面显示两次。反过来，如果framerate是120，但是显示频率为60，那么显示设备只能显示每秒60帧。显示设备的频率比framerate大，提升framerate才有意义。大多数显示设备频率是60或120。</p>\n<p>7）<strong>Interpolation</strong>：这是一种平滑场景对象移动的技术。实际上内插值所做的就是在场景对象的两个位置之间做插值，以让运动过程平滑。插值延迟通常是2tick，也不尽然。举个内插值的例子，如果一个玩家沿着一条直线移动，在tick1的时候位置在0.5m，在tick2的时候位置在1m，内插值的作用就是让客户端看起来是平滑的从0.5m移到1m。但是服务器实际看到的是离散的位置，要么在0.5m或1m，不可能在中间的某个位置。如果没有插值，游戏的抖动将非常明显，特别是在从服务端更新了一个运动对象的位置后。内插值只在客户端做，实际上减慢了将整个游戏状态绘制到屏幕上的速率。</p>\n<p>8）<strong>Extrapolation</strong>：这是客户端补偿延迟的另一种技术。客户端将场景对象的位置做外插值，这样就不会导致绘制的时候没有更新到新数据。通常优先使用内插值，特别是FPS游戏，因为玩家的移动是不可预期的，外插值的结果可能通常是错的。</p>\n<p>9）<strong>Lag Compensation</strong>：延迟补偿是服务端减小客户端延迟影响的一种方法。如果没有延迟补偿，或者延迟补偿做的不好，由于客户端看到的是经过延迟后的游戏状态，玩家要命中目标就必须使用一些预判技巧。实际上，延迟补偿所做的，就是当服务器从客户端收到操作（比如开枪）后，将操作发生时间往回调一个单向时延的时间。服务端游戏状态和客户端游戏状态的时间差异（也被称为”Client Delay”）可用下式给出：</p>\n<p>ClientDelay = (1/2 * Latency) + InterpolationDelay</p>\n<p>延迟补偿的实际操作步骤：</p>\n<ol>\n<li>Player A看到Player B向一个角落跑去</li>\n<li>Player A开枪，其客户端把这个操作发送给服务器</li>\n<li>假定A的延迟的一半是Xms，那么Xms后服务器将收到Player A的操作</li>\n<li>服务器从记录的历史信息中找到A开枪时B所在的位置。一般情况下，服务器应该往回看 (Xms + Player A’s interpolation delay) 来回滚到A开枪时的游戏状态。但是这个时间是可以调的，取决于开发者希望延迟补偿算法如何工作。</li>\n<li>服务器判定这次的开枪是否命中。如果子弹的轨迹和目标模型的hit box相交，就认为是命中了。在这个例子中，我们假定命中了。在Player B看来，他觉得自己已经躲到墙后面了。但是Player B看到的游戏状态所处的时间和Server认定的开枪时间是有差异的，可以表示为：<br>(1/2 * PlayerALatency + 1/2 * PlayerBLatency + TimeSinceLastTick)</li>\n<li>在下一次tick中，服务器使用计算结果更新所有客户端：Player A看到自己命中了目标，Player B看到自己掉血或挂掉了。</li>\n</ol>\n<p>需要注意的是，如果两个玩家对射，而且都命中了，游戏如何处理就取决于实现了。比如说在CS:GO中，如果先收到的射击操作命中了目标玩家，那么后续收到的那个玩家的射击就会被丢弃。这样就避免了两个玩家的射击请求在同一帧，然后都命中，都挂掉。在Overwatch中，这种情况是可能的。这里是有取舍的。</p>\n<p>按照CS:GO的做法，网络较好的玩家是有很大优势的。经常会有“我在挂掉前打中了目标，但是他没死”的情况。你甚至在挂掉前能听到你的枪响和命中的声音，却没对目标造成伤害。</p>\n<p>若是在Overwatch中，玩家反应时间的差异对结果影响较小。比如说，如果服务器tick rate是64，若Player A比Player B早15ms射击，那么双方的射击都是在同一个15.6ms tick之内，所以最终结果是双方都命中，都死掉了。</p>\n<p>如果延迟补偿过度，就会出现“我朝目标早前的位置开枪，却还是命中他了”。<br>若延迟补偿不足，则会出现“我必须对目标的移动做预判，这样才能命中”。<br>服务器做延迟补偿所记录的历史数据应该是有限的，不然高延迟的玩家会明显拖累其他玩家的游戏体验。</p>\n<p>在Overwatch中，服务端延迟补偿也被称为Favoring the shooter，也就是说，如果你在自己屏幕上瞄准了目标并射击，那么很大概率将命中目标。也有例外情况。比如，若你射击目标的那一刻，目标跳跃躲开了，这时服务器认为目标做了一个完美的闪避，可能会被判断未命中。所以计算命中时并不总是使用射击那一刻的信息。这是为了玩家体验打的补丁。</p>\n<p>如果你是要设计一套同步方案，根据设计目的不同可能有不同的方案。公平性、即时反馈、网络流量等都可能是重要的设计目标。可以参考以下因素：</p>\n<p>1）网络链接。延迟越低越好。选择一个延迟最低的服务器开始游戏是很重要的。网络上的拥塞程度也会导致网络延迟。延迟补偿可以帮助解决“射击和命中”的问题，但是如果你的网络不好，更多的情况下，你可能会体验到“已经跑到墙后面还是被打中”或者“我先射击但还是死掉了”的情况。</p>\n<p>2）如果你的客户端frame rate很低（只要低于显示设备刷新频率或跟他差不多），会导致感受延迟变大，通常比tick rate带来的问题更严重。</p>\n<p>3）尽量使用内插值。大多数游戏使用的内插值间隔是tick间隔的两倍，主要考虑到如果一个数据包丢掉了，玩家的移动中断也不会在屏幕上表现出来。如果网络状况很好，没有丢包，把插值间隔设置为tick间隔是没有问题的。但是如果有丢包，就会导致抖动。比如在CS:GO中，这对体验的影响比把服务端tick rate从20调高到64带来的体验影响更明显。如果这个值设的太低，会导致极大的抖动。</p>\n<p>4）如果有可能，你应该增加游戏的client update rate来优化体验。其代价是CPU和带宽消耗。对于客户端来说，除非你家的网络带宽非常低，增加CPU和带宽消耗是可以接受的。</p>\n<p>5）如果你的显示设备刷新率是60hz，那么很有可能你根本感受不到tick rate在64和128会有什么差异，因为由于tick rate差异导致的改变根本无法通过你的显示设备体现出来。</p>\n<p>6）通常来说，服务端tick rate越高，用户交互就越流畅，也更准确。当然网络同步量也越大。如果我们对比tick rate64（CS:GO比赛）和20（Overwatch Beta服务器宣传的帧率），两者因为帧率差异导致的最大可感受延迟是35ms.平均情况下是17.5ms.大多数人是察觉不到其中的差异的，但是有经验的玩家通常是能感受到的。高的tick rate并不会影响到延迟补偿的工作。所以有时候，你还是会有明明自己已经跑到墙后面了可是还是死了的体验。把tick rate提高到64并不能解决这个问题。</p>\n<p>7）Responsiveness: 当你按下按键的时候，需要能立刻看到反馈。这对动作游戏和FPS游戏都是非常重要的。有多个因素会影响即时反馈。首先，客户端发送玩家的输入应该是即时的。其次，客户端不等服务端回应就根据玩家的输入做状态预测和插值。在Overwatch中，客户端会维护一个历史纪录用于验证客户端预测的准确性。最后，服务端tick rate也会影响反馈。投射物的模拟也应和玩家做类似处理，并加上飞行时间，让玩家对反馈产生的时间有预期。</p>\n<p>8）处理丢包。在Overwatch中，丢包是通过在客户端加速“命令帧”和在服务端设置命令缓存来解决的. 首先，系统采用确定性模拟技术，将时间量化为“命令帧”。每个命令帧都固定为16毫秒（比赛时是7毫秒）。服务端和客户端模拟都运行在保持同步的时钟和这个量化值之上，保持固定的更新频率。当客户端意识到丢包时，会比约定频率更快的模拟，而服务端则将命令缓冲区增大。客户端发送指令的频率加快，而服务端缓冲变大以容忍更多的丢包。客户端的指令数据包包含了未经服务端确认过的所有指令，这样服务端就有机会在实际模拟并发送确认包前更新缓冲区。</p>"},{"title":"古希腊历史和奥德赛","date":"2019-01-29T06:21:00.000Z","author":"yawei.zhang","_content":"\n> 在现代英语中，人们将奥德赛这个词引申为“长途的冒险行程”，用来形容类似的探索或者冒险经历。  \n\n> 希腊半岛又称为巴尔干半岛(有时包含更多的区域),  雅典位于阿提卡半岛, 斯巴达和奥林匹亚位于伯罗奔尼撒半岛.    \n\n> 提洛岛是基克拉泽斯群岛的心脏, 希腊神话中女神勒托的居住地, 阿波罗和阿耳忒弥斯的出生地, 为宗教圣地.  \n\n### story line:\n![古代希腊](http://a0.att.hudong.com/41/79/01300000433093124784792406044.jpg)   \n  \n  <!-- more --> \n> 公元前一万年  亚特兰蒂斯 被洪水毁灭  \n\n> 公元前1900(BC) 迈锡尼人(老斯巴达人)到达希腊半岛, 1500BC统治希腊半岛, 1380BC统治东地中海.  \n\n> 公元前1250左右 特洛伊战争爆发  迈锡尼人衰落 \n\n> 公元前1100年至前950年期间 多利亚人入侵伯罗奔尼撒半岛 建都斯巴达  (新斯巴达人, 原斯巴达人变为奴隶 迈锡尼人).\n\n\n> 公元前753年 罗马建城  \n\n> 公元前736  斯巴达第一次美塞尼亚战争, 第二次美塞尼亚战争, 斯巴达人转型为军国主义(人口比例奴隶7,斯巴达人3)  \n \n> 公元前8世纪 700-799 《奥德赛》成书  \n\n> 公元前650年 斯巴达成为希腊军事霸主  \n\n> 公元前600年 希腊称波斯地区为 波斯  \n\n> 公元前509 罗马共和国 元老院与罗马人民  \n\n> 公元前499年 希波战争  \n\n> 公元前490年  (希波战争)马拉松战役  \n\n> 公元前480年约9月 (希波战争)温泉关战役 斯巴达300勇士  \n> 公元前480年9月   (希波战争)萨拉米斯海战 波斯海军大败  \n> 公元前479年      (希波战争)普拉提亚战役 波斯陆军大败  \n\n\n> 公元前431到404年 伯罗奔尼撒战争爆发 (雅典的提洛同盟和斯巴达的伯罗奔尼撒战争联盟)   (前470-前399 苏格拉底, 前429-前347 柏拉图, 前384-前322 亚里士多德(亚历山大老师))    \n\n> 公元前371年 斯巴达在留克特拉战役中战败 (底比斯 神圣少年爱军..)  \n\n> 公元前356-前334前323 亚历山大大帝 十年的亚历山大东征 征服波斯帝国  \n\n\n> 公元前215年-前148 罗马共和国 四次马其顿战争征服马其顿控制整个希腊  \n\n> 公元前146年 斯巴达被罗马征服  \n\n> 公元前44年 凯撒大帝遇刺, 屋大维击败安东尼开创罗马帝国   存在将近一千五百年.  \n> \n> 公元17世纪 罗马废除君主制,成立意大利共和国  \n> 公元1861年 意大利统一  意大利王国  \n> 公元1935年 波斯国王宣布国际改称伊朗 \n> 公元1946年 意大利建立共和国  \n\n\n##### 金苹果  \n希腊神话中重要的承前启后的事件（金苹果事件→帕里斯的评判→特洛伊战争）。  \n\n事发人间英雄佩琉斯与海中女神忒提斯的婚宴。由于婚事直接由天神宙斯撮合，当时邀请了一批神级较高的神祇赴宴。据一些史诗记载是因为金制的名贵餐具有限——当然也不排除其本身不受欢迎的因素——管辖纠纷的女神厄里斯未被邀请。觉得受到冒犯的厄里斯不请自来，一言不发，在宴席上留下一个硕大华丽的黄金苹果，上面刻有“καλλίστῃ”（kallistē(i)/ Kallisti）的字样，意思是“献给最美丽的女神”；该物被称为“引致纠纷的金苹果”。\n\n在场神级最高、同时也最为美艳的三位女神：雅典娜、阿佛罗狄忒和赫拉卷入了金苹果所引致的纠纷，她们要求宙斯评判谁可以获得金苹果。宙斯则认为，凡间一位潇洒俊朗、一表人才的王子帕里斯更适合成为这道难题的评判，其人当时正在特洛伊城附近的艾达山上牧羊。于是，天后赫拉、智慧女神雅典娜与爱神阿佛罗狄忒在神使赫耳墨斯的前导下，前往艾达山，请帕里斯王子作仲裁。帕里斯将象征“最美女神”的金苹果给了爱神阿佛罗狄忒，因为她承诺帕里斯将会得到人间最美丽女子海伦的爱情。   \n\n##### 三叉戟  \n在希腊神话中，这是海神波塞顿的象征物和武器，传说是他用三叉劈开大山，将山石变成岛屿。如同对应于波塞顿的罗马神尼普顿也是以三叉为象征。但在基督教、天主教里认为三叉是魔鬼撒旦的武器（二短一长的形体有男性阳具的象征），这些转变和对立被一些学者认为是新宗教代替旧宗教时的证据。  \n\n特洛伊的城墙是太阳神阿波罗以及海神波塞冬共同建造(篡位失败被宙斯惩罚), 但因普里阿摩斯的父亲拉俄墨冬拒绝回礼被海神引海水淹了一次.  \n\n普里阿摩斯是最后一个特洛伊王, 儿子赫克托和阿基里斯(希腊第一勇士,阿喀琉斯之踵)决斗被战死. 另外一个儿子帕里斯这时金苹果事件里的裁判, 海伦和帕里斯私奔到特洛伊城 引发特洛伊战争, 阿喀琉斯的儿子涅俄普托勒摩斯在特洛伊战争中杀死特洛伊国王普里阿摩斯.\n\n奥德修斯(奥德赛)在特洛伊胜利回国途中(西西里岛 意大利 罗马)(葡萄酒灌醉)刺瞎独目巨人(荷马奥德赛中为波塞冬的儿子),躲在绵羊肚子下面逃走,得罪海神波塞冬, 十年后才回到自己国家.   (赫西奥德神话中 宙斯的长矛,波塞冬的三叉戟,冥王哈迪斯的双股叉都为独眼巨人打造)  \n\n\n刺客信条:\n这个波塞多的标志性武器也是一件伊甸碎片，出场于刺客信条末裔小说。三叉戟原本为伊述人制造和保管，数千年后，它落入亚历山大大帝手中，利用三叉戟的力量战无不胜，最终造就了庞大的帝国。\n\n三叉戟有三块戟尖，每块都可以单独作为匕首使用，拥有不同的能力：一块使人敬畏，一块使人钦慕，一块使人迷信。\n\n  \n\n\n##### 金羊毛  \n\n在希腊神话中，金羊毛是一种稀世珍宝，代表着权威和王权。\n\n故事的主人公叫伊阿宋，是古希腊王国的王位继承人，年幼时他亲眼目睹了亲叔叔珀利阿斯如何为了王位残忍地谋害了父亲。侥幸逃命之后，伊阿宋远离了故土，卧薪尝胆二十年努力学习各种技艺，期待能重返家园，夺回王位。珀利阿斯听说了他准备回来的消息后，宣布判处伊阿宋死刑。为了活命，伊阿宋答应给叔叔献上众神的礼物——金羊毛，于是他跟一群勇敢的水手们一起踏上了寻找金羊毛的惊险旅程，并最终实现了自己的目标。\n\n\n##### 裹尸布  \n耶稣被钉死在十字架后用的裹尸布, 殓布.   \n朗基努斯枪: 罗马士兵确认耶稣是否死亡的长矛.   \n圣杯,真十字架 圣枪都为圣物.   \n\n\n##### 弥赛亚  \n弥赛亚（天主教译作默西亚，英语：Messiah），是个圣经词语，与希腊语词基督是一个意思，在希伯来语中最初的意思是受膏者，指的是上帝所选中的人，具有特殊的权力，受膏者是“被委任担当特别职务的人”的意思，是一个头衔或者称号，并不是名字。\n\n### 刺客信条 结构  伊甸碎片设计\n\n裹尸布是一种用来治疗伤病的伊甸碎片。是一块沾有血迹的白布，通常被放在一个简朴的木盒子里。布上还有一个双臂展开，手掌朝外的人印，此人似乎正受到折磨。   \n\n游戏中的裹尸布，传说能够让人起死回生，但实际情况是：裹尸布只能让人恢复一点活力，而且时间很短，有的时候还会产生幻觉。这些幻觉主要是：过去裹尸布使用者留下的记忆。  \n\n裹尸布的制造者叫“康苏斯”，在罗马神话中代表五谷之神（如果不是留言告诉我）在游戏里通过乔凡自称博学之神。康苏斯应该是第一文明的一位科研人员。他对于生命、物质、能量、时间相互转换非常精通。\n\n在第一文明寻找避免大灾难的方法时，康苏斯曾提出了几个大胆的设想：\n\n　　1、改变先行者的身体结构。\n\n　　2、把思想储存到一些无机物里（比如石头）。\n\n　　（六种方案里提到过）康苏斯将自己的思想意识存储在裹尸布之中。任何使用裹尸布的人，都会被康苏斯的意识短暂控制。  \n\n　有关裹尸布最早的传说来自希腊神话。它当时被称作金羊毛，具有神秘的力量。伊阿宋从一棵由毒龙把守的树上，取下了金羊毛。  \n\n\n信条和组织\n\n刺客的信条和圣殿骑士团都已经存在了数千年之久（同时诞生于大约公元75000年前），变化了不知多少形式，多少名称。刺客宇宙中，我们约定俗成地将他们称为为刺客和圣殿骑士。比如，起源中，刺客其实是叫无形者，而圣殿骑士是上古维序者。\n\n巴耶克建立了无形者并将之作为信条，使用了我们后来所熟知的标志，巴耶克的袖剑是古代刺客墓穴中获得的，因此，巴耶克并不是第一个刺客。因此，《奥德赛》中出现的将会是另一种形式的刺客组织。\n\n\n\n\n\n\n\n### 轴心时代   \n雅思贝尔斯的分析框架 超越突破是指产生了不依赖于社会而以个人为载体的思想, 然后再把该思想视角重新投向社会,以此思想产生的价值作为社会存在合理性的最终依据.    \n\n完成超越突破拥有超越视野的四种结构:    \n\n* **个体生命的意义在来世 要依靠外力才能实现**  \n这就是希伯来救赎型文明 即一神论宗教文明 从最早的犹太教 到后来的基督教 伊斯兰教都是这条藤结出的果实 相关宗教史暂时挖个坑。  \n\n* **个体生命的意义在今生 要依靠外力才能实现**  \n这就是古希腊求知型文明 即逻各斯 哲学文明 从最早的原子论 数学 逻辑学 到现在都科学大厦 都是在这一基础上建构的。\n\n* **个体生命的意义在来世 要依靠个体自身才能实现**  \n  这就是古印度解脱型文明 即心灵文明（以修心 冥想为特色） 从最早的婆罗门教 佛教 耆那教 到回来的印度教 都是这一文明开出的花朵。\n\n* **个体生命的意义在今生 要依靠个体自身才能实现**  \n  这就是大中华儒家文明 即伦理文明。从春秋战国的儒墨道法 诸子百家 到汉代天人合一 到两晋的玄学 到后来的理学 心学 是这一文明在不同时期的演化形态。\n\n","source":"_posts/2019-01-17-Odyssey.md","raw":"---\ntitle: 古希腊历史和奥德赛  \ndate: 2019-01-29 14:21:00\ncategories: \nauthor: yawei.zhang \n---\n\n> 在现代英语中，人们将奥德赛这个词引申为“长途的冒险行程”，用来形容类似的探索或者冒险经历。  \n\n> 希腊半岛又称为巴尔干半岛(有时包含更多的区域),  雅典位于阿提卡半岛, 斯巴达和奥林匹亚位于伯罗奔尼撒半岛.    \n\n> 提洛岛是基克拉泽斯群岛的心脏, 希腊神话中女神勒托的居住地, 阿波罗和阿耳忒弥斯的出生地, 为宗教圣地.  \n\n### story line:\n![古代希腊](http://a0.att.hudong.com/41/79/01300000433093124784792406044.jpg)   \n  \n  <!-- more --> \n> 公元前一万年  亚特兰蒂斯 被洪水毁灭  \n\n> 公元前1900(BC) 迈锡尼人(老斯巴达人)到达希腊半岛, 1500BC统治希腊半岛, 1380BC统治东地中海.  \n\n> 公元前1250左右 特洛伊战争爆发  迈锡尼人衰落 \n\n> 公元前1100年至前950年期间 多利亚人入侵伯罗奔尼撒半岛 建都斯巴达  (新斯巴达人, 原斯巴达人变为奴隶 迈锡尼人).\n\n\n> 公元前753年 罗马建城  \n\n> 公元前736  斯巴达第一次美塞尼亚战争, 第二次美塞尼亚战争, 斯巴达人转型为军国主义(人口比例奴隶7,斯巴达人3)  \n \n> 公元前8世纪 700-799 《奥德赛》成书  \n\n> 公元前650年 斯巴达成为希腊军事霸主  \n\n> 公元前600年 希腊称波斯地区为 波斯  \n\n> 公元前509 罗马共和国 元老院与罗马人民  \n\n> 公元前499年 希波战争  \n\n> 公元前490年  (希波战争)马拉松战役  \n\n> 公元前480年约9月 (希波战争)温泉关战役 斯巴达300勇士  \n> 公元前480年9月   (希波战争)萨拉米斯海战 波斯海军大败  \n> 公元前479年      (希波战争)普拉提亚战役 波斯陆军大败  \n\n\n> 公元前431到404年 伯罗奔尼撒战争爆发 (雅典的提洛同盟和斯巴达的伯罗奔尼撒战争联盟)   (前470-前399 苏格拉底, 前429-前347 柏拉图, 前384-前322 亚里士多德(亚历山大老师))    \n\n> 公元前371年 斯巴达在留克特拉战役中战败 (底比斯 神圣少年爱军..)  \n\n> 公元前356-前334前323 亚历山大大帝 十年的亚历山大东征 征服波斯帝国  \n\n\n> 公元前215年-前148 罗马共和国 四次马其顿战争征服马其顿控制整个希腊  \n\n> 公元前146年 斯巴达被罗马征服  \n\n> 公元前44年 凯撒大帝遇刺, 屋大维击败安东尼开创罗马帝国   存在将近一千五百年.  \n> \n> 公元17世纪 罗马废除君主制,成立意大利共和国  \n> 公元1861年 意大利统一  意大利王国  \n> 公元1935年 波斯国王宣布国际改称伊朗 \n> 公元1946年 意大利建立共和国  \n\n\n##### 金苹果  \n希腊神话中重要的承前启后的事件（金苹果事件→帕里斯的评判→特洛伊战争）。  \n\n事发人间英雄佩琉斯与海中女神忒提斯的婚宴。由于婚事直接由天神宙斯撮合，当时邀请了一批神级较高的神祇赴宴。据一些史诗记载是因为金制的名贵餐具有限——当然也不排除其本身不受欢迎的因素——管辖纠纷的女神厄里斯未被邀请。觉得受到冒犯的厄里斯不请自来，一言不发，在宴席上留下一个硕大华丽的黄金苹果，上面刻有“καλλίστῃ”（kallistē(i)/ Kallisti）的字样，意思是“献给最美丽的女神”；该物被称为“引致纠纷的金苹果”。\n\n在场神级最高、同时也最为美艳的三位女神：雅典娜、阿佛罗狄忒和赫拉卷入了金苹果所引致的纠纷，她们要求宙斯评判谁可以获得金苹果。宙斯则认为，凡间一位潇洒俊朗、一表人才的王子帕里斯更适合成为这道难题的评判，其人当时正在特洛伊城附近的艾达山上牧羊。于是，天后赫拉、智慧女神雅典娜与爱神阿佛罗狄忒在神使赫耳墨斯的前导下，前往艾达山，请帕里斯王子作仲裁。帕里斯将象征“最美女神”的金苹果给了爱神阿佛罗狄忒，因为她承诺帕里斯将会得到人间最美丽女子海伦的爱情。   \n\n##### 三叉戟  \n在希腊神话中，这是海神波塞顿的象征物和武器，传说是他用三叉劈开大山，将山石变成岛屿。如同对应于波塞顿的罗马神尼普顿也是以三叉为象征。但在基督教、天主教里认为三叉是魔鬼撒旦的武器（二短一长的形体有男性阳具的象征），这些转变和对立被一些学者认为是新宗教代替旧宗教时的证据。  \n\n特洛伊的城墙是太阳神阿波罗以及海神波塞冬共同建造(篡位失败被宙斯惩罚), 但因普里阿摩斯的父亲拉俄墨冬拒绝回礼被海神引海水淹了一次.  \n\n普里阿摩斯是最后一个特洛伊王, 儿子赫克托和阿基里斯(希腊第一勇士,阿喀琉斯之踵)决斗被战死. 另外一个儿子帕里斯这时金苹果事件里的裁判, 海伦和帕里斯私奔到特洛伊城 引发特洛伊战争, 阿喀琉斯的儿子涅俄普托勒摩斯在特洛伊战争中杀死特洛伊国王普里阿摩斯.\n\n奥德修斯(奥德赛)在特洛伊胜利回国途中(西西里岛 意大利 罗马)(葡萄酒灌醉)刺瞎独目巨人(荷马奥德赛中为波塞冬的儿子),躲在绵羊肚子下面逃走,得罪海神波塞冬, 十年后才回到自己国家.   (赫西奥德神话中 宙斯的长矛,波塞冬的三叉戟,冥王哈迪斯的双股叉都为独眼巨人打造)  \n\n\n刺客信条:\n这个波塞多的标志性武器也是一件伊甸碎片，出场于刺客信条末裔小说。三叉戟原本为伊述人制造和保管，数千年后，它落入亚历山大大帝手中，利用三叉戟的力量战无不胜，最终造就了庞大的帝国。\n\n三叉戟有三块戟尖，每块都可以单独作为匕首使用，拥有不同的能力：一块使人敬畏，一块使人钦慕，一块使人迷信。\n\n  \n\n\n##### 金羊毛  \n\n在希腊神话中，金羊毛是一种稀世珍宝，代表着权威和王权。\n\n故事的主人公叫伊阿宋，是古希腊王国的王位继承人，年幼时他亲眼目睹了亲叔叔珀利阿斯如何为了王位残忍地谋害了父亲。侥幸逃命之后，伊阿宋远离了故土，卧薪尝胆二十年努力学习各种技艺，期待能重返家园，夺回王位。珀利阿斯听说了他准备回来的消息后，宣布判处伊阿宋死刑。为了活命，伊阿宋答应给叔叔献上众神的礼物——金羊毛，于是他跟一群勇敢的水手们一起踏上了寻找金羊毛的惊险旅程，并最终实现了自己的目标。\n\n\n##### 裹尸布  \n耶稣被钉死在十字架后用的裹尸布, 殓布.   \n朗基努斯枪: 罗马士兵确认耶稣是否死亡的长矛.   \n圣杯,真十字架 圣枪都为圣物.   \n\n\n##### 弥赛亚  \n弥赛亚（天主教译作默西亚，英语：Messiah），是个圣经词语，与希腊语词基督是一个意思，在希伯来语中最初的意思是受膏者，指的是上帝所选中的人，具有特殊的权力，受膏者是“被委任担当特别职务的人”的意思，是一个头衔或者称号，并不是名字。\n\n### 刺客信条 结构  伊甸碎片设计\n\n裹尸布是一种用来治疗伤病的伊甸碎片。是一块沾有血迹的白布，通常被放在一个简朴的木盒子里。布上还有一个双臂展开，手掌朝外的人印，此人似乎正受到折磨。   \n\n游戏中的裹尸布，传说能够让人起死回生，但实际情况是：裹尸布只能让人恢复一点活力，而且时间很短，有的时候还会产生幻觉。这些幻觉主要是：过去裹尸布使用者留下的记忆。  \n\n裹尸布的制造者叫“康苏斯”，在罗马神话中代表五谷之神（如果不是留言告诉我）在游戏里通过乔凡自称博学之神。康苏斯应该是第一文明的一位科研人员。他对于生命、物质、能量、时间相互转换非常精通。\n\n在第一文明寻找避免大灾难的方法时，康苏斯曾提出了几个大胆的设想：\n\n　　1、改变先行者的身体结构。\n\n　　2、把思想储存到一些无机物里（比如石头）。\n\n　　（六种方案里提到过）康苏斯将自己的思想意识存储在裹尸布之中。任何使用裹尸布的人，都会被康苏斯的意识短暂控制。  \n\n　有关裹尸布最早的传说来自希腊神话。它当时被称作金羊毛，具有神秘的力量。伊阿宋从一棵由毒龙把守的树上，取下了金羊毛。  \n\n\n信条和组织\n\n刺客的信条和圣殿骑士团都已经存在了数千年之久（同时诞生于大约公元75000年前），变化了不知多少形式，多少名称。刺客宇宙中，我们约定俗成地将他们称为为刺客和圣殿骑士。比如，起源中，刺客其实是叫无形者，而圣殿骑士是上古维序者。\n\n巴耶克建立了无形者并将之作为信条，使用了我们后来所熟知的标志，巴耶克的袖剑是古代刺客墓穴中获得的，因此，巴耶克并不是第一个刺客。因此，《奥德赛》中出现的将会是另一种形式的刺客组织。\n\n\n\n\n\n\n\n### 轴心时代   \n雅思贝尔斯的分析框架 超越突破是指产生了不依赖于社会而以个人为载体的思想, 然后再把该思想视角重新投向社会,以此思想产生的价值作为社会存在合理性的最终依据.    \n\n完成超越突破拥有超越视野的四种结构:    \n\n* **个体生命的意义在来世 要依靠外力才能实现**  \n这就是希伯来救赎型文明 即一神论宗教文明 从最早的犹太教 到后来的基督教 伊斯兰教都是这条藤结出的果实 相关宗教史暂时挖个坑。  \n\n* **个体生命的意义在今生 要依靠外力才能实现**  \n这就是古希腊求知型文明 即逻各斯 哲学文明 从最早的原子论 数学 逻辑学 到现在都科学大厦 都是在这一基础上建构的。\n\n* **个体生命的意义在来世 要依靠个体自身才能实现**  \n  这就是古印度解脱型文明 即心灵文明（以修心 冥想为特色） 从最早的婆罗门教 佛教 耆那教 到回来的印度教 都是这一文明开出的花朵。\n\n* **个体生命的意义在今生 要依靠个体自身才能实现**  \n  这就是大中华儒家文明 即伦理文明。从春秋战国的儒墨道法 诸子百家 到汉代天人合一 到两晋的玄学 到后来的理学 心学 是这一文明在不同时期的演化形态。\n\n","slug":"2019-01-17-Odyssey","published":1,"updated":"2019-02-19T07:22:36.518Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck44ekz2o000yr45h1eylebe6","content":"<blockquote>\n<p>在现代英语中，人们将奥德赛这个词引申为“长途的冒险行程”，用来形容类似的探索或者冒险经历。  </p>\n</blockquote>\n<blockquote>\n<p>希腊半岛又称为巴尔干半岛(有时包含更多的区域),  雅典位于阿提卡半岛, 斯巴达和奥林匹亚位于伯罗奔尼撒半岛.    </p>\n</blockquote>\n<blockquote>\n<p>提洛岛是基克拉泽斯群岛的心脏, 希腊神话中女神勒托的居住地, 阿波罗和阿耳忒弥斯的出生地, 为宗教圣地.  </p>\n</blockquote>\n<h3><span id=\"story-line\">story line:</span></h3><p><img src=\"http://a0.att.hudong.com/41/79/01300000433093124784792406044.jpg\" alt=\"古代希腊\">   </p>\n  <a id=\"more\"></a> \n<blockquote>\n<p>公元前一万年  亚特兰蒂斯 被洪水毁灭  </p>\n</blockquote>\n<blockquote>\n<p>公元前1900(BC) 迈锡尼人(老斯巴达人)到达希腊半岛, 1500BC统治希腊半岛, 1380BC统治东地中海.  </p>\n</blockquote>\n<blockquote>\n<p>公元前1250左右 特洛伊战争爆发  迈锡尼人衰落 </p>\n</blockquote>\n<blockquote>\n<p>公元前1100年至前950年期间 多利亚人入侵伯罗奔尼撒半岛 建都斯巴达  (新斯巴达人, 原斯巴达人变为奴隶 迈锡尼人).</p>\n</blockquote>\n<blockquote>\n<p>公元前753年 罗马建城  </p>\n</blockquote>\n<blockquote>\n<p>公元前736  斯巴达第一次美塞尼亚战争, 第二次美塞尼亚战争, 斯巴达人转型为军国主义(人口比例奴隶7,斯巴达人3)  </p>\n</blockquote>\n<blockquote>\n<p>公元前8世纪 700-799 《奥德赛》成书  </p>\n</blockquote>\n<blockquote>\n<p>公元前650年 斯巴达成为希腊军事霸主  </p>\n</blockquote>\n<blockquote>\n<p>公元前600年 希腊称波斯地区为 波斯  </p>\n</blockquote>\n<blockquote>\n<p>公元前509 罗马共和国 元老院与罗马人民  </p>\n</blockquote>\n<blockquote>\n<p>公元前499年 希波战争  </p>\n</blockquote>\n<blockquote>\n<p>公元前490年  (希波战争)马拉松战役  </p>\n</blockquote>\n<blockquote>\n<p>公元前480年约9月 (希波战争)温泉关战役 斯巴达300勇士<br>公元前480年9月   (希波战争)萨拉米斯海战 波斯海军大败<br>公元前479年      (希波战争)普拉提亚战役 波斯陆军大败  </p>\n</blockquote>\n<blockquote>\n<p>公元前431到404年 伯罗奔尼撒战争爆发 (雅典的提洛同盟和斯巴达的伯罗奔尼撒战争联盟)   (前470-前399 苏格拉底, 前429-前347 柏拉图, 前384-前322 亚里士多德(亚历山大老师))    </p>\n</blockquote>\n<blockquote>\n<p>公元前371年 斯巴达在留克特拉战役中战败 (底比斯 神圣少年爱军..)  </p>\n</blockquote>\n<blockquote>\n<p>公元前356-前334前323 亚历山大大帝 十年的亚历山大东征 征服波斯帝国  </p>\n</blockquote>\n<blockquote>\n<p>公元前215年-前148 罗马共和国 四次马其顿战争征服马其顿控制整个希腊  </p>\n</blockquote>\n<blockquote>\n<p>公元前146年 斯巴达被罗马征服  </p>\n</blockquote>\n<blockquote>\n<p>公元前44年 凯撒大帝遇刺, 屋大维击败安东尼开创罗马帝国   存在将近一千五百年.  </p>\n<p>公元17世纪 罗马废除君主制,成立意大利共和国<br>公元1861年 意大利统一  意大利王国<br>公元1935年 波斯国王宣布国际改称伊朗<br>公元1946年 意大利建立共和国  </p>\n</blockquote>\n<h5><span id=\"金苹果\">金苹果</span></h5><p>希腊神话中重要的承前启后的事件（金苹果事件→帕里斯的评判→特洛伊战争）。  </p>\n<p>事发人间英雄佩琉斯与海中女神忒提斯的婚宴。由于婚事直接由天神宙斯撮合，当时邀请了一批神级较高的神祇赴宴。据一些史诗记载是因为金制的名贵餐具有限——当然也不排除其本身不受欢迎的因素——管辖纠纷的女神厄里斯未被邀请。觉得受到冒犯的厄里斯不请自来，一言不发，在宴席上留下一个硕大华丽的黄金苹果，上面刻有“καλλίστῃ”（kallistē(i)/ Kallisti）的字样，意思是“献给最美丽的女神”；该物被称为“引致纠纷的金苹果”。</p>\n<p>在场神级最高、同时也最为美艳的三位女神：雅典娜、阿佛罗狄忒和赫拉卷入了金苹果所引致的纠纷，她们要求宙斯评判谁可以获得金苹果。宙斯则认为，凡间一位潇洒俊朗、一表人才的王子帕里斯更适合成为这道难题的评判，其人当时正在特洛伊城附近的艾达山上牧羊。于是，天后赫拉、智慧女神雅典娜与爱神阿佛罗狄忒在神使赫耳墨斯的前导下，前往艾达山，请帕里斯王子作仲裁。帕里斯将象征“最美女神”的金苹果给了爱神阿佛罗狄忒，因为她承诺帕里斯将会得到人间最美丽女子海伦的爱情。   </p>\n<h5><span id=\"三叉戟\">三叉戟</span></h5><p>在希腊神话中，这是海神波塞顿的象征物和武器，传说是他用三叉劈开大山，将山石变成岛屿。如同对应于波塞顿的罗马神尼普顿也是以三叉为象征。但在基督教、天主教里认为三叉是魔鬼撒旦的武器（二短一长的形体有男性阳具的象征），这些转变和对立被一些学者认为是新宗教代替旧宗教时的证据。  </p>\n<p>特洛伊的城墙是太阳神阿波罗以及海神波塞冬共同建造(篡位失败被宙斯惩罚), 但因普里阿摩斯的父亲拉俄墨冬拒绝回礼被海神引海水淹了一次.  </p>\n<p>普里阿摩斯是最后一个特洛伊王, 儿子赫克托和阿基里斯(希腊第一勇士,阿喀琉斯之踵)决斗被战死. 另外一个儿子帕里斯这时金苹果事件里的裁判, 海伦和帕里斯私奔到特洛伊城 引发特洛伊战争, 阿喀琉斯的儿子涅俄普托勒摩斯在特洛伊战争中杀死特洛伊国王普里阿摩斯.</p>\n<p>奥德修斯(奥德赛)在特洛伊胜利回国途中(西西里岛 意大利 罗马)(葡萄酒灌醉)刺瞎独目巨人(荷马奥德赛中为波塞冬的儿子),躲在绵羊肚子下面逃走,得罪海神波塞冬, 十年后才回到自己国家.   (赫西奥德神话中 宙斯的长矛,波塞冬的三叉戟,冥王哈迪斯的双股叉都为独眼巨人打造)  </p>\n<p>刺客信条:<br>这个波塞多的标志性武器也是一件伊甸碎片，出场于刺客信条末裔小说。三叉戟原本为伊述人制造和保管，数千年后，它落入亚历山大大帝手中，利用三叉戟的力量战无不胜，最终造就了庞大的帝国。</p>\n<p>三叉戟有三块戟尖，每块都可以单独作为匕首使用，拥有不同的能力：一块使人敬畏，一块使人钦慕，一块使人迷信。</p>\n<h5><span id=\"金羊毛\">金羊毛</span></h5><p>在希腊神话中，金羊毛是一种稀世珍宝，代表着权威和王权。</p>\n<p>故事的主人公叫伊阿宋，是古希腊王国的王位继承人，年幼时他亲眼目睹了亲叔叔珀利阿斯如何为了王位残忍地谋害了父亲。侥幸逃命之后，伊阿宋远离了故土，卧薪尝胆二十年努力学习各种技艺，期待能重返家园，夺回王位。珀利阿斯听说了他准备回来的消息后，宣布判处伊阿宋死刑。为了活命，伊阿宋答应给叔叔献上众神的礼物——金羊毛，于是他跟一群勇敢的水手们一起踏上了寻找金羊毛的惊险旅程，并最终实现了自己的目标。</p>\n<h5><span id=\"裹尸布\">裹尸布</span></h5><p>耶稣被钉死在十字架后用的裹尸布, 殓布.<br>朗基努斯枪: 罗马士兵确认耶稣是否死亡的长矛.<br>圣杯,真十字架 圣枪都为圣物.   </p>\n<h5><span id=\"弥赛亚\">弥赛亚</span></h5><p>弥赛亚（天主教译作默西亚，英语：Messiah），是个圣经词语，与希腊语词基督是一个意思，在希伯来语中最初的意思是受膏者，指的是上帝所选中的人，具有特殊的权力，受膏者是“被委任担当特别职务的人”的意思，是一个头衔或者称号，并不是名字。</p>\n<h3><span id=\"刺客信条-结构-伊甸碎片设计\">刺客信条 结构  伊甸碎片设计</span></h3><p>裹尸布是一种用来治疗伤病的伊甸碎片。是一块沾有血迹的白布，通常被放在一个简朴的木盒子里。布上还有一个双臂展开，手掌朝外的人印，此人似乎正受到折磨。   </p>\n<p>游戏中的裹尸布，传说能够让人起死回生，但实际情况是：裹尸布只能让人恢复一点活力，而且时间很短，有的时候还会产生幻觉。这些幻觉主要是：过去裹尸布使用者留下的记忆。  </p>\n<p>裹尸布的制造者叫“康苏斯”，在罗马神话中代表五谷之神（如果不是留言告诉我）在游戏里通过乔凡自称博学之神。康苏斯应该是第一文明的一位科研人员。他对于生命、物质、能量、时间相互转换非常精通。</p>\n<p>在第一文明寻找避免大灾难的方法时，康苏斯曾提出了几个大胆的设想：</p>\n<p>　　1、改变先行者的身体结构。</p>\n<p>　　2、把思想储存到一些无机物里（比如石头）。</p>\n<p>　　（六种方案里提到过）康苏斯将自己的思想意识存储在裹尸布之中。任何使用裹尸布的人，都会被康苏斯的意识短暂控制。  </p>\n<p>　有关裹尸布最早的传说来自希腊神话。它当时被称作金羊毛，具有神秘的力量。伊阿宋从一棵由毒龙把守的树上，取下了金羊毛。  </p>\n<p>信条和组织</p>\n<p>刺客的信条和圣殿骑士团都已经存在了数千年之久（同时诞生于大约公元75000年前），变化了不知多少形式，多少名称。刺客宇宙中，我们约定俗成地将他们称为为刺客和圣殿骑士。比如，起源中，刺客其实是叫无形者，而圣殿骑士是上古维序者。</p>\n<p>巴耶克建立了无形者并将之作为信条，使用了我们后来所熟知的标志，巴耶克的袖剑是古代刺客墓穴中获得的，因此，巴耶克并不是第一个刺客。因此，《奥德赛》中出现的将会是另一种形式的刺客组织。</p>\n<h3><span id=\"轴心时代\">轴心时代</span></h3><p>雅思贝尔斯的分析框架 超越突破是指产生了不依赖于社会而以个人为载体的思想, 然后再把该思想视角重新投向社会,以此思想产生的价值作为社会存在合理性的最终依据.    </p>\n<p>完成超越突破拥有超越视野的四种结构:    </p>\n<ul>\n<li><p><strong>个体生命的意义在来世 要依靠外力才能实现</strong><br>这就是希伯来救赎型文明 即一神论宗教文明 从最早的犹太教 到后来的基督教 伊斯兰教都是这条藤结出的果实 相关宗教史暂时挖个坑。  </p>\n</li>\n<li><p><strong>个体生命的意义在今生 要依靠外力才能实现</strong><br>这就是古希腊求知型文明 即逻各斯 哲学文明 从最早的原子论 数学 逻辑学 到现在都科学大厦 都是在这一基础上建构的。</p>\n</li>\n<li><p><strong>个体生命的意义在来世 要依靠个体自身才能实现</strong><br>这就是古印度解脱型文明 即心灵文明（以修心 冥想为特色） 从最早的婆罗门教 佛教 耆那教 到回来的印度教 都是这一文明开出的花朵。</p>\n</li>\n<li><p><strong>个体生命的意义在今生 要依靠个体自身才能实现</strong><br>这就是大中华儒家文明 即伦理文明。从春秋战国的儒墨道法 诸子百家 到汉代天人合一 到两晋的玄学 到后来的理学 心学 是这一文明在不同时期的演化形态。</p>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"<blockquote>\n<p>在现代英语中，人们将奥德赛这个词引申为“长途的冒险行程”，用来形容类似的探索或者冒险经历。  </p>\n</blockquote>\n<blockquote>\n<p>希腊半岛又称为巴尔干半岛(有时包含更多的区域),  雅典位于阿提卡半岛, 斯巴达和奥林匹亚位于伯罗奔尼撒半岛.    </p>\n</blockquote>\n<blockquote>\n<p>提洛岛是基克拉泽斯群岛的心脏, 希腊神话中女神勒托的居住地, 阿波罗和阿耳忒弥斯的出生地, 为宗教圣地.  </p>\n</blockquote>\n<h3 id=\"story-line\"><a href=\"#story-line\" class=\"headerlink\" title=\"story line:\"></a>story line:</h3><p><img src=\"http://a0.att.hudong.com/41/79/01300000433093124784792406044.jpg\" alt=\"古代希腊\">   </p>","more":"<blockquote>\n<p>公元前一万年  亚特兰蒂斯 被洪水毁灭  </p>\n</blockquote>\n<blockquote>\n<p>公元前1900(BC) 迈锡尼人(老斯巴达人)到达希腊半岛, 1500BC统治希腊半岛, 1380BC统治东地中海.  </p>\n</blockquote>\n<blockquote>\n<p>公元前1250左右 特洛伊战争爆发  迈锡尼人衰落 </p>\n</blockquote>\n<blockquote>\n<p>公元前1100年至前950年期间 多利亚人入侵伯罗奔尼撒半岛 建都斯巴达  (新斯巴达人, 原斯巴达人变为奴隶 迈锡尼人).</p>\n</blockquote>\n<blockquote>\n<p>公元前753年 罗马建城  </p>\n</blockquote>\n<blockquote>\n<p>公元前736  斯巴达第一次美塞尼亚战争, 第二次美塞尼亚战争, 斯巴达人转型为军国主义(人口比例奴隶7,斯巴达人3)  </p>\n</blockquote>\n<blockquote>\n<p>公元前8世纪 700-799 《奥德赛》成书  </p>\n</blockquote>\n<blockquote>\n<p>公元前650年 斯巴达成为希腊军事霸主  </p>\n</blockquote>\n<blockquote>\n<p>公元前600年 希腊称波斯地区为 波斯  </p>\n</blockquote>\n<blockquote>\n<p>公元前509 罗马共和国 元老院与罗马人民  </p>\n</blockquote>\n<blockquote>\n<p>公元前499年 希波战争  </p>\n</blockquote>\n<blockquote>\n<p>公元前490年  (希波战争)马拉松战役  </p>\n</blockquote>\n<blockquote>\n<p>公元前480年约9月 (希波战争)温泉关战役 斯巴达300勇士<br>公元前480年9月   (希波战争)萨拉米斯海战 波斯海军大败<br>公元前479年      (希波战争)普拉提亚战役 波斯陆军大败  </p>\n</blockquote>\n<blockquote>\n<p>公元前431到404年 伯罗奔尼撒战争爆发 (雅典的提洛同盟和斯巴达的伯罗奔尼撒战争联盟)   (前470-前399 苏格拉底, 前429-前347 柏拉图, 前384-前322 亚里士多德(亚历山大老师))    </p>\n</blockquote>\n<blockquote>\n<p>公元前371年 斯巴达在留克特拉战役中战败 (底比斯 神圣少年爱军..)  </p>\n</blockquote>\n<blockquote>\n<p>公元前356-前334前323 亚历山大大帝 十年的亚历山大东征 征服波斯帝国  </p>\n</blockquote>\n<blockquote>\n<p>公元前215年-前148 罗马共和国 四次马其顿战争征服马其顿控制整个希腊  </p>\n</blockquote>\n<blockquote>\n<p>公元前146年 斯巴达被罗马征服  </p>\n</blockquote>\n<blockquote>\n<p>公元前44年 凯撒大帝遇刺, 屋大维击败安东尼开创罗马帝国   存在将近一千五百年.  </p>\n<p>公元17世纪 罗马废除君主制,成立意大利共和国<br>公元1861年 意大利统一  意大利王国<br>公元1935年 波斯国王宣布国际改称伊朗<br>公元1946年 意大利建立共和国  </p>\n</blockquote>\n<h5 id=\"金苹果\"><a href=\"#金苹果\" class=\"headerlink\" title=\"金苹果\"></a>金苹果</h5><p>希腊神话中重要的承前启后的事件（金苹果事件→帕里斯的评判→特洛伊战争）。  </p>\n<p>事发人间英雄佩琉斯与海中女神忒提斯的婚宴。由于婚事直接由天神宙斯撮合，当时邀请了一批神级较高的神祇赴宴。据一些史诗记载是因为金制的名贵餐具有限——当然也不排除其本身不受欢迎的因素——管辖纠纷的女神厄里斯未被邀请。觉得受到冒犯的厄里斯不请自来，一言不发，在宴席上留下一个硕大华丽的黄金苹果，上面刻有“καλλίστῃ”（kallistē(i)/ Kallisti）的字样，意思是“献给最美丽的女神”；该物被称为“引致纠纷的金苹果”。</p>\n<p>在场神级最高、同时也最为美艳的三位女神：雅典娜、阿佛罗狄忒和赫拉卷入了金苹果所引致的纠纷，她们要求宙斯评判谁可以获得金苹果。宙斯则认为，凡间一位潇洒俊朗、一表人才的王子帕里斯更适合成为这道难题的评判，其人当时正在特洛伊城附近的艾达山上牧羊。于是，天后赫拉、智慧女神雅典娜与爱神阿佛罗狄忒在神使赫耳墨斯的前导下，前往艾达山，请帕里斯王子作仲裁。帕里斯将象征“最美女神”的金苹果给了爱神阿佛罗狄忒，因为她承诺帕里斯将会得到人间最美丽女子海伦的爱情。   </p>\n<h5 id=\"三叉戟\"><a href=\"#三叉戟\" class=\"headerlink\" title=\"三叉戟\"></a>三叉戟</h5><p>在希腊神话中，这是海神波塞顿的象征物和武器，传说是他用三叉劈开大山，将山石变成岛屿。如同对应于波塞顿的罗马神尼普顿也是以三叉为象征。但在基督教、天主教里认为三叉是魔鬼撒旦的武器（二短一长的形体有男性阳具的象征），这些转变和对立被一些学者认为是新宗教代替旧宗教时的证据。  </p>\n<p>特洛伊的城墙是太阳神阿波罗以及海神波塞冬共同建造(篡位失败被宙斯惩罚), 但因普里阿摩斯的父亲拉俄墨冬拒绝回礼被海神引海水淹了一次.  </p>\n<p>普里阿摩斯是最后一个特洛伊王, 儿子赫克托和阿基里斯(希腊第一勇士,阿喀琉斯之踵)决斗被战死. 另外一个儿子帕里斯这时金苹果事件里的裁判, 海伦和帕里斯私奔到特洛伊城 引发特洛伊战争, 阿喀琉斯的儿子涅俄普托勒摩斯在特洛伊战争中杀死特洛伊国王普里阿摩斯.</p>\n<p>奥德修斯(奥德赛)在特洛伊胜利回国途中(西西里岛 意大利 罗马)(葡萄酒灌醉)刺瞎独目巨人(荷马奥德赛中为波塞冬的儿子),躲在绵羊肚子下面逃走,得罪海神波塞冬, 十年后才回到自己国家.   (赫西奥德神话中 宙斯的长矛,波塞冬的三叉戟,冥王哈迪斯的双股叉都为独眼巨人打造)  </p>\n<p>刺客信条:<br>这个波塞多的标志性武器也是一件伊甸碎片，出场于刺客信条末裔小说。三叉戟原本为伊述人制造和保管，数千年后，它落入亚历山大大帝手中，利用三叉戟的力量战无不胜，最终造就了庞大的帝国。</p>\n<p>三叉戟有三块戟尖，每块都可以单独作为匕首使用，拥有不同的能力：一块使人敬畏，一块使人钦慕，一块使人迷信。</p>\n<h5 id=\"金羊毛\"><a href=\"#金羊毛\" class=\"headerlink\" title=\"金羊毛\"></a>金羊毛</h5><p>在希腊神话中，金羊毛是一种稀世珍宝，代表着权威和王权。</p>\n<p>故事的主人公叫伊阿宋，是古希腊王国的王位继承人，年幼时他亲眼目睹了亲叔叔珀利阿斯如何为了王位残忍地谋害了父亲。侥幸逃命之后，伊阿宋远离了故土，卧薪尝胆二十年努力学习各种技艺，期待能重返家园，夺回王位。珀利阿斯听说了他准备回来的消息后，宣布判处伊阿宋死刑。为了活命，伊阿宋答应给叔叔献上众神的礼物——金羊毛，于是他跟一群勇敢的水手们一起踏上了寻找金羊毛的惊险旅程，并最终实现了自己的目标。</p>\n<h5 id=\"裹尸布\"><a href=\"#裹尸布\" class=\"headerlink\" title=\"裹尸布\"></a>裹尸布</h5><p>耶稣被钉死在十字架后用的裹尸布, 殓布.<br>朗基努斯枪: 罗马士兵确认耶稣是否死亡的长矛.<br>圣杯,真十字架 圣枪都为圣物.   </p>\n<h5 id=\"弥赛亚\"><a href=\"#弥赛亚\" class=\"headerlink\" title=\"弥赛亚\"></a>弥赛亚</h5><p>弥赛亚（天主教译作默西亚，英语：Messiah），是个圣经词语，与希腊语词基督是一个意思，在希伯来语中最初的意思是受膏者，指的是上帝所选中的人，具有特殊的权力，受膏者是“被委任担当特别职务的人”的意思，是一个头衔或者称号，并不是名字。</p>\n<h3 id=\"刺客信条-结构-伊甸碎片设计\"><a href=\"#刺客信条-结构-伊甸碎片设计\" class=\"headerlink\" title=\"刺客信条 结构  伊甸碎片设计\"></a>刺客信条 结构  伊甸碎片设计</h3><p>裹尸布是一种用来治疗伤病的伊甸碎片。是一块沾有血迹的白布，通常被放在一个简朴的木盒子里。布上还有一个双臂展开，手掌朝外的人印，此人似乎正受到折磨。   </p>\n<p>游戏中的裹尸布，传说能够让人起死回生，但实际情况是：裹尸布只能让人恢复一点活力，而且时间很短，有的时候还会产生幻觉。这些幻觉主要是：过去裹尸布使用者留下的记忆。  </p>\n<p>裹尸布的制造者叫“康苏斯”，在罗马神话中代表五谷之神（如果不是留言告诉我）在游戏里通过乔凡自称博学之神。康苏斯应该是第一文明的一位科研人员。他对于生命、物质、能量、时间相互转换非常精通。</p>\n<p>在第一文明寻找避免大灾难的方法时，康苏斯曾提出了几个大胆的设想：</p>\n<p>　　1、改变先行者的身体结构。</p>\n<p>　　2、把思想储存到一些无机物里（比如石头）。</p>\n<p>　　（六种方案里提到过）康苏斯将自己的思想意识存储在裹尸布之中。任何使用裹尸布的人，都会被康苏斯的意识短暂控制。  </p>\n<p>　有关裹尸布最早的传说来自希腊神话。它当时被称作金羊毛，具有神秘的力量。伊阿宋从一棵由毒龙把守的树上，取下了金羊毛。  </p>\n<p>信条和组织</p>\n<p>刺客的信条和圣殿骑士团都已经存在了数千年之久（同时诞生于大约公元75000年前），变化了不知多少形式，多少名称。刺客宇宙中，我们约定俗成地将他们称为为刺客和圣殿骑士。比如，起源中，刺客其实是叫无形者，而圣殿骑士是上古维序者。</p>\n<p>巴耶克建立了无形者并将之作为信条，使用了我们后来所熟知的标志，巴耶克的袖剑是古代刺客墓穴中获得的，因此，巴耶克并不是第一个刺客。因此，《奥德赛》中出现的将会是另一种形式的刺客组织。</p>\n<h3 id=\"轴心时代\"><a href=\"#轴心时代\" class=\"headerlink\" title=\"轴心时代\"></a>轴心时代</h3><p>雅思贝尔斯的分析框架 超越突破是指产生了不依赖于社会而以个人为载体的思想, 然后再把该思想视角重新投向社会,以此思想产生的价值作为社会存在合理性的最终依据.    </p>\n<p>完成超越突破拥有超越视野的四种结构:    </p>\n<ul>\n<li><p><strong>个体生命的意义在来世 要依靠外力才能实现</strong><br>这就是希伯来救赎型文明 即一神论宗教文明 从最早的犹太教 到后来的基督教 伊斯兰教都是这条藤结出的果实 相关宗教史暂时挖个坑。  </p>\n</li>\n<li><p><strong>个体生命的意义在今生 要依靠外力才能实现</strong><br>这就是古希腊求知型文明 即逻各斯 哲学文明 从最早的原子论 数学 逻辑学 到现在都科学大厦 都是在这一基础上建构的。</p>\n</li>\n<li><p><strong>个体生命的意义在来世 要依靠个体自身才能实现</strong><br>这就是古印度解脱型文明 即心灵文明（以修心 冥想为特色） 从最早的婆罗门教 佛教 耆那教 到回来的印度教 都是这一文明开出的花朵。</p>\n</li>\n<li><p><strong>个体生命的意义在今生 要依靠个体自身才能实现</strong><br>这就是大中华儒家文明 即伦理文明。从春秋战国的儒墨道法 诸子百家 到汉代天人合一 到两晋的玄学 到后来的理学 心学 是这一文明在不同时期的演化形态。</p>\n</li>\n</ul>"},{"title":"RVO源码阅读笔记","date":"2019-06-08T10:37:00.000Z","author":"yawei.zhang","_content":"\n \n##### KDTREE  \n空间K维划分, 用来快速寻找距离最近的障碍(指定数量)  优化RVO的资源消耗.  \n\n### 路径规划  \n##### 高级规划  \nDIJKSTRA 最短路径  等寻路方法  \n##### 底层规划  \nVO RVO ORCA等Obstacle Avoidance避障算法  \n\n### KDTREE\n这个是一个简单的KDTREE实现 用来寻找距离最近的障碍(指定数量)  优化RVO的资源消耗.  \n\n### VO  Velocity Obstacles  速度障碍  \n核心思想: 只要在未来有可能会发生碰撞的速度 都排除在外   \n抖动现象: 两个位移单位存在可能会发生路径碰撞的情况下会同时采取保守的避让速度,导致新速度偏离过大又大幅度回归,从而产生震荡.  \n\n### RVO Reciprocal Velocity Obstacles  互惠的速度障碍  \n核心思想: 优化VO思想, 假定对方也会采取避障行为, 缩小(average VO)速度.   \n\n### ORCA  Optimal Reciprocal Collision Avoidance  最优互惠碰撞避免  \n核心思想: 优化RVO, 额外考虑速度大小, 求解过程使用线性规划,更高效简洁.   \n\n* **对其他所有agents的ORCA求交（线性规划），再与自己可选速度求交集，得候选速度集ORCAτA**  \n* **在候选集中求解跟自己偏好速度最近的一个速度vnewA**  \n\n<!-- more --> \n##### computeNewVelocity  \n``` cpp\n/* Search for the best new velocity. */\nvoid Agent::computeNewVelocity()\n{\n    orcaLines_.clear();\n\n    const size_t numObstLines = orcaLines_.size();\n\n    const float invTimeHorizon = 1.0f / timeHorizon_;\n\n    /* Create agent ORCA lines. */\n    for (size_t i = 0; i < agentNeighbors_.size(); ++i) {\n        const Agent *const other = agentNeighbors_[i].second;\n\n        const Vector2 relativePosition = other->position_ - position_;\n        const Vector2 relativeVelocity = velocity_ - other->velocity_;\n        const float distSq = absSq(relativePosition);\n        const float combinedRadius = radius_ + other->radius_;\n        const float combinedRadiusSq = sqr(combinedRadius);\n\n        Line line;\n        Vector2 u;\n\n        if (distSq > combinedRadiusSq) {\n            /* No collision. */\n            const Vector2 w = relativeVelocity - invTimeHorizon * relativePosition;\n            /* Vector from cutoff center to relative velocity. */\n            const float wLengthSq = absSq(w);\n\n            const float dotProduct1 = w * relativePosition;\n\n            if (dotProduct1 < 0.0f && sqr(dotProduct1) > combinedRadiusSq * wLengthSq) {\n                /* Project on cut-off circle. */\n                const float wLength = std::sqrt(wLengthSq);\n                const Vector2 unitW = w / wLength;\n\n                line.direction = Vector2(unitW.y(), -unitW.x());\n                u = (combinedRadius * invTimeHorizon - wLength) * unitW;\n            }\n            else {\n                /* Project on legs. */\n                const float leg = std::sqrt(distSq - combinedRadiusSq);\n\n                if (det(relativePosition, w) > 0.0f) {\n                    /* Project on left leg. */\n                    line.direction = Vector2(relativePosition.x() * leg - relativePosition.y() * combinedRadius, relativePosition.x() * combinedRadius + relativePosition.y() * leg) / distSq;\n                }\n                else {\n                    /* Project on right leg. */\n                    line.direction = -Vector2(relativePosition.x() * leg + relativePosition.y() * combinedRadius, -relativePosition.x() * combinedRadius + relativePosition.y() * leg) / distSq;\n                }\n\n                const float dotProduct2 = relativeVelocity * line.direction;\n\n                u = dotProduct2 * line.direction - relativeVelocity;\n            }\n        }\n        else {\n            /* Collision. Project on cut-off circle of time timeStep. */\n            const float invTimeStep = 1.0f / sim_->timeStep_;\n\n            /* Vector from cutoff center to relative velocity. */\n            const Vector2 w = relativeVelocity - invTimeStep * relativePosition;\n\n            const float wLength = abs(w);\n            const Vector2 unitW = w / wLength;\n\n            line.direction = Vector2(unitW.y(), -unitW.x());\n            u = (combinedRadius * invTimeStep - wLength) * unitW;\n        }\n\n        line.point = velocity_ + 0.5f * u;\n        orcaLines_.push_back(line);\n    }\n\n    size_t lineFail = linearProgram2(orcaLines_, maxSpeed_, prefVelocity_, false, newVelocity_);\n\n    if (lineFail < orcaLines_.size()) {\n        //linearProgram3(orcaLines_, numObstLines, lineFail, maxSpeed_, newVelocity_);\n    }\n}\n```\n##### linearProgram2\n``` cpp\nsize_t linearProgram2(const std::vector<Line> &lines, float radius, const Vector2 &optVelocity, bool directionOpt, Vector2 &result)\n{\n    if (directionOpt) {\n        /*\n            * Optimize direction. Note that the optimization velocity is of unit\n            * length in this case.\n            */\n        result = optVelocity * radius;\n    }\n    else if (absSq(optVelocity) > sqr(radius)) {\n        /* Optimize closest point and outside circle. */\n        result = normalize(optVelocity) * radius;\n    }\n    else {\n        /* Optimize closest point and inside circle. */\n        result = optVelocity;\n    }\n\n    for (size_t i = 0; i < lines.size(); ++i) {\n        if (det(lines[i].direction, lines[i].point - result) > 0.0f) {\n            /* Result does not satisfy constraint i. Compute new optimal result. */\n            const Vector2 tempResult = result;\n\n            if (!linearProgram1(lines, i, radius, optVelocity, directionOpt, result)) {\n                result = tempResult;\n                return i;\n            }\n        }\n    }\n\n    return lines.size();\n}\n```\n\n##### linearProgram1\n``` cpp \nbool linearProgram1(const std::vector<Line> &lines, size_t lineNo, float radius, const Vector2 &optVelocity, bool directionOpt, Vector2 &result)\n{\n    const float dotProduct = lines[lineNo].point * lines[lineNo].direction;\n    const float discriminant = sqr(dotProduct) + sqr(radius) - absSq(lines[lineNo].point);\n\n    if (discriminant < 0.0f) {\n        /* Max speed circle fully invalidates line lineNo. */\n        return false;\n    }\n\n    const float sqrtDiscriminant = std::sqrt(discriminant);\n    float tLeft = -dotProduct - sqrtDiscriminant;\n    float tRight = -dotProduct + sqrtDiscriminant;\n\n    for (size_t i = 0; i < lineNo; ++i) {\n        const float denominator = det(lines[lineNo].direction, lines[i].direction);\n        const float numerator = det(lines[i].direction, lines[lineNo].point - lines[i].point);\n\n        if (std::fabs(denominator) <= RVO_EPSILON) {\n            /* Lines lineNo and i are (almost) parallel. */\n            if (numerator < 0.0f) {\n                return false;\n            }\n            else {\n                continue;\n            }\n        }\n\n        const float t = numerator / denominator;\n\n        if (denominator >= 0.0f) {\n            /* Line i bounds line lineNo on the right. */\n            tRight = std::min(tRight, t);\n        }\n        else {\n            /* Line i bounds line lineNo on the left. */\n            tLeft = std::max(tLeft, t);\n        }\n\n        if (tLeft > tRight) {\n            return false;\n        }\n    }\n\n    if (directionOpt) {\n        /* Optimize direction. */\n        if (optVelocity * lines[lineNo].direction > 0.0f) {\n            /* Take right extreme. */\n            result = lines[lineNo].point + tRight * lines[lineNo].direction;\n        }\n        else {\n            /* Take left extreme. */\n            result = lines[lineNo].point + tLeft * lines[lineNo].direction;\n        }\n    }\n    else {\n        /* Optimize closest point. */\n        const float t = lines[lineNo].direction * (optVelocity - lines[lineNo].point);\n\n        if (t < tLeft) {\n            result = lines[lineNo].point + tLeft * lines[lineNo].direction;\n        }\n        else if (t > tRight) {\n            result = lines[lineNo].point + tRight * lines[lineNo].direction;\n        }\n        else {\n            result = lines[lineNo].point + t * lines[lineNo].direction;\n        }\n    }\n\n    return true;\n}\n``` \n","source":"_posts/2019-06-08-rvo.md","raw":"---\ntitle: RVO源码阅读笔记  \ndate: 2019-06-08 18:37:00\ncategories: develop \nauthor: yawei.zhang \n---\n\n \n##### KDTREE  \n空间K维划分, 用来快速寻找距离最近的障碍(指定数量)  优化RVO的资源消耗.  \n\n### 路径规划  \n##### 高级规划  \nDIJKSTRA 最短路径  等寻路方法  \n##### 底层规划  \nVO RVO ORCA等Obstacle Avoidance避障算法  \n\n### KDTREE\n这个是一个简单的KDTREE实现 用来寻找距离最近的障碍(指定数量)  优化RVO的资源消耗.  \n\n### VO  Velocity Obstacles  速度障碍  \n核心思想: 只要在未来有可能会发生碰撞的速度 都排除在外   \n抖动现象: 两个位移单位存在可能会发生路径碰撞的情况下会同时采取保守的避让速度,导致新速度偏离过大又大幅度回归,从而产生震荡.  \n\n### RVO Reciprocal Velocity Obstacles  互惠的速度障碍  \n核心思想: 优化VO思想, 假定对方也会采取避障行为, 缩小(average VO)速度.   \n\n### ORCA  Optimal Reciprocal Collision Avoidance  最优互惠碰撞避免  \n核心思想: 优化RVO, 额外考虑速度大小, 求解过程使用线性规划,更高效简洁.   \n\n* **对其他所有agents的ORCA求交（线性规划），再与自己可选速度求交集，得候选速度集ORCAτA**  \n* **在候选集中求解跟自己偏好速度最近的一个速度vnewA**  \n\n<!-- more --> \n##### computeNewVelocity  \n``` cpp\n/* Search for the best new velocity. */\nvoid Agent::computeNewVelocity()\n{\n    orcaLines_.clear();\n\n    const size_t numObstLines = orcaLines_.size();\n\n    const float invTimeHorizon = 1.0f / timeHorizon_;\n\n    /* Create agent ORCA lines. */\n    for (size_t i = 0; i < agentNeighbors_.size(); ++i) {\n        const Agent *const other = agentNeighbors_[i].second;\n\n        const Vector2 relativePosition = other->position_ - position_;\n        const Vector2 relativeVelocity = velocity_ - other->velocity_;\n        const float distSq = absSq(relativePosition);\n        const float combinedRadius = radius_ + other->radius_;\n        const float combinedRadiusSq = sqr(combinedRadius);\n\n        Line line;\n        Vector2 u;\n\n        if (distSq > combinedRadiusSq) {\n            /* No collision. */\n            const Vector2 w = relativeVelocity - invTimeHorizon * relativePosition;\n            /* Vector from cutoff center to relative velocity. */\n            const float wLengthSq = absSq(w);\n\n            const float dotProduct1 = w * relativePosition;\n\n            if (dotProduct1 < 0.0f && sqr(dotProduct1) > combinedRadiusSq * wLengthSq) {\n                /* Project on cut-off circle. */\n                const float wLength = std::sqrt(wLengthSq);\n                const Vector2 unitW = w / wLength;\n\n                line.direction = Vector2(unitW.y(), -unitW.x());\n                u = (combinedRadius * invTimeHorizon - wLength) * unitW;\n            }\n            else {\n                /* Project on legs. */\n                const float leg = std::sqrt(distSq - combinedRadiusSq);\n\n                if (det(relativePosition, w) > 0.0f) {\n                    /* Project on left leg. */\n                    line.direction = Vector2(relativePosition.x() * leg - relativePosition.y() * combinedRadius, relativePosition.x() * combinedRadius + relativePosition.y() * leg) / distSq;\n                }\n                else {\n                    /* Project on right leg. */\n                    line.direction = -Vector2(relativePosition.x() * leg + relativePosition.y() * combinedRadius, -relativePosition.x() * combinedRadius + relativePosition.y() * leg) / distSq;\n                }\n\n                const float dotProduct2 = relativeVelocity * line.direction;\n\n                u = dotProduct2 * line.direction - relativeVelocity;\n            }\n        }\n        else {\n            /* Collision. Project on cut-off circle of time timeStep. */\n            const float invTimeStep = 1.0f / sim_->timeStep_;\n\n            /* Vector from cutoff center to relative velocity. */\n            const Vector2 w = relativeVelocity - invTimeStep * relativePosition;\n\n            const float wLength = abs(w);\n            const Vector2 unitW = w / wLength;\n\n            line.direction = Vector2(unitW.y(), -unitW.x());\n            u = (combinedRadius * invTimeStep - wLength) * unitW;\n        }\n\n        line.point = velocity_ + 0.5f * u;\n        orcaLines_.push_back(line);\n    }\n\n    size_t lineFail = linearProgram2(orcaLines_, maxSpeed_, prefVelocity_, false, newVelocity_);\n\n    if (lineFail < orcaLines_.size()) {\n        //linearProgram3(orcaLines_, numObstLines, lineFail, maxSpeed_, newVelocity_);\n    }\n}\n```\n##### linearProgram2\n``` cpp\nsize_t linearProgram2(const std::vector<Line> &lines, float radius, const Vector2 &optVelocity, bool directionOpt, Vector2 &result)\n{\n    if (directionOpt) {\n        /*\n            * Optimize direction. Note that the optimization velocity is of unit\n            * length in this case.\n            */\n        result = optVelocity * radius;\n    }\n    else if (absSq(optVelocity) > sqr(radius)) {\n        /* Optimize closest point and outside circle. */\n        result = normalize(optVelocity) * radius;\n    }\n    else {\n        /* Optimize closest point and inside circle. */\n        result = optVelocity;\n    }\n\n    for (size_t i = 0; i < lines.size(); ++i) {\n        if (det(lines[i].direction, lines[i].point - result) > 0.0f) {\n            /* Result does not satisfy constraint i. Compute new optimal result. */\n            const Vector2 tempResult = result;\n\n            if (!linearProgram1(lines, i, radius, optVelocity, directionOpt, result)) {\n                result = tempResult;\n                return i;\n            }\n        }\n    }\n\n    return lines.size();\n}\n```\n\n##### linearProgram1\n``` cpp \nbool linearProgram1(const std::vector<Line> &lines, size_t lineNo, float radius, const Vector2 &optVelocity, bool directionOpt, Vector2 &result)\n{\n    const float dotProduct = lines[lineNo].point * lines[lineNo].direction;\n    const float discriminant = sqr(dotProduct) + sqr(radius) - absSq(lines[lineNo].point);\n\n    if (discriminant < 0.0f) {\n        /* Max speed circle fully invalidates line lineNo. */\n        return false;\n    }\n\n    const float sqrtDiscriminant = std::sqrt(discriminant);\n    float tLeft = -dotProduct - sqrtDiscriminant;\n    float tRight = -dotProduct + sqrtDiscriminant;\n\n    for (size_t i = 0; i < lineNo; ++i) {\n        const float denominator = det(lines[lineNo].direction, lines[i].direction);\n        const float numerator = det(lines[i].direction, lines[lineNo].point - lines[i].point);\n\n        if (std::fabs(denominator) <= RVO_EPSILON) {\n            /* Lines lineNo and i are (almost) parallel. */\n            if (numerator < 0.0f) {\n                return false;\n            }\n            else {\n                continue;\n            }\n        }\n\n        const float t = numerator / denominator;\n\n        if (denominator >= 0.0f) {\n            /* Line i bounds line lineNo on the right. */\n            tRight = std::min(tRight, t);\n        }\n        else {\n            /* Line i bounds line lineNo on the left. */\n            tLeft = std::max(tLeft, t);\n        }\n\n        if (tLeft > tRight) {\n            return false;\n        }\n    }\n\n    if (directionOpt) {\n        /* Optimize direction. */\n        if (optVelocity * lines[lineNo].direction > 0.0f) {\n            /* Take right extreme. */\n            result = lines[lineNo].point + tRight * lines[lineNo].direction;\n        }\n        else {\n            /* Take left extreme. */\n            result = lines[lineNo].point + tLeft * lines[lineNo].direction;\n        }\n    }\n    else {\n        /* Optimize closest point. */\n        const float t = lines[lineNo].direction * (optVelocity - lines[lineNo].point);\n\n        if (t < tLeft) {\n            result = lines[lineNo].point + tLeft * lines[lineNo].direction;\n        }\n        else if (t > tRight) {\n            result = lines[lineNo].point + tRight * lines[lineNo].direction;\n        }\n        else {\n            result = lines[lineNo].point + t * lines[lineNo].direction;\n        }\n    }\n\n    return true;\n}\n``` \n","slug":"2019-06-08-rvo","published":1,"updated":"2019-06-08T10:38:30.899Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck44ekz2o000zr45h69mtc3tf","content":"<h5><span id=\"kdtree\">KDTREE</span></h5><p>空间K维划分, 用来快速寻找距离最近的障碍(指定数量)  优化RVO的资源消耗.  </p>\n<h3><span id=\"路径规划\">路径规划</span></h3><h5><span id=\"高级规划\">高级规划</span></h5><p>DIJKSTRA 最短路径  等寻路方法  </p>\n<h5><span id=\"底层规划\">底层规划</span></h5><p>VO RVO ORCA等Obstacle Avoidance避障算法  </p>\n<h3><span id=\"kdtree\">KDTREE</span></h3><p>这个是一个简单的KDTREE实现 用来寻找距离最近的障碍(指定数量)  优化RVO的资源消耗.  </p>\n<h3><span id=\"vo-velocity-obstacles-速度障碍\">VO  Velocity Obstacles  速度障碍</span></h3><p>核心思想: 只要在未来有可能会发生碰撞的速度 都排除在外<br>抖动现象: 两个位移单位存在可能会发生路径碰撞的情况下会同时采取保守的避让速度,导致新速度偏离过大又大幅度回归,从而产生震荡.  </p>\n<h3><span id=\"rvo-reciprocal-velocity-obstacles-互惠的速度障碍\">RVO Reciprocal Velocity Obstacles  互惠的速度障碍</span></h3><p>核心思想: 优化VO思想, 假定对方也会采取避障行为, 缩小(average VO)速度.   </p>\n<h3><span id=\"orca-optimal-reciprocal-collision-avoidance-最优互惠碰撞避免\">ORCA  Optimal Reciprocal Collision Avoidance  最优互惠碰撞避免</span></h3><p>核心思想: 优化RVO, 额外考虑速度大小, 求解过程使用线性规划,更高效简洁.   </p>\n<ul>\n<li><strong>对其他所有agents的ORCA求交（线性规划），再与自己可选速度求交集，得候选速度集ORCAτA</strong>  </li>\n<li><strong>在候选集中求解跟自己偏好速度最近的一个速度vnewA</strong>  </li>\n</ul>\n<a id=\"more\"></a> \n<h5><span id=\"computenewvelocity\">computeNewVelocity</span></h5><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* Search for the best new velocity. */</span></span><br><span class=\"line\"><span class=\"keyword\">void</span> Agent::computeNewVelocity()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    orcaLines_.clear();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">const</span> <span class=\"keyword\">size_t</span> numObstLines = orcaLines_.size();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">const</span> <span class=\"keyword\">float</span> invTimeHorizon = <span class=\"number\">1.0f</span> / timeHorizon_;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/* Create agent ORCA lines. */</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">size_t</span> i = <span class=\"number\">0</span>; i &lt; agentNeighbors_.size(); ++i) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> Agent *<span class=\"keyword\">const</span> other = agentNeighbors_[i].second;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">const</span> Vector2 relativePosition = other-&gt;position_ - position_;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> Vector2 relativeVelocity = velocity_ - other-&gt;velocity_;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> <span class=\"keyword\">float</span> distSq = absSq(relativePosition);</span><br><span class=\"line\">        <span class=\"keyword\">const</span> <span class=\"keyword\">float</span> combinedRadius = radius_ + other-&gt;radius_;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> <span class=\"keyword\">float</span> combinedRadiusSq = sqr(combinedRadius);</span><br><span class=\"line\"></span><br><span class=\"line\">        Line line;</span><br><span class=\"line\">        Vector2 u;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (distSq &gt; combinedRadiusSq) &#123;</span><br><span class=\"line\">            <span class=\"comment\">/* No collision. */</span></span><br><span class=\"line\">            <span class=\"keyword\">const</span> Vector2 w = relativeVelocity - invTimeHorizon * relativePosition;</span><br><span class=\"line\">            <span class=\"comment\">/* Vector from cutoff center to relative velocity. */</span></span><br><span class=\"line\">            <span class=\"keyword\">const</span> <span class=\"keyword\">float</span> wLengthSq = absSq(w);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">const</span> <span class=\"keyword\">float</span> dotProduct1 = w * relativePosition;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (dotProduct1 &lt; <span class=\"number\">0.0f</span> &amp;&amp; sqr(dotProduct1) &gt; combinedRadiusSq * wLengthSq) &#123;</span><br><span class=\"line\">                <span class=\"comment\">/* Project on cut-off circle. */</span></span><br><span class=\"line\">                <span class=\"keyword\">const</span> <span class=\"keyword\">float</span> wLength = <span class=\"built_in\">std</span>::<span class=\"built_in\">sqrt</span>(wLengthSq);</span><br><span class=\"line\">                <span class=\"keyword\">const</span> Vector2 unitW = w / wLength;</span><br><span class=\"line\"></span><br><span class=\"line\">                line.direction = Vector2(unitW.y(), -unitW.x());</span><br><span class=\"line\">                u = (combinedRadius * invTimeHorizon - wLength) * unitW;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                <span class=\"comment\">/* Project on legs. */</span></span><br><span class=\"line\">                <span class=\"keyword\">const</span> <span class=\"keyword\">float</span> leg = <span class=\"built_in\">std</span>::<span class=\"built_in\">sqrt</span>(distSq - combinedRadiusSq);</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"keyword\">if</span> (det(relativePosition, w) &gt; <span class=\"number\">0.0f</span>) &#123;</span><br><span class=\"line\">                    <span class=\"comment\">/* Project on left leg. */</span></span><br><span class=\"line\">                    line.direction = Vector2(relativePosition.x() * leg - relativePosition.y() * combinedRadius, relativePosition.x() * combinedRadius + relativePosition.y() * leg) / distSq;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                    <span class=\"comment\">/* Project on right leg. */</span></span><br><span class=\"line\">                    line.direction = -Vector2(relativePosition.x() * leg + relativePosition.y() * combinedRadius, -relativePosition.x() * combinedRadius + relativePosition.y() * leg) / distSq;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"keyword\">const</span> <span class=\"keyword\">float</span> dotProduct2 = relativeVelocity * line.direction;</span><br><span class=\"line\"></span><br><span class=\"line\">                u = dotProduct2 * line.direction - relativeVelocity;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"comment\">/* Collision. Project on cut-off circle of time timeStep. */</span></span><br><span class=\"line\">            <span class=\"keyword\">const</span> <span class=\"keyword\">float</span> invTimeStep = <span class=\"number\">1.0f</span> / sim_-&gt;timeStep_;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">/* Vector from cutoff center to relative velocity. */</span></span><br><span class=\"line\">            <span class=\"keyword\">const</span> Vector2 w = relativeVelocity - invTimeStep * relativePosition;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">const</span> <span class=\"keyword\">float</span> wLength = <span class=\"built_in\">abs</span>(w);</span><br><span class=\"line\">            <span class=\"keyword\">const</span> Vector2 unitW = w / wLength;</span><br><span class=\"line\"></span><br><span class=\"line\">            line.direction = Vector2(unitW.y(), -unitW.x());</span><br><span class=\"line\">            u = (combinedRadius * invTimeStep - wLength) * unitW;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        line.point = velocity_ + <span class=\"number\">0.5f</span> * u;</span><br><span class=\"line\">        orcaLines_.push_back(line);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">size_t</span> lineFail = linearProgram2(orcaLines_, maxSpeed_, prefVelocity_, <span class=\"literal\">false</span>, newVelocity_);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (lineFail &lt; orcaLines_.size()) &#123;</span><br><span class=\"line\">        <span class=\"comment\">//linearProgram3(orcaLines_, numObstLines, lineFail, maxSpeed_, newVelocity_);</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h5><span id=\"linearprogram2\">linearProgram2</span></h5><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">size_t</span> linearProgram2(<span class=\"keyword\">const</span> <span class=\"built_in\">std</span>::<span class=\"built_in\">vector</span>&lt;Line&gt; &amp;lines, <span class=\"keyword\">float</span> radius, <span class=\"keyword\">const</span> Vector2 &amp;optVelocity, <span class=\"keyword\">bool</span> directionOpt, Vector2 &amp;result)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (directionOpt) &#123;</span><br><span class=\"line\">        <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">            * Optimize direction. Note that the optimization velocity is of unit</span></span><br><span class=\"line\"><span class=\"comment\">            * length in this case.</span></span><br><span class=\"line\"><span class=\"comment\">            */</span></span><br><span class=\"line\">        result = optVelocity * radius;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (absSq(optVelocity) &gt; sqr(radius)) &#123;</span><br><span class=\"line\">        <span class=\"comment\">/* Optimize closest point and outside circle. */</span></span><br><span class=\"line\">        result = normalize(optVelocity) * radius;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">/* Optimize closest point and inside circle. */</span></span><br><span class=\"line\">        result = optVelocity;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">size_t</span> i = <span class=\"number\">0</span>; i &lt; lines.size(); ++i) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (det(lines[i].direction, lines[i].point - result) &gt; <span class=\"number\">0.0f</span>) &#123;</span><br><span class=\"line\">            <span class=\"comment\">/* Result does not satisfy constraint i. Compute new optimal result. */</span></span><br><span class=\"line\">            <span class=\"keyword\">const</span> Vector2 tempResult = result;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!linearProgram1(lines, i, radius, optVelocity, directionOpt, result)) &#123;</span><br><span class=\"line\">                result = tempResult;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> i;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> lines.size();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h5><span id=\"linearprogram1\">linearProgram1</span></h5><pre><code class=\"cpp\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">linearProgram1</span><span class=\"params\">(<span class=\"keyword\">const</span> <span class=\"built_in\">std</span>::<span class=\"built_in\">vector</span>&lt;Line&gt; &amp;lines, <span class=\"keyword\">size_t</span> lineNo, <span class=\"keyword\">float</span> radius, <span class=\"keyword\">const</span> Vector2 &amp;optVelocity, <span class=\"keyword\">bool</span> directionOpt, Vector2 &amp;result)</span></span>\n<span class=\"function\"></span>{\n    <span class=\"keyword\">const</span> <span class=\"keyword\">float</span> dotProduct = lines[lineNo].point * lines[lineNo].direction;\n    <span class=\"keyword\">const</span> <span class=\"keyword\">float</span> discriminant = sqr(dotProduct) + sqr(radius) - absSq(lines[lineNo].point);\n\n    <span class=\"keyword\">if</span> (discriminant &lt; <span class=\"number\">0.0f</span>) {\n        <span class=\"comment\">/* Max speed circle fully invalidates line lineNo. */</span>\n        <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;\n    }\n\n    <span class=\"keyword\">const</span> <span class=\"keyword\">float</span> sqrtDiscriminant = <span class=\"built_in\">std</span>::<span class=\"built_in\">sqrt</span>(discriminant);\n    <span class=\"keyword\">float</span> tLeft = -dotProduct - sqrtDiscriminant;\n    <span class=\"keyword\">float</span> tRight = -dotProduct + sqrtDiscriminant;\n\n    <span class=\"keyword\">for</span> (<span class=\"keyword\">size_t</span> i = <span class=\"number\">0</span>; i &lt; lineNo; ++i) {\n        <span class=\"keyword\">const</span> <span class=\"keyword\">float</span> denominator = det(lines[lineNo].direction, lines[i].direction);\n        <span class=\"keyword\">const</span> <span class=\"keyword\">float</span> numerator = det(lines[i].direction, lines[lineNo].point - lines[i].point);\n\n        <span class=\"keyword\">if</span> (<span class=\"built_in\">std</span>::<span class=\"built_in\">fabs</span>(denominator) &lt;= RVO_EPSILON) {\n            <span class=\"comment\">/* Lines lineNo and i are (almost) parallel. */</span>\n            <span class=\"keyword\">if</span> (numerator &lt; <span class=\"number\">0.0f</span>) {\n                <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;\n            }\n            <span class=\"keyword\">else</span> {\n                <span class=\"keyword\">continue</span>;\n            }\n        }\n\n        <span class=\"keyword\">const</span> <span class=\"keyword\">float</span> t = numerator / denominator;\n\n        <span class=\"keyword\">if</span> (denominator &gt;= <span class=\"number\">0.0f</span>) {\n            <span class=\"comment\">/* Line i bounds line lineNo on the right. */</span>\n            tRight = <span class=\"built_in\">std</span>::min(tRight, t);\n        }\n        <span class=\"keyword\">else</span> {\n            <span class=\"comment\">/* Line i bounds line lineNo on the left. */</span>\n            tLeft = <span class=\"built_in\">std</span>::max(tLeft, t);\n        }\n\n        <span class=\"keyword\">if</span> (tLeft &gt; tRight) {\n            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;\n        }\n    }\n\n    <span class=\"keyword\">if</span> (directionOpt) {\n        <span class=\"comment\">/* Optimize direction. */</span>\n        <span class=\"keyword\">if</span> (optVelocity * lines[lineNo].direction &gt; <span class=\"number\">0.0f</span>) {\n            <span class=\"comment\">/* Take right extreme. */</span>\n            result = lines[lineNo].point + tRight * lines[lineNo].direction;\n        }\n        <span class=\"keyword\">else</span> {\n            <span class=\"comment\">/* Take left extreme. */</span>\n            result = lines[lineNo].point + tLeft * lines[lineNo].direction;\n        }\n    }\n    <span class=\"keyword\">else</span> {\n        <span class=\"comment\">/* Optimize closest point. */</span>\n        <span class=\"keyword\">const</span> <span class=\"keyword\">float</span> t = lines[lineNo].direction * (optVelocity - lines[lineNo].point);\n\n        <span class=\"keyword\">if</span> (t &lt; tLeft) {\n            result = lines[lineNo].point + tLeft * lines[lineNo].direction;\n        }\n        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (t &gt; tRight) {\n            result = lines[lineNo].point + tRight * lines[lineNo].direction;\n        }\n        <span class=\"keyword\">else</span> {\n            result = lines[lineNo].point + t * lines[lineNo].direction;\n        }\n    }\n\n    <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;\n}</code></pre>\n","site":{"data":{}},"excerpt":"<h5 id=\"KDTREE\"><a href=\"#KDTREE\" class=\"headerlink\" title=\"KDTREE\"></a>KDTREE</h5><p>空间K维划分, 用来快速寻找距离最近的障碍(指定数量)  优化RVO的资源消耗.  </p>\n<h3 id=\"路径规划\"><a href=\"#路径规划\" class=\"headerlink\" title=\"路径规划\"></a>路径规划</h3><h5 id=\"高级规划\"><a href=\"#高级规划\" class=\"headerlink\" title=\"高级规划\"></a>高级规划</h5><p>DIJKSTRA 最短路径  等寻路方法  </p>\n<h5 id=\"底层规划\"><a href=\"#底层规划\" class=\"headerlink\" title=\"底层规划\"></a>底层规划</h5><p>VO RVO ORCA等Obstacle Avoidance避障算法  </p>\n<h3 id=\"KDTREE-1\"><a href=\"#KDTREE-1\" class=\"headerlink\" title=\"KDTREE\"></a>KDTREE</h3><p>这个是一个简单的KDTREE实现 用来寻找距离最近的障碍(指定数量)  优化RVO的资源消耗.  </p>\n<h3 id=\"VO-Velocity-Obstacles-速度障碍\"><a href=\"#VO-Velocity-Obstacles-速度障碍\" class=\"headerlink\" title=\"VO  Velocity Obstacles  速度障碍\"></a>VO  Velocity Obstacles  速度障碍</h3><p>核心思想: 只要在未来有可能会发生碰撞的速度 都排除在外<br>抖动现象: 两个位移单位存在可能会发生路径碰撞的情况下会同时采取保守的避让速度,导致新速度偏离过大又大幅度回归,从而产生震荡.  </p>\n<h3 id=\"RVO-Reciprocal-Velocity-Obstacles-互惠的速度障碍\"><a href=\"#RVO-Reciprocal-Velocity-Obstacles-互惠的速度障碍\" class=\"headerlink\" title=\"RVO Reciprocal Velocity Obstacles  互惠的速度障碍\"></a>RVO Reciprocal Velocity Obstacles  互惠的速度障碍</h3><p>核心思想: 优化VO思想, 假定对方也会采取避障行为, 缩小(average VO)速度.   </p>\n<h3 id=\"ORCA-Optimal-Reciprocal-Collision-Avoidance-最优互惠碰撞避免\"><a href=\"#ORCA-Optimal-Reciprocal-Collision-Avoidance-最优互惠碰撞避免\" class=\"headerlink\" title=\"ORCA  Optimal Reciprocal Collision Avoidance  最优互惠碰撞避免\"></a>ORCA  Optimal Reciprocal Collision Avoidance  最优互惠碰撞避免</h3><p>核心思想: 优化RVO, 额外考虑速度大小, 求解过程使用线性规划,更高效简洁.   </p>\n<ul>\n<li><strong>对其他所有agents的ORCA求交（线性规划），再与自己可选速度求交集，得候选速度集ORCAτA</strong>  </li>\n<li><strong>在候选集中求解跟自己偏好速度最近的一个速度vnewA</strong>  </li>\n</ul>","more":"<h5 id=\"computeNewVelocity\"><a href=\"#computeNewVelocity\" class=\"headerlink\" title=\"computeNewVelocity\"></a>computeNewVelocity</h5><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* Search for the best new velocity. */</span></span><br><span class=\"line\"><span class=\"keyword\">void</span> Agent::computeNewVelocity()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    orcaLines_.clear();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">const</span> <span class=\"keyword\">size_t</span> numObstLines = orcaLines_.size();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">const</span> <span class=\"keyword\">float</span> invTimeHorizon = <span class=\"number\">1.0f</span> / timeHorizon_;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/* Create agent ORCA lines. */</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">size_t</span> i = <span class=\"number\">0</span>; i &lt; agentNeighbors_.size(); ++i) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> Agent *<span class=\"keyword\">const</span> other = agentNeighbors_[i].second;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">const</span> Vector2 relativePosition = other-&gt;position_ - position_;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> Vector2 relativeVelocity = velocity_ - other-&gt;velocity_;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> <span class=\"keyword\">float</span> distSq = absSq(relativePosition);</span><br><span class=\"line\">        <span class=\"keyword\">const</span> <span class=\"keyword\">float</span> combinedRadius = radius_ + other-&gt;radius_;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> <span class=\"keyword\">float</span> combinedRadiusSq = sqr(combinedRadius);</span><br><span class=\"line\"></span><br><span class=\"line\">        Line line;</span><br><span class=\"line\">        Vector2 u;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (distSq &gt; combinedRadiusSq) &#123;</span><br><span class=\"line\">            <span class=\"comment\">/* No collision. */</span></span><br><span class=\"line\">            <span class=\"keyword\">const</span> Vector2 w = relativeVelocity - invTimeHorizon * relativePosition;</span><br><span class=\"line\">            <span class=\"comment\">/* Vector from cutoff center to relative velocity. */</span></span><br><span class=\"line\">            <span class=\"keyword\">const</span> <span class=\"keyword\">float</span> wLengthSq = absSq(w);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">const</span> <span class=\"keyword\">float</span> dotProduct1 = w * relativePosition;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (dotProduct1 &lt; <span class=\"number\">0.0f</span> &amp;&amp; sqr(dotProduct1) &gt; combinedRadiusSq * wLengthSq) &#123;</span><br><span class=\"line\">                <span class=\"comment\">/* Project on cut-off circle. */</span></span><br><span class=\"line\">                <span class=\"keyword\">const</span> <span class=\"keyword\">float</span> wLength = <span class=\"built_in\">std</span>::<span class=\"built_in\">sqrt</span>(wLengthSq);</span><br><span class=\"line\">                <span class=\"keyword\">const</span> Vector2 unitW = w / wLength;</span><br><span class=\"line\"></span><br><span class=\"line\">                line.direction = Vector2(unitW.y(), -unitW.x());</span><br><span class=\"line\">                u = (combinedRadius * invTimeHorizon - wLength) * unitW;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                <span class=\"comment\">/* Project on legs. */</span></span><br><span class=\"line\">                <span class=\"keyword\">const</span> <span class=\"keyword\">float</span> leg = <span class=\"built_in\">std</span>::<span class=\"built_in\">sqrt</span>(distSq - combinedRadiusSq);</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"keyword\">if</span> (det(relativePosition, w) &gt; <span class=\"number\">0.0f</span>) &#123;</span><br><span class=\"line\">                    <span class=\"comment\">/* Project on left leg. */</span></span><br><span class=\"line\">                    line.direction = Vector2(relativePosition.x() * leg - relativePosition.y() * combinedRadius, relativePosition.x() * combinedRadius + relativePosition.y() * leg) / distSq;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                    <span class=\"comment\">/* Project on right leg. */</span></span><br><span class=\"line\">                    line.direction = -Vector2(relativePosition.x() * leg + relativePosition.y() * combinedRadius, -relativePosition.x() * combinedRadius + relativePosition.y() * leg) / distSq;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"keyword\">const</span> <span class=\"keyword\">float</span> dotProduct2 = relativeVelocity * line.direction;</span><br><span class=\"line\"></span><br><span class=\"line\">                u = dotProduct2 * line.direction - relativeVelocity;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"comment\">/* Collision. Project on cut-off circle of time timeStep. */</span></span><br><span class=\"line\">            <span class=\"keyword\">const</span> <span class=\"keyword\">float</span> invTimeStep = <span class=\"number\">1.0f</span> / sim_-&gt;timeStep_;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">/* Vector from cutoff center to relative velocity. */</span></span><br><span class=\"line\">            <span class=\"keyword\">const</span> Vector2 w = relativeVelocity - invTimeStep * relativePosition;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">const</span> <span class=\"keyword\">float</span> wLength = <span class=\"built_in\">abs</span>(w);</span><br><span class=\"line\">            <span class=\"keyword\">const</span> Vector2 unitW = w / wLength;</span><br><span class=\"line\"></span><br><span class=\"line\">            line.direction = Vector2(unitW.y(), -unitW.x());</span><br><span class=\"line\">            u = (combinedRadius * invTimeStep - wLength) * unitW;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        line.point = velocity_ + <span class=\"number\">0.5f</span> * u;</span><br><span class=\"line\">        orcaLines_.push_back(line);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">size_t</span> lineFail = linearProgram2(orcaLines_, maxSpeed_, prefVelocity_, <span class=\"literal\">false</span>, newVelocity_);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (lineFail &lt; orcaLines_.size()) &#123;</span><br><span class=\"line\">        <span class=\"comment\">//linearProgram3(orcaLines_, numObstLines, lineFail, maxSpeed_, newVelocity_);</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h5 id=\"linearProgram2\"><a href=\"#linearProgram2\" class=\"headerlink\" title=\"linearProgram2\"></a>linearProgram2</h5><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">size_t</span> linearProgram2(<span class=\"keyword\">const</span> <span class=\"built_in\">std</span>::<span class=\"built_in\">vector</span>&lt;Line&gt; &amp;lines, <span class=\"keyword\">float</span> radius, <span class=\"keyword\">const</span> Vector2 &amp;optVelocity, <span class=\"keyword\">bool</span> directionOpt, Vector2 &amp;result)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (directionOpt) &#123;</span><br><span class=\"line\">        <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">            * Optimize direction. Note that the optimization velocity is of unit</span></span><br><span class=\"line\"><span class=\"comment\">            * length in this case.</span></span><br><span class=\"line\"><span class=\"comment\">            */</span></span><br><span class=\"line\">        result = optVelocity * radius;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (absSq(optVelocity) &gt; sqr(radius)) &#123;</span><br><span class=\"line\">        <span class=\"comment\">/* Optimize closest point and outside circle. */</span></span><br><span class=\"line\">        result = normalize(optVelocity) * radius;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">/* Optimize closest point and inside circle. */</span></span><br><span class=\"line\">        result = optVelocity;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">size_t</span> i = <span class=\"number\">0</span>; i &lt; lines.size(); ++i) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (det(lines[i].direction, lines[i].point - result) &gt; <span class=\"number\">0.0f</span>) &#123;</span><br><span class=\"line\">            <span class=\"comment\">/* Result does not satisfy constraint i. Compute new optimal result. */</span></span><br><span class=\"line\">            <span class=\"keyword\">const</span> Vector2 tempResult = result;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!linearProgram1(lines, i, radius, optVelocity, directionOpt, result)) &#123;</span><br><span class=\"line\">                result = tempResult;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> i;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> lines.size();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"linearProgram1\"><a href=\"#linearProgram1\" class=\"headerlink\" title=\"linearProgram1\"></a>linearProgram1</h5><pre><code class=\"cpp\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">linearProgram1</span><span class=\"params\">(<span class=\"keyword\">const</span> <span class=\"built_in\">std</span>::<span class=\"built_in\">vector</span>&lt;Line&gt; &amp;lines, <span class=\"keyword\">size_t</span> lineNo, <span class=\"keyword\">float</span> radius, <span class=\"keyword\">const</span> Vector2 &amp;optVelocity, <span class=\"keyword\">bool</span> directionOpt, Vector2 &amp;result)</span></span>\n<span class=\"function\"></span>{\n    <span class=\"keyword\">const</span> <span class=\"keyword\">float</span> dotProduct = lines[lineNo].point * lines[lineNo].direction;\n    <span class=\"keyword\">const</span> <span class=\"keyword\">float</span> discriminant = sqr(dotProduct) + sqr(radius) - absSq(lines[lineNo].point);\n\n    <span class=\"keyword\">if</span> (discriminant &lt; <span class=\"number\">0.0f</span>) {\n        <span class=\"comment\">/* Max speed circle fully invalidates line lineNo. */</span>\n        <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;\n    }\n\n    <span class=\"keyword\">const</span> <span class=\"keyword\">float</span> sqrtDiscriminant = <span class=\"built_in\">std</span>::<span class=\"built_in\">sqrt</span>(discriminant);\n    <span class=\"keyword\">float</span> tLeft = -dotProduct - sqrtDiscriminant;\n    <span class=\"keyword\">float</span> tRight = -dotProduct + sqrtDiscriminant;\n\n    <span class=\"keyword\">for</span> (<span class=\"keyword\">size_t</span> i = <span class=\"number\">0</span>; i &lt; lineNo; ++i) {\n        <span class=\"keyword\">const</span> <span class=\"keyword\">float</span> denominator = det(lines[lineNo].direction, lines[i].direction);\n        <span class=\"keyword\">const</span> <span class=\"keyword\">float</span> numerator = det(lines[i].direction, lines[lineNo].point - lines[i].point);\n\n        <span class=\"keyword\">if</span> (<span class=\"built_in\">std</span>::<span class=\"built_in\">fabs</span>(denominator) &lt;= RVO_EPSILON) {\n            <span class=\"comment\">/* Lines lineNo and i are (almost) parallel. */</span>\n            <span class=\"keyword\">if</span> (numerator &lt; <span class=\"number\">0.0f</span>) {\n                <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;\n            }\n            <span class=\"keyword\">else</span> {\n                <span class=\"keyword\">continue</span>;\n            }\n        }\n\n        <span class=\"keyword\">const</span> <span class=\"keyword\">float</span> t = numerator / denominator;\n\n        <span class=\"keyword\">if</span> (denominator &gt;= <span class=\"number\">0.0f</span>) {\n            <span class=\"comment\">/* Line i bounds line lineNo on the right. */</span>\n            tRight = <span class=\"built_in\">std</span>::min(tRight, t);\n        }\n        <span class=\"keyword\">else</span> {\n            <span class=\"comment\">/* Line i bounds line lineNo on the left. */</span>\n            tLeft = <span class=\"built_in\">std</span>::max(tLeft, t);\n        }\n\n        <span class=\"keyword\">if</span> (tLeft &gt; tRight) {\n            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;\n        }\n    }\n\n    <span class=\"keyword\">if</span> (directionOpt) {\n        <span class=\"comment\">/* Optimize direction. */</span>\n        <span class=\"keyword\">if</span> (optVelocity * lines[lineNo].direction &gt; <span class=\"number\">0.0f</span>) {\n            <span class=\"comment\">/* Take right extreme. */</span>\n            result = lines[lineNo].point + tRight * lines[lineNo].direction;\n        }\n        <span class=\"keyword\">else</span> {\n            <span class=\"comment\">/* Take left extreme. */</span>\n            result = lines[lineNo].point + tLeft * lines[lineNo].direction;\n        }\n    }\n    <span class=\"keyword\">else</span> {\n        <span class=\"comment\">/* Optimize closest point. */</span>\n        <span class=\"keyword\">const</span> <span class=\"keyword\">float</span> t = lines[lineNo].direction * (optVelocity - lines[lineNo].point);\n\n        <span class=\"keyword\">if</span> (t &lt; tLeft) {\n            result = lines[lineNo].point + tLeft * lines[lineNo].direction;\n        }\n        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (t &gt; tRight) {\n            result = lines[lineNo].point + tRight * lines[lineNo].direction;\n        }\n        <span class=\"keyword\">else</span> {\n            result = lines[lineNo].point + t * lines[lineNo].direction;\n        }\n    }\n\n    <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;\n}</code></pre>"},{"title":"linux内存布局和ASLR","date":"2019-11-03T16:00:00.000Z","author":"yawei.zhang","_content":"### 内存布局    \n###### 基本布局  \n内核地址空间范围  [0XFFFF 0000 0000 0000, 0XFFFF FFFF FFFF FFFF]\n不规范地址空间    (0XFFFF 0000 0000 0000, 0X0000 FFFF FFFF FFFF)\n用户地址空间      [0X0000 FFFF FFFF FFFF, 0X0000 0000 0000 0000]\n\n备注: 用户空间范围对应为0~TASK_SIZE = 2^VA_BITS\n1. 用户地址空间默认最大宽度是48 如上  \n2. 内核地址空间和用户地址空间宽度相同  \n3. 不同的页长默认有不同的宽度, 例如4KB页长默认是39位   16:47, 64:42等, 可直接选择48位.  \n4. 开启LVA支持并且页长64可以支持到最大宽度52   \n5. 通过getconf PAGE_SIZE 可以查看系统的页大小  \n6. 通过/proc/$pid/maps或者pmap可以查看一个进程的实际内存布局 \n7. mprotect 可以修改内存页权限   \n8. madvise 可以修改建议内存使用的方式  \n9. 老的LinuxThreads (管理线程机制) 设计中线程栈的位置在 HEAP之下 的高位 导致无法可信的设置heap大小  \n10. 新的NPTL解决了老的线程机制中的管理单点问题 信号问题 内存布局问题等 顺便实现了PTHREAD_PROCESS_SHARED \n11. pthread_attr_setstackaddr可指定线程栈的地址(mmap)   \n12. pthread的创建和销毁 \n    1.  创建   \n        1. 使用用户提供的stack创建线程并加入__stack_user \n        2. nptl 先尝试获取stack_cache中tid为0大小合适的空闲stack, 如果失败则从mmap分配新的stack, 然后加入stack_used  \n        3. tid list等信息存储在stack内存的高地址端的头部  \n    2.  start_thread执行完用户函数后会进行数据回收和清理(但无法销毁自身)   \n        1. 如果该线程非detach 则等待join  (没有join则会一直保留)  \n        2. 如果该线程被detach 则执行__free_tcb   \n            1. 如果是用户分配的stack 从stack_user链表中移除并清理tls 线程局部存储  \n            2. 如果是自动分配的stack 从stack_used链表中移除, 然后加入stack_cache中, 清理tls线程局部存储(此时tid不为0)   \n            3. 检查当前stack_cache的总大小, 超过阈值则遍历一次stack_cache并释放掉(tid为0)空闲的stack, 如果小于阈值则提前break该次遍历   \n    3. 内核在该线程结束后 会对该线程的tid清零(创建线程时CLONE_CHILD_CLEARTID参数会让内存清除某标记内存), 此后该资源可以安全销毁.        \n13. brk和mmap的分配由glibc确定 默认规则是小于M_MMAP_THRESHOLD宏走brk  但是新系统的算法可能会让大于这个参数的临时分配也走brk   \n<!-- more --> \n###### 内核布局   \n###### 用户空间布局   \n* TASK_SIZE 高位 \n* 栈空间(进程栈),  向下增长  具体位置为(STACK_TOP - 随机值), STACK_TOP对应TASK_SIZE  \n  * 栈的位置不能超过STACK_TOP的5/6,并且保证128M的栈空间  对齐到页.   \n  * 见 stack_maxrandom_size 函数, STACK_RND_MASK 32位下掩码0x7ff(大约8M) 64位下 0x3ffff  * 页大小(默认4k) 大约1G\n    * PAGE_SHIFT=12,   PAGE_SIZE= 1 << 12,  PAGE_MASK= ~(PMD_PAGE_SIZE-1)  \n  \n* 内存映射区域(mmap) 老版本 TASK_UNMAAPPED_BASE+随机值 向上增长   \n* 内存映射区域(mmap) 新版本 STACK_TOP - 栈最大长度 - 间隙 - 随机值  向下增长  x86 2.6.7版本后默认   \n  * 新版本heap和mmap共享虚拟地址 32位下会比老的更好.    \n  * 见arch_mmap_rnd函数  X86版本 32位下偏移大小为2^8,  64位下为2^28 大约268M的最大偏移大小.  \n  * mmap的共享内存可用于父子进程 \n  * mmap的有名文件映射可用于多个进程共享  \n\n\n* 堆空间(Heap)  brk/sbrk分配  brk位置在BSS段尾加随机值大小  \n  * 见arch_randomize_brk函数 X86版本为0x02000000约33M的最大随机偏移; \n  * 主线程有全局的main Arena, 通过brk分配Heap内存,   子线程有自己的Thread Arena来管理 由mmap创建 数量和CPU核心数相关    \n  * \n\n* BSS段(Block Started by Symbol) 未初始化数据段或者初始化为0 的全局变量和静态局部变量    * loader加载程序时, 会将BSS段分配的内存清零, 在目标文件中并不占用空间(目标没有BSS段 只有记录名称和大小).  \n  * 随机化由PIE决定\n  \n* 数据段(Data)  已初始化并且非0的全局变量和静态局部变量 \n  * 例如int a[10000] = {1,2,3, ...}; 与 int a[10000];\n  * 前者在程序中有完整的数据存储, 而后者指标记了使用的大小, 对于目标文件来说会节省非常多的存储空间.   \n  * 随机化由PIE决定  \n* 代码段(Text)  存放机器指令  只读  \n  * 随机化由PIE决定  \n* 保留区\n* 0\n\n###### 多线程 \n非主线程的栈是mmap出来的 \n```\n\nmem = mmap (NULL, size, prot,\n            MAP_PRIVATE | MAP_ANONYMOUS | MAP_STACK, -1, 0);\n```\n\n\n### ELF文件装载过程  \n\n### Address space layout randomization 地址空间布局随机化  \n  可以防范return-to-libc 这种攻击\n\n\n\n\n\n##### ASLR在linux中的三个等级以及配置和禁用方法    \n* 系统全局配置\n```\n/proc/sys/kernel/randomize_va_space\n0 = Disabled\n1 = Conservative Randomization\n2 = Full Randomization\n```  \n\n1. 关闭  \n2. 保守随机化: 共享库 栈 mmap  vdso随机化   \n3. 完全随机化:  包括brk分配的内存   \n    2.1 代码段和数据段的随机化需要PIE位置无关可执行程序的支持  编译链接时添加 -fpie -pie   \n\n\n\n* 修改/关闭系统配置  \n```\n# sysctl -w kernel.randomize_va_space=0\n# echo 0 > /proc/sys/kernel/randomize_va_space\n```\n\n* 进程个性化设置: 进程描述符的成员personality设置 ADDR_NO_RANDOMIZE     \n  * setarch $(uname -m) -R [--addr-no-randomize] [target exe]\n  * 例如 ldd ./benchmark_fast 在aslr环境下会看到每次so的内存位置都在变化   \n    * setarch $(uname -m) -R ldd ./benchmark_fast 这样去查看则是固定不变的  \n\n\n\nldd命令  \n\n\n\n* 代码段/数据段的随机化 通过PIE(编译位置无关可执行文件)PIC(position-independent code位置无关代码)控制 \n  * gcc 编译程序时-fpie 链接时-pie  \n  * gcc 编译动态库时 -fpic\n\n* 内核\n\nKASLR  内核地址空间布局随机化  \n\n\n\n\n### 脚注  \n\n\n\n###### pmap x86一个带共享内存的进程.  00007f1-00007f2之间是64G大小的空间\n```\npmap 22621\n\n22621:   ../../???/bin/???  --conf-file=../cfg.xml  \n0000000000400000  32460K r-x--  /data/home/???/bin/???\n00000000025b3000    724K rw---  /data/home/???/bin/???\n0000000002668000  49260K rw---    [ anon ]\n0000000006835000  25172K rw---    [ anon ]\n00000000080ca000 284456K rw---    [ anon ]\n00000000404e9000    128K rw---    [ anon ]\n0000000040fe3000    128K rw---    [ anon ]\n00007f1000000000 2511808K rw-s-    [ shmid=0x39020085 ]\n00007f213db99000      4K -----    [ anon ]\n00007f213db9a000   8192K rw---    [ anon ]\n00007f213e39a000   7336K r--s-  /dev/shm/???/???.nav\n00007f213eac4000   8588K r--s-  /dev/shm/???/???.nav\n00007f213f327000   7336K r--s-  /dev/shm/???/???.nav\n00007f213fa51000   2052K rw-s-    [ shmid=0x39018084 ]\n00007f213fc52000  40964K rw-s-    [ shmid=0x38f40068 ]\n00007f2142453000  40964K rw-s-    [ shmid=0x38dd003a ]\n00007f2144c54000  40964K rw-s-    [ shmid=0x38db0036 ]\n00007f2147455000  40964K rw-s-    [ shmid=0x38d7802f ]\n00007f2149c56000  40964K rw-s-    [ shmid=0x38d40028 ]\n00007f214c457000  40964K rw-s-    [ shmid=0x38d10022 ]\n00007f214ec58000  40964K rw-s-    [ shmid=0x38cf801f ]\n00007f2151459000  40964K rw-s-    [ shmid=0x38cb0016 ]\n00007f2153c5a000  40964K rw-s-    [ shmid=0x38ca0014 ]\n00007f215645b000  40964K rw-s-    [ shmid=0x38c90012 ]\n00007f2158c5c000  40964K rw-s-    [ shmid=0x38c7800f ]\n00007f215b45d000   1024K rw-s-    [ shmid=0x50806c ]\n00007f215b55d000   1576K r-x--  /lib64/libc-2.12.so\n00007f215b6e7000   2048K -----  /lib64/libc-2.12.so\n00007f215b8e7000     16K r----  /lib64/libc-2.12.so\n00007f215b8eb000      4K rw---  /lib64/libc-2.12.so\n00007f215b8ec000     20K rw---    [ anon ]\n00007f215b8f1000    524K r-x--  /lib64/libm-2.12.so\n00007f215b974000   2044K -----  /lib64/libm-2.12.so\n00007f215bb73000      4K r----  /lib64/libm-2.12.so\n00007f215bb74000      4K rw---  /lib64/libm-2.12.so\n00007f215bb75000      8K r-x--  /lib64/libdl-2.12.so\n00007f215bb77000   2048K -----  /lib64/libdl-2.12.so\n00007f215bd77000      4K r----  /lib64/libdl-2.12.so\n00007f215bd78000      4K rw---  /lib64/libdl-2.12.so\n00007f215bd79000     92K r-x--  /lib64/libpthread-2.12.so\n00007f215bd90000   2048K -----  /lib64/libpthread-2.12.so\n00007f215bf90000      4K r----  /lib64/libpthread-2.12.so\n00007f215bf91000      4K rw---  /lib64/libpthread-2.12.so\n00007f215bf92000     16K rw---    [ anon ]\n00007f215bf96000      8K r-x--  /lib64/libutil-2.12.so\n00007f215bf98000   2044K -----  /lib64/libutil-2.12.so\n00007f215c197000      4K r----  /lib64/libutil-2.12.so\n00007f215c198000      4K rw---  /lib64/libutil-2.12.so\n00007f215c199000     28K r-x--  /lib64/librt-2.12.so\n00007f215c1a0000   2044K -----  /lib64/librt-2.12.so\n00007f215c39f000      4K r----  /lib64/librt-2.12.so\n00007f215c3a0000      4K rw---  /lib64/librt-2.12.so\n00007f215c3a1000    128K r-x--  /lib64/ld-2.12.so\n00007f215c43c000      4K rw---    [ anon ]\n00007f215c43d000    208K r--s-  /dev/shm/???/???.nav\n00007f215c471000    188K rw-s-    [ shmid=0x38c6800d ]\n00007f215c4a0000     20K rw---    [ anon ]\n00007f215c4a5000     16K rw---    [ anon ]\n00007f215c4a9000      4K r--s-  /dev/shm/???/???.nav\n00007f215c4aa000      4K r--s-  /dev/shm/???/???.nav\n00007f215c4ab000     20K rw---    [ anon ]\n00007f215c4b0000      8K rw---    [ anon ]\n00007f215c4b2000     20K rw---    [ anon ]\n00007f215c4b7000     12K r-x--  /lib64/lib???rity.so.1.0.19\n00007f215c4ba000   1024K -----  /lib64/lib???rity.so.1.0.19\n00007f215c5ba000      4K rw---  /lib64/lib???ity.so.1.0.19\n00007f215c5bb000     16K rw---    [ anon ]\n00007f215c5bf000      4K rw---    [ anon ]\n00007f215c5c0000      4K r----  /lib64/ld-2.12.so\n00007f215c5c1000      4K rw---  /lib64/ld-2.12.so\n00007f215c5c2000      4K rw---    [ anon ]\n00007ffe6d6d3000    132K rw---    [ stack ]\n00007ffe6d7ed000      8K r-x--    [ anon ]\nffffffffff600000      4K r-x--    [ anon ]\n total          3405716K\n ```\n\n\n###### Linux 发行版所使用的线程模型、glibc 版本和内核版本    \ncat /proc/version                查看内核版本   \ngetconf GNU_LIBPTHREAD_VERSION   查看线程模型\n|      线程实现      |       C 库     ---------      |          发行版        |      内核        | \n|------------------ | ------------------------------|-----------------------|------------------|\n| LinuxThreads 0.7  | 0.71 (for libc5)  libc 5.x    | Red Hat 4.2           | \n| LinuxThreads 0.7  | 0.71 (for glibc 2) glibc 2.0. | Red Hat 5.x           | \n| LinuxThreads 0.8  | glibc 2.1.1                   | Red Hat 6.0           | \n| LinuxThreads 0.8  | glibc 2.1.2                   | Red Hat 6.1 and 6.2   | \n| LinuxThreads 0.9  |                               | Red Hat 7.2           | 2.4.7\n| LinuxThreads 0.9  | glibc 2.2.4                   | Red Hat 2.1 AS        | 2.4.9\n| LinuxThreads 0.10 | glibc 2.2.93                  | Red Hat 8.0           | 2.4.18\n| NPTL 0.6          | glibc 2.3                     | Red Hat 9.0           | 2.4.20\n| NPTL 0.61         | glibc 2.3.2                   | Red Hat 3.0 EL        | 2.4.21\n| NPTL 2.3.4        | glibc 2.3.4                   | Red Hat 4.0           | 2.6.9\n| LinuxThreads 0.9  | glibc 2.2                     | SUSE Linux Enterprise Server 7.1  | 2.4.18\n| LinuxThreads 0.9  | glibc 2.2.5                   | SUSE Linux Enterprise Server 8    | 2.4.21\n| LinuxThreads 0.9  | glibc 2.2.5                   | United Linux                      | 2.4.21\n| NPTL 2.3.5        | glibc 2.3.3                   | SUSE Linux Enterprise Server 9    | 2.6.5","source":"_posts/2019-11-04-aslr.md","raw":"---\ntitle: linux内存布局和ASLR  \ndate: 2019-11-04\ncategories: develop \nauthor: yawei.zhang \n---\n### 内存布局    \n###### 基本布局  \n内核地址空间范围  [0XFFFF 0000 0000 0000, 0XFFFF FFFF FFFF FFFF]\n不规范地址空间    (0XFFFF 0000 0000 0000, 0X0000 FFFF FFFF FFFF)\n用户地址空间      [0X0000 FFFF FFFF FFFF, 0X0000 0000 0000 0000]\n\n备注: 用户空间范围对应为0~TASK_SIZE = 2^VA_BITS\n1. 用户地址空间默认最大宽度是48 如上  \n2. 内核地址空间和用户地址空间宽度相同  \n3. 不同的页长默认有不同的宽度, 例如4KB页长默认是39位   16:47, 64:42等, 可直接选择48位.  \n4. 开启LVA支持并且页长64可以支持到最大宽度52   \n5. 通过getconf PAGE_SIZE 可以查看系统的页大小  \n6. 通过/proc/$pid/maps或者pmap可以查看一个进程的实际内存布局 \n7. mprotect 可以修改内存页权限   \n8. madvise 可以修改建议内存使用的方式  \n9. 老的LinuxThreads (管理线程机制) 设计中线程栈的位置在 HEAP之下 的高位 导致无法可信的设置heap大小  \n10. 新的NPTL解决了老的线程机制中的管理单点问题 信号问题 内存布局问题等 顺便实现了PTHREAD_PROCESS_SHARED \n11. pthread_attr_setstackaddr可指定线程栈的地址(mmap)   \n12. pthread的创建和销毁 \n    1.  创建   \n        1. 使用用户提供的stack创建线程并加入__stack_user \n        2. nptl 先尝试获取stack_cache中tid为0大小合适的空闲stack, 如果失败则从mmap分配新的stack, 然后加入stack_used  \n        3. tid list等信息存储在stack内存的高地址端的头部  \n    2.  start_thread执行完用户函数后会进行数据回收和清理(但无法销毁自身)   \n        1. 如果该线程非detach 则等待join  (没有join则会一直保留)  \n        2. 如果该线程被detach 则执行__free_tcb   \n            1. 如果是用户分配的stack 从stack_user链表中移除并清理tls 线程局部存储  \n            2. 如果是自动分配的stack 从stack_used链表中移除, 然后加入stack_cache中, 清理tls线程局部存储(此时tid不为0)   \n            3. 检查当前stack_cache的总大小, 超过阈值则遍历一次stack_cache并释放掉(tid为0)空闲的stack, 如果小于阈值则提前break该次遍历   \n    3. 内核在该线程结束后 会对该线程的tid清零(创建线程时CLONE_CHILD_CLEARTID参数会让内存清除某标记内存), 此后该资源可以安全销毁.        \n13. brk和mmap的分配由glibc确定 默认规则是小于M_MMAP_THRESHOLD宏走brk  但是新系统的算法可能会让大于这个参数的临时分配也走brk   \n<!-- more --> \n###### 内核布局   \n###### 用户空间布局   \n* TASK_SIZE 高位 \n* 栈空间(进程栈),  向下增长  具体位置为(STACK_TOP - 随机值), STACK_TOP对应TASK_SIZE  \n  * 栈的位置不能超过STACK_TOP的5/6,并且保证128M的栈空间  对齐到页.   \n  * 见 stack_maxrandom_size 函数, STACK_RND_MASK 32位下掩码0x7ff(大约8M) 64位下 0x3ffff  * 页大小(默认4k) 大约1G\n    * PAGE_SHIFT=12,   PAGE_SIZE= 1 << 12,  PAGE_MASK= ~(PMD_PAGE_SIZE-1)  \n  \n* 内存映射区域(mmap) 老版本 TASK_UNMAAPPED_BASE+随机值 向上增长   \n* 内存映射区域(mmap) 新版本 STACK_TOP - 栈最大长度 - 间隙 - 随机值  向下增长  x86 2.6.7版本后默认   \n  * 新版本heap和mmap共享虚拟地址 32位下会比老的更好.    \n  * 见arch_mmap_rnd函数  X86版本 32位下偏移大小为2^8,  64位下为2^28 大约268M的最大偏移大小.  \n  * mmap的共享内存可用于父子进程 \n  * mmap的有名文件映射可用于多个进程共享  \n\n\n* 堆空间(Heap)  brk/sbrk分配  brk位置在BSS段尾加随机值大小  \n  * 见arch_randomize_brk函数 X86版本为0x02000000约33M的最大随机偏移; \n  * 主线程有全局的main Arena, 通过brk分配Heap内存,   子线程有自己的Thread Arena来管理 由mmap创建 数量和CPU核心数相关    \n  * \n\n* BSS段(Block Started by Symbol) 未初始化数据段或者初始化为0 的全局变量和静态局部变量    * loader加载程序时, 会将BSS段分配的内存清零, 在目标文件中并不占用空间(目标没有BSS段 只有记录名称和大小).  \n  * 随机化由PIE决定\n  \n* 数据段(Data)  已初始化并且非0的全局变量和静态局部变量 \n  * 例如int a[10000] = {1,2,3, ...}; 与 int a[10000];\n  * 前者在程序中有完整的数据存储, 而后者指标记了使用的大小, 对于目标文件来说会节省非常多的存储空间.   \n  * 随机化由PIE决定  \n* 代码段(Text)  存放机器指令  只读  \n  * 随机化由PIE决定  \n* 保留区\n* 0\n\n###### 多线程 \n非主线程的栈是mmap出来的 \n```\n\nmem = mmap (NULL, size, prot,\n            MAP_PRIVATE | MAP_ANONYMOUS | MAP_STACK, -1, 0);\n```\n\n\n### ELF文件装载过程  \n\n### Address space layout randomization 地址空间布局随机化  \n  可以防范return-to-libc 这种攻击\n\n\n\n\n\n##### ASLR在linux中的三个等级以及配置和禁用方法    \n* 系统全局配置\n```\n/proc/sys/kernel/randomize_va_space\n0 = Disabled\n1 = Conservative Randomization\n2 = Full Randomization\n```  \n\n1. 关闭  \n2. 保守随机化: 共享库 栈 mmap  vdso随机化   \n3. 完全随机化:  包括brk分配的内存   \n    2.1 代码段和数据段的随机化需要PIE位置无关可执行程序的支持  编译链接时添加 -fpie -pie   \n\n\n\n* 修改/关闭系统配置  \n```\n# sysctl -w kernel.randomize_va_space=0\n# echo 0 > /proc/sys/kernel/randomize_va_space\n```\n\n* 进程个性化设置: 进程描述符的成员personality设置 ADDR_NO_RANDOMIZE     \n  * setarch $(uname -m) -R [--addr-no-randomize] [target exe]\n  * 例如 ldd ./benchmark_fast 在aslr环境下会看到每次so的内存位置都在变化   \n    * setarch $(uname -m) -R ldd ./benchmark_fast 这样去查看则是固定不变的  \n\n\n\nldd命令  \n\n\n\n* 代码段/数据段的随机化 通过PIE(编译位置无关可执行文件)PIC(position-independent code位置无关代码)控制 \n  * gcc 编译程序时-fpie 链接时-pie  \n  * gcc 编译动态库时 -fpic\n\n* 内核\n\nKASLR  内核地址空间布局随机化  \n\n\n\n\n### 脚注  \n\n\n\n###### pmap x86一个带共享内存的进程.  00007f1-00007f2之间是64G大小的空间\n```\npmap 22621\n\n22621:   ../../???/bin/???  --conf-file=../cfg.xml  \n0000000000400000  32460K r-x--  /data/home/???/bin/???\n00000000025b3000    724K rw---  /data/home/???/bin/???\n0000000002668000  49260K rw---    [ anon ]\n0000000006835000  25172K rw---    [ anon ]\n00000000080ca000 284456K rw---    [ anon ]\n00000000404e9000    128K rw---    [ anon ]\n0000000040fe3000    128K rw---    [ anon ]\n00007f1000000000 2511808K rw-s-    [ shmid=0x39020085 ]\n00007f213db99000      4K -----    [ anon ]\n00007f213db9a000   8192K rw---    [ anon ]\n00007f213e39a000   7336K r--s-  /dev/shm/???/???.nav\n00007f213eac4000   8588K r--s-  /dev/shm/???/???.nav\n00007f213f327000   7336K r--s-  /dev/shm/???/???.nav\n00007f213fa51000   2052K rw-s-    [ shmid=0x39018084 ]\n00007f213fc52000  40964K rw-s-    [ shmid=0x38f40068 ]\n00007f2142453000  40964K rw-s-    [ shmid=0x38dd003a ]\n00007f2144c54000  40964K rw-s-    [ shmid=0x38db0036 ]\n00007f2147455000  40964K rw-s-    [ shmid=0x38d7802f ]\n00007f2149c56000  40964K rw-s-    [ shmid=0x38d40028 ]\n00007f214c457000  40964K rw-s-    [ shmid=0x38d10022 ]\n00007f214ec58000  40964K rw-s-    [ shmid=0x38cf801f ]\n00007f2151459000  40964K rw-s-    [ shmid=0x38cb0016 ]\n00007f2153c5a000  40964K rw-s-    [ shmid=0x38ca0014 ]\n00007f215645b000  40964K rw-s-    [ shmid=0x38c90012 ]\n00007f2158c5c000  40964K rw-s-    [ shmid=0x38c7800f ]\n00007f215b45d000   1024K rw-s-    [ shmid=0x50806c ]\n00007f215b55d000   1576K r-x--  /lib64/libc-2.12.so\n00007f215b6e7000   2048K -----  /lib64/libc-2.12.so\n00007f215b8e7000     16K r----  /lib64/libc-2.12.so\n00007f215b8eb000      4K rw---  /lib64/libc-2.12.so\n00007f215b8ec000     20K rw---    [ anon ]\n00007f215b8f1000    524K r-x--  /lib64/libm-2.12.so\n00007f215b974000   2044K -----  /lib64/libm-2.12.so\n00007f215bb73000      4K r----  /lib64/libm-2.12.so\n00007f215bb74000      4K rw---  /lib64/libm-2.12.so\n00007f215bb75000      8K r-x--  /lib64/libdl-2.12.so\n00007f215bb77000   2048K -----  /lib64/libdl-2.12.so\n00007f215bd77000      4K r----  /lib64/libdl-2.12.so\n00007f215bd78000      4K rw---  /lib64/libdl-2.12.so\n00007f215bd79000     92K r-x--  /lib64/libpthread-2.12.so\n00007f215bd90000   2048K -----  /lib64/libpthread-2.12.so\n00007f215bf90000      4K r----  /lib64/libpthread-2.12.so\n00007f215bf91000      4K rw---  /lib64/libpthread-2.12.so\n00007f215bf92000     16K rw---    [ anon ]\n00007f215bf96000      8K r-x--  /lib64/libutil-2.12.so\n00007f215bf98000   2044K -----  /lib64/libutil-2.12.so\n00007f215c197000      4K r----  /lib64/libutil-2.12.so\n00007f215c198000      4K rw---  /lib64/libutil-2.12.so\n00007f215c199000     28K r-x--  /lib64/librt-2.12.so\n00007f215c1a0000   2044K -----  /lib64/librt-2.12.so\n00007f215c39f000      4K r----  /lib64/librt-2.12.so\n00007f215c3a0000      4K rw---  /lib64/librt-2.12.so\n00007f215c3a1000    128K r-x--  /lib64/ld-2.12.so\n00007f215c43c000      4K rw---    [ anon ]\n00007f215c43d000    208K r--s-  /dev/shm/???/???.nav\n00007f215c471000    188K rw-s-    [ shmid=0x38c6800d ]\n00007f215c4a0000     20K rw---    [ anon ]\n00007f215c4a5000     16K rw---    [ anon ]\n00007f215c4a9000      4K r--s-  /dev/shm/???/???.nav\n00007f215c4aa000      4K r--s-  /dev/shm/???/???.nav\n00007f215c4ab000     20K rw---    [ anon ]\n00007f215c4b0000      8K rw---    [ anon ]\n00007f215c4b2000     20K rw---    [ anon ]\n00007f215c4b7000     12K r-x--  /lib64/lib???rity.so.1.0.19\n00007f215c4ba000   1024K -----  /lib64/lib???rity.so.1.0.19\n00007f215c5ba000      4K rw---  /lib64/lib???ity.so.1.0.19\n00007f215c5bb000     16K rw---    [ anon ]\n00007f215c5bf000      4K rw---    [ anon ]\n00007f215c5c0000      4K r----  /lib64/ld-2.12.so\n00007f215c5c1000      4K rw---  /lib64/ld-2.12.so\n00007f215c5c2000      4K rw---    [ anon ]\n00007ffe6d6d3000    132K rw---    [ stack ]\n00007ffe6d7ed000      8K r-x--    [ anon ]\nffffffffff600000      4K r-x--    [ anon ]\n total          3405716K\n ```\n\n\n###### Linux 发行版所使用的线程模型、glibc 版本和内核版本    \ncat /proc/version                查看内核版本   \ngetconf GNU_LIBPTHREAD_VERSION   查看线程模型\n|      线程实现      |       C 库     ---------      |          发行版        |      内核        | \n|------------------ | ------------------------------|-----------------------|------------------|\n| LinuxThreads 0.7  | 0.71 (for libc5)  libc 5.x    | Red Hat 4.2           | \n| LinuxThreads 0.7  | 0.71 (for glibc 2) glibc 2.0. | Red Hat 5.x           | \n| LinuxThreads 0.8  | glibc 2.1.1                   | Red Hat 6.0           | \n| LinuxThreads 0.8  | glibc 2.1.2                   | Red Hat 6.1 and 6.2   | \n| LinuxThreads 0.9  |                               | Red Hat 7.2           | 2.4.7\n| LinuxThreads 0.9  | glibc 2.2.4                   | Red Hat 2.1 AS        | 2.4.9\n| LinuxThreads 0.10 | glibc 2.2.93                  | Red Hat 8.0           | 2.4.18\n| NPTL 0.6          | glibc 2.3                     | Red Hat 9.0           | 2.4.20\n| NPTL 0.61         | glibc 2.3.2                   | Red Hat 3.0 EL        | 2.4.21\n| NPTL 2.3.4        | glibc 2.3.4                   | Red Hat 4.0           | 2.6.9\n| LinuxThreads 0.9  | glibc 2.2                     | SUSE Linux Enterprise Server 7.1  | 2.4.18\n| LinuxThreads 0.9  | glibc 2.2.5                   | SUSE Linux Enterprise Server 8    | 2.4.21\n| LinuxThreads 0.9  | glibc 2.2.5                   | United Linux                      | 2.4.21\n| NPTL 2.3.5        | glibc 2.3.3                   | SUSE Linux Enterprise Server 9    | 2.6.5","slug":"2019-11-04-aslr","published":1,"updated":"2019-11-08T14:54:55.042Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck44ekz2p0010r45h8eyt3rh5","content":"<h3><span id=\"内存布局\">内存布局</span></h3><h6><span id=\"基本布局\">基本布局</span></h6><p>内核地址空间范围  [0XFFFF 0000 0000 0000, 0XFFFF FFFF FFFF FFFF]<br>不规范地址空间    (0XFFFF 0000 0000 0000, 0X0000 FFFF FFFF FFFF)<br>用户地址空间      [0X0000 FFFF FFFF FFFF, 0X0000 0000 0000 0000]</p>\n<p>备注: 用户空间范围对应为0~TASK_SIZE = 2^VA_BITS</p>\n<ol>\n<li>用户地址空间默认最大宽度是48 如上  </li>\n<li>内核地址空间和用户地址空间宽度相同  </li>\n<li>不同的页长默认有不同的宽度, 例如4KB页长默认是39位   16:47, 64:42等, 可直接选择48位.  </li>\n<li>开启LVA支持并且页长64可以支持到最大宽度52   </li>\n<li>通过getconf PAGE_SIZE 可以查看系统的页大小  </li>\n<li>通过/proc/$pid/maps或者pmap可以查看一个进程的实际内存布局 </li>\n<li>mprotect 可以修改内存页权限   </li>\n<li>madvise 可以修改建议内存使用的方式  </li>\n<li>老的LinuxThreads (管理线程机制) 设计中线程栈的位置在 HEAP之下 的高位 导致无法可信的设置heap大小  </li>\n<li>新的NPTL解决了老的线程机制中的管理单点问题 信号问题 内存布局问题等 顺便实现了PTHREAD_PROCESS_SHARED </li>\n<li>pthread_attr_setstackaddr可指定线程栈的地址(mmap)   </li>\n<li>pthread的创建和销毁 <ol>\n<li>创建   <ol>\n<li>使用用户提供的stack创建线程并加入__stack_user </li>\n<li>nptl 先尝试获取stack_cache中tid为0大小合适的空闲stack, 如果失败则从mmap分配新的stack, 然后加入stack_used  </li>\n<li>tid list等信息存储在stack内存的高地址端的头部  </li>\n</ol>\n</li>\n<li>start_thread执行完用户函数后会进行数据回收和清理(但无法销毁自身)   <ol>\n<li>如果该线程非detach 则等待join  (没有join则会一直保留)  </li>\n<li>如果该线程被detach 则执行__free_tcb   <ol>\n<li>如果是用户分配的stack 从stack_user链表中移除并清理tls 线程局部存储  </li>\n<li>如果是自动分配的stack 从stack_used链表中移除, 然后加入stack_cache中, 清理tls线程局部存储(此时tid不为0)   </li>\n<li>检查当前stack_cache的总大小, 超过阈值则遍历一次stack_cache并释放掉(tid为0)空闲的stack, 如果小于阈值则提前break该次遍历   </li>\n</ol>\n</li>\n</ol>\n</li>\n<li>内核在该线程结束后 会对该线程的tid清零(创建线程时CLONE_CHILD_CLEARTID参数会让内存清除某标记内存), 此后该资源可以安全销毁.        </li>\n</ol>\n</li>\n<li>brk和mmap的分配由glibc确定 默认规则是小于M_MMAP_THRESHOLD宏走brk  但是新系统的算法可能会让大于这个参数的临时分配也走brk   <a id=\"more\"></a> \n<h6><span id=\"内核布局\">内核布局</span></h6><h6><span id=\"用户空间布局\">用户空间布局</span></h6></li>\n</ol>\n<ul>\n<li><p>TASK_SIZE 高位 </p>\n</li>\n<li><p>栈空间(进程栈),  向下增长  具体位置为(STACK_TOP - 随机值), STACK_TOP对应TASK_SIZE  </p>\n<ul>\n<li>栈的位置不能超过STACK_TOP的5/6,并且保证128M的栈空间  对齐到页.   </li>\n<li>见 stack_maxrandom_size 函数, STACK_RND_MASK 32位下掩码0x7ff(大约8M) 64位下 0x3ffff  * 页大小(默认4k) 大约1G<ul>\n<li>PAGE_SHIFT=12,   PAGE_SIZE= 1 &lt;&lt; 12,  PAGE_MASK= ~(PMD_PAGE_SIZE-1)  </li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>内存映射区域(mmap) 老版本 TASK_UNMAAPPED_BASE+随机值 向上增长   </p>\n</li>\n<li><p>内存映射区域(mmap) 新版本 STACK_TOP - 栈最大长度 - 间隙 - 随机值  向下增长  x86 2.6.7版本后默认   </p>\n<ul>\n<li>新版本heap和mmap共享虚拟地址 32位下会比老的更好.    </li>\n<li>见arch_mmap_rnd函数  X86版本 32位下偏移大小为2^8,  64位下为2^28 大约268M的最大偏移大小.  </li>\n<li>mmap的共享内存可用于父子进程 </li>\n<li>mmap的有名文件映射可用于多个进程共享  </li>\n</ul>\n</li>\n</ul>\n<ul>\n<li><p>堆空间(Heap)  brk/sbrk分配  brk位置在BSS段尾加随机值大小  </p>\n<ul>\n<li>见arch_randomize_brk函数 X86版本为0x02000000约33M的最大随机偏移; </li>\n<li>主线程有全局的main Arena, 通过brk分配Heap内存,   子线程有自己的Thread Arena来管理 由mmap创建 数量和CPU核心数相关    </li>\n<li></li>\n</ul>\n</li>\n<li><p>BSS段(Block Started by Symbol) 未初始化数据段或者初始化为0 的全局变量和静态局部变量    * loader加载程序时, 会将BSS段分配的内存清零, 在目标文件中并不占用空间(目标没有BSS段 只有记录名称和大小).  </p>\n<ul>\n<li>随机化由PIE决定</li>\n</ul>\n</li>\n<li><p>数据段(Data)  已初始化并且非0的全局变量和静态局部变量 </p>\n<ul>\n<li>例如int a[10000] = {1,2,3, …}; 与 int a[10000];</li>\n<li>前者在程序中有完整的数据存储, 而后者指标记了使用的大小, 对于目标文件来说会节省非常多的存储空间.   </li>\n<li>随机化由PIE决定  </li>\n</ul>\n</li>\n<li><p>代码段(Text)  存放机器指令  只读  </p>\n<ul>\n<li>随机化由PIE决定  </li>\n</ul>\n</li>\n<li><p>保留区</p>\n</li>\n<li><p>0</p>\n</li>\n</ul>\n<h6><span id=\"多线程\">多线程</span></h6><p>非主线程的栈是mmap出来的 </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">mem &#x3D; mmap (NULL, size, prot,</span><br><span class=\"line\">            MAP_PRIVATE | MAP_ANONYMOUS | MAP_STACK, -1, 0);</span><br></pre></td></tr></table></figure>\n\n\n<h3><span id=\"elf文件装载过程\">ELF文件装载过程</span></h3><h3><span id=\"address-space-layout-randomization-地址空间布局随机化\">Address space layout randomization 地址空间布局随机化</span></h3><p>  可以防范return-to-libc 这种攻击</p>\n<h5><span id=\"aslr在linux中的三个等级以及配置和禁用方法\">ASLR在linux中的三个等级以及配置和禁用方法</span></h5><ul>\n<li>系统全局配置<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;proc&#x2F;sys&#x2F;kernel&#x2F;randomize_va_space</span><br><span class=\"line\">0 &#x3D; Disabled</span><br><span class=\"line\">1 &#x3D; Conservative Randomization</span><br><span class=\"line\">2 &#x3D; Full Randomization</span><br><span class=\"line\">&#96;&#96;&#96;  </span><br><span class=\"line\"></span><br><span class=\"line\">1. 关闭  </span><br><span class=\"line\">2. 保守随机化: 共享库 栈 mmap  vdso随机化   </span><br><span class=\"line\">3. 完全随机化:  包括brk分配的内存   </span><br><span class=\"line\">    2.1 代码段和数据段的随机化需要PIE位置无关可执行程序的支持  编译链接时添加 -fpie -pie   </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">* 修改&#x2F;关闭系统配置</span><br></pre></td></tr></table></figure>\n<h1><span id=\"sysctl-w-kernelrandomize_va_space0\">sysctl -w kernel.randomize_va_space=0</span></h1><h1><span id=\"echo-0-gt-procsyskernelrandomize_va_space\">echo 0 &gt; /proc/sys/kernel/randomize_va_space</span></h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">* 进程个性化设置: 进程描述符的成员personality设置 ADDR_NO_RANDOMIZE     </span><br><span class=\"line\">  * setarch $(uname -m) -R [--addr-no-randomize] [target exe]</span><br><span class=\"line\">  * 例如 ldd .&#x2F;benchmark_fast 在aslr环境下会看到每次so的内存位置都在变化   </span><br><span class=\"line\">    * setarch $(uname -m) -R ldd .&#x2F;benchmark_fast 这样去查看则是固定不变的  </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">ldd命令  </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">* 代码段&#x2F;数据段的随机化 通过PIE(编译位置无关可执行文件)PIC(position-independent code位置无关代码)控制 </span><br><span class=\"line\">  * gcc 编译程序时-fpie 链接时-pie  </span><br><span class=\"line\">  * gcc 编译动态库时 -fpic</span><br><span class=\"line\"></span><br><span class=\"line\">* 内核</span><br><span class=\"line\"></span><br><span class=\"line\">KASLR  内核地址空间布局随机化  </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">### 脚注  </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">###### pmap x86一个带共享内存的进程.  00007f1-00007f2之间是64G大小的空间</span><br></pre></td></tr></table></figure>\npmap 22621</li>\n</ul>\n<p>22621:   ../../???/bin/???  –conf-file=../cfg.xml<br>0000000000400000  32460K r-x–  /data/home/???/bin/???<br>00000000025b3000    724K rw—  /data/home/???/bin/???<br>0000000002668000  49260K rw—    [ anon ]<br>0000000006835000  25172K rw—    [ anon ]<br>00000000080ca000 284456K rw—    [ anon ]<br>00000000404e9000    128K rw—    [ anon ]<br>0000000040fe3000    128K rw—    [ anon ]<br>00007f1000000000 2511808K rw-s-    [ shmid=0x39020085 ]<br>00007f213db99000      4K —–    [ anon ]<br>00007f213db9a000   8192K rw—    [ anon ]<br>00007f213e39a000   7336K r–s-  /dev/shm/???/???.nav<br>00007f213eac4000   8588K r–s-  /dev/shm/???/???.nav<br>00007f213f327000   7336K r–s-  /dev/shm/???/???.nav<br>00007f213fa51000   2052K rw-s-    [ shmid=0x39018084 ]<br>00007f213fc52000  40964K rw-s-    [ shmid=0x38f40068 ]<br>00007f2142453000  40964K rw-s-    [ shmid=0x38dd003a ]<br>00007f2144c54000  40964K rw-s-    [ shmid=0x38db0036 ]<br>00007f2147455000  40964K rw-s-    [ shmid=0x38d7802f ]<br>00007f2149c56000  40964K rw-s-    [ shmid=0x38d40028 ]<br>00007f214c457000  40964K rw-s-    [ shmid=0x38d10022 ]<br>00007f214ec58000  40964K rw-s-    [ shmid=0x38cf801f ]<br>00007f2151459000  40964K rw-s-    [ shmid=0x38cb0016 ]<br>00007f2153c5a000  40964K rw-s-    [ shmid=0x38ca0014 ]<br>00007f215645b000  40964K rw-s-    [ shmid=0x38c90012 ]<br>00007f2158c5c000  40964K rw-s-    [ shmid=0x38c7800f ]<br>00007f215b45d000   1024K rw-s-    [ shmid=0x50806c ]<br>00007f215b55d000   1576K r-x–  /lib64/libc-2.12.so<br>00007f215b6e7000   2048K —–  /lib64/libc-2.12.so<br>00007f215b8e7000     16K r—-  /lib64/libc-2.12.so<br>00007f215b8eb000      4K rw—  /lib64/libc-2.12.so<br>00007f215b8ec000     20K rw—    [ anon ]<br>00007f215b8f1000    524K r-x–  /lib64/libm-2.12.so<br>00007f215b974000   2044K —–  /lib64/libm-2.12.so<br>00007f215bb73000      4K r—-  /lib64/libm-2.12.so<br>00007f215bb74000      4K rw—  /lib64/libm-2.12.so<br>00007f215bb75000      8K r-x–  /lib64/libdl-2.12.so<br>00007f215bb77000   2048K —–  /lib64/libdl-2.12.so<br>00007f215bd77000      4K r—-  /lib64/libdl-2.12.so<br>00007f215bd78000      4K rw—  /lib64/libdl-2.12.so<br>00007f215bd79000     92K r-x–  /lib64/libpthread-2.12.so<br>00007f215bd90000   2048K —–  /lib64/libpthread-2.12.so<br>00007f215bf90000      4K r—-  /lib64/libpthread-2.12.so<br>00007f215bf91000      4K rw—  /lib64/libpthread-2.12.so<br>00007f215bf92000     16K rw—    [ anon ]<br>00007f215bf96000      8K r-x–  /lib64/libutil-2.12.so<br>00007f215bf98000   2044K —–  /lib64/libutil-2.12.so<br>00007f215c197000      4K r—-  /lib64/libutil-2.12.so<br>00007f215c198000      4K rw—  /lib64/libutil-2.12.so<br>00007f215c199000     28K r-x–  /lib64/librt-2.12.so<br>00007f215c1a0000   2044K —–  /lib64/librt-2.12.so<br>00007f215c39f000      4K r—-  /lib64/librt-2.12.so<br>00007f215c3a0000      4K rw—  /lib64/librt-2.12.so<br>00007f215c3a1000    128K r-x–  /lib64/ld-2.12.so<br>00007f215c43c000      4K rw—    [ anon ]<br>00007f215c43d000    208K r–s-  /dev/shm/???/???.nav<br>00007f215c471000    188K rw-s-    [ shmid=0x38c6800d ]<br>00007f215c4a0000     20K rw—    [ anon ]<br>00007f215c4a5000     16K rw—    [ anon ]<br>00007f215c4a9000      4K r–s-  /dev/shm/???/???.nav<br>00007f215c4aa000      4K r–s-  /dev/shm/???/???.nav<br>00007f215c4ab000     20K rw—    [ anon ]<br>00007f215c4b0000      8K rw—    [ anon ]<br>00007f215c4b2000     20K rw—    [ anon ]<br>00007f215c4b7000     12K r-x–  /lib64/lib???rity.so.1.0.19<br>00007f215c4ba000   1024K —–  /lib64/lib???rity.so.1.0.19<br>00007f215c5ba000      4K rw—  /lib64/lib???ity.so.1.0.19<br>00007f215c5bb000     16K rw—    [ anon ]<br>00007f215c5bf000      4K rw—    [ anon ]<br>00007f215c5c0000      4K r—-  /lib64/ld-2.12.so<br>00007f215c5c1000      4K rw—  /lib64/ld-2.12.so<br>00007f215c5c2000      4K rw—    [ anon ]<br>00007ffe6d6d3000    132K rw—    [ stack ]<br>00007ffe6d7ed000      8K r-x–    [ anon ]<br>ffffffffff600000      4K r-x–    [ anon ]<br> total          3405716K</p>\n<p> ```</p>\n<h6><span id=\"linux-发行版所使用的线程模型-glibc-版本和内核版本\">Linux 发行版所使用的线程模型、glibc 版本和内核版本</span></h6><p>cat /proc/version                查看内核版本<br>getconf GNU_LIBPTHREAD_VERSION   查看线程模型<br>|      线程实现      |       C 库     ———      |          发行版        |      内核        |<br>|—————— | ——————————|———————–|——————|<br>| LinuxThreads 0.7  | 0.71 (for libc5)  libc 5.x    | Red Hat 4.2           |<br>| LinuxThreads 0.7  | 0.71 (for glibc 2) glibc 2.0. | Red Hat 5.x           |<br>| LinuxThreads 0.8  | glibc 2.1.1                   | Red Hat 6.0           |<br>| LinuxThreads 0.8  | glibc 2.1.2                   | Red Hat 6.1 and 6.2   |<br>| LinuxThreads 0.9  |                               | Red Hat 7.2           | 2.4.7<br>| LinuxThreads 0.9  | glibc 2.2.4                   | Red Hat 2.1 AS        | 2.4.9<br>| LinuxThreads 0.10 | glibc 2.2.93                  | Red Hat 8.0           | 2.4.18<br>| NPTL 0.6          | glibc 2.3                     | Red Hat 9.0           | 2.4.20<br>| NPTL 0.61         | glibc 2.3.2                   | Red Hat 3.0 EL        | 2.4.21<br>| NPTL 2.3.4        | glibc 2.3.4                   | Red Hat 4.0           | 2.6.9<br>| LinuxThreads 0.9  | glibc 2.2                     | SUSE Linux Enterprise Server 7.1  | 2.4.18<br>| LinuxThreads 0.9  | glibc 2.2.5                   | SUSE Linux Enterprise Server 8    | 2.4.21<br>| LinuxThreads 0.9  | glibc 2.2.5                   | United Linux                      | 2.4.21<br>| NPTL 2.3.5        | glibc 2.3.3                   | SUSE Linux Enterprise Server 9    | 2.6.5</p>\n","site":{"data":{}},"excerpt":"<h3 id=\"内存布局\"><a href=\"#内存布局\" class=\"headerlink\" title=\"内存布局\"></a>内存布局</h3><h6 id=\"基本布局\"><a href=\"#基本布局\" class=\"headerlink\" title=\"基本布局\"></a>基本布局</h6><p>内核地址空间范围  [0XFFFF 0000 0000 0000, 0XFFFF FFFF FFFF FFFF]<br>不规范地址空间    (0XFFFF 0000 0000 0000, 0X0000 FFFF FFFF FFFF)<br>用户地址空间      [0X0000 FFFF FFFF FFFF, 0X0000 0000 0000 0000]</p>\n<p>备注: 用户空间范围对应为0~TASK_SIZE = 2^VA_BITS</p>\n<ol>\n<li>用户地址空间默认最大宽度是48 如上  </li>\n<li>内核地址空间和用户地址空间宽度相同  </li>\n<li>不同的页长默认有不同的宽度, 例如4KB页长默认是39位   16:47, 64:42等, 可直接选择48位.  </li>\n<li>开启LVA支持并且页长64可以支持到最大宽度52   </li>\n<li>通过getconf PAGE_SIZE 可以查看系统的页大小  </li>\n<li>通过/proc/$pid/maps或者pmap可以查看一个进程的实际内存布局 </li>\n<li>mprotect 可以修改内存页权限   </li>\n<li>madvise 可以修改建议内存使用的方式  </li>\n<li>老的LinuxThreads (管理线程机制) 设计中线程栈的位置在 HEAP之下 的高位 导致无法可信的设置heap大小  </li>\n<li>新的NPTL解决了老的线程机制中的管理单点问题 信号问题 内存布局问题等 顺便实现了PTHREAD_PROCESS_SHARED </li>\n<li>pthread_attr_setstackaddr可指定线程栈的地址(mmap)   </li>\n<li>pthread的创建和销毁 <ol>\n<li>创建   <ol>\n<li>使用用户提供的stack创建线程并加入__stack_user </li>\n<li>nptl 先尝试获取stack_cache中tid为0大小合适的空闲stack, 如果失败则从mmap分配新的stack, 然后加入stack_used  </li>\n<li>tid list等信息存储在stack内存的高地址端的头部  </li>\n</ol>\n</li>\n<li>start_thread执行完用户函数后会进行数据回收和清理(但无法销毁自身)   <ol>\n<li>如果该线程非detach 则等待join  (没有join则会一直保留)  </li>\n<li>如果该线程被detach 则执行__free_tcb   <ol>\n<li>如果是用户分配的stack 从stack_user链表中移除并清理tls 线程局部存储  </li>\n<li>如果是自动分配的stack 从stack_used链表中移除, 然后加入stack_cache中, 清理tls线程局部存储(此时tid不为0)   </li>\n<li>检查当前stack_cache的总大小, 超过阈值则遍历一次stack_cache并释放掉(tid为0)空闲的stack, 如果小于阈值则提前break该次遍历   </li>\n</ol>\n</li>\n</ol>\n</li>\n<li>内核在该线程结束后 会对该线程的tid清零(创建线程时CLONE_CHILD_CLEARTID参数会让内存清除某标记内存), 此后该资源可以安全销毁.        </li>\n</ol>\n</li>\n<li>brk和mmap的分配由glibc确定 默认规则是小于M_MMAP_THRESHOLD宏走brk  但是新系统的算法可能会让大于这个参数的临时分配也走brk","more":"<h6 id=\"内核布局\"><a href=\"#内核布局\" class=\"headerlink\" title=\"内核布局\"></a>内核布局</h6><h6 id=\"用户空间布局\"><a href=\"#用户空间布局\" class=\"headerlink\" title=\"用户空间布局\"></a>用户空间布局</h6></li>\n</ol>\n<ul>\n<li><p>TASK_SIZE 高位 </p>\n</li>\n<li><p>栈空间(进程栈),  向下增长  具体位置为(STACK_TOP - 随机值), STACK_TOP对应TASK_SIZE  </p>\n<ul>\n<li>栈的位置不能超过STACK_TOP的5/6,并且保证128M的栈空间  对齐到页.   </li>\n<li>见 stack_maxrandom_size 函数, STACK_RND_MASK 32位下掩码0x7ff(大约8M) 64位下 0x3ffff  * 页大小(默认4k) 大约1G<ul>\n<li>PAGE_SHIFT=12,   PAGE_SIZE= 1 &lt;&lt; 12,  PAGE_MASK= ~(PMD_PAGE_SIZE-1)  </li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>内存映射区域(mmap) 老版本 TASK_UNMAAPPED_BASE+随机值 向上增长   </p>\n</li>\n<li><p>内存映射区域(mmap) 新版本 STACK_TOP - 栈最大长度 - 间隙 - 随机值  向下增长  x86 2.6.7版本后默认   </p>\n<ul>\n<li>新版本heap和mmap共享虚拟地址 32位下会比老的更好.    </li>\n<li>见arch_mmap_rnd函数  X86版本 32位下偏移大小为2^8,  64位下为2^28 大约268M的最大偏移大小.  </li>\n<li>mmap的共享内存可用于父子进程 </li>\n<li>mmap的有名文件映射可用于多个进程共享  </li>\n</ul>\n</li>\n</ul>\n<ul>\n<li><p>堆空间(Heap)  brk/sbrk分配  brk位置在BSS段尾加随机值大小  </p>\n<ul>\n<li>见arch_randomize_brk函数 X86版本为0x02000000约33M的最大随机偏移; </li>\n<li>主线程有全局的main Arena, 通过brk分配Heap内存,   子线程有自己的Thread Arena来管理 由mmap创建 数量和CPU核心数相关    </li>\n<li></li>\n</ul>\n</li>\n<li><p>BSS段(Block Started by Symbol) 未初始化数据段或者初始化为0 的全局变量和静态局部变量    * loader加载程序时, 会将BSS段分配的内存清零, 在目标文件中并不占用空间(目标没有BSS段 只有记录名称和大小).  </p>\n<ul>\n<li>随机化由PIE决定</li>\n</ul>\n</li>\n<li><p>数据段(Data)  已初始化并且非0的全局变量和静态局部变量 </p>\n<ul>\n<li>例如int a[10000] = {1,2,3, …}; 与 int a[10000];</li>\n<li>前者在程序中有完整的数据存储, 而后者指标记了使用的大小, 对于目标文件来说会节省非常多的存储空间.   </li>\n<li>随机化由PIE决定  </li>\n</ul>\n</li>\n<li><p>代码段(Text)  存放机器指令  只读  </p>\n<ul>\n<li>随机化由PIE决定  </li>\n</ul>\n</li>\n<li><p>保留区</p>\n</li>\n<li><p>0</p>\n</li>\n</ul>\n<h6 id=\"多线程\"><a href=\"#多线程\" class=\"headerlink\" title=\"多线程\"></a>多线程</h6><p>非主线程的栈是mmap出来的 </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">mem &#x3D; mmap (NULL, size, prot,</span><br><span class=\"line\">            MAP_PRIVATE | MAP_ANONYMOUS | MAP_STACK, -1, 0);</span><br></pre></td></tr></table></figure>\n\n\n<h3 id=\"ELF文件装载过程\"><a href=\"#ELF文件装载过程\" class=\"headerlink\" title=\"ELF文件装载过程\"></a>ELF文件装载过程</h3><h3 id=\"Address-space-layout-randomization-地址空间布局随机化\"><a href=\"#Address-space-layout-randomization-地址空间布局随机化\" class=\"headerlink\" title=\"Address space layout randomization 地址空间布局随机化\"></a>Address space layout randomization 地址空间布局随机化</h3><p>  可以防范return-to-libc 这种攻击</p>\n<h5 id=\"ASLR在linux中的三个等级以及配置和禁用方法\"><a href=\"#ASLR在linux中的三个等级以及配置和禁用方法\" class=\"headerlink\" title=\"ASLR在linux中的三个等级以及配置和禁用方法\"></a>ASLR在linux中的三个等级以及配置和禁用方法</h5><ul>\n<li>系统全局配置<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;proc&#x2F;sys&#x2F;kernel&#x2F;randomize_va_space</span><br><span class=\"line\">0 &#x3D; Disabled</span><br><span class=\"line\">1 &#x3D; Conservative Randomization</span><br><span class=\"line\">2 &#x3D; Full Randomization</span><br><span class=\"line\">&#96;&#96;&#96;  </span><br><span class=\"line\"></span><br><span class=\"line\">1. 关闭  </span><br><span class=\"line\">2. 保守随机化: 共享库 栈 mmap  vdso随机化   </span><br><span class=\"line\">3. 完全随机化:  包括brk分配的内存   </span><br><span class=\"line\">    2.1 代码段和数据段的随机化需要PIE位置无关可执行程序的支持  编译链接时添加 -fpie -pie   </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">* 修改&#x2F;关闭系统配置</span><br></pre></td></tr></table></figure>\n<h1 id=\"sysctl-w-kernel-randomize-va-space-0\"><a href=\"#sysctl-w-kernel-randomize-va-space-0\" class=\"headerlink\" title=\"sysctl -w kernel.randomize_va_space=0\"></a>sysctl -w kernel.randomize_va_space=0</h1><h1 id=\"echo-0-gt-proc-sys-kernel-randomize-va-space\"><a href=\"#echo-0-gt-proc-sys-kernel-randomize-va-space\" class=\"headerlink\" title=\"echo 0 &gt; /proc/sys/kernel/randomize_va_space\"></a>echo 0 &gt; /proc/sys/kernel/randomize_va_space</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">* 进程个性化设置: 进程描述符的成员personality设置 ADDR_NO_RANDOMIZE     </span><br><span class=\"line\">  * setarch $(uname -m) -R [--addr-no-randomize] [target exe]</span><br><span class=\"line\">  * 例如 ldd .&#x2F;benchmark_fast 在aslr环境下会看到每次so的内存位置都在变化   </span><br><span class=\"line\">    * setarch $(uname -m) -R ldd .&#x2F;benchmark_fast 这样去查看则是固定不变的  </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">ldd命令  </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">* 代码段&#x2F;数据段的随机化 通过PIE(编译位置无关可执行文件)PIC(position-independent code位置无关代码)控制 </span><br><span class=\"line\">  * gcc 编译程序时-fpie 链接时-pie  </span><br><span class=\"line\">  * gcc 编译动态库时 -fpic</span><br><span class=\"line\"></span><br><span class=\"line\">* 内核</span><br><span class=\"line\"></span><br><span class=\"line\">KASLR  内核地址空间布局随机化  </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">### 脚注  </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">###### pmap x86一个带共享内存的进程.  00007f1-00007f2之间是64G大小的空间</span><br></pre></td></tr></table></figure>\npmap 22621</li>\n</ul>\n<p>22621:   ../../???/bin/???  –conf-file=../cfg.xml<br>0000000000400000  32460K r-x–  /data/home/???/bin/???<br>00000000025b3000    724K rw—  /data/home/???/bin/???<br>0000000002668000  49260K rw—    [ anon ]<br>0000000006835000  25172K rw—    [ anon ]<br>00000000080ca000 284456K rw—    [ anon ]<br>00000000404e9000    128K rw—    [ anon ]<br>0000000040fe3000    128K rw—    [ anon ]<br>00007f1000000000 2511808K rw-s-    [ shmid=0x39020085 ]<br>00007f213db99000      4K —–    [ anon ]<br>00007f213db9a000   8192K rw—    [ anon ]<br>00007f213e39a000   7336K r–s-  /dev/shm/???/???.nav<br>00007f213eac4000   8588K r–s-  /dev/shm/???/???.nav<br>00007f213f327000   7336K r–s-  /dev/shm/???/???.nav<br>00007f213fa51000   2052K rw-s-    [ shmid=0x39018084 ]<br>00007f213fc52000  40964K rw-s-    [ shmid=0x38f40068 ]<br>00007f2142453000  40964K rw-s-    [ shmid=0x38dd003a ]<br>00007f2144c54000  40964K rw-s-    [ shmid=0x38db0036 ]<br>00007f2147455000  40964K rw-s-    [ shmid=0x38d7802f ]<br>00007f2149c56000  40964K rw-s-    [ shmid=0x38d40028 ]<br>00007f214c457000  40964K rw-s-    [ shmid=0x38d10022 ]<br>00007f214ec58000  40964K rw-s-    [ shmid=0x38cf801f ]<br>00007f2151459000  40964K rw-s-    [ shmid=0x38cb0016 ]<br>00007f2153c5a000  40964K rw-s-    [ shmid=0x38ca0014 ]<br>00007f215645b000  40964K rw-s-    [ shmid=0x38c90012 ]<br>00007f2158c5c000  40964K rw-s-    [ shmid=0x38c7800f ]<br>00007f215b45d000   1024K rw-s-    [ shmid=0x50806c ]<br>00007f215b55d000   1576K r-x–  /lib64/libc-2.12.so<br>00007f215b6e7000   2048K —–  /lib64/libc-2.12.so<br>00007f215b8e7000     16K r—-  /lib64/libc-2.12.so<br>00007f215b8eb000      4K rw—  /lib64/libc-2.12.so<br>00007f215b8ec000     20K rw—    [ anon ]<br>00007f215b8f1000    524K r-x–  /lib64/libm-2.12.so<br>00007f215b974000   2044K —–  /lib64/libm-2.12.so<br>00007f215bb73000      4K r—-  /lib64/libm-2.12.so<br>00007f215bb74000      4K rw—  /lib64/libm-2.12.so<br>00007f215bb75000      8K r-x–  /lib64/libdl-2.12.so<br>00007f215bb77000   2048K —–  /lib64/libdl-2.12.so<br>00007f215bd77000      4K r—-  /lib64/libdl-2.12.so<br>00007f215bd78000      4K rw—  /lib64/libdl-2.12.so<br>00007f215bd79000     92K r-x–  /lib64/libpthread-2.12.so<br>00007f215bd90000   2048K —–  /lib64/libpthread-2.12.so<br>00007f215bf90000      4K r—-  /lib64/libpthread-2.12.so<br>00007f215bf91000      4K rw—  /lib64/libpthread-2.12.so<br>00007f215bf92000     16K rw—    [ anon ]<br>00007f215bf96000      8K r-x–  /lib64/libutil-2.12.so<br>00007f215bf98000   2044K —–  /lib64/libutil-2.12.so<br>00007f215c197000      4K r—-  /lib64/libutil-2.12.so<br>00007f215c198000      4K rw—  /lib64/libutil-2.12.so<br>00007f215c199000     28K r-x–  /lib64/librt-2.12.so<br>00007f215c1a0000   2044K —–  /lib64/librt-2.12.so<br>00007f215c39f000      4K r—-  /lib64/librt-2.12.so<br>00007f215c3a0000      4K rw—  /lib64/librt-2.12.so<br>00007f215c3a1000    128K r-x–  /lib64/ld-2.12.so<br>00007f215c43c000      4K rw—    [ anon ]<br>00007f215c43d000    208K r–s-  /dev/shm/???/???.nav<br>00007f215c471000    188K rw-s-    [ shmid=0x38c6800d ]<br>00007f215c4a0000     20K rw—    [ anon ]<br>00007f215c4a5000     16K rw—    [ anon ]<br>00007f215c4a9000      4K r–s-  /dev/shm/???/???.nav<br>00007f215c4aa000      4K r–s-  /dev/shm/???/???.nav<br>00007f215c4ab000     20K rw—    [ anon ]<br>00007f215c4b0000      8K rw—    [ anon ]<br>00007f215c4b2000     20K rw—    [ anon ]<br>00007f215c4b7000     12K r-x–  /lib64/lib???rity.so.1.0.19<br>00007f215c4ba000   1024K —–  /lib64/lib???rity.so.1.0.19<br>00007f215c5ba000      4K rw—  /lib64/lib???ity.so.1.0.19<br>00007f215c5bb000     16K rw—    [ anon ]<br>00007f215c5bf000      4K rw—    [ anon ]<br>00007f215c5c0000      4K r—-  /lib64/ld-2.12.so<br>00007f215c5c1000      4K rw—  /lib64/ld-2.12.so<br>00007f215c5c2000      4K rw—    [ anon ]<br>00007ffe6d6d3000    132K rw—    [ stack ]<br>00007ffe6d7ed000      8K r-x–    [ anon ]<br>ffffffffff600000      4K r-x–    [ anon ]<br> total          3405716K</p>\n<p> ```</p>\n<h6 id=\"Linux-发行版所使用的线程模型、glibc-版本和内核版本\"><a href=\"#Linux-发行版所使用的线程模型、glibc-版本和内核版本\" class=\"headerlink\" title=\"Linux 发行版所使用的线程模型、glibc 版本和内核版本\"></a>Linux 发行版所使用的线程模型、glibc 版本和内核版本</h6><p>cat /proc/version                查看内核版本<br>getconf GNU_LIBPTHREAD_VERSION   查看线程模型<br>|      线程实现      |       C 库     ———      |          发行版        |      内核        |<br>|—————— | ——————————|———————–|——————|<br>| LinuxThreads 0.7  | 0.71 (for libc5)  libc 5.x    | Red Hat 4.2           |<br>| LinuxThreads 0.7  | 0.71 (for glibc 2) glibc 2.0. | Red Hat 5.x           |<br>| LinuxThreads 0.8  | glibc 2.1.1                   | Red Hat 6.0           |<br>| LinuxThreads 0.8  | glibc 2.1.2                   | Red Hat 6.1 and 6.2   |<br>| LinuxThreads 0.9  |                               | Red Hat 7.2           | 2.4.7<br>| LinuxThreads 0.9  | glibc 2.2.4                   | Red Hat 2.1 AS        | 2.4.9<br>| LinuxThreads 0.10 | glibc 2.2.93                  | Red Hat 8.0           | 2.4.18<br>| NPTL 0.6          | glibc 2.3                     | Red Hat 9.0           | 2.4.20<br>| NPTL 0.61         | glibc 2.3.2                   | Red Hat 3.0 EL        | 2.4.21<br>| NPTL 2.3.4        | glibc 2.3.4                   | Red Hat 4.0           | 2.6.9<br>| LinuxThreads 0.9  | glibc 2.2                     | SUSE Linux Enterprise Server 7.1  | 2.4.18<br>| LinuxThreads 0.9  | glibc 2.2.5                   | SUSE Linux Enterprise Server 8    | 2.4.21<br>| LinuxThreads 0.9  | glibc 2.2.5                   | United Linux                      | 2.4.21<br>| NPTL 2.3.5        | glibc 2.3.3                   | SUSE Linux Enterprise Server 9    | 2.6.5</p>"},{"title":"问题的解决","date":"2019-09-15T16:00:00.000Z","author":"yawei.zhang","_content":"\n在认知心理学中, 问题解决的思维过程被描述为: 在问题空间下, 经过思考与推理, 达到目的的心理历程.    \n该过程分为四个阶段  \n* 发现问题\n* 分析（明确）问题\n* 提出假设  \n* 验证假设  \n\n其中问题空间(问题域)是指问题解决者对所要解决的问题的一切可能的认识状态, 包括对问题的初始状态和目标状态的认识, 以及如何从初始状态转化为目标状态的认知操作等.    \n\n问题的解决就是对问题空间进行搜索, 找到一条从问题的初始状态到达目标状态的通路.   \n\n\n## 问题解决的一般性阶段及其描述:    \n\n* **问题的存在,发现和提出**  \n* **定义问题域, 即定义问题集以及问题的约束集**  \n* **从问题域中递归的构造可演算的计算(概念)模型**  \n* **制定现实可执行的解决方案**  \n* **实施并植入问题域所在现实环境验证**   \n* **问题的解决**  \n\n在这个过程中, 每个过程的推进都可能会伴随对其前向的阶段所做的处理发起修正, 在此过程中我们会不断的逼近'真正的问题'的问题定义, 以及'真正的问题解决'的结果, 从而采用形式化的方法寻找到最优的解决路径   \n\n<!-- more --> \n### 问题的存在   \n问题以不同的形式存在于不同的领域, 其核心是期望和现状的差异, 在不同的领域问题的描述方法和提出形式带有不同的领域特征, 例如:  \n\n* 数学领域 问题是关于数学对象和结构的疑问, 比如很具体的'求X^2-1=0的解' 或者很一般的'为什么这些数在不同情况（领域）里面出现？请给出假说并证明之。'.     \n* 商业领域 问题是现状和期望的差别 例如\"某项目上线后各项数据低于预期\"  (Root-Cause-Analyze来分析问题)\n* 社会领域 问题是某类困境.  \n\n更具体一些, 差异主要分为两种情况:\n* 主体对上下文的理解和目标状态的理解程度的差异  \n* 客体和目标状态的差异    \n  \n'期望'表明了问题属于认知领域, 必须要有抱有期望的主体存在才会认识或者感知问题, 问题不是独立存在的, 但是对于第二种差异则有时候可以解释为 \"问题是独立于问题解决的主体存在的客观世界的一种表达方式\", 只是被主体感知和表达出来, 因此 问题是否是独立存在的则有一定的争议,  但无论如何, 问题的提出必然依赖主体的认识和感知, 也就引入了解决问题的一个核心特征:   \n\n**主体对问题的认识会存在一定程度的偏差, 人在解决问题的过程中会'不断的更准确的定义重新定义问题的描述, 使得主体对问题的认识偏差不断的缩小(认识偏差可无限趋近但无法绝对消除)', 从而更有利于发现符合逻辑的解释方法和解决方法.**       \n\n* 问题\n问题是期望和现状的差异, 是客观存在的, 是提问的基础.   \n* 提问  \n提问是把问题用合适的方法描述出来, 是解决问题的一个步骤.   \n* 目标\n目标是达成'解决问题'的某个具体状态  \n\n\n\n### 对问题的思考   \n* 基本的问题特征  \n  * 定义明确的问题和定义不明确的问题  \n    * 定义明确的问题具有特定的最终目标 并且有明确的预期解决方案 而定义不明确的问题则没有    \n  \n  * 复杂规模评估  \n    * 组成问题的部分是否可枚举(不可枚举) \n    * 组成问题的部分是否具备同质性(异质性)  \n    * 组成问题的部分是否彼此连通(连接的层次关系, 分配关系) \n    * 问题是否存在时间限制  \n    * 问题是否对时间敏感 \n    * 问题是否存在相位效应\n    * 问题是否存在动态的不可预测性\n    * 问题的来源是否透明可见  \n    * 问题的发生过程是否透明可见  \n    * 问题是否同时存在多个目标状态  \n      * 多个目标之间是否存在以上可能导致问题复杂的'规模,时间,动态,透明'等复杂问题.\n      * 部分目标是否存在冲突, 不表达等相容问题  \n\n* 分析问题的基本障碍\n  * 确认偏误\n  * 心理(思维)定势\n  * 功能固定性\n  * 不必要的约束\n  * 不相关的信息\n\n* 结构化的问题分析方式   \n  * 搜集和界定问题  \n    * 搜集相关的问题, 期望的组成部分, 现状的组成部分, 差异的组成部分, 以及产生这些部分或者问题的原因.   \n      * 确认期望结果集  \n      * 确认非期望结果集(现状集)  \n    * 提出各种假设并进行试验, 根据结果排除部分问题或者得出明确的结论   \n    * 界定问题域的所属集合以及其约束.   \n  * 逻辑树,问题域建模  \n    * 寻找逻辑关系和结构关系  \n      * 寻找时间/步骤顺序 (时序)  \n      * 寻找空间/结构顺序 (拓扑)  \n      * 寻找程度/重要性顺序 (主次非)  \n    * 基本思维方法\n      * 归纳推理  \n        * 归类分组 概括其共性  以MECE为准则尽量做到不重不漏 \n      * 演绎推理 \n        * 三段论 排除问题或者得出明确的结论   \n      * 质疑和提问  \n  * 构建逻辑模型(逻辑树)  \n    * 自上而下构建\n      * 提出概括性模型并递归的拆解和具体化其组成部分,直到每个部分得到确认或者无法确认.   \n    * 自下而上构建\n      * 通过已确认的基础部分进行有序的组合构造/抽象出上层模型  \n  * 验证和迭代模型   \n\n### 计算机科学领域中的问题解决\n* 定义问题域 (定义问题集以及问题的约束集)   \n  * 包含期望实现的目标, 问题的上下文,   解决方案必须的基本功能和必须运行在的问题环境.   \n* 通过形式化方法构建计算模型  \n  * 计算模型目前有两大分支, 图灵机和lambda演算, 他们的计算能力等价.   \n  * 使用数学语言对问题域进行描述和分析, 可以对模型的可靠性和稳健性进行论证, 但因成本问题形式化的方法可以进行分级实现,  设计规范, 实现规范, 验证规范.     \n  * 构建的基本策略  \n    * 通过处理部分有序集以对计算领域进行建模, 其中有序的元素解释为信息或者计算的部分, 其中次序较高的元素以一致的方式扩展旗下方元素的信息.  通过这个方式, 域理论以非常一般化的途径对直觉概念进行形式化的逼近和收敛.    \n* 问题解决域 系统模型构建   \n  * 问题解决域定义了解决问题的过程(实现路径)  \n  * 问题解决域定义了解决问题的目标\n  * 问题解决域定义了解决方案所必须运行的抽象环境.   \n  * 解决方案从解决方案所运行的抽象环境植入到问题环境时, 这两个环境的差异往往是出错的原因.   \n  \n* 杂注   \n  * 工程能力往往是针对问题解决域而言的, 在软件领域,  工作量往往是集中在工程实现层面的.   \n  * 业务能力则是相对于问题域的而言,  对业务内容的敏感性, 对核心问题的洞察 .    \n  * 数学素养, 几乎任何一个领域的成熟/发达程度都和这个领域中对形式化方法的渗透等级表现出极强的正相关.     \n\n\n### 相关理论:\n\n* 序理论 \n  * 序理论研究数学排序的直觉概念上的各种二元关系.  \n    * 从自然数的<=次序这个直觉概念很容易扩展到其他数的集合的排序, 这种大于或者小于另外一个数的概念 一般是记数系统(数制)的基本直觉. \n  * 序的概念是超出了具有直接,直观的顺序或者相对数量感觉的上下文, 在其他上下文中 序 可以获得 包含或者专用的概念,  在抽象上相当于子集关系.  \n    * 通过指定 \"<=关系必须是数学意义上的次序关系\"这个属性,  序理论可以在一般性(普遍)架构下获得样例中的直觉次序\n      * 这种抽象的方法可以在一般情况下得出许多定理而不必关注于任何特定的序的细节, 然后这些定理可以轻松的转移到不太抽象的应用程序中.   \n\n  * (非严格)偏序  只对部分元素成立关系(部分可比 比如集合的包含关系, 并不是任何两个集合之间都存在包含关系)  \n    * 偏序集合: 配备了偏序关系的集合    \n    * 定义: \n      * 自反性:   对任意x∈A，有xRx  \n      * 反对称性: 对任意x,y∈A，若xRy，且yRx，则x=y   \n      * 传递性:   对任意x, y,z∈A，若xRy，且yRz，则xRz。\n  * 全序：对集合中任意两个元素都有关系  \n    * 全序关系必然是偏序关系 \n  * 严格次序  \n    * <=为平常次序,  <为严格次序  \n  * 严格偏序 \n    * 定义\n      * 反自反性:   对任意x∈A，xRx必然不成立  \n      * 非对称性: 对任意x,y∈A，若xRy不成立，且yRx不成立，则x=y ;   如果xRy成立则yRx一定不成立    \n      * 传递性:   对任意x, y,z∈A，若xRy，且yRz，则xRz。\n  * 可视化 \n      * 可以使用hasse图等直观的表示部分有序的元素和关系 \n\n \n* 域理论:  \n  * 域是特定种类的偏序集合, 因此域理论也可以看做序理论的分支.   \n  * 域理论通过处理部分有序集以对计算领域进行建模, 其中有序的元素解释为信息或者计算的部分, 其中次序较高的元素以一致的方式扩展旗下方元素的信息(分形).  通过这个方式, 域理论以非常一般化的途径对直觉概念进行形式化的逼近和收敛.  \n    1. 通过对计算的每个域增加一个额外的元素 即形式化'部分信息'或者'不完全信息'的概念,  来构造演算的模型,  并且计算的域被装备一个'次序关系', 这其中的'未定义结果'或者说'部分信息'为最小元素. \n    2. 在这个模型之上, 计算的域总是部分有序的,  这种排序表示信息或者知识的层次, 元素在这个次序上越高, 它就更加明确和包含更多信息,  更低的元素表示不完全的知识或者中间结果.  \n    3. 接着通过在这个域上重复的应用单调函数来精制结果, 到达一个不动点(递归定义中的f(x)=x, 闭包算子的“封闭要素\")等价于完成一个计算.   \n   \n  * 收敛规范\n    * 在域理论中有一个重要的概念是有向子集(例如A中任意两个元素a和b, 存在一个元素c(可能与a或者b相等)使得 a<=c 和 b <= c), 有向子集是顺序的非空子集, 其中任何两个元素的上限均为该子集的元素.  \n      * 意味着有向子集的任何两个信息都被子集中的其他元素一致的扩展, 也因此可以将有向子集认为是一致的规范.   \n      * 有向子集是域中没有两个元素矛盾的部分结果集, 这种可以比较的概念可以用做收敛序列的分析, 其中每个元素比上个元素更加具体.   在度量空间中, 序列的许多方面的作用类似域理论中的有向子集的作用.  \n      * \"有向, 偏序\" 很自然的我们会对dcpo 有向完全偏序感兴趣  \n      * 把指定的局部结果看做不完整的知识 这个基础的思想中可以得到另外一个理想的属性 : 最小元素的存在.   最小元素对没有信息的状态进行建模-大多数计算的开始地方, 或者可以把最小元素作为完全不返回任何结果的计算输出. (域理论中的不动点)  \n  * 域的基础  \n    * 因为我们无法计算无限大的对象 因此在实践中 \"是否可以保证可以将域的所有元素作为更简单元素的极限来获得\" 非常重要, 但是通常我们还是希望可以将它们任意近似地逼近.  \n\n* 领域建模  \n  * 领域分解  \n    * 大领域分解成小领域  \n  * 分析细化  \n    * 面向对象法 问题域映射为解决域 \n      * OOA 面向对象的分析方法   \n      * OOD 面向对象的设计方法  \n  * 基于获得的领域知识建模  \n    * 确定实体和属性 (数据结构)  \n    * 描述实体间静态关系 (数据结构和接口)   \n    * 描述实体间动态关系 (核心逻辑, 状态机) \n    * 描述实体的生命周期 \n    * 建立完整的映射\n  * 验证迭代  \n\n  \n* Root-Cause-Analyze  \n  * 核心问题和根本原因    \n  * 产生问题的来源链路上, root位置的的原因为 root cause  根本原因.   \n  * 不同的原因产生不同问题, 在组成'差异'的子集中, 核心问题来自于root cause, 其他问题 或者不是造成'差异'的主要部分,  也或者是属于核心问题的衍生.  \n\n* 科学方法的基本循环步骤  (表征, 假设, 验证)    \n  * 问题的认知与表述 (表征, 通过观察和分析明确问题)  \n    * 问题需要满足 可观察 可经验（empirical） 可量度   \n  * 提出假设  \n    * 提出一个达到解决问题的目标       \n  * 预测(解释)     \n    * 对提出的假设或者理论进行归纳和演绎推论  \n  * 实验   \n    * 对上述表征 假设 预测进行测试验证   \n  * 实验结果分析  提出新的假设   \n  * 发布结果   ","source":"_posts/2019-09-16-problem-domain.md","raw":"---\ntitle: 问题的解决  \ndate: 2019-09-16\ncategories: develop \nauthor: yawei.zhang \n---\n\n在认知心理学中, 问题解决的思维过程被描述为: 在问题空间下, 经过思考与推理, 达到目的的心理历程.    \n该过程分为四个阶段  \n* 发现问题\n* 分析（明确）问题\n* 提出假设  \n* 验证假设  \n\n其中问题空间(问题域)是指问题解决者对所要解决的问题的一切可能的认识状态, 包括对问题的初始状态和目标状态的认识, 以及如何从初始状态转化为目标状态的认知操作等.    \n\n问题的解决就是对问题空间进行搜索, 找到一条从问题的初始状态到达目标状态的通路.   \n\n\n## 问题解决的一般性阶段及其描述:    \n\n* **问题的存在,发现和提出**  \n* **定义问题域, 即定义问题集以及问题的约束集**  \n* **从问题域中递归的构造可演算的计算(概念)模型**  \n* **制定现实可执行的解决方案**  \n* **实施并植入问题域所在现实环境验证**   \n* **问题的解决**  \n\n在这个过程中, 每个过程的推进都可能会伴随对其前向的阶段所做的处理发起修正, 在此过程中我们会不断的逼近'真正的问题'的问题定义, 以及'真正的问题解决'的结果, 从而采用形式化的方法寻找到最优的解决路径   \n\n<!-- more --> \n### 问题的存在   \n问题以不同的形式存在于不同的领域, 其核心是期望和现状的差异, 在不同的领域问题的描述方法和提出形式带有不同的领域特征, 例如:  \n\n* 数学领域 问题是关于数学对象和结构的疑问, 比如很具体的'求X^2-1=0的解' 或者很一般的'为什么这些数在不同情况（领域）里面出现？请给出假说并证明之。'.     \n* 商业领域 问题是现状和期望的差别 例如\"某项目上线后各项数据低于预期\"  (Root-Cause-Analyze来分析问题)\n* 社会领域 问题是某类困境.  \n\n更具体一些, 差异主要分为两种情况:\n* 主体对上下文的理解和目标状态的理解程度的差异  \n* 客体和目标状态的差异    \n  \n'期望'表明了问题属于认知领域, 必须要有抱有期望的主体存在才会认识或者感知问题, 问题不是独立存在的, 但是对于第二种差异则有时候可以解释为 \"问题是独立于问题解决的主体存在的客观世界的一种表达方式\", 只是被主体感知和表达出来, 因此 问题是否是独立存在的则有一定的争议,  但无论如何, 问题的提出必然依赖主体的认识和感知, 也就引入了解决问题的一个核心特征:   \n\n**主体对问题的认识会存在一定程度的偏差, 人在解决问题的过程中会'不断的更准确的定义重新定义问题的描述, 使得主体对问题的认识偏差不断的缩小(认识偏差可无限趋近但无法绝对消除)', 从而更有利于发现符合逻辑的解释方法和解决方法.**       \n\n* 问题\n问题是期望和现状的差异, 是客观存在的, 是提问的基础.   \n* 提问  \n提问是把问题用合适的方法描述出来, 是解决问题的一个步骤.   \n* 目标\n目标是达成'解决问题'的某个具体状态  \n\n\n\n### 对问题的思考   \n* 基本的问题特征  \n  * 定义明确的问题和定义不明确的问题  \n    * 定义明确的问题具有特定的最终目标 并且有明确的预期解决方案 而定义不明确的问题则没有    \n  \n  * 复杂规模评估  \n    * 组成问题的部分是否可枚举(不可枚举) \n    * 组成问题的部分是否具备同质性(异质性)  \n    * 组成问题的部分是否彼此连通(连接的层次关系, 分配关系) \n    * 问题是否存在时间限制  \n    * 问题是否对时间敏感 \n    * 问题是否存在相位效应\n    * 问题是否存在动态的不可预测性\n    * 问题的来源是否透明可见  \n    * 问题的发生过程是否透明可见  \n    * 问题是否同时存在多个目标状态  \n      * 多个目标之间是否存在以上可能导致问题复杂的'规模,时间,动态,透明'等复杂问题.\n      * 部分目标是否存在冲突, 不表达等相容问题  \n\n* 分析问题的基本障碍\n  * 确认偏误\n  * 心理(思维)定势\n  * 功能固定性\n  * 不必要的约束\n  * 不相关的信息\n\n* 结构化的问题分析方式   \n  * 搜集和界定问题  \n    * 搜集相关的问题, 期望的组成部分, 现状的组成部分, 差异的组成部分, 以及产生这些部分或者问题的原因.   \n      * 确认期望结果集  \n      * 确认非期望结果集(现状集)  \n    * 提出各种假设并进行试验, 根据结果排除部分问题或者得出明确的结论   \n    * 界定问题域的所属集合以及其约束.   \n  * 逻辑树,问题域建模  \n    * 寻找逻辑关系和结构关系  \n      * 寻找时间/步骤顺序 (时序)  \n      * 寻找空间/结构顺序 (拓扑)  \n      * 寻找程度/重要性顺序 (主次非)  \n    * 基本思维方法\n      * 归纳推理  \n        * 归类分组 概括其共性  以MECE为准则尽量做到不重不漏 \n      * 演绎推理 \n        * 三段论 排除问题或者得出明确的结论   \n      * 质疑和提问  \n  * 构建逻辑模型(逻辑树)  \n    * 自上而下构建\n      * 提出概括性模型并递归的拆解和具体化其组成部分,直到每个部分得到确认或者无法确认.   \n    * 自下而上构建\n      * 通过已确认的基础部分进行有序的组合构造/抽象出上层模型  \n  * 验证和迭代模型   \n\n### 计算机科学领域中的问题解决\n* 定义问题域 (定义问题集以及问题的约束集)   \n  * 包含期望实现的目标, 问题的上下文,   解决方案必须的基本功能和必须运行在的问题环境.   \n* 通过形式化方法构建计算模型  \n  * 计算模型目前有两大分支, 图灵机和lambda演算, 他们的计算能力等价.   \n  * 使用数学语言对问题域进行描述和分析, 可以对模型的可靠性和稳健性进行论证, 但因成本问题形式化的方法可以进行分级实现,  设计规范, 实现规范, 验证规范.     \n  * 构建的基本策略  \n    * 通过处理部分有序集以对计算领域进行建模, 其中有序的元素解释为信息或者计算的部分, 其中次序较高的元素以一致的方式扩展旗下方元素的信息.  通过这个方式, 域理论以非常一般化的途径对直觉概念进行形式化的逼近和收敛.    \n* 问题解决域 系统模型构建   \n  * 问题解决域定义了解决问题的过程(实现路径)  \n  * 问题解决域定义了解决问题的目标\n  * 问题解决域定义了解决方案所必须运行的抽象环境.   \n  * 解决方案从解决方案所运行的抽象环境植入到问题环境时, 这两个环境的差异往往是出错的原因.   \n  \n* 杂注   \n  * 工程能力往往是针对问题解决域而言的, 在软件领域,  工作量往往是集中在工程实现层面的.   \n  * 业务能力则是相对于问题域的而言,  对业务内容的敏感性, 对核心问题的洞察 .    \n  * 数学素养, 几乎任何一个领域的成熟/发达程度都和这个领域中对形式化方法的渗透等级表现出极强的正相关.     \n\n\n### 相关理论:\n\n* 序理论 \n  * 序理论研究数学排序的直觉概念上的各种二元关系.  \n    * 从自然数的<=次序这个直觉概念很容易扩展到其他数的集合的排序, 这种大于或者小于另外一个数的概念 一般是记数系统(数制)的基本直觉. \n  * 序的概念是超出了具有直接,直观的顺序或者相对数量感觉的上下文, 在其他上下文中 序 可以获得 包含或者专用的概念,  在抽象上相当于子集关系.  \n    * 通过指定 \"<=关系必须是数学意义上的次序关系\"这个属性,  序理论可以在一般性(普遍)架构下获得样例中的直觉次序\n      * 这种抽象的方法可以在一般情况下得出许多定理而不必关注于任何特定的序的细节, 然后这些定理可以轻松的转移到不太抽象的应用程序中.   \n\n  * (非严格)偏序  只对部分元素成立关系(部分可比 比如集合的包含关系, 并不是任何两个集合之间都存在包含关系)  \n    * 偏序集合: 配备了偏序关系的集合    \n    * 定义: \n      * 自反性:   对任意x∈A，有xRx  \n      * 反对称性: 对任意x,y∈A，若xRy，且yRx，则x=y   \n      * 传递性:   对任意x, y,z∈A，若xRy，且yRz，则xRz。\n  * 全序：对集合中任意两个元素都有关系  \n    * 全序关系必然是偏序关系 \n  * 严格次序  \n    * <=为平常次序,  <为严格次序  \n  * 严格偏序 \n    * 定义\n      * 反自反性:   对任意x∈A，xRx必然不成立  \n      * 非对称性: 对任意x,y∈A，若xRy不成立，且yRx不成立，则x=y ;   如果xRy成立则yRx一定不成立    \n      * 传递性:   对任意x, y,z∈A，若xRy，且yRz，则xRz。\n  * 可视化 \n      * 可以使用hasse图等直观的表示部分有序的元素和关系 \n\n \n* 域理论:  \n  * 域是特定种类的偏序集合, 因此域理论也可以看做序理论的分支.   \n  * 域理论通过处理部分有序集以对计算领域进行建模, 其中有序的元素解释为信息或者计算的部分, 其中次序较高的元素以一致的方式扩展旗下方元素的信息(分形).  通过这个方式, 域理论以非常一般化的途径对直觉概念进行形式化的逼近和收敛.  \n    1. 通过对计算的每个域增加一个额外的元素 即形式化'部分信息'或者'不完全信息'的概念,  来构造演算的模型,  并且计算的域被装备一个'次序关系', 这其中的'未定义结果'或者说'部分信息'为最小元素. \n    2. 在这个模型之上, 计算的域总是部分有序的,  这种排序表示信息或者知识的层次, 元素在这个次序上越高, 它就更加明确和包含更多信息,  更低的元素表示不完全的知识或者中间结果.  \n    3. 接着通过在这个域上重复的应用单调函数来精制结果, 到达一个不动点(递归定义中的f(x)=x, 闭包算子的“封闭要素\")等价于完成一个计算.   \n   \n  * 收敛规范\n    * 在域理论中有一个重要的概念是有向子集(例如A中任意两个元素a和b, 存在一个元素c(可能与a或者b相等)使得 a<=c 和 b <= c), 有向子集是顺序的非空子集, 其中任何两个元素的上限均为该子集的元素.  \n      * 意味着有向子集的任何两个信息都被子集中的其他元素一致的扩展, 也因此可以将有向子集认为是一致的规范.   \n      * 有向子集是域中没有两个元素矛盾的部分结果集, 这种可以比较的概念可以用做收敛序列的分析, 其中每个元素比上个元素更加具体.   在度量空间中, 序列的许多方面的作用类似域理论中的有向子集的作用.  \n      * \"有向, 偏序\" 很自然的我们会对dcpo 有向完全偏序感兴趣  \n      * 把指定的局部结果看做不完整的知识 这个基础的思想中可以得到另外一个理想的属性 : 最小元素的存在.   最小元素对没有信息的状态进行建模-大多数计算的开始地方, 或者可以把最小元素作为完全不返回任何结果的计算输出. (域理论中的不动点)  \n  * 域的基础  \n    * 因为我们无法计算无限大的对象 因此在实践中 \"是否可以保证可以将域的所有元素作为更简单元素的极限来获得\" 非常重要, 但是通常我们还是希望可以将它们任意近似地逼近.  \n\n* 领域建模  \n  * 领域分解  \n    * 大领域分解成小领域  \n  * 分析细化  \n    * 面向对象法 问题域映射为解决域 \n      * OOA 面向对象的分析方法   \n      * OOD 面向对象的设计方法  \n  * 基于获得的领域知识建模  \n    * 确定实体和属性 (数据结构)  \n    * 描述实体间静态关系 (数据结构和接口)   \n    * 描述实体间动态关系 (核心逻辑, 状态机) \n    * 描述实体的生命周期 \n    * 建立完整的映射\n  * 验证迭代  \n\n  \n* Root-Cause-Analyze  \n  * 核心问题和根本原因    \n  * 产生问题的来源链路上, root位置的的原因为 root cause  根本原因.   \n  * 不同的原因产生不同问题, 在组成'差异'的子集中, 核心问题来自于root cause, 其他问题 或者不是造成'差异'的主要部分,  也或者是属于核心问题的衍生.  \n\n* 科学方法的基本循环步骤  (表征, 假设, 验证)    \n  * 问题的认知与表述 (表征, 通过观察和分析明确问题)  \n    * 问题需要满足 可观察 可经验（empirical） 可量度   \n  * 提出假设  \n    * 提出一个达到解决问题的目标       \n  * 预测(解释)     \n    * 对提出的假设或者理论进行归纳和演绎推论  \n  * 实验   \n    * 对上述表征 假设 预测进行测试验证   \n  * 实验结果分析  提出新的假设   \n  * 发布结果   ","slug":"2019-09-16-problem-domain","published":1,"updated":"2019-12-10T07:35:57.082Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck44ekz2q0012r45hhbdsfvmd","content":"<p>在认知心理学中, 问题解决的思维过程被描述为: 在问题空间下, 经过思考与推理, 达到目的的心理历程.<br>该过程分为四个阶段  </p>\n<ul>\n<li>发现问题</li>\n<li>分析（明确）问题</li>\n<li>提出假设  </li>\n<li>验证假设  </li>\n</ul>\n<p>其中问题空间(问题域)是指问题解决者对所要解决的问题的一切可能的认识状态, 包括对问题的初始状态和目标状态的认识, 以及如何从初始状态转化为目标状态的认知操作等.    </p>\n<p>问题的解决就是对问题空间进行搜索, 找到一条从问题的初始状态到达目标状态的通路.   </p>\n<h2><span id=\"问题解决的一般性阶段及其描述\">问题解决的一般性阶段及其描述:</span></h2><ul>\n<li><strong>问题的存在,发现和提出</strong>  </li>\n<li><strong>定义问题域, 即定义问题集以及问题的约束集</strong>  </li>\n<li><strong>从问题域中递归的构造可演算的计算(概念)模型</strong>  </li>\n<li><strong>制定现实可执行的解决方案</strong>  </li>\n<li><strong>实施并植入问题域所在现实环境验证</strong>   </li>\n<li><strong>问题的解决</strong>  </li>\n</ul>\n<p>在这个过程中, 每个过程的推进都可能会伴随对其前向的阶段所做的处理发起修正, 在此过程中我们会不断的逼近’真正的问题’的问题定义, 以及’真正的问题解决’的结果, 从而采用形式化的方法寻找到最优的解决路径   </p>\n<a id=\"more\"></a> \n<h3><span id=\"问题的存在\">问题的存在</span></h3><p>问题以不同的形式存在于不同的领域, 其核心是期望和现状的差异, 在不同的领域问题的描述方法和提出形式带有不同的领域特征, 例如:  </p>\n<ul>\n<li>数学领域 问题是关于数学对象和结构的疑问, 比如很具体的’求X^2-1=0的解’ 或者很一般的’为什么这些数在不同情况（领域）里面出现？请给出假说并证明之。’.     </li>\n<li>商业领域 问题是现状和期望的差别 例如”某项目上线后各项数据低于预期”  (Root-Cause-Analyze来分析问题)</li>\n<li>社会领域 问题是某类困境.  </li>\n</ul>\n<p>更具体一些, 差异主要分为两种情况:</p>\n<ul>\n<li>主体对上下文的理解和目标状态的理解程度的差异  </li>\n<li>客体和目标状态的差异    </li>\n</ul>\n<p>‘期望’表明了问题属于认知领域, 必须要有抱有期望的主体存在才会认识或者感知问题, 问题不是独立存在的, 但是对于第二种差异则有时候可以解释为 “问题是独立于问题解决的主体存在的客观世界的一种表达方式”, 只是被主体感知和表达出来, 因此 问题是否是独立存在的则有一定的争议,  但无论如何, 问题的提出必然依赖主体的认识和感知, 也就引入了解决问题的一个核心特征:   </p>\n<p><strong>主体对问题的认识会存在一定程度的偏差, 人在解决问题的过程中会’不断的更准确的定义重新定义问题的描述, 使得主体对问题的认识偏差不断的缩小(认识偏差可无限趋近但无法绝对消除)’, 从而更有利于发现符合逻辑的解释方法和解决方法.</strong>       </p>\n<ul>\n<li>问题<br>问题是期望和现状的差异, 是客观存在的, 是提问的基础.   </li>\n<li>提问<br>提问是把问题用合适的方法描述出来, 是解决问题的一个步骤.   </li>\n<li>目标<br>目标是达成’解决问题’的某个具体状态  </li>\n</ul>\n<h3><span id=\"对问题的思考\">对问题的思考</span></h3><ul>\n<li><p>基本的问题特征  </p>\n<ul>\n<li><p>定义明确的问题和定义不明确的问题  </p>\n<ul>\n<li>定义明确的问题具有特定的最终目标 并且有明确的预期解决方案 而定义不明确的问题则没有    </li>\n</ul>\n</li>\n<li><p>复杂规模评估  </p>\n<ul>\n<li>组成问题的部分是否可枚举(不可枚举) </li>\n<li>组成问题的部分是否具备同质性(异质性)  </li>\n<li>组成问题的部分是否彼此连通(连接的层次关系, 分配关系) </li>\n<li>问题是否存在时间限制  </li>\n<li>问题是否对时间敏感 </li>\n<li>问题是否存在相位效应</li>\n<li>问题是否存在动态的不可预测性</li>\n<li>问题的来源是否透明可见  </li>\n<li>问题的发生过程是否透明可见  </li>\n<li>问题是否同时存在多个目标状态  <ul>\n<li>多个目标之间是否存在以上可能导致问题复杂的’规模,时间,动态,透明’等复杂问题.</li>\n<li>部分目标是否存在冲突, 不表达等相容问题  </li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>分析问题的基本障碍</p>\n<ul>\n<li>确认偏误</li>\n<li>心理(思维)定势</li>\n<li>功能固定性</li>\n<li>不必要的约束</li>\n<li>不相关的信息</li>\n</ul>\n</li>\n<li><p>结构化的问题分析方式   </p>\n<ul>\n<li>搜集和界定问题  <ul>\n<li>搜集相关的问题, 期望的组成部分, 现状的组成部分, 差异的组成部分, 以及产生这些部分或者问题的原因.   <ul>\n<li>确认期望结果集  </li>\n<li>确认非期望结果集(现状集)  </li>\n</ul>\n</li>\n<li>提出各种假设并进行试验, 根据结果排除部分问题或者得出明确的结论   </li>\n<li>界定问题域的所属集合以及其约束.   </li>\n</ul>\n</li>\n<li>逻辑树,问题域建模  <ul>\n<li>寻找逻辑关系和结构关系  <ul>\n<li>寻找时间/步骤顺序 (时序)  </li>\n<li>寻找空间/结构顺序 (拓扑)  </li>\n<li>寻找程度/重要性顺序 (主次非)  </li>\n</ul>\n</li>\n<li>基本思维方法<ul>\n<li>归纳推理  <ul>\n<li>归类分组 概括其共性  以MECE为准则尽量做到不重不漏 </li>\n</ul>\n</li>\n<li>演绎推理 <ul>\n<li>三段论 排除问题或者得出明确的结论   </li>\n</ul>\n</li>\n<li>质疑和提问  </li>\n</ul>\n</li>\n</ul>\n</li>\n<li>构建逻辑模型(逻辑树)  <ul>\n<li>自上而下构建<ul>\n<li>提出概括性模型并递归的拆解和具体化其组成部分,直到每个部分得到确认或者无法确认.   </li>\n</ul>\n</li>\n<li>自下而上构建<ul>\n<li>通过已确认的基础部分进行有序的组合构造/抽象出上层模型  </li>\n</ul>\n</li>\n</ul>\n</li>\n<li>验证和迭代模型   </li>\n</ul>\n</li>\n</ul>\n<h3><span id=\"计算机科学领域中的问题解决\">计算机科学领域中的问题解决</span></h3><ul>\n<li><p>定义问题域 (定义问题集以及问题的约束集)   </p>\n<ul>\n<li>包含期望实现的目标, 问题的上下文,   解决方案必须的基本功能和必须运行在的问题环境.   </li>\n</ul>\n</li>\n<li><p>通过形式化方法构建计算模型  </p>\n<ul>\n<li>计算模型目前有两大分支, 图灵机和lambda演算, 他们的计算能力等价.   </li>\n<li>使用数学语言对问题域进行描述和分析, 可以对模型的可靠性和稳健性进行论证, 但因成本问题形式化的方法可以进行分级实现,  设计规范, 实现规范, 验证规范.     </li>\n<li>构建的基本策略  <ul>\n<li>通过处理部分有序集以对计算领域进行建模, 其中有序的元素解释为信息或者计算的部分, 其中次序较高的元素以一致的方式扩展旗下方元素的信息.  通过这个方式, 域理论以非常一般化的途径对直觉概念进行形式化的逼近和收敛.    </li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>问题解决域 系统模型构建   </p>\n<ul>\n<li>问题解决域定义了解决问题的过程(实现路径)  </li>\n<li>问题解决域定义了解决问题的目标</li>\n<li>问题解决域定义了解决方案所必须运行的抽象环境.   </li>\n<li>解决方案从解决方案所运行的抽象环境植入到问题环境时, 这两个环境的差异往往是出错的原因.   </li>\n</ul>\n</li>\n<li><p>杂注   </p>\n<ul>\n<li>工程能力往往是针对问题解决域而言的, 在软件领域,  工作量往往是集中在工程实现层面的.   </li>\n<li>业务能力则是相对于问题域的而言,  对业务内容的敏感性, 对核心问题的洞察 .    </li>\n<li>数学素养, 几乎任何一个领域的成熟/发达程度都和这个领域中对形式化方法的渗透等级表现出极强的正相关.     </li>\n</ul>\n</li>\n</ul>\n<h3><span id=\"相关理论\">相关理论:</span></h3><ul>\n<li><p>序理论 </p>\n<ul>\n<li><p>序理论研究数学排序的直觉概念上的各种二元关系.  </p>\n<ul>\n<li>从自然数的&lt;=次序这个直觉概念很容易扩展到其他数的集合的排序, 这种大于或者小于另外一个数的概念 一般是记数系统(数制)的基本直觉. </li>\n</ul>\n</li>\n<li><p>序的概念是超出了具有直接,直观的顺序或者相对数量感觉的上下文, 在其他上下文中 序 可以获得 包含或者专用的概念,  在抽象上相当于子集关系.  </p>\n<ul>\n<li>通过指定 “&lt;=关系必须是数学意义上的次序关系”这个属性,  序理论可以在一般性(普遍)架构下获得样例中的直觉次序<ul>\n<li>这种抽象的方法可以在一般情况下得出许多定理而不必关注于任何特定的序的细节, 然后这些定理可以轻松的转移到不太抽象的应用程序中.   </li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>(非严格)偏序  只对部分元素成立关系(部分可比 比如集合的包含关系, 并不是任何两个集合之间都存在包含关系)  </p>\n<ul>\n<li>偏序集合: 配备了偏序关系的集合    </li>\n<li>定义: <ul>\n<li>自反性:   对任意x∈A，有xRx  </li>\n<li>反对称性: 对任意x,y∈A，若xRy，且yRx，则x=y   </li>\n<li>传递性:   对任意x, y,z∈A，若xRy，且yRz，则xRz。</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>全序：对集合中任意两个元素都有关系  </p>\n<ul>\n<li>全序关系必然是偏序关系 </li>\n</ul>\n</li>\n<li><p>严格次序  </p>\n<ul>\n<li>&lt;=为平常次序,  &lt;为严格次序  </li>\n</ul>\n</li>\n<li><p>严格偏序 </p>\n<ul>\n<li>定义<ul>\n<li>反自反性:   对任意x∈A，xRx必然不成立  </li>\n<li>非对称性: 对任意x,y∈A，若xRy不成立，且yRx不成立，则x=y ;   如果xRy成立则yRx一定不成立    </li>\n<li>传递性:   对任意x, y,z∈A，若xRy，且yRz，则xRz。</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>可视化 </p>\n<ul>\n<li>可以使用hasse图等直观的表示部分有序的元素和关系 </li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<ul>\n<li><p>域理论:  </p>\n<ul>\n<li><p>域是特定种类的偏序集合, 因此域理论也可以看做序理论的分支.   </p>\n</li>\n<li><p>域理论通过处理部分有序集以对计算领域进行建模, 其中有序的元素解释为信息或者计算的部分, 其中次序较高的元素以一致的方式扩展旗下方元素的信息(分形).  通过这个方式, 域理论以非常一般化的途径对直觉概念进行形式化的逼近和收敛.  </p>\n<ol>\n<li>通过对计算的每个域增加一个额外的元素 即形式化’部分信息’或者’不完全信息’的概念,  来构造演算的模型,  并且计算的域被装备一个’次序关系’, 这其中的’未定义结果’或者说’部分信息’为最小元素. </li>\n<li>在这个模型之上, 计算的域总是部分有序的,  这种排序表示信息或者知识的层次, 元素在这个次序上越高, 它就更加明确和包含更多信息,  更低的元素表示不完全的知识或者中间结果.  </li>\n<li>接着通过在这个域上重复的应用单调函数来精制结果, 到达一个不动点(递归定义中的f(x)=x, 闭包算子的“封闭要素”)等价于完成一个计算.   </li>\n</ol>\n</li>\n<li><p>收敛规范</p>\n<ul>\n<li>在域理论中有一个重要的概念是有向子集(例如A中任意两个元素a和b, 存在一个元素c(可能与a或者b相等)使得 a&lt;=c 和 b &lt;= c), 有向子集是顺序的非空子集, 其中任何两个元素的上限均为该子集的元素.  <ul>\n<li>意味着有向子集的任何两个信息都被子集中的其他元素一致的扩展, 也因此可以将有向子集认为是一致的规范.   </li>\n<li>有向子集是域中没有两个元素矛盾的部分结果集, 这种可以比较的概念可以用做收敛序列的分析, 其中每个元素比上个元素更加具体.   在度量空间中, 序列的许多方面的作用类似域理论中的有向子集的作用.  </li>\n<li>“有向, 偏序” 很自然的我们会对dcpo 有向完全偏序感兴趣  </li>\n<li>把指定的局部结果看做不完整的知识 这个基础的思想中可以得到另外一个理想的属性 : 最小元素的存在.   最小元素对没有信息的状态进行建模-大多数计算的开始地方, 或者可以把最小元素作为完全不返回任何结果的计算输出. (域理论中的不动点)  </li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>域的基础  </p>\n<ul>\n<li>因为我们无法计算无限大的对象 因此在实践中 “是否可以保证可以将域的所有元素作为更简单元素的极限来获得” 非常重要, 但是通常我们还是希望可以将它们任意近似地逼近.  </li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>领域建模  </p>\n<ul>\n<li>领域分解  <ul>\n<li>大领域分解成小领域  </li>\n</ul>\n</li>\n<li>分析细化  <ul>\n<li>面向对象法 问题域映射为解决域 <ul>\n<li>OOA 面向对象的分析方法   </li>\n<li>OOD 面向对象的设计方法  </li>\n</ul>\n</li>\n</ul>\n</li>\n<li>基于获得的领域知识建模  <ul>\n<li>确定实体和属性 (数据结构)  </li>\n<li>描述实体间静态关系 (数据结构和接口)   </li>\n<li>描述实体间动态关系 (核心逻辑, 状态机) </li>\n<li>描述实体的生命周期 </li>\n<li>建立完整的映射</li>\n</ul>\n</li>\n<li>验证迭代  </li>\n</ul>\n</li>\n</ul>\n<ul>\n<li><p>Root-Cause-Analyze  </p>\n<ul>\n<li>核心问题和根本原因    </li>\n<li>产生问题的来源链路上, root位置的的原因为 root cause  根本原因.   </li>\n<li>不同的原因产生不同问题, 在组成’差异’的子集中, 核心问题来自于root cause, 其他问题 或者不是造成’差异’的主要部分,  也或者是属于核心问题的衍生.  </li>\n</ul>\n</li>\n<li><p>科学方法的基本循环步骤  (表征, 假设, 验证)    </p>\n<ul>\n<li>问题的认知与表述 (表征, 通过观察和分析明确问题)  <ul>\n<li>问题需要满足 可观察 可经验（empirical） 可量度   </li>\n</ul>\n</li>\n<li>提出假设  <ul>\n<li>提出一个达到解决问题的目标       </li>\n</ul>\n</li>\n<li>预测(解释)     <ul>\n<li>对提出的假设或者理论进行归纳和演绎推论  </li>\n</ul>\n</li>\n<li>实验   <ul>\n<li>对上述表征 假设 预测进行测试验证   </li>\n</ul>\n</li>\n<li>实验结果分析  提出新的假设   </li>\n<li>发布结果</li>\n</ul>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"<p>在认知心理学中, 问题解决的思维过程被描述为: 在问题空间下, 经过思考与推理, 达到目的的心理历程.<br>该过程分为四个阶段  </p>\n<ul>\n<li>发现问题</li>\n<li>分析（明确）问题</li>\n<li>提出假设  </li>\n<li>验证假设  </li>\n</ul>\n<p>其中问题空间(问题域)是指问题解决者对所要解决的问题的一切可能的认识状态, 包括对问题的初始状态和目标状态的认识, 以及如何从初始状态转化为目标状态的认知操作等.    </p>\n<p>问题的解决就是对问题空间进行搜索, 找到一条从问题的初始状态到达目标状态的通路.   </p>\n<h2 id=\"问题解决的一般性阶段及其描述\"><a href=\"#问题解决的一般性阶段及其描述\" class=\"headerlink\" title=\"问题解决的一般性阶段及其描述:\"></a>问题解决的一般性阶段及其描述:</h2><ul>\n<li><strong>问题的存在,发现和提出</strong>  </li>\n<li><strong>定义问题域, 即定义问题集以及问题的约束集</strong>  </li>\n<li><strong>从问题域中递归的构造可演算的计算(概念)模型</strong>  </li>\n<li><strong>制定现实可执行的解决方案</strong>  </li>\n<li><strong>实施并植入问题域所在现实环境验证</strong>   </li>\n<li><strong>问题的解决</strong>  </li>\n</ul>\n<p>在这个过程中, 每个过程的推进都可能会伴随对其前向的阶段所做的处理发起修正, 在此过程中我们会不断的逼近’真正的问题’的问题定义, 以及’真正的问题解决’的结果, 从而采用形式化的方法寻找到最优的解决路径   </p>","more":"<h3 id=\"问题的存在\"><a href=\"#问题的存在\" class=\"headerlink\" title=\"问题的存在\"></a>问题的存在</h3><p>问题以不同的形式存在于不同的领域, 其核心是期望和现状的差异, 在不同的领域问题的描述方法和提出形式带有不同的领域特征, 例如:  </p>\n<ul>\n<li>数学领域 问题是关于数学对象和结构的疑问, 比如很具体的’求X^2-1=0的解’ 或者很一般的’为什么这些数在不同情况（领域）里面出现？请给出假说并证明之。’.     </li>\n<li>商业领域 问题是现状和期望的差别 例如”某项目上线后各项数据低于预期”  (Root-Cause-Analyze来分析问题)</li>\n<li>社会领域 问题是某类困境.  </li>\n</ul>\n<p>更具体一些, 差异主要分为两种情况:</p>\n<ul>\n<li>主体对上下文的理解和目标状态的理解程度的差异  </li>\n<li>客体和目标状态的差异    </li>\n</ul>\n<p>‘期望’表明了问题属于认知领域, 必须要有抱有期望的主体存在才会认识或者感知问题, 问题不是独立存在的, 但是对于第二种差异则有时候可以解释为 “问题是独立于问题解决的主体存在的客观世界的一种表达方式”, 只是被主体感知和表达出来, 因此 问题是否是独立存在的则有一定的争议,  但无论如何, 问题的提出必然依赖主体的认识和感知, 也就引入了解决问题的一个核心特征:   </p>\n<p><strong>主体对问题的认识会存在一定程度的偏差, 人在解决问题的过程中会’不断的更准确的定义重新定义问题的描述, 使得主体对问题的认识偏差不断的缩小(认识偏差可无限趋近但无法绝对消除)’, 从而更有利于发现符合逻辑的解释方法和解决方法.</strong>       </p>\n<ul>\n<li>问题<br>问题是期望和现状的差异, 是客观存在的, 是提问的基础.   </li>\n<li>提问<br>提问是把问题用合适的方法描述出来, 是解决问题的一个步骤.   </li>\n<li>目标<br>目标是达成’解决问题’的某个具体状态  </li>\n</ul>\n<h3 id=\"对问题的思考\"><a href=\"#对问题的思考\" class=\"headerlink\" title=\"对问题的思考\"></a>对问题的思考</h3><ul>\n<li><p>基本的问题特征  </p>\n<ul>\n<li><p>定义明确的问题和定义不明确的问题  </p>\n<ul>\n<li>定义明确的问题具有特定的最终目标 并且有明确的预期解决方案 而定义不明确的问题则没有    </li>\n</ul>\n</li>\n<li><p>复杂规模评估  </p>\n<ul>\n<li>组成问题的部分是否可枚举(不可枚举) </li>\n<li>组成问题的部分是否具备同质性(异质性)  </li>\n<li>组成问题的部分是否彼此连通(连接的层次关系, 分配关系) </li>\n<li>问题是否存在时间限制  </li>\n<li>问题是否对时间敏感 </li>\n<li>问题是否存在相位效应</li>\n<li>问题是否存在动态的不可预测性</li>\n<li>问题的来源是否透明可见  </li>\n<li>问题的发生过程是否透明可见  </li>\n<li>问题是否同时存在多个目标状态  <ul>\n<li>多个目标之间是否存在以上可能导致问题复杂的’规模,时间,动态,透明’等复杂问题.</li>\n<li>部分目标是否存在冲突, 不表达等相容问题  </li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>分析问题的基本障碍</p>\n<ul>\n<li>确认偏误</li>\n<li>心理(思维)定势</li>\n<li>功能固定性</li>\n<li>不必要的约束</li>\n<li>不相关的信息</li>\n</ul>\n</li>\n<li><p>结构化的问题分析方式   </p>\n<ul>\n<li>搜集和界定问题  <ul>\n<li>搜集相关的问题, 期望的组成部分, 现状的组成部分, 差异的组成部分, 以及产生这些部分或者问题的原因.   <ul>\n<li>确认期望结果集  </li>\n<li>确认非期望结果集(现状集)  </li>\n</ul>\n</li>\n<li>提出各种假设并进行试验, 根据结果排除部分问题或者得出明确的结论   </li>\n<li>界定问题域的所属集合以及其约束.   </li>\n</ul>\n</li>\n<li>逻辑树,问题域建模  <ul>\n<li>寻找逻辑关系和结构关系  <ul>\n<li>寻找时间/步骤顺序 (时序)  </li>\n<li>寻找空间/结构顺序 (拓扑)  </li>\n<li>寻找程度/重要性顺序 (主次非)  </li>\n</ul>\n</li>\n<li>基本思维方法<ul>\n<li>归纳推理  <ul>\n<li>归类分组 概括其共性  以MECE为准则尽量做到不重不漏 </li>\n</ul>\n</li>\n<li>演绎推理 <ul>\n<li>三段论 排除问题或者得出明确的结论   </li>\n</ul>\n</li>\n<li>质疑和提问  </li>\n</ul>\n</li>\n</ul>\n</li>\n<li>构建逻辑模型(逻辑树)  <ul>\n<li>自上而下构建<ul>\n<li>提出概括性模型并递归的拆解和具体化其组成部分,直到每个部分得到确认或者无法确认.   </li>\n</ul>\n</li>\n<li>自下而上构建<ul>\n<li>通过已确认的基础部分进行有序的组合构造/抽象出上层模型  </li>\n</ul>\n</li>\n</ul>\n</li>\n<li>验证和迭代模型   </li>\n</ul>\n</li>\n</ul>\n<h3 id=\"计算机科学领域中的问题解决\"><a href=\"#计算机科学领域中的问题解决\" class=\"headerlink\" title=\"计算机科学领域中的问题解决\"></a>计算机科学领域中的问题解决</h3><ul>\n<li><p>定义问题域 (定义问题集以及问题的约束集)   </p>\n<ul>\n<li>包含期望实现的目标, 问题的上下文,   解决方案必须的基本功能和必须运行在的问题环境.   </li>\n</ul>\n</li>\n<li><p>通过形式化方法构建计算模型  </p>\n<ul>\n<li>计算模型目前有两大分支, 图灵机和lambda演算, 他们的计算能力等价.   </li>\n<li>使用数学语言对问题域进行描述和分析, 可以对模型的可靠性和稳健性进行论证, 但因成本问题形式化的方法可以进行分级实现,  设计规范, 实现规范, 验证规范.     </li>\n<li>构建的基本策略  <ul>\n<li>通过处理部分有序集以对计算领域进行建模, 其中有序的元素解释为信息或者计算的部分, 其中次序较高的元素以一致的方式扩展旗下方元素的信息.  通过这个方式, 域理论以非常一般化的途径对直觉概念进行形式化的逼近和收敛.    </li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>问题解决域 系统模型构建   </p>\n<ul>\n<li>问题解决域定义了解决问题的过程(实现路径)  </li>\n<li>问题解决域定义了解决问题的目标</li>\n<li>问题解决域定义了解决方案所必须运行的抽象环境.   </li>\n<li>解决方案从解决方案所运行的抽象环境植入到问题环境时, 这两个环境的差异往往是出错的原因.   </li>\n</ul>\n</li>\n<li><p>杂注   </p>\n<ul>\n<li>工程能力往往是针对问题解决域而言的, 在软件领域,  工作量往往是集中在工程实现层面的.   </li>\n<li>业务能力则是相对于问题域的而言,  对业务内容的敏感性, 对核心问题的洞察 .    </li>\n<li>数学素养, 几乎任何一个领域的成熟/发达程度都和这个领域中对形式化方法的渗透等级表现出极强的正相关.     </li>\n</ul>\n</li>\n</ul>\n<h3 id=\"相关理论\"><a href=\"#相关理论\" class=\"headerlink\" title=\"相关理论:\"></a>相关理论:</h3><ul>\n<li><p>序理论 </p>\n<ul>\n<li><p>序理论研究数学排序的直觉概念上的各种二元关系.  </p>\n<ul>\n<li>从自然数的&lt;=次序这个直觉概念很容易扩展到其他数的集合的排序, 这种大于或者小于另外一个数的概念 一般是记数系统(数制)的基本直觉. </li>\n</ul>\n</li>\n<li><p>序的概念是超出了具有直接,直观的顺序或者相对数量感觉的上下文, 在其他上下文中 序 可以获得 包含或者专用的概念,  在抽象上相当于子集关系.  </p>\n<ul>\n<li>通过指定 “&lt;=关系必须是数学意义上的次序关系”这个属性,  序理论可以在一般性(普遍)架构下获得样例中的直觉次序<ul>\n<li>这种抽象的方法可以在一般情况下得出许多定理而不必关注于任何特定的序的细节, 然后这些定理可以轻松的转移到不太抽象的应用程序中.   </li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>(非严格)偏序  只对部分元素成立关系(部分可比 比如集合的包含关系, 并不是任何两个集合之间都存在包含关系)  </p>\n<ul>\n<li>偏序集合: 配备了偏序关系的集合    </li>\n<li>定义: <ul>\n<li>自反性:   对任意x∈A，有xRx  </li>\n<li>反对称性: 对任意x,y∈A，若xRy，且yRx，则x=y   </li>\n<li>传递性:   对任意x, y,z∈A，若xRy，且yRz，则xRz。</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>全序：对集合中任意两个元素都有关系  </p>\n<ul>\n<li>全序关系必然是偏序关系 </li>\n</ul>\n</li>\n<li><p>严格次序  </p>\n<ul>\n<li>&lt;=为平常次序,  &lt;为严格次序  </li>\n</ul>\n</li>\n<li><p>严格偏序 </p>\n<ul>\n<li>定义<ul>\n<li>反自反性:   对任意x∈A，xRx必然不成立  </li>\n<li>非对称性: 对任意x,y∈A，若xRy不成立，且yRx不成立，则x=y ;   如果xRy成立则yRx一定不成立    </li>\n<li>传递性:   对任意x, y,z∈A，若xRy，且yRz，则xRz。</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>可视化 </p>\n<ul>\n<li>可以使用hasse图等直观的表示部分有序的元素和关系 </li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<ul>\n<li><p>域理论:  </p>\n<ul>\n<li><p>域是特定种类的偏序集合, 因此域理论也可以看做序理论的分支.   </p>\n</li>\n<li><p>域理论通过处理部分有序集以对计算领域进行建模, 其中有序的元素解释为信息或者计算的部分, 其中次序较高的元素以一致的方式扩展旗下方元素的信息(分形).  通过这个方式, 域理论以非常一般化的途径对直觉概念进行形式化的逼近和收敛.  </p>\n<ol>\n<li>通过对计算的每个域增加一个额外的元素 即形式化’部分信息’或者’不完全信息’的概念,  来构造演算的模型,  并且计算的域被装备一个’次序关系’, 这其中的’未定义结果’或者说’部分信息’为最小元素. </li>\n<li>在这个模型之上, 计算的域总是部分有序的,  这种排序表示信息或者知识的层次, 元素在这个次序上越高, 它就更加明确和包含更多信息,  更低的元素表示不完全的知识或者中间结果.  </li>\n<li>接着通过在这个域上重复的应用单调函数来精制结果, 到达一个不动点(递归定义中的f(x)=x, 闭包算子的“封闭要素”)等价于完成一个计算.   </li>\n</ol>\n</li>\n<li><p>收敛规范</p>\n<ul>\n<li>在域理论中有一个重要的概念是有向子集(例如A中任意两个元素a和b, 存在一个元素c(可能与a或者b相等)使得 a&lt;=c 和 b &lt;= c), 有向子集是顺序的非空子集, 其中任何两个元素的上限均为该子集的元素.  <ul>\n<li>意味着有向子集的任何两个信息都被子集中的其他元素一致的扩展, 也因此可以将有向子集认为是一致的规范.   </li>\n<li>有向子集是域中没有两个元素矛盾的部分结果集, 这种可以比较的概念可以用做收敛序列的分析, 其中每个元素比上个元素更加具体.   在度量空间中, 序列的许多方面的作用类似域理论中的有向子集的作用.  </li>\n<li>“有向, 偏序” 很自然的我们会对dcpo 有向完全偏序感兴趣  </li>\n<li>把指定的局部结果看做不完整的知识 这个基础的思想中可以得到另外一个理想的属性 : 最小元素的存在.   最小元素对没有信息的状态进行建模-大多数计算的开始地方, 或者可以把最小元素作为完全不返回任何结果的计算输出. (域理论中的不动点)  </li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>域的基础  </p>\n<ul>\n<li>因为我们无法计算无限大的对象 因此在实践中 “是否可以保证可以将域的所有元素作为更简单元素的极限来获得” 非常重要, 但是通常我们还是希望可以将它们任意近似地逼近.  </li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>领域建模  </p>\n<ul>\n<li>领域分解  <ul>\n<li>大领域分解成小领域  </li>\n</ul>\n</li>\n<li>分析细化  <ul>\n<li>面向对象法 问题域映射为解决域 <ul>\n<li>OOA 面向对象的分析方法   </li>\n<li>OOD 面向对象的设计方法  </li>\n</ul>\n</li>\n</ul>\n</li>\n<li>基于获得的领域知识建模  <ul>\n<li>确定实体和属性 (数据结构)  </li>\n<li>描述实体间静态关系 (数据结构和接口)   </li>\n<li>描述实体间动态关系 (核心逻辑, 状态机) </li>\n<li>描述实体的生命周期 </li>\n<li>建立完整的映射</li>\n</ul>\n</li>\n<li>验证迭代  </li>\n</ul>\n</li>\n</ul>\n<ul>\n<li><p>Root-Cause-Analyze  </p>\n<ul>\n<li>核心问题和根本原因    </li>\n<li>产生问题的来源链路上, root位置的的原因为 root cause  根本原因.   </li>\n<li>不同的原因产生不同问题, 在组成’差异’的子集中, 核心问题来自于root cause, 其他问题 或者不是造成’差异’的主要部分,  也或者是属于核心问题的衍生.  </li>\n</ul>\n</li>\n<li><p>科学方法的基本循环步骤  (表征, 假设, 验证)    </p>\n<ul>\n<li>问题的认知与表述 (表征, 通过观察和分析明确问题)  <ul>\n<li>问题需要满足 可观察 可经验（empirical） 可量度   </li>\n</ul>\n</li>\n<li>提出假设  <ul>\n<li>提出一个达到解决问题的目标       </li>\n</ul>\n</li>\n<li>预测(解释)     <ul>\n<li>对提出的假设或者理论进行归纳和演绎推论  </li>\n</ul>\n</li>\n<li>实验   <ul>\n<li>对上述表征 假设 预测进行测试验证   </li>\n</ul>\n</li>\n<li>实验结果分析  提出新的假设   </li>\n<li>发布结果</li>\n</ul>\n</li>\n</ul>"},{"title":"linux快速排查问题的命令","date":"2019-11-04T16:00:00.000Z","author":"yawei.zhang","_content":"### 全局分析和统计    \n* top命令   \n  * free 查看内存使用信息  \n  * vmstate [delay时间]  按照delay时间打印内存使用 io读写 CPU用量等信息  \n  * iostat -m -x [时间] [次数]   io读写详细信息\n\n* sar 系统活动情况报告 追溯统计数据 从最近的0点0分开始显示数据   \n  * sar -A 所有  \n  * sar -u CPU  \n  * sar -q 负载\n  * sar -r 内存\n  * CPU存在瓶颈，可用 sar -u 和 sar -q 等来查看\n  * 内存存在瓶颈，可用sar -B、sar -r 和 sar -W 等来查看\n  * I/O存在瓶颈，可用 sar -b、sar -u 和 sar -d 等来查看\n\n* df 查看当前硬盘存储\n  * du -h  --max-depth=1 [./]   统计当前目录树下的文件大小  \n\n* IPC资源查询   \n  * ipcs -m 查看共享内存资源  \n  * ipcsrm -M [shmkey]  删除共享内存资源  \n  * ipcsrm -m [shmid]    删除shmid标识的共享内存资源  \n\n* ulimit -a   配置位置 /etc/security/limits.conf  \n  * coredump文件的大小\n  * 线程栈的大小  \n  * 单进程最大设备数\n    * 单进程最大设备数的硬性限制在/proc/sys/fs/nr_open 中配置  \n    * 系统配置的最大设备数可查看/proc/sys/fs/file-max 中配置  \n    * 系统配置的最大设备数修改/etc/sysctl.conf |  fs.file-max = 1000000\n\n* 全局线程总数 \n  * 查看位置 /proc/sys/kernel/threads-max  \n  \n* 单个进程最大线程数 PTHREAD_THREADS_MAX  新的NPTL实现中不存在该限制   \n  * 查看位置 /usr/include/bits/local_lim.h \n  * 查看位置 /usr/include/x86_64-linux-gnu/bits/local_lim.h\n  \n* whereis   查看命令所在位置  \n\n* lsof [文件/路径]  查看占用该文件/该目录下文件的进程  \n\n* lsof -i  查看当前活动的网络连接 包括TCP / UDP\n\n* lsof -p [pid] 查看当前进程所有打开的文件/设备\n\n* ulimit -s 栈大小  \n\n<!-- more --> \n### 进程分析和统计   \n\n* pstack [pid]  查看进程栈  \n\n* gstack [pid]  同pstack 可打印出每个线程的堆栈    \n\n* gcore [pid1 pid2 ...]  dump core而不杀死进程   \n\n* strace -T -r -c -p [pid] 查看或统计系统调用  -c统计.   \n  \n* strace [exe_file]  调试运行程序  统计或查看该程序所有系统调用    \n\n\n\n* lsof [文件/路径]  查看占用该文件/该目录下文件的进程  \n\n* lsof -i  查看当前活动的网络连接 包括TCP / UDP\n\n* lsof -p [pid] 查看当前进程所有打开的文件/设备\n\n* 内存布局的实际地址和实际大小等查询  内存泄露可快速判定\n  * cat /proc/pid/maps \n  * pmap\n\n### 系统   \nuname -a  系统版本  \ncat /proc/version  内核版本  \ngetconf GNU_LIBPTHREAD_VERSION   查看线程模型  \n\n### 调试\n\n* readelf  \n  * 可重定位的对象文件(Relocatable file) .o文件   \n  * 可执行的对象文件(Executable file)  \n  * 可被共享的对象文件(Shared object file)  \n  * readelf -a  [elf_file] 查看所有信息  \n  * readelf -h  [elf_file] 查看概要信息\n  * readelf -S  [elf_file] 查看所有段信息(比如-g编译会有debug段)  \n  \n* objdump  和readelf类似 但是可以反汇编elf文件  \n  * objdump -S [file]  反汇编所有目标代码  \n  \n* size [file] 查看程序被映射到内存中映像的大小信息  \n\n* gdb  \n  * gdb -tui 可以显示文本界面 text ui   \n  * layout regs 进入汇编调试模式  \n  * disassemble /rm  显示汇编指令的同时显示对应代码\n  * set disassemble-next-line on 自动反汇编后面要执行的代码  \n  * 添加peda插件 直接显示汇编了   \n  * ```  \n    git clone https://github.com/longld/peda.git ~/peda\n    echo \"source ~/peda/peda.py\" >> ~/.gdbinit\n    ```\n  * x /nfu <mem addr>   显示指定内存的值, 内存长度(单位)由u决定\n    * n项  显示数量  \n      * 要往下显示多少个 [fu] 即 n*(fu)   0代表一个都不显示 \n    * f项  显示方式  \n      * x 按十六进制格式显示变量 \n      * d 按十进制格式显示变量  \n      * u 按十进制格式显示无符号整型  \n      * o 按八进制格式显示变量 \n      * t 按二进制格式显示变量 \n      * a 按十六进制格式显示变量 \n      * i 指令地址格式\n      * c 按字符格式显示变量 \n      * f 按浮点数格式显示变量  \n    * u项 单位大小   \n      * b表示单字节 \n      * h表示双字节 \n      * w表示四字节 \n      * g表示八字节  \n    * 示例   x/1xg  0x8888   \n      * 以十六进制显示地址0x8888位置存储的8字节内容(比如long long类型的数字)\n  \n### 其他手册/详细手册   \n\n###### ldd   查看程序运行时库  \n显示 依赖的库名,  实际记载到的库, 库加载后的开始地址 \n\n\n###### strace  \n```\n-c 统计每一系统调用的所执行的时间,次数和出错的次数等. \n-d 输出strace关于标准错误的调试信息. \n-f 跟踪由fork调用所产生的子进程. \n-ff 如果提供-o filename,则所有进程的跟踪结果输出到相应的filename.pid中,pid是各进程的进程号. \n-F 尝试跟踪vfork调用.在-f时,vfork不被跟踪. \n-h 输出简要的帮助信息. \n-i 输出系统调用的入口指针. \n-q 禁止输出关于脱离的消息. \n-r 打印出相对时间关于,,每一个系统调用. \n-t 在输出中的每一行前加上时间信息. \n-tt 在输出中的每一行前加上时间信息,微秒级. \n-ttt 微秒级输出,以秒了表示时间. \n-T 显示每一调用所耗的时间. \n-v 输出所有的系统调用.一些调用关于环境变量,状态,输入输出等调用由于使用频繁,默认不输出. \n-V 输出strace的版本信息. \n-x 以十六进制形式输出非标准字符串 \n-xx 所有字符串以十六进制形式输出. \n-a column \n设置返回值的输出位置.默认 为40. \n-e expr \n指定一个表达式,用来控制如何跟踪.格式如下: \n[qualifier=][!]value1[,value2]... \nqualifier只能是 trace,abbrev,verbose,raw,signal,read,write其中之一.value是用来限定的符号或数字.默认的 qualifier是 trace.感叹号是否定符号.例如: \n-eopen等价于 -e trace=open,表示只跟踪open调用.而-etrace!=open表示跟踪除了open以外的其他调用.有两个特殊的符号 all 和 none. \n注意有些shell使用!来执行历史记录里的命令,所以要使用\\\\. \n-e trace=set \n只跟踪指定的系统 调用.例如:-e trace=open,close,rean,write表示只跟踪这四个系统调用.默认的为set=all. \n-e trace=file \n只跟踪有关文件操作的系统调用. \n-e trace=process \n只跟踪有关进程控制的系统调用. \n-e trace=network \n跟踪与网络有关的所有系统调用. \n-e strace=signal \n跟踪所有与系统信号有关的 系统调用 \n-e trace=ipc \n跟踪所有与进程通讯有关的系统调用 \n-e abbrev=set \n设定 strace输出的系统调用的结果集.-v 等与 abbrev=none.默认为abbrev=all. \n-e raw=set \n将指 定的系统调用的参数以十六进制显示. \n-e signal=set \n指定跟踪的系统信号.默认为all.如 signal=!SIGIO(或者signal=!io),表示不跟踪SIGIO信号. \n-e read=set \n输出从指定文件中读出 的数据.例如: \n-e read=3,5 \n-e write=set \n输出写入到指定文件中的数据. \n-o filename \n将strace的输出写入文件filename \n-p pid \n跟踪指定的进程pid. \n-s strsize \n指定输出的字符串的最大长度.默认为32.文件名一直全部输出. \n-u username \n以username 的UID和GID执行被跟踪的命令\n```\n\n\n###### vmstat  \n```\nProcs（进程）:\n  r: 运行队列中进程数量\n  b: 等待IO的进程数量\nMemory（内存）:\n  swpd: 使用虚拟内存大小\n  free: 可用内存大小\n  buff: 用作缓冲的内存大小\n  cache: 用作缓存的内存大小\nSwap:\n  si: 每秒从交换区写到内存的大小\n  so: 每秒写入交换区的内存大小\n  IO：（现在的Linux版本块的大小为1024bytes）\n  bi: 每秒读取的块数\n  bo: 每秒写入的块数\nsystem：\n  in: 每秒中断数，包括时钟中断\n  cs: 每秒上下文切换数\n  CPU（以百分比表示）\n  us: 用户进程执行时间(user time)\n  sy: 系统进程执行时间(system time)\n  id: 空闲时间(包括IO等待时间)\n  wa: 等待IO时间\n```\n\n\n###### sar   \n```\n-A 汇总所有的报告\n-a 报告文件读写使用情况\n-B 报告附加的缓存的使用情况\n-b 报告缓存的使用情况\n-c 报告系统调用的使用情况\n-d 报告磁盘的使用情况\n-g 报告串口的使用情况\n-h 报告关于buffer使用的统计数据\n-m 报告IPC消息队列和信号量的使用情况\n-n 报告命名cache的使用情况\n-p 报告调页活动的使用情况\n-q 报告运行队列和交换队列的平均长度\n-R 报告进程的活动情况\n-r 报告没有使用的内存页面和硬盘块\n-u 报告CPU的利用率\n-v 报告进程、i节点、文件和锁表状态\n-w 报告系统交换活动状况\n-y 报告TTY设备活动状况\n```\n\n\n###### /proc/$pid/maps   虚拟内存地址  \n```\naddress           perms offset  dev   inode   pathname\n08048000-08056000 r-xp 00000000 03:0c 64593   /usr/sbin/gpm\n```    \n对应内核的vm_area_struct项  \n* 地址 address [vm_start-vm_end]: 进程地址空间中区域的开始和结束地址  \n  \n* 权限 permissions [vm_flags]：虚拟内存的权限，\n  * [r=读] [w=写] [x=执行]  [s/p=共享/私有]     \n  * 禁用显示 - \n  * mprotect设置权限   \n  \n* 偏移量 offset [vm_pgoff]：映射开始的偏移量  \n  * 对于有名映射, 比如从文件使用mmap的映射, 表示此段虚拟内存起始地址在文件中以页为单位的偏移 .  \n    * 缺页异常时会根据这个找到文件对应地址的数据并加载上来  \n  * 对匿名映射 它等于0或者vm_start/PAGE_SIZE   \n  \n* 设备 device：映像文件的主设备号和次设备号\n  * 对匿名映射来说 因为没有文件在磁盘上 所以没有设备号 始终为00:00 \n  * 对有名映射来说 是映射的文件所在设备的设备号   \n* 节点 inode：映像文件的节点号\n  * 对有名映射来说 是映射的文件的节点号\n  * 对匿名映射来说 因为没有文件在磁盘上 所以没有节点号 始终为00:00  \n* 路径 pathname: 映像文件的路径  \n  * 对有名来说 是映射的文件名\n  * 对匿名映射来说 是此段虚拟内存在进程中的角色 \n    * [stack]表示在进程中作为栈使用 \n    * [heap]表示堆\n    * [vdso]表示虚拟动态共享对象 它被系统调用用于切换到内核模式   \n    *  其余情况则无显示\n\n###### pmap 虚拟内存地址  类似 /proc/$pid/maps   \n显示的数据更干净一些  还能显示出比如共享内存的shmid和起始位置 和大小    \n\n\n###### gstack  脚本  拷贝自centos  \n```\n#!/bin/sh\n\nif test $# -ne 1; then\n    echo \"Usage: `basename $0 .sh` <process-id>\" 1>&2\n    exit 1\nfi\n\nif test ! -r /proc/$1; then\n    echo \"Process $1 not found.\" 1>&2\n    exit 1\nfi\n\n# GDB doesn't allow \"thread apply all bt\" when the process isn't\n# threaded; need to peek at the process to determine if that or the\n# simpler \"bt\" should be used.\n\nbacktrace=\"bt\"\nif test -d /proc/$1/task ; then\n    # Newer kernel; has a task/ directory.\n    if test `/bin/ls /proc/$1/task | /usr/bin/wc -l` -gt 1 2>/dev/null ; then\n        backtrace=\"thread apply all bt\"\n    fi\nelif test -f /proc/$1/maps ; then\n    # Older kernel; go by it loading libpthread.\n    if /bin/grep -e libpthread /proc/$1/maps > /dev/null 2>&1 ; then\n        backtrace=\"thread apply all bt\"\n    fi\nfi\n\nGDB=${GDB:-/usr/bin/gdb}\n\nif $GDB -nx --quiet --batch --readnever > /dev/null 2>&1; then\n    readnever=--readnever\nelse\n    readnever=\nfi\n\n# Run GDB, strip out unwanted noise.\n$GDB --quiet $readnever -nx /proc/$1/exe $1 <<EOF 2>&1 | \nset width 0\nset height 0\nset pagination no\n$backtrace\nEOF\n/bin/sed -n \\\n    -e 's/^\\((gdb) \\)*//' \\\n    -e '/^#/p' \\\n    -e '/^Thread/p'\n```\n","source":"_posts/2019-11-05-fast-check-linux.md","raw":"---\ntitle: linux快速排查问题的命令  \ndate: 2019-11-05\ncategories: develop \nauthor: yawei.zhang \n---\n### 全局分析和统计    \n* top命令   \n  * free 查看内存使用信息  \n  * vmstate [delay时间]  按照delay时间打印内存使用 io读写 CPU用量等信息  \n  * iostat -m -x [时间] [次数]   io读写详细信息\n\n* sar 系统活动情况报告 追溯统计数据 从最近的0点0分开始显示数据   \n  * sar -A 所有  \n  * sar -u CPU  \n  * sar -q 负载\n  * sar -r 内存\n  * CPU存在瓶颈，可用 sar -u 和 sar -q 等来查看\n  * 内存存在瓶颈，可用sar -B、sar -r 和 sar -W 等来查看\n  * I/O存在瓶颈，可用 sar -b、sar -u 和 sar -d 等来查看\n\n* df 查看当前硬盘存储\n  * du -h  --max-depth=1 [./]   统计当前目录树下的文件大小  \n\n* IPC资源查询   \n  * ipcs -m 查看共享内存资源  \n  * ipcsrm -M [shmkey]  删除共享内存资源  \n  * ipcsrm -m [shmid]    删除shmid标识的共享内存资源  \n\n* ulimit -a   配置位置 /etc/security/limits.conf  \n  * coredump文件的大小\n  * 线程栈的大小  \n  * 单进程最大设备数\n    * 单进程最大设备数的硬性限制在/proc/sys/fs/nr_open 中配置  \n    * 系统配置的最大设备数可查看/proc/sys/fs/file-max 中配置  \n    * 系统配置的最大设备数修改/etc/sysctl.conf |  fs.file-max = 1000000\n\n* 全局线程总数 \n  * 查看位置 /proc/sys/kernel/threads-max  \n  \n* 单个进程最大线程数 PTHREAD_THREADS_MAX  新的NPTL实现中不存在该限制   \n  * 查看位置 /usr/include/bits/local_lim.h \n  * 查看位置 /usr/include/x86_64-linux-gnu/bits/local_lim.h\n  \n* whereis   查看命令所在位置  \n\n* lsof [文件/路径]  查看占用该文件/该目录下文件的进程  \n\n* lsof -i  查看当前活动的网络连接 包括TCP / UDP\n\n* lsof -p [pid] 查看当前进程所有打开的文件/设备\n\n* ulimit -s 栈大小  \n\n<!-- more --> \n### 进程分析和统计   \n\n* pstack [pid]  查看进程栈  \n\n* gstack [pid]  同pstack 可打印出每个线程的堆栈    \n\n* gcore [pid1 pid2 ...]  dump core而不杀死进程   \n\n* strace -T -r -c -p [pid] 查看或统计系统调用  -c统计.   \n  \n* strace [exe_file]  调试运行程序  统计或查看该程序所有系统调用    \n\n\n\n* lsof [文件/路径]  查看占用该文件/该目录下文件的进程  \n\n* lsof -i  查看当前活动的网络连接 包括TCP / UDP\n\n* lsof -p [pid] 查看当前进程所有打开的文件/设备\n\n* 内存布局的实际地址和实际大小等查询  内存泄露可快速判定\n  * cat /proc/pid/maps \n  * pmap\n\n### 系统   \nuname -a  系统版本  \ncat /proc/version  内核版本  \ngetconf GNU_LIBPTHREAD_VERSION   查看线程模型  \n\n### 调试\n\n* readelf  \n  * 可重定位的对象文件(Relocatable file) .o文件   \n  * 可执行的对象文件(Executable file)  \n  * 可被共享的对象文件(Shared object file)  \n  * readelf -a  [elf_file] 查看所有信息  \n  * readelf -h  [elf_file] 查看概要信息\n  * readelf -S  [elf_file] 查看所有段信息(比如-g编译会有debug段)  \n  \n* objdump  和readelf类似 但是可以反汇编elf文件  \n  * objdump -S [file]  反汇编所有目标代码  \n  \n* size [file] 查看程序被映射到内存中映像的大小信息  \n\n* gdb  \n  * gdb -tui 可以显示文本界面 text ui   \n  * layout regs 进入汇编调试模式  \n  * disassemble /rm  显示汇编指令的同时显示对应代码\n  * set disassemble-next-line on 自动反汇编后面要执行的代码  \n  * 添加peda插件 直接显示汇编了   \n  * ```  \n    git clone https://github.com/longld/peda.git ~/peda\n    echo \"source ~/peda/peda.py\" >> ~/.gdbinit\n    ```\n  * x /nfu <mem addr>   显示指定内存的值, 内存长度(单位)由u决定\n    * n项  显示数量  \n      * 要往下显示多少个 [fu] 即 n*(fu)   0代表一个都不显示 \n    * f项  显示方式  \n      * x 按十六进制格式显示变量 \n      * d 按十进制格式显示变量  \n      * u 按十进制格式显示无符号整型  \n      * o 按八进制格式显示变量 \n      * t 按二进制格式显示变量 \n      * a 按十六进制格式显示变量 \n      * i 指令地址格式\n      * c 按字符格式显示变量 \n      * f 按浮点数格式显示变量  \n    * u项 单位大小   \n      * b表示单字节 \n      * h表示双字节 \n      * w表示四字节 \n      * g表示八字节  \n    * 示例   x/1xg  0x8888   \n      * 以十六进制显示地址0x8888位置存储的8字节内容(比如long long类型的数字)\n  \n### 其他手册/详细手册   \n\n###### ldd   查看程序运行时库  \n显示 依赖的库名,  实际记载到的库, 库加载后的开始地址 \n\n\n###### strace  \n```\n-c 统计每一系统调用的所执行的时间,次数和出错的次数等. \n-d 输出strace关于标准错误的调试信息. \n-f 跟踪由fork调用所产生的子进程. \n-ff 如果提供-o filename,则所有进程的跟踪结果输出到相应的filename.pid中,pid是各进程的进程号. \n-F 尝试跟踪vfork调用.在-f时,vfork不被跟踪. \n-h 输出简要的帮助信息. \n-i 输出系统调用的入口指针. \n-q 禁止输出关于脱离的消息. \n-r 打印出相对时间关于,,每一个系统调用. \n-t 在输出中的每一行前加上时间信息. \n-tt 在输出中的每一行前加上时间信息,微秒级. \n-ttt 微秒级输出,以秒了表示时间. \n-T 显示每一调用所耗的时间. \n-v 输出所有的系统调用.一些调用关于环境变量,状态,输入输出等调用由于使用频繁,默认不输出. \n-V 输出strace的版本信息. \n-x 以十六进制形式输出非标准字符串 \n-xx 所有字符串以十六进制形式输出. \n-a column \n设置返回值的输出位置.默认 为40. \n-e expr \n指定一个表达式,用来控制如何跟踪.格式如下: \n[qualifier=][!]value1[,value2]... \nqualifier只能是 trace,abbrev,verbose,raw,signal,read,write其中之一.value是用来限定的符号或数字.默认的 qualifier是 trace.感叹号是否定符号.例如: \n-eopen等价于 -e trace=open,表示只跟踪open调用.而-etrace!=open表示跟踪除了open以外的其他调用.有两个特殊的符号 all 和 none. \n注意有些shell使用!来执行历史记录里的命令,所以要使用\\\\. \n-e trace=set \n只跟踪指定的系统 调用.例如:-e trace=open,close,rean,write表示只跟踪这四个系统调用.默认的为set=all. \n-e trace=file \n只跟踪有关文件操作的系统调用. \n-e trace=process \n只跟踪有关进程控制的系统调用. \n-e trace=network \n跟踪与网络有关的所有系统调用. \n-e strace=signal \n跟踪所有与系统信号有关的 系统调用 \n-e trace=ipc \n跟踪所有与进程通讯有关的系统调用 \n-e abbrev=set \n设定 strace输出的系统调用的结果集.-v 等与 abbrev=none.默认为abbrev=all. \n-e raw=set \n将指 定的系统调用的参数以十六进制显示. \n-e signal=set \n指定跟踪的系统信号.默认为all.如 signal=!SIGIO(或者signal=!io),表示不跟踪SIGIO信号. \n-e read=set \n输出从指定文件中读出 的数据.例如: \n-e read=3,5 \n-e write=set \n输出写入到指定文件中的数据. \n-o filename \n将strace的输出写入文件filename \n-p pid \n跟踪指定的进程pid. \n-s strsize \n指定输出的字符串的最大长度.默认为32.文件名一直全部输出. \n-u username \n以username 的UID和GID执行被跟踪的命令\n```\n\n\n###### vmstat  \n```\nProcs（进程）:\n  r: 运行队列中进程数量\n  b: 等待IO的进程数量\nMemory（内存）:\n  swpd: 使用虚拟内存大小\n  free: 可用内存大小\n  buff: 用作缓冲的内存大小\n  cache: 用作缓存的内存大小\nSwap:\n  si: 每秒从交换区写到内存的大小\n  so: 每秒写入交换区的内存大小\n  IO：（现在的Linux版本块的大小为1024bytes）\n  bi: 每秒读取的块数\n  bo: 每秒写入的块数\nsystem：\n  in: 每秒中断数，包括时钟中断\n  cs: 每秒上下文切换数\n  CPU（以百分比表示）\n  us: 用户进程执行时间(user time)\n  sy: 系统进程执行时间(system time)\n  id: 空闲时间(包括IO等待时间)\n  wa: 等待IO时间\n```\n\n\n###### sar   \n```\n-A 汇总所有的报告\n-a 报告文件读写使用情况\n-B 报告附加的缓存的使用情况\n-b 报告缓存的使用情况\n-c 报告系统调用的使用情况\n-d 报告磁盘的使用情况\n-g 报告串口的使用情况\n-h 报告关于buffer使用的统计数据\n-m 报告IPC消息队列和信号量的使用情况\n-n 报告命名cache的使用情况\n-p 报告调页活动的使用情况\n-q 报告运行队列和交换队列的平均长度\n-R 报告进程的活动情况\n-r 报告没有使用的内存页面和硬盘块\n-u 报告CPU的利用率\n-v 报告进程、i节点、文件和锁表状态\n-w 报告系统交换活动状况\n-y 报告TTY设备活动状况\n```\n\n\n###### /proc/$pid/maps   虚拟内存地址  \n```\naddress           perms offset  dev   inode   pathname\n08048000-08056000 r-xp 00000000 03:0c 64593   /usr/sbin/gpm\n```    \n对应内核的vm_area_struct项  \n* 地址 address [vm_start-vm_end]: 进程地址空间中区域的开始和结束地址  \n  \n* 权限 permissions [vm_flags]：虚拟内存的权限，\n  * [r=读] [w=写] [x=执行]  [s/p=共享/私有]     \n  * 禁用显示 - \n  * mprotect设置权限   \n  \n* 偏移量 offset [vm_pgoff]：映射开始的偏移量  \n  * 对于有名映射, 比如从文件使用mmap的映射, 表示此段虚拟内存起始地址在文件中以页为单位的偏移 .  \n    * 缺页异常时会根据这个找到文件对应地址的数据并加载上来  \n  * 对匿名映射 它等于0或者vm_start/PAGE_SIZE   \n  \n* 设备 device：映像文件的主设备号和次设备号\n  * 对匿名映射来说 因为没有文件在磁盘上 所以没有设备号 始终为00:00 \n  * 对有名映射来说 是映射的文件所在设备的设备号   \n* 节点 inode：映像文件的节点号\n  * 对有名映射来说 是映射的文件的节点号\n  * 对匿名映射来说 因为没有文件在磁盘上 所以没有节点号 始终为00:00  \n* 路径 pathname: 映像文件的路径  \n  * 对有名来说 是映射的文件名\n  * 对匿名映射来说 是此段虚拟内存在进程中的角色 \n    * [stack]表示在进程中作为栈使用 \n    * [heap]表示堆\n    * [vdso]表示虚拟动态共享对象 它被系统调用用于切换到内核模式   \n    *  其余情况则无显示\n\n###### pmap 虚拟内存地址  类似 /proc/$pid/maps   \n显示的数据更干净一些  还能显示出比如共享内存的shmid和起始位置 和大小    \n\n\n###### gstack  脚本  拷贝自centos  \n```\n#!/bin/sh\n\nif test $# -ne 1; then\n    echo \"Usage: `basename $0 .sh` <process-id>\" 1>&2\n    exit 1\nfi\n\nif test ! -r /proc/$1; then\n    echo \"Process $1 not found.\" 1>&2\n    exit 1\nfi\n\n# GDB doesn't allow \"thread apply all bt\" when the process isn't\n# threaded; need to peek at the process to determine if that or the\n# simpler \"bt\" should be used.\n\nbacktrace=\"bt\"\nif test -d /proc/$1/task ; then\n    # Newer kernel; has a task/ directory.\n    if test `/bin/ls /proc/$1/task | /usr/bin/wc -l` -gt 1 2>/dev/null ; then\n        backtrace=\"thread apply all bt\"\n    fi\nelif test -f /proc/$1/maps ; then\n    # Older kernel; go by it loading libpthread.\n    if /bin/grep -e libpthread /proc/$1/maps > /dev/null 2>&1 ; then\n        backtrace=\"thread apply all bt\"\n    fi\nfi\n\nGDB=${GDB:-/usr/bin/gdb}\n\nif $GDB -nx --quiet --batch --readnever > /dev/null 2>&1; then\n    readnever=--readnever\nelse\n    readnever=\nfi\n\n# Run GDB, strip out unwanted noise.\n$GDB --quiet $readnever -nx /proc/$1/exe $1 <<EOF 2>&1 | \nset width 0\nset height 0\nset pagination no\n$backtrace\nEOF\n/bin/sed -n \\\n    -e 's/^\\((gdb) \\)*//' \\\n    -e '/^#/p' \\\n    -e '/^Thread/p'\n```\n","slug":"2019-11-05-fast-check-linux","published":1,"updated":"2019-11-27T09:31:16.101Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck44ekz2q0013r45hawk8h0ro","content":"<h3><span id=\"全局分析和统计\">全局分析和统计</span></h3><ul>\n<li><p>top命令   </p>\n<ul>\n<li>free 查看内存使用信息  </li>\n<li>vmstate [delay时间]  按照delay时间打印内存使用 io读写 CPU用量等信息  </li>\n<li>iostat -m -x [时间] [次数]   io读写详细信息</li>\n</ul>\n</li>\n<li><p>sar 系统活动情况报告 追溯统计数据 从最近的0点0分开始显示数据   </p>\n<ul>\n<li>sar -A 所有  </li>\n<li>sar -u CPU  </li>\n<li>sar -q 负载</li>\n<li>sar -r 内存</li>\n<li>CPU存在瓶颈，可用 sar -u 和 sar -q 等来查看</li>\n<li>内存存在瓶颈，可用sar -B、sar -r 和 sar -W 等来查看</li>\n<li>I/O存在瓶颈，可用 sar -b、sar -u 和 sar -d 等来查看</li>\n</ul>\n</li>\n<li><p>df 查看当前硬盘存储</p>\n<ul>\n<li>du -h  –max-depth=1 [./]   统计当前目录树下的文件大小  </li>\n</ul>\n</li>\n<li><p>IPC资源查询   </p>\n<ul>\n<li>ipcs -m 查看共享内存资源  </li>\n<li>ipcsrm -M [shmkey]  删除共享内存资源  </li>\n<li>ipcsrm -m [shmid]    删除shmid标识的共享内存资源  </li>\n</ul>\n</li>\n<li><p>ulimit -a   配置位置 /etc/security/limits.conf  </p>\n<ul>\n<li>coredump文件的大小</li>\n<li>线程栈的大小  </li>\n<li>单进程最大设备数<ul>\n<li>单进程最大设备数的硬性限制在/proc/sys/fs/nr_open 中配置  </li>\n<li>系统配置的最大设备数可查看/proc/sys/fs/file-max 中配置  </li>\n<li>系统配置的最大设备数修改/etc/sysctl.conf |  fs.file-max = 1000000</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>全局线程总数 </p>\n<ul>\n<li>查看位置 /proc/sys/kernel/threads-max  </li>\n</ul>\n</li>\n<li><p>单个进程最大线程数 PTHREAD_THREADS_MAX  新的NPTL实现中不存在该限制   </p>\n<ul>\n<li>查看位置 /usr/include/bits/local_lim.h </li>\n<li>查看位置 /usr/include/x86_64-linux-gnu/bits/local_lim.h</li>\n</ul>\n</li>\n<li><p>whereis   查看命令所在位置  </p>\n</li>\n<li><p>lsof [文件/路径]  查看占用该文件/该目录下文件的进程  </p>\n</li>\n<li><p>lsof -i  查看当前活动的网络连接 包括TCP / UDP</p>\n</li>\n<li><p>lsof -p [pid] 查看当前进程所有打开的文件/设备</p>\n</li>\n<li><p>ulimit -s 栈大小  </p>\n</li>\n</ul>\n<a id=\"more\"></a> \n<h3><span id=\"进程分析和统计\">进程分析和统计</span></h3><ul>\n<li><p>pstack [pid]  查看进程栈  </p>\n</li>\n<li><p>gstack [pid]  同pstack 可打印出每个线程的堆栈    </p>\n</li>\n<li><p>gcore [pid1 pid2 …]  dump core而不杀死进程   </p>\n</li>\n<li><p>strace -T -r -c -p [pid] 查看或统计系统调用  -c统计.   </p>\n</li>\n<li><p>strace [exe_file]  调试运行程序  统计或查看该程序所有系统调用    </p>\n</li>\n</ul>\n<ul>\n<li><p>lsof [文件/路径]  查看占用该文件/该目录下文件的进程  </p>\n</li>\n<li><p>lsof -i  查看当前活动的网络连接 包括TCP / UDP</p>\n</li>\n<li><p>lsof -p [pid] 查看当前进程所有打开的文件/设备</p>\n</li>\n<li><p>内存布局的实际地址和实际大小等查询  内存泄露可快速判定</p>\n<ul>\n<li>cat /proc/pid/maps </li>\n<li>pmap</li>\n</ul>\n</li>\n</ul>\n<h3><span id=\"系统\">系统</span></h3><p>uname -a  系统版本<br>cat /proc/version  内核版本<br>getconf GNU_LIBPTHREAD_VERSION   查看线程模型  </p>\n<h3><span id=\"调试\">调试</span></h3><ul>\n<li><p>readelf  </p>\n<ul>\n<li>可重定位的对象文件(Relocatable file) .o文件   </li>\n<li>可执行的对象文件(Executable file)  </li>\n<li>可被共享的对象文件(Shared object file)  </li>\n<li>readelf -a  [elf_file] 查看所有信息  </li>\n<li>readelf -h  [elf_file] 查看概要信息</li>\n<li>readelf -S  [elf_file] 查看所有段信息(比如-g编译会有debug段)  </li>\n</ul>\n</li>\n<li><p>objdump  和readelf类似 但是可以反汇编elf文件  </p>\n<ul>\n<li>objdump -S [file]  反汇编所有目标代码  </li>\n</ul>\n</li>\n<li><p>size [file] 查看程序被映射到内存中映像的大小信息  </p>\n</li>\n<li><p>gdb  </p>\n<ul>\n<li>gdb -tui 可以显示文本界面 text ui   </li>\n<li>layout regs 进入汇编调试模式  </li>\n<li>disassemble /rm  显示汇编指令的同时显示对应代码</li>\n<li>set disassemble-next-line on 自动反汇编后面要执行的代码  </li>\n<li>添加peda插件 直接显示汇编了   </li>\n<li>```<br>git clone <a href=\"https://github.com/longld/peda.git\" target=\"_blank\" rel=\"noopener\">https://github.com/longld/peda.git</a> ~/peda<br>echo “source ~/peda/peda.py” &gt;&gt; ~/.gdbinit<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  * x &#x2F;nfu &lt;mem addr&gt;   显示指定内存的值, 内存长度(单位)由u决定</span><br><span class=\"line\">    * n项  显示数量  </span><br><span class=\"line\">      * 要往下显示多少个 [fu] 即 n*(fu)   0代表一个都不显示 </span><br><span class=\"line\">    * f项  显示方式  </span><br><span class=\"line\">      * x 按十六进制格式显示变量 </span><br><span class=\"line\">      * d 按十进制格式显示变量  </span><br><span class=\"line\">      * u 按十进制格式显示无符号整型  </span><br><span class=\"line\">      * o 按八进制格式显示变量 </span><br><span class=\"line\">      * t 按二进制格式显示变量 </span><br><span class=\"line\">      * a 按十六进制格式显示变量 </span><br><span class=\"line\">      * i 指令地址格式</span><br><span class=\"line\">      * c 按字符格式显示变量 </span><br><span class=\"line\">      * f 按浮点数格式显示变量  </span><br><span class=\"line\">    * u项 单位大小   </span><br><span class=\"line\">      * b表示单字节 </span><br><span class=\"line\">      * h表示双字节 </span><br><span class=\"line\">      * w表示四字节 </span><br><span class=\"line\">      * g表示八字节  </span><br><span class=\"line\">    * 示例   x&#x2F;1xg  0x8888   </span><br><span class=\"line\">      * 以十六进制显示地址0x8888位置存储的8字节内容(比如long long类型的数字)</span><br><span class=\"line\">  </span><br><span class=\"line\">### 其他手册&#x2F;详细手册   </span><br><span class=\"line\"></span><br><span class=\"line\">###### ldd   查看程序运行时库  </span><br><span class=\"line\">显示 依赖的库名,  实际记载到的库, 库加载后的开始地址 </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">###### strace</span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n</ul>\n<p>-c 统计每一系统调用的所执行的时间,次数和出错的次数等.<br>-d 输出strace关于标准错误的调试信息.<br>-f 跟踪由fork调用所产生的子进程.<br>-ff 如果提供-o filename,则所有进程的跟踪结果输出到相应的filename.pid中,pid是各进程的进程号.<br>-F 尝试跟踪vfork调用.在-f时,vfork不被跟踪.<br>-h 输出简要的帮助信息.<br>-i 输出系统调用的入口指针.<br>-q 禁止输出关于脱离的消息.<br>-r 打印出相对时间关于,,每一个系统调用.<br>-t 在输出中的每一行前加上时间信息.<br>-tt 在输出中的每一行前加上时间信息,微秒级.<br>-ttt 微秒级输出,以秒了表示时间.<br>-T 显示每一调用所耗的时间.<br>-v 输出所有的系统调用.一些调用关于环境变量,状态,输入输出等调用由于使用频繁,默认不输出.<br>-V 输出strace的版本信息.<br>-x 以十六进制形式输出非标准字符串<br>-xx 所有字符串以十六进制形式输出.<br>-a column<br>设置返回值的输出位置.默认 为40.<br>-e expr<br>指定一个表达式,用来控制如何跟踪.格式如下:<br>[qualifier=][!]value1[,value2]…<br>qualifier只能是 trace,abbrev,verbose,raw,signal,read,write其中之一.value是用来限定的符号或数字.默认的 qualifier是 trace.感叹号是否定符号.例如:<br>-eopen等价于 -e trace=open,表示只跟踪open调用.而-etrace!=open表示跟踪除了open以外的其他调用.有两个特殊的符号 all 和 none.<br>注意有些shell使用!来执行历史记录里的命令,所以要使用\\.<br>-e trace=set<br>只跟踪指定的系统 调用.例如:-e trace=open,close,rean,write表示只跟踪这四个系统调用.默认的为set=all.<br>-e trace=file<br>只跟踪有关文件操作的系统调用.<br>-e trace=process<br>只跟踪有关进程控制的系统调用.<br>-e trace=network<br>跟踪与网络有关的所有系统调用.<br>-e strace=signal<br>跟踪所有与系统信号有关的 系统调用<br>-e trace=ipc<br>跟踪所有与进程通讯有关的系统调用<br>-e abbrev=set<br>设定 strace输出的系统调用的结果集.-v 等与 abbrev=none.默认为abbrev=all.<br>-e raw=set<br>将指 定的系统调用的参数以十六进制显示.<br>-e signal=set<br>指定跟踪的系统信号.默认为all.如 signal=!SIGIO(或者signal=!io),表示不跟踪SIGIO信号.<br>-e read=set<br>输出从指定文件中读出 的数据.例如:<br>-e read=3,5<br>-e write=set<br>输出写入到指定文件中的数据.<br>-o filename<br>将strace的输出写入文件filename<br>-p pid<br>跟踪指定的进程pid.<br>-s strsize<br>指定输出的字符串的最大长度.默认为32.文件名一直全部输出.<br>-u username<br>以username 的UID和GID执行被跟踪的命令</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">###### vmstat</span><br></pre></td></tr></table></figure>\n<p>Procs（进程）:<br>  r: 运行队列中进程数量<br>  b: 等待IO的进程数量<br>Memory（内存）:<br>  swpd: 使用虚拟内存大小<br>  free: 可用内存大小<br>  buff: 用作缓冲的内存大小<br>  cache: 用作缓存的内存大小<br>Swap:<br>  si: 每秒从交换区写到内存的大小<br>  so: 每秒写入交换区的内存大小<br>  IO：（现在的Linux版本块的大小为1024bytes）<br>  bi: 每秒读取的块数<br>  bo: 每秒写入的块数<br>system：<br>  in: 每秒中断数，包括时钟中断<br>  cs: 每秒上下文切换数<br>  CPU（以百分比表示）<br>  us: 用户进程执行时间(user time)<br>  sy: 系统进程执行时间(system time)<br>  id: 空闲时间(包括IO等待时间)<br>  wa: 等待IO时间</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">###### sar</span><br></pre></td></tr></table></figure>\n<p>-A 汇总所有的报告<br>-a 报告文件读写使用情况<br>-B 报告附加的缓存的使用情况<br>-b 报告缓存的使用情况<br>-c 报告系统调用的使用情况<br>-d 报告磁盘的使用情况<br>-g 报告串口的使用情况<br>-h 报告关于buffer使用的统计数据<br>-m 报告IPC消息队列和信号量的使用情况<br>-n 报告命名cache的使用情况<br>-p 报告调页活动的使用情况<br>-q 报告运行队列和交换队列的平均长度<br>-R 报告进程的活动情况<br>-r 报告没有使用的内存页面和硬盘块<br>-u 报告CPU的利用率<br>-v 报告进程、i节点、文件和锁表状态<br>-w 报告系统交换活动状况<br>-y 报告TTY设备活动状况</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">###### &#x2F;proc&#x2F;$pid&#x2F;maps   虚拟内存地址</span><br></pre></td></tr></table></figure>\n<p>address           perms offset  dev   inode   pathname<br>08048000-08056000 r-xp 00000000 03:0c 64593   /usr/sbin/gpm</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">对应内核的vm_area_struct项  </span><br><span class=\"line\">* 地址 address [vm_start-vm_end]: 进程地址空间中区域的开始和结束地址  </span><br><span class=\"line\">  </span><br><span class=\"line\">* 权限 permissions [vm_flags]：虚拟内存的权限，</span><br><span class=\"line\">  * [r&#x3D;读] [w&#x3D;写] [x&#x3D;执行]  [s&#x2F;p&#x3D;共享&#x2F;私有]     </span><br><span class=\"line\">  * 禁用显示 - </span><br><span class=\"line\">  * mprotect设置权限   </span><br><span class=\"line\">  </span><br><span class=\"line\">* 偏移量 offset [vm_pgoff]：映射开始的偏移量  </span><br><span class=\"line\">  * 对于有名映射, 比如从文件使用mmap的映射, 表示此段虚拟内存起始地址在文件中以页为单位的偏移 .  </span><br><span class=\"line\">    * 缺页异常时会根据这个找到文件对应地址的数据并加载上来  </span><br><span class=\"line\">  * 对匿名映射 它等于0或者vm_start&#x2F;PAGE_SIZE   </span><br><span class=\"line\">  </span><br><span class=\"line\">* 设备 device：映像文件的主设备号和次设备号</span><br><span class=\"line\">  * 对匿名映射来说 因为没有文件在磁盘上 所以没有设备号 始终为00:00 </span><br><span class=\"line\">  * 对有名映射来说 是映射的文件所在设备的设备号   </span><br><span class=\"line\">* 节点 inode：映像文件的节点号</span><br><span class=\"line\">  * 对有名映射来说 是映射的文件的节点号</span><br><span class=\"line\">  * 对匿名映射来说 因为没有文件在磁盘上 所以没有节点号 始终为00:00  </span><br><span class=\"line\">* 路径 pathname: 映像文件的路径  </span><br><span class=\"line\">  * 对有名来说 是映射的文件名</span><br><span class=\"line\">  * 对匿名映射来说 是此段虚拟内存在进程中的角色 </span><br><span class=\"line\">    * [stack]表示在进程中作为栈使用 </span><br><span class=\"line\">    * [heap]表示堆</span><br><span class=\"line\">    * [vdso]表示虚拟动态共享对象 它被系统调用用于切换到内核模式   </span><br><span class=\"line\">    *  其余情况则无显示</span><br><span class=\"line\"></span><br><span class=\"line\">###### pmap 虚拟内存地址  类似 &#x2F;proc&#x2F;$pid&#x2F;maps   </span><br><span class=\"line\">显示的数据更干净一些  还能显示出比如共享内存的shmid和起始位置 和大小    </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">###### gstack  脚本  拷贝自centos</span><br></pre></td></tr></table></figure>\n<p>#!/bin/sh</p>\n<p>if test $# -ne 1; then<br>    echo “Usage: <code>basename $0 .sh</code> <process-id>“ 1&gt;&amp;2<br>    exit 1<br>fi</process-id></p>\n<p>if test ! -r /proc/$1; then<br>    echo “Process $1 not found.” 1&gt;&amp;2<br>    exit 1<br>fi</p>\n<h1><span id=\"gdb-doesnt-allow-thread-apply-all-bt-when-the-process-isnt\">GDB doesn’t allow “thread apply all bt” when the process isn’t</span></h1><h1><span id=\"threaded-need-to-peek-at-the-process-to-determine-if-that-or-the\">threaded; need to peek at the process to determine if that or the</span></h1><h1><span id=\"simpler-bt-should-be-used\">simpler “bt” should be used.</span></h1><p>backtrace=”bt”<br>if test -d /proc/$1/task ; then<br>    # Newer kernel; has a task/ directory.<br>    if test <code>/bin/ls /proc/$1/task | /usr/bin/wc -l</code> -gt 1 2&gt;/dev/null ; then<br>        backtrace=”thread apply all bt”<br>    fi<br>elif test -f /proc/$1/maps ; then<br>    # Older kernel; go by it loading libpthread.<br>    if /bin/grep -e libpthread /proc/$1/maps &gt; /dev/null 2&gt;&amp;1 ; then<br>        backtrace=”thread apply all bt”<br>    fi<br>fi</p>\n<p>GDB=${GDB:-/usr/bin/gdb}</p>\n<p>if $GDB -nx –quiet –batch –readnever &gt; /dev/null 2&gt;&1; then<br>    readnever=–readnever<br>else<br>    readnever=<br>fi</p>\n<h1><span id=\"run-gdb-strip-out-unwanted-noise\">Run GDB, strip out unwanted noise.</span></h1><p>$GDB –quiet $readnever -nx /proc/$1/exe $1 &lt;&lt;EOF 2&gt;&amp;1 |<br>set width 0<br>set height 0<br>set pagination no<br>$backtrace<br>EOF<br>/bin/sed -n <br>    -e ‘s/^((gdb) )*//‘ <br>    -e ‘/^#/p’ <br>    -e ‘/^Thread/p’</p>\n<pre><code></code></pre>","site":{"data":{}},"excerpt":"<h3 id=\"全局分析和统计\"><a href=\"#全局分析和统计\" class=\"headerlink\" title=\"全局分析和统计\"></a>全局分析和统计</h3><ul>\n<li><p>top命令   </p>\n<ul>\n<li>free 查看内存使用信息  </li>\n<li>vmstate [delay时间]  按照delay时间打印内存使用 io读写 CPU用量等信息  </li>\n<li>iostat -m -x [时间] [次数]   io读写详细信息</li>\n</ul>\n</li>\n<li><p>sar 系统活动情况报告 追溯统计数据 从最近的0点0分开始显示数据   </p>\n<ul>\n<li>sar -A 所有  </li>\n<li>sar -u CPU  </li>\n<li>sar -q 负载</li>\n<li>sar -r 内存</li>\n<li>CPU存在瓶颈，可用 sar -u 和 sar -q 等来查看</li>\n<li>内存存在瓶颈，可用sar -B、sar -r 和 sar -W 等来查看</li>\n<li>I/O存在瓶颈，可用 sar -b、sar -u 和 sar -d 等来查看</li>\n</ul>\n</li>\n<li><p>df 查看当前硬盘存储</p>\n<ul>\n<li>du -h  –max-depth=1 [./]   统计当前目录树下的文件大小  </li>\n</ul>\n</li>\n<li><p>IPC资源查询   </p>\n<ul>\n<li>ipcs -m 查看共享内存资源  </li>\n<li>ipcsrm -M [shmkey]  删除共享内存资源  </li>\n<li>ipcsrm -m [shmid]    删除shmid标识的共享内存资源  </li>\n</ul>\n</li>\n<li><p>ulimit -a   配置位置 /etc/security/limits.conf  </p>\n<ul>\n<li>coredump文件的大小</li>\n<li>线程栈的大小  </li>\n<li>单进程最大设备数<ul>\n<li>单进程最大设备数的硬性限制在/proc/sys/fs/nr_open 中配置  </li>\n<li>系统配置的最大设备数可查看/proc/sys/fs/file-max 中配置  </li>\n<li>系统配置的最大设备数修改/etc/sysctl.conf |  fs.file-max = 1000000</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>全局线程总数 </p>\n<ul>\n<li>查看位置 /proc/sys/kernel/threads-max  </li>\n</ul>\n</li>\n<li><p>单个进程最大线程数 PTHREAD_THREADS_MAX  新的NPTL实现中不存在该限制   </p>\n<ul>\n<li>查看位置 /usr/include/bits/local_lim.h </li>\n<li>查看位置 /usr/include/x86_64-linux-gnu/bits/local_lim.h</li>\n</ul>\n</li>\n<li><p>whereis   查看命令所在位置  </p>\n</li>\n<li><p>lsof [文件/路径]  查看占用该文件/该目录下文件的进程  </p>\n</li>\n<li><p>lsof -i  查看当前活动的网络连接 包括TCP / UDP</p>\n</li>\n<li><p>lsof -p [pid] 查看当前进程所有打开的文件/设备</p>\n</li>\n<li><p>ulimit -s 栈大小  </p>\n</li>\n</ul>","more":"<h3 id=\"进程分析和统计\"><a href=\"#进程分析和统计\" class=\"headerlink\" title=\"进程分析和统计\"></a>进程分析和统计</h3><ul>\n<li><p>pstack [pid]  查看进程栈  </p>\n</li>\n<li><p>gstack [pid]  同pstack 可打印出每个线程的堆栈    </p>\n</li>\n<li><p>gcore [pid1 pid2 …]  dump core而不杀死进程   </p>\n</li>\n<li><p>strace -T -r -c -p [pid] 查看或统计系统调用  -c统计.   </p>\n</li>\n<li><p>strace [exe_file]  调试运行程序  统计或查看该程序所有系统调用    </p>\n</li>\n</ul>\n<ul>\n<li><p>lsof [文件/路径]  查看占用该文件/该目录下文件的进程  </p>\n</li>\n<li><p>lsof -i  查看当前活动的网络连接 包括TCP / UDP</p>\n</li>\n<li><p>lsof -p [pid] 查看当前进程所有打开的文件/设备</p>\n</li>\n<li><p>内存布局的实际地址和实际大小等查询  内存泄露可快速判定</p>\n<ul>\n<li>cat /proc/pid/maps </li>\n<li>pmap</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"系统\"><a href=\"#系统\" class=\"headerlink\" title=\"系统\"></a>系统</h3><p>uname -a  系统版本<br>cat /proc/version  内核版本<br>getconf GNU_LIBPTHREAD_VERSION   查看线程模型  </p>\n<h3 id=\"调试\"><a href=\"#调试\" class=\"headerlink\" title=\"调试\"></a>调试</h3><ul>\n<li><p>readelf  </p>\n<ul>\n<li>可重定位的对象文件(Relocatable file) .o文件   </li>\n<li>可执行的对象文件(Executable file)  </li>\n<li>可被共享的对象文件(Shared object file)  </li>\n<li>readelf -a  [elf_file] 查看所有信息  </li>\n<li>readelf -h  [elf_file] 查看概要信息</li>\n<li>readelf -S  [elf_file] 查看所有段信息(比如-g编译会有debug段)  </li>\n</ul>\n</li>\n<li><p>objdump  和readelf类似 但是可以反汇编elf文件  </p>\n<ul>\n<li>objdump -S [file]  反汇编所有目标代码  </li>\n</ul>\n</li>\n<li><p>size [file] 查看程序被映射到内存中映像的大小信息  </p>\n</li>\n<li><p>gdb  </p>\n<ul>\n<li>gdb -tui 可以显示文本界面 text ui   </li>\n<li>layout regs 进入汇编调试模式  </li>\n<li>disassemble /rm  显示汇编指令的同时显示对应代码</li>\n<li>set disassemble-next-line on 自动反汇编后面要执行的代码  </li>\n<li>添加peda插件 直接显示汇编了   </li>\n<li>```<br>git clone <a href=\"https://github.com/longld/peda.git\" target=\"_blank\" rel=\"noopener\">https://github.com/longld/peda.git</a> ~/peda<br>echo “source ~/peda/peda.py” &gt;&gt; ~/.gdbinit<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  * x &#x2F;nfu &lt;mem addr&gt;   显示指定内存的值, 内存长度(单位)由u决定</span><br><span class=\"line\">    * n项  显示数量  </span><br><span class=\"line\">      * 要往下显示多少个 [fu] 即 n*(fu)   0代表一个都不显示 </span><br><span class=\"line\">    * f项  显示方式  </span><br><span class=\"line\">      * x 按十六进制格式显示变量 </span><br><span class=\"line\">      * d 按十进制格式显示变量  </span><br><span class=\"line\">      * u 按十进制格式显示无符号整型  </span><br><span class=\"line\">      * o 按八进制格式显示变量 </span><br><span class=\"line\">      * t 按二进制格式显示变量 </span><br><span class=\"line\">      * a 按十六进制格式显示变量 </span><br><span class=\"line\">      * i 指令地址格式</span><br><span class=\"line\">      * c 按字符格式显示变量 </span><br><span class=\"line\">      * f 按浮点数格式显示变量  </span><br><span class=\"line\">    * u项 单位大小   </span><br><span class=\"line\">      * b表示单字节 </span><br><span class=\"line\">      * h表示双字节 </span><br><span class=\"line\">      * w表示四字节 </span><br><span class=\"line\">      * g表示八字节  </span><br><span class=\"line\">    * 示例   x&#x2F;1xg  0x8888   </span><br><span class=\"line\">      * 以十六进制显示地址0x8888位置存储的8字节内容(比如long long类型的数字)</span><br><span class=\"line\">  </span><br><span class=\"line\">### 其他手册&#x2F;详细手册   </span><br><span class=\"line\"></span><br><span class=\"line\">###### ldd   查看程序运行时库  </span><br><span class=\"line\">显示 依赖的库名,  实际记载到的库, 库加载后的开始地址 </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">###### strace</span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n</ul>\n<p>-c 统计每一系统调用的所执行的时间,次数和出错的次数等.<br>-d 输出strace关于标准错误的调试信息.<br>-f 跟踪由fork调用所产生的子进程.<br>-ff 如果提供-o filename,则所有进程的跟踪结果输出到相应的filename.pid中,pid是各进程的进程号.<br>-F 尝试跟踪vfork调用.在-f时,vfork不被跟踪.<br>-h 输出简要的帮助信息.<br>-i 输出系统调用的入口指针.<br>-q 禁止输出关于脱离的消息.<br>-r 打印出相对时间关于,,每一个系统调用.<br>-t 在输出中的每一行前加上时间信息.<br>-tt 在输出中的每一行前加上时间信息,微秒级.<br>-ttt 微秒级输出,以秒了表示时间.<br>-T 显示每一调用所耗的时间.<br>-v 输出所有的系统调用.一些调用关于环境变量,状态,输入输出等调用由于使用频繁,默认不输出.<br>-V 输出strace的版本信息.<br>-x 以十六进制形式输出非标准字符串<br>-xx 所有字符串以十六进制形式输出.<br>-a column<br>设置返回值的输出位置.默认 为40.<br>-e expr<br>指定一个表达式,用来控制如何跟踪.格式如下:<br>[qualifier=][!]value1[,value2]…<br>qualifier只能是 trace,abbrev,verbose,raw,signal,read,write其中之一.value是用来限定的符号或数字.默认的 qualifier是 trace.感叹号是否定符号.例如:<br>-eopen等价于 -e trace=open,表示只跟踪open调用.而-etrace!=open表示跟踪除了open以外的其他调用.有两个特殊的符号 all 和 none.<br>注意有些shell使用!来执行历史记录里的命令,所以要使用\\.<br>-e trace=set<br>只跟踪指定的系统 调用.例如:-e trace=open,close,rean,write表示只跟踪这四个系统调用.默认的为set=all.<br>-e trace=file<br>只跟踪有关文件操作的系统调用.<br>-e trace=process<br>只跟踪有关进程控制的系统调用.<br>-e trace=network<br>跟踪与网络有关的所有系统调用.<br>-e strace=signal<br>跟踪所有与系统信号有关的 系统调用<br>-e trace=ipc<br>跟踪所有与进程通讯有关的系统调用<br>-e abbrev=set<br>设定 strace输出的系统调用的结果集.-v 等与 abbrev=none.默认为abbrev=all.<br>-e raw=set<br>将指 定的系统调用的参数以十六进制显示.<br>-e signal=set<br>指定跟踪的系统信号.默认为all.如 signal=!SIGIO(或者signal=!io),表示不跟踪SIGIO信号.<br>-e read=set<br>输出从指定文件中读出 的数据.例如:<br>-e read=3,5<br>-e write=set<br>输出写入到指定文件中的数据.<br>-o filename<br>将strace的输出写入文件filename<br>-p pid<br>跟踪指定的进程pid.<br>-s strsize<br>指定输出的字符串的最大长度.默认为32.文件名一直全部输出.<br>-u username<br>以username 的UID和GID执行被跟踪的命令</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">###### vmstat</span><br></pre></td></tr></table></figure>\n<p>Procs（进程）:<br>  r: 运行队列中进程数量<br>  b: 等待IO的进程数量<br>Memory（内存）:<br>  swpd: 使用虚拟内存大小<br>  free: 可用内存大小<br>  buff: 用作缓冲的内存大小<br>  cache: 用作缓存的内存大小<br>Swap:<br>  si: 每秒从交换区写到内存的大小<br>  so: 每秒写入交换区的内存大小<br>  IO：（现在的Linux版本块的大小为1024bytes）<br>  bi: 每秒读取的块数<br>  bo: 每秒写入的块数<br>system：<br>  in: 每秒中断数，包括时钟中断<br>  cs: 每秒上下文切换数<br>  CPU（以百分比表示）<br>  us: 用户进程执行时间(user time)<br>  sy: 系统进程执行时间(system time)<br>  id: 空闲时间(包括IO等待时间)<br>  wa: 等待IO时间</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">###### sar</span><br></pre></td></tr></table></figure>\n<p>-A 汇总所有的报告<br>-a 报告文件读写使用情况<br>-B 报告附加的缓存的使用情况<br>-b 报告缓存的使用情况<br>-c 报告系统调用的使用情况<br>-d 报告磁盘的使用情况<br>-g 报告串口的使用情况<br>-h 报告关于buffer使用的统计数据<br>-m 报告IPC消息队列和信号量的使用情况<br>-n 报告命名cache的使用情况<br>-p 报告调页活动的使用情况<br>-q 报告运行队列和交换队列的平均长度<br>-R 报告进程的活动情况<br>-r 报告没有使用的内存页面和硬盘块<br>-u 报告CPU的利用率<br>-v 报告进程、i节点、文件和锁表状态<br>-w 报告系统交换活动状况<br>-y 报告TTY设备活动状况</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">###### &#x2F;proc&#x2F;$pid&#x2F;maps   虚拟内存地址</span><br></pre></td></tr></table></figure>\n<p>address           perms offset  dev   inode   pathname<br>08048000-08056000 r-xp 00000000 03:0c 64593   /usr/sbin/gpm</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">对应内核的vm_area_struct项  </span><br><span class=\"line\">* 地址 address [vm_start-vm_end]: 进程地址空间中区域的开始和结束地址  </span><br><span class=\"line\">  </span><br><span class=\"line\">* 权限 permissions [vm_flags]：虚拟内存的权限，</span><br><span class=\"line\">  * [r&#x3D;读] [w&#x3D;写] [x&#x3D;执行]  [s&#x2F;p&#x3D;共享&#x2F;私有]     </span><br><span class=\"line\">  * 禁用显示 - </span><br><span class=\"line\">  * mprotect设置权限   </span><br><span class=\"line\">  </span><br><span class=\"line\">* 偏移量 offset [vm_pgoff]：映射开始的偏移量  </span><br><span class=\"line\">  * 对于有名映射, 比如从文件使用mmap的映射, 表示此段虚拟内存起始地址在文件中以页为单位的偏移 .  </span><br><span class=\"line\">    * 缺页异常时会根据这个找到文件对应地址的数据并加载上来  </span><br><span class=\"line\">  * 对匿名映射 它等于0或者vm_start&#x2F;PAGE_SIZE   </span><br><span class=\"line\">  </span><br><span class=\"line\">* 设备 device：映像文件的主设备号和次设备号</span><br><span class=\"line\">  * 对匿名映射来说 因为没有文件在磁盘上 所以没有设备号 始终为00:00 </span><br><span class=\"line\">  * 对有名映射来说 是映射的文件所在设备的设备号   </span><br><span class=\"line\">* 节点 inode：映像文件的节点号</span><br><span class=\"line\">  * 对有名映射来说 是映射的文件的节点号</span><br><span class=\"line\">  * 对匿名映射来说 因为没有文件在磁盘上 所以没有节点号 始终为00:00  </span><br><span class=\"line\">* 路径 pathname: 映像文件的路径  </span><br><span class=\"line\">  * 对有名来说 是映射的文件名</span><br><span class=\"line\">  * 对匿名映射来说 是此段虚拟内存在进程中的角色 </span><br><span class=\"line\">    * [stack]表示在进程中作为栈使用 </span><br><span class=\"line\">    * [heap]表示堆</span><br><span class=\"line\">    * [vdso]表示虚拟动态共享对象 它被系统调用用于切换到内核模式   </span><br><span class=\"line\">    *  其余情况则无显示</span><br><span class=\"line\"></span><br><span class=\"line\">###### pmap 虚拟内存地址  类似 &#x2F;proc&#x2F;$pid&#x2F;maps   </span><br><span class=\"line\">显示的数据更干净一些  还能显示出比如共享内存的shmid和起始位置 和大小    </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">###### gstack  脚本  拷贝自centos</span><br></pre></td></tr></table></figure>\n<p>#!/bin/sh</p>\n<p>if test $# -ne 1; then<br>    echo “Usage: <code>basename $0 .sh</code> <process-id>“ 1&gt;&amp;2<br>    exit 1<br>fi</p>\n<p>if test ! -r /proc/$1; then<br>    echo “Process $1 not found.” 1&gt;&amp;2<br>    exit 1<br>fi</p>\n<h1 id=\"GDB-doesn’t-allow-“thread-apply-all-bt”-when-the-process-isn’t\"><a href=\"#GDB-doesn’t-allow-“thread-apply-all-bt”-when-the-process-isn’t\" class=\"headerlink\" title=\"GDB doesn’t allow “thread apply all bt” when the process isn’t\"></a>GDB doesn’t allow “thread apply all bt” when the process isn’t</h1><h1 id=\"threaded-need-to-peek-at-the-process-to-determine-if-that-or-the\"><a href=\"#threaded-need-to-peek-at-the-process-to-determine-if-that-or-the\" class=\"headerlink\" title=\"threaded; need to peek at the process to determine if that or the\"></a>threaded; need to peek at the process to determine if that or the</h1><h1 id=\"simpler-“bt”-should-be-used\"><a href=\"#simpler-“bt”-should-be-used\" class=\"headerlink\" title=\"simpler “bt” should be used.\"></a>simpler “bt” should be used.</h1><p>backtrace=”bt”<br>if test -d /proc/$1/task ; then<br>    # Newer kernel; has a task/ directory.<br>    if test <code>/bin/ls /proc/$1/task | /usr/bin/wc -l</code> -gt 1 2&gt;/dev/null ; then<br>        backtrace=”thread apply all bt”<br>    fi<br>elif test -f /proc/$1/maps ; then<br>    # Older kernel; go by it loading libpthread.<br>    if /bin/grep -e libpthread /proc/$1/maps &gt; /dev/null 2&gt;&amp;1 ; then<br>        backtrace=”thread apply all bt”<br>    fi<br>fi</p>\n<p>GDB=${GDB:-/usr/bin/gdb}</p>\n<p>if $GDB -nx –quiet –batch –readnever &gt; /dev/null 2&gt;&1; then<br>    readnever=–readnever<br>else<br>    readnever=<br>fi</p>\n<h1 id=\"Run-GDB-strip-out-unwanted-noise\"><a href=\"#Run-GDB-strip-out-unwanted-noise\" class=\"headerlink\" title=\"Run GDB, strip out unwanted noise.\"></a>Run GDB, strip out unwanted noise.</h1><p>$GDB –quiet $readnever -nx /proc/$1/exe $1 &lt;&lt;EOF 2&gt;&amp;1 |<br>set width 0<br>set height 0<br>set pagination no<br>$backtrace<br>EOF<br>/bin/sed -n <br>    -e ‘s/^((gdb) )*//‘ <br>    -e ‘/^#/p’ <br>    -e ‘/^Thread/p’</p>\n<pre><code></code></pre>"},{"title":"AT&T 和 INTEL 汇编格式区别","date":"2019-01-11T09:21:00.000Z","author":"yawei.zhang","_content":"\n### 一、AT&T 格式Linux 汇编语法格式\n\n\n* 在 AT&T 汇编格式中，寄存器名要加上 '%' 作为前缀；而在 Intel 汇编格式中，寄存器名不需要加前缀。例如：  \n\n|       AT&T格式       |         Intel格式           |\n|       -------       |        -----------          |\n|   pushl %eax        |           push eax          |\n\n  <!-- more -->  \n\n* 在 AT&T 汇编格式中，用 '$' 前缀表示一个立即操作数；而在 Intel 汇编格式中，立即数的表示不用带任何前缀。例如：  \n\n|       AT&T格式       |         Intel格式           |\n|       -------       |        -----------          |\n|       pushl $1       |           push 1            |\n\n\n* AT&T 和 Intel 格式中的源操作数和目标操作数的位置正好相反。在 Intel 汇编格式中，目标操作数在源操作数的左边；而在 AT&T 汇编格式中，目标操作数在源操作数的右边。例如：  \n\n|       AT&T格式       |         Intel格式           |\n|       -------        |        -----------          |\n|      addl $1, %eax   |         add eax, 1          |\n\n\n\n* 在 AT&T 汇编格式中，操作数的字长由操作符的最后一个字母决定，后缀'b'、'w'、'l'分别表示操作数为字节（byte，8 比特）、字（word，16 比特）和长字（long，32比特）；而在 Intel 汇编格式中，操作数的字长是用 \"byte ptr\" 和 \"word ptr\" 等前缀来表示的。例如：\n\n|       AT&T格式       |         Intel格式                   |\n|       -------        |        -----------                  |\n|      movb val, %al   |         mov al, byte ptr val        |\n\n\n* 在 AT&T 汇编格式中，绝对转移和调用指令（jump/call）的操作数前要加上'*'作为前缀，而在 Intel 格式中则不需要。  \n* 远程转移指令和远程子调用指令的操作码，在 AT&T 汇编格式中为 \"ljump\" 和 \"lcall\"，而在 Intel 汇编格式中则为 \"jmp far\" 和 \"call far\"，即：  \n\n|       AT&T格式                    |         Intel格式                   |\n|       -------                     |        -----------                  |\n|      ljump $section, $offset      |        jmp far section:offset       |\n|     lcall $section, $offset       |        call far section:offset      |\n\n\n* 与之相应的远程返回指令则为：\n\n|       AT&T格式               |         Intel格式                 |\n|       -------                 |        -----------             |\n|      lret $stack_adjust      |        ret far stack_adjust      |\n\n\n* 内存操作数的寻址方式  \n\n|       AT&T格式                             |         Intel格式                                 |\n|       -------                              |        -----------                               |\n|      section:disp(base, index, scale)      |        section:[base + index*scale + disp]      |\n\n\n\n* 由于 Linux 工作在保护模式下，用的是 32 位线性地址，所以在计算地址时不用考虑段基址和偏移量，而是采用如下的地址计算方法：\n```\ndisp + base + index * scale\n```\n\n* 下面是一些内存操作数的例子：  \n\n|       AT&T格式                             |          Intel格式                                 |\n|       -------                             |          -----------                               |\n|      movl -4(%ebp), %eax                  |          mov eax, [ebp - 4]                       |\n|      movl array(, %eax, 4), %eax          |          mov eax, [eax*4 + array]                 |\n|      movw array(%ebx, %eax, 4), %cx       |          mov cx, [ebx + 4*eax + array]              |\n|      movb $4, %fs:(%eax)                  |          mov fs:eax, 4                             |\n\n\n\n\n### 二、Hello World!\n\n既然所有程序设计语言的第一个例子都是在屏幕上打印一个字符串 \"Hello World!\"，那我们也以这种方式来开始介绍 Linux 下的汇编语言程序设计。  \n\n在 Linux 操作系统中，你有很多办法可以实现在屏幕上显示一个字符串，但最简洁的方式是使用 Linux 内核提供的系统调用。使用这种方法最大的好处是可以直接和操作系统的内核进行通讯，不需要链接诸如 libc 这样的函数库，也不需要使用 ELF 解释器，因而代码尺寸小且执行速度快。  \n\nLinux 是一个运行在保护模式下的 32 位操作系统，采用 flat memory 模式，目前最常用到的是 ELF 格式的二进制代码。一个 ELF 格式的可执行程序通常划分为如下几个部分：.text、.data 和 .bss，其中 .text 是只读的代码区，.data 是可读可写的数据区，而 .bss 则是可读可写且没有初始化的数据区。代码区和数据区在 ELF 中统称为 section，根据实际需要你可以使用其它标准的 section，也可以添加自定义 section，但一个 ELF 可执行程序至少应该有一个 .text 部分。下面给出我们的第一个汇编程序，用的是 AT&T 汇编语言格式：   \n\n###### 例1. AT&T 格式\n\n* #hello.s\n```\n.data                    # 数据段声明\n\n        msg : .string \"Hello, world!\\\\n\" # 要输出的字符串\n\n        len = . - msg                   # 字串长度\n\n.text                    # 代码段声明\n\n.global _start           # 指定入口函数\n\n_start:                  # 在屏幕上显示一个字符串\n\n        movl $len, %edx  # 参数三：字符串长度\n\n        movl $msg, %ecx  # 参数二：要显示的字符串\n\n        movl $1, %ebx    # 参数一：文件描述符(stdout)\n\n        movl $4, %eax    # 系统调用号(sys_write)\n\n        int  $0x80       # 调用内核功能\n\n                         # 退出程序\n\n        movl $0,%ebx     # 参数一：退出代码\n\n        movl $1,%eax     # 系统调用号(sys_exit)\n\n        int  $0x80       # 调用内核功能\n```\n\n初次接触到 AT&T 格式的汇编代码时，很多程序员都认为太晦涩难懂了，没有关系，在 Linux 平台上你同样可以使用 Intel 格式来编写汇编程序：\n\n###### 例2. Intel 格式\n\n; hello.asm\n```\nsection .data            ; 数据段声明\n\n        msg db \"Hello, world!\", 0xA     ; 要输出的字符串\n\n        len equ $ - msg                 ; 字串长度\n\nsection .text            ; 代码段声明\n\nglobal _start            ; 指定入口函数\n\n_start:                  ; 在屏幕上显示一个字符串\n\n        mov edx, len     ; 参数三：字符串长度\n\n        mov ecx, msg     ; 参数二：要显示的字符串\n\n        mov ebx, 1       ; 参数一：文件描述符(stdout)\n\n        mov eax, 4       ; 系统调用号(sys_write)\n\n        int 0x80         ; 调用内核功能\n\n                         ; 退出程序\n\n        mov ebx, 0       ; 参数一：退出代码\n\n        mov eax, 1       ; 系统调用号(sys_exit)\n\n        int 0x80         ; 调用内核功能\n```\n\n上面两个汇编程序采用的语法虽然完全不同，但功能却都是调用 Linux 内核提供的 sys_write 来显示一个字符串，然后再调用 sys_exit 退出程序。在 Linux 内核源文件 include/asm-i386/unistd.h 中，可以找到所有系统调用的定义。\n\n### 四、系统调用\n\n即便是最简单的汇编程序，也难免要用到诸如输入、输出以及退出等操作，而要进行这些操作则需要调用操作系统所提供的服务，也就是系统调用。除非你的程序只完成加减乘除等数学运算，否则将很难避免使用系统调用，事实上除了系统调用不同之外，各种操作系统的汇编编程往往都是很类似的。\n\n在 Linux 平台下有两种方式来使用系统调用：利用封装后的 C 库（libc）或者通过汇编直接调用。其中通过汇编语言来直接调用系统调用，是最高效地使用 Linux 内核服务的方法，因为最终生成的程序不需要与任何库进行链接，而是直接和内核通信。\n\n和 DOS 一样，Linux 下的系统调用也是通过中断（int 0x80）来实现的。在执行 int 80 指令时，寄存器 eax 中存放的是系统调用的功能号，而传给系统调用的参数则必须按顺序放到寄存器 ebx，ecx，edx，esi，edi 中，当系统调用完成之后，返回值可以在寄存器 eax 中获得。\n\n所有的系统调用功能号都可以在文件 /usr/include/bits/syscall.h 中找到，为了便于使用，它们是用 SYS_<name> 这样的宏来定义的，如 SYS_write、SYS_exit 等。例如，经常用到的 write 函数是如下定义的：\n```\nssize_t write(int fd, const void *buf, size_t count);\n```\n该函数的功能最终是通过 SYS_write 这一系统调用来实现的。根据上面的约定，参数 fb、buf 和 count 分别存在寄存器 ebx、ecx 和 edx 中，而系统调用号 SYS_write 则放在寄存器 eax 中，当 int 0x80 指令执行完毕后，返回值可以从寄存器 eax 中获得。\n\n或许你已经发现，在进行系统调用时至多只有 5 个寄存器能够用来保存参数，难道所有系统调用的参数个数都不超过 5 吗？当然不是，例如 mmap 函数就有 6 个参数，这些参数最后都需要传递给系统调用 SYS_mmap：\n```\nvoid * mmap(void *start, size_t length, int prot , int flags, int fd, off_t offset);c\n```\n当一个系统调用所需的参数个数大于 5 时，执行int 0x80 指令时仍需将系统调用功能号保存在寄存器 eax 中，所不同的只是全部参数应该依次放在一块连续的内存区域里，同时在寄存器 ebx 中保存指向该内存区域的指针。系统调用完成之后，返回值仍将保存在寄存器 eax 中。\n\n由于只是需要一块连续的内存区域来保存系统调用的参数，因此完全可以像普通的函数调用一样使用栈(stack)来传递系统调用所需的参数。但要注意一点， Linux 采用的是 C 语言的调用模式，这就意味着所有参数必须以相反的顺序进栈，即最后一个参数先入栈，而第一个参数则最后入栈。如果采用栈来传递系统调用所需的参数，在执行 int 0x80 指令时还应该将栈指针的当前值复制到寄存器 ebx中。\n\n### 五、命令行参数\n\n在 Linux 操作系统中，当一个可执行程序通过命令行启动时，其所需的参数将被保存到栈中：首先是 argc，然后是指向各个命令行参数的指针数组 argv，最后是指向环境变量的指针数据 envp。在编写汇编语言程序时，很多时候需要对这些参数进行处理，下面的代码示范了如何在汇编代码中进行命令行参数的处理：\n\n例3. 处理命令行参数\n\n##### args.S\n```\n.text\n\n.globl _start\n\n_start:\n\npopl %ecx # argc\n\nvnext:\n\npopl %ecx # argv\n\ntest %ecx, %ecx # 空指针表明结束\n\njz exit\n\nmovl %ecx, %ebx\n\nxorl %edx, %edx\n\nstrlen:\n\nmovb (%ebx), %al\n\ninc %edx\n\ninc %ebx\n\ntest %al, %al\n\njnz strlen\n\nmovb $10, -1(%ebx)\n\nmovl $4, %eax # 系统调用号(sys_write)\n\nmovl $1, %ebx # 文件描述符(stdout)\n\nint $0x80\n\njmp vnext\n\nexit: movl $1,%eax # 系统调用号(sys_exit)\n\nxorl %ebx, %ebx # 退出代码\n\nint $0x80\n\nret\n```\n\n### 六、GCC 内联汇编\n\n用汇编编写的程序虽然运行速度快，但开发速度非常慢，效率也很低。如果只是想对关键代码段进行优化，或许更好的办法是将汇编指令嵌入到 C 语言程序中，从而充分利用高级语言和汇编语言各自的特点。但一般来讲，在 C 代码中嵌入汇编语句要比\"纯粹\"的汇编语言代码复杂得多，因为需要解决如何分配寄存器，以及如何与C代码中的变量相结合等问题。\n\nGCC 提供了很好的内联汇编支持，最基本的格式是：\n```\n__asm__(\"asm statements\");\n```\n例如：\n```\n__asm__(\"nop\");\n```\n如果需要同时执行多条汇编语句，则应该用\"\\\\n\\\\t\"将各个语句分隔开，例如：\n```\n__asm__( \"pushl %%eax \\\\n\\\\t\"\n\n\"movl $0, %%eax \\\\n\\\\t\"\n\n\"popl %eax\");\n```\n通常嵌入到 C 代码中的汇编语句很难做到与其它部分没有任何关系，因此更多时候需要用到完整的内联汇编格式：\n```\n__asm__(\"asm statements\" : outputs : inputs : registers-modified);\n```\n插入到 C 代码中的汇编语句是以\":\"分隔的四个部分，其中第一部分就是汇编代码本身，通常称为指令部，其格式和在汇编语言中使用的格式基本相同。指令部分是必须的，而其它部分则可以根据实际情况而省略。\n\n在将汇编语句嵌入到C代码中时，操作数如何与C代码中的变量相结合是个很大的问题。GCC采用如下方法来解决这个问题：程序员提供具体的指令，而对寄存器的使用则只需给出\"样板\"和约束条件就可以了，具体如何将寄存器与变量结合起来完全由GCC和GAS来负责。\n\n在GCC 内联汇编语句的指令部中，加上前缀''%''的数字(如%0，%1)表示的就是需要使用寄存器的\"样板\"操作数。指令部中使用了几个样板操作数，就表明有几个变量需要与寄存器相结合，这样GCC和GAS在编译和汇编时会根据后面给定的约束条件进行恰当的处理。由于样板操作数也使用'' %''作为前缀，因此在涉及到具体的寄存器时，寄存器名前面应该加上两个''%''，以免产生混淆。\n\n紧跟在指令部后面的是输出部，是规定输出变量如何与样板操作数进行结合的条件，每个条件称为一个\"约束\"，必要时可以包含多个约束，相互之间用逗号分隔开就可以了。每个输出约束都以''=''号开始，然后紧跟一个对操作数类型进行说明的字后，最后是如何与变量相结合的约束。凡是与输出部中说明的操作数相结合的寄存器或操作数本身，在执行完嵌入的汇编代码后均不保留执行之前的内容，这是GCC在调度寄存器时所使用的依据。\n\n输出部后面是输入部，输入约束的格式和输出约束相似，但不带''=''号。如果一个输入约束要求使用寄存器，则GCC在预处理时就会为之分配一个寄存器，并插入必要的指令将操作数装入该寄存器。与输入部中说明的操作数结合的寄存器或操作数本身，在执行完嵌入的汇编代码后也不保留执行之前的内容。\n\n有时在进行某些操作时，除了要用到进行数据输入和输出的寄存器外，还要使用多个寄存器来保存中间计算结果，这样就难免会破坏原有寄存器的内容。在GCC内联汇编格式中的最后一个部分中，可以对将产生副作用的寄存器进行说明，以便GCC能够采用相应的措施。\n\n下面是一个内联汇编的简单例子：\n\n###### 例4.内联汇编\n```\nint main()\n{\n    int a = 10, b = 0;\n\n    __asm__ __volatile__(\"movl %1, %%eax;\\\\n\\\\r\"\n\n    \"movl %%eax, %0;\"\n\n    :\"=r\"(b)\n\n    :\"r\"(a)\n\n    :\"%eax\");\n\n    printf(\"Result: %d, %d\\\\n\", a, b);\n}\n```\n\n上面的程序完成将变量a的值赋予变量b，有几点需要说明：\n\n变量b是输出操作数，通过%0来引用，而变量a是输入操作数，通过%1来引用。\n输入操作数和输出操作数都使用r进行约束，表示将变量a和变量b存储在寄存器中。输入约束和输出约束的不同点在于输出约束多一个约束修饰符''=''。\n在内联汇编语句中使用寄存器eax时，寄存器名前应该加两个''%''，即%%eax。内联汇编中使用%0、%1等来标识变量，任何只带一个''%''的标识符都看成是操作数，而不是寄存器。\n内联汇编语句的最后一个部分告诉GCC它将改变寄存器eax中的值，GCC在处理时不应使用该寄存器来存储任何其它的值。\n由于变量b被指定成输出操作数，当内联汇编语句执行完毕后，它所保存的值将被更新。\n在内联汇编中用到的操作数从输出部的第一个约束开始编号，序号从0开始，每个约束记数一次，指令部要引用这些操作数时，只需在序号前加上''%''作为前缀就可以了。需要注意的是，内联汇编语句的指令部在引用一个操作数时总是将其作为32位的长字使用，但实际情况可能需要的是字或字节，因此应该在约束中指明正确的限定符：\n\n\n|                限定符                 |            意义          \n|                -----                 |            -----          \n|                \"m\"、\"v\"、\"o\"          |            内存单元        \n|                \"r\"                    |            任何寄存器         \n|                \"q\"                    |            寄存器eax、ebx、ecx、edx之一     \n|                \"i\"、\"h\"               |            直接操作数          \n|                \"E\"和\"F\"               |            浮点数           \n|                \"g\"                    |            任意          \n|                \"a\"、\"b\"、\"c\"、\"d\"      |            分别表示寄存器eax、ebx、ecx和edx          \n|                \"S\"和\"D\"               |            寄存器esi、edi          \n|                \"I\"                    |            常数（0至31）         \n\n\n\n\n### 七.  LIBCO协程的swap代码  \n```\n.globl coctx_swap\n#if !defined( __APPLE__ )\n.type  coctx_swap, @function\n#endif\ncoctx_swap:\n\n#if defined(__i386__)\n\tleal 4(%esp), %eax //sp \n\tmovl 4(%esp), %esp \n\tleal 32(%esp), %esp //parm a : &regs[7] + sizeof(void*)\n\n\tpushl %eax //esp ->parm a \n\n\tpushl %ebp\n\tpushl %esi\n\tpushl %edi\n\tpushl %edx\n\tpushl %ecx\n\tpushl %ebx\n\tpushl -4(%eax)\n\n\t\n\tmovl 4(%eax), %esp //parm b -> &regs[0]\n\n\tpopl %eax  //ret func addr\n\tpopl %ebx  \n\tpopl %ecx\n\tpopl %edx\n\tpopl %edi\n\tpopl %esi\n\tpopl %ebp\n\tpopl %esp\n\tpushl %eax //set ret func addr\n\n\txorl %eax, %eax\n\tret\n\n#elif defined(__x86_64__)\n\tleaq 8(%rsp),%rax\n\tleaq 112(%rdi),%rsp\n\tpushq %rax\n\tpushq %rbx\n\tpushq %rcx\n\tpushq %rdx\n\n\tpushq -8(%rax) //ret func addr\n\n\tpushq %rsi\n\tpushq %rdi\n\tpushq %rbp\n\tpushq %r8\n\tpushq %r9\n\tpushq %r12\n\tpushq %r13\n\tpushq %r14\n\tpushq %r15\n\t\n\tmovq %rsi, %rsp\n\tpopq %r15\n\tpopq %r14\n\tpopq %r13\n\tpopq %r12\n\tpopq %r9\n\tpopq %r8\n\tpopq %rbp\n\tpopq %rdi\n\tpopq %rsi\n\tpopq %rax //ret func addr\n\tpopq %rdx\n\tpopq %rcx\n\tpopq %rbx\n\tpopq %rsp\n\tpushq %rax\n\t\n\txorl %eax, %eax\n\tret\n#endif\n\n```\n\n使用方式:  \n```\n\n#define ESP 0\n#define EIP 1\n#define EAX 2\n#define ECX 3\n// -----------\n#define RSP 0\n#define RIP 1\n#define RBX 2\n#define RDI 3\n#define RSI 4\n\n#define RBP 5\n#define R12 6\n#define R13 7\n#define R14 8\n#define R15 9\n#define RDX 10\n#define RCX 11\n#define R8 12\n#define R9 13\n\n\n//----- --------\n// 32 bit\n// | regs[0]: ret |\n// | regs[1]: ebx |\n// | regs[2]: ecx |\n// | regs[3]: edx |\n// | regs[4]: edi |\n// | regs[5]: esi |\n// | regs[6]: ebp |\n// | regs[7]: eax |  = esp\nenum\n{\n\tkEIP = 0,\n\tkESP = 7,\n};\n\n//-------------\n// 64 bit\n//low | regs[0]: r15 |\n//    | regs[1]: r14 |\n//    | regs[2]: r13 |\n//    | regs[3]: r12 |\n//    | regs[4]: r9  |\n//    | regs[5]: r8  | \n//    | regs[6]: rbp |\n//    | regs[7]: rdi |\n//    | regs[8]: rsi |\n//    | regs[9]: ret |  //ret func addr\n//    | regs[10]: rdx |\n//    | regs[11]: rcx | \n//    | regs[12]: rbx |\n//hig | regs[13]: rsp |\nenum\n{\n\tkRDI = 7,\n\tkRSI = 8,\n\tkRETAddr = 9,\n\tkRSP = 13,\n};\n\nint coctx_make( coctx_t *ctx,coctx_pfn_t pfn,const void *s,const void *s1 )\n{\n\tchar *sp = ctx->ss_sp + ctx->ss_size;\n\tsp = (char*) ((unsigned long)sp & -16LL  );\n\n\tmemset(ctx->regs, 0, sizeof(ctx->regs));\n\n\tctx->regs[ kRSP ] = sp - 8;\n\n\tctx->regs[ kRETAddr] = (char*)pfn;\n\n\tctx->regs[ kRDI ] = (char*)s;\n\tctx->regs[ kRSI ] = (char*)s1;\n\treturn 0;\n}\n\nint coctx_init( coctx_t *ctx )\n{\n\tmemset( ctx,0,sizeof(*ctx));\n\treturn 0;\n}\n\nextern \"C\"\n{\n    extern void coctx_swap(coctx_t *, coctx_t*) asm(\"coctx_swap\");\n};\n\ncoctx_init(&worker.ctx);\ncoctx_make(&worker.ctx, stress, (void*)0, &worker);\nclock_t start = clock();\nfor (int i = 0; i < 1000 * 10000; ++i)\n{\n    coctx_swap(&main_co.ctx, &worker.ctx);\n}\n\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","source":"_posts/2019-01-11-AT&T-INTEL-ASM.md","raw":"---\ntitle: AT&T 和 INTEL 汇编格式区别  \ndate: 2019-01-11 17:21:00\ncategories: develop \nauthor: yawei.zhang \n---\n\n### 一、AT&T 格式Linux 汇编语法格式\n\n\n* 在 AT&T 汇编格式中，寄存器名要加上 '%' 作为前缀；而在 Intel 汇编格式中，寄存器名不需要加前缀。例如：  \n\n|       AT&T格式       |         Intel格式           |\n|       -------       |        -----------          |\n|   pushl %eax        |           push eax          |\n\n  <!-- more -->  \n\n* 在 AT&T 汇编格式中，用 '$' 前缀表示一个立即操作数；而在 Intel 汇编格式中，立即数的表示不用带任何前缀。例如：  \n\n|       AT&T格式       |         Intel格式           |\n|       -------       |        -----------          |\n|       pushl $1       |           push 1            |\n\n\n* AT&T 和 Intel 格式中的源操作数和目标操作数的位置正好相反。在 Intel 汇编格式中，目标操作数在源操作数的左边；而在 AT&T 汇编格式中，目标操作数在源操作数的右边。例如：  \n\n|       AT&T格式       |         Intel格式           |\n|       -------        |        -----------          |\n|      addl $1, %eax   |         add eax, 1          |\n\n\n\n* 在 AT&T 汇编格式中，操作数的字长由操作符的最后一个字母决定，后缀'b'、'w'、'l'分别表示操作数为字节（byte，8 比特）、字（word，16 比特）和长字（long，32比特）；而在 Intel 汇编格式中，操作数的字长是用 \"byte ptr\" 和 \"word ptr\" 等前缀来表示的。例如：\n\n|       AT&T格式       |         Intel格式                   |\n|       -------        |        -----------                  |\n|      movb val, %al   |         mov al, byte ptr val        |\n\n\n* 在 AT&T 汇编格式中，绝对转移和调用指令（jump/call）的操作数前要加上'*'作为前缀，而在 Intel 格式中则不需要。  \n* 远程转移指令和远程子调用指令的操作码，在 AT&T 汇编格式中为 \"ljump\" 和 \"lcall\"，而在 Intel 汇编格式中则为 \"jmp far\" 和 \"call far\"，即：  \n\n|       AT&T格式                    |         Intel格式                   |\n|       -------                     |        -----------                  |\n|      ljump $section, $offset      |        jmp far section:offset       |\n|     lcall $section, $offset       |        call far section:offset      |\n\n\n* 与之相应的远程返回指令则为：\n\n|       AT&T格式               |         Intel格式                 |\n|       -------                 |        -----------             |\n|      lret $stack_adjust      |        ret far stack_adjust      |\n\n\n* 内存操作数的寻址方式  \n\n|       AT&T格式                             |         Intel格式                                 |\n|       -------                              |        -----------                               |\n|      section:disp(base, index, scale)      |        section:[base + index*scale + disp]      |\n\n\n\n* 由于 Linux 工作在保护模式下，用的是 32 位线性地址，所以在计算地址时不用考虑段基址和偏移量，而是采用如下的地址计算方法：\n```\ndisp + base + index * scale\n```\n\n* 下面是一些内存操作数的例子：  \n\n|       AT&T格式                             |          Intel格式                                 |\n|       -------                             |          -----------                               |\n|      movl -4(%ebp), %eax                  |          mov eax, [ebp - 4]                       |\n|      movl array(, %eax, 4), %eax          |          mov eax, [eax*4 + array]                 |\n|      movw array(%ebx, %eax, 4), %cx       |          mov cx, [ebx + 4*eax + array]              |\n|      movb $4, %fs:(%eax)                  |          mov fs:eax, 4                             |\n\n\n\n\n### 二、Hello World!\n\n既然所有程序设计语言的第一个例子都是在屏幕上打印一个字符串 \"Hello World!\"，那我们也以这种方式来开始介绍 Linux 下的汇编语言程序设计。  \n\n在 Linux 操作系统中，你有很多办法可以实现在屏幕上显示一个字符串，但最简洁的方式是使用 Linux 内核提供的系统调用。使用这种方法最大的好处是可以直接和操作系统的内核进行通讯，不需要链接诸如 libc 这样的函数库，也不需要使用 ELF 解释器，因而代码尺寸小且执行速度快。  \n\nLinux 是一个运行在保护模式下的 32 位操作系统，采用 flat memory 模式，目前最常用到的是 ELF 格式的二进制代码。一个 ELF 格式的可执行程序通常划分为如下几个部分：.text、.data 和 .bss，其中 .text 是只读的代码区，.data 是可读可写的数据区，而 .bss 则是可读可写且没有初始化的数据区。代码区和数据区在 ELF 中统称为 section，根据实际需要你可以使用其它标准的 section，也可以添加自定义 section，但一个 ELF 可执行程序至少应该有一个 .text 部分。下面给出我们的第一个汇编程序，用的是 AT&T 汇编语言格式：   \n\n###### 例1. AT&T 格式\n\n* #hello.s\n```\n.data                    # 数据段声明\n\n        msg : .string \"Hello, world!\\\\n\" # 要输出的字符串\n\n        len = . - msg                   # 字串长度\n\n.text                    # 代码段声明\n\n.global _start           # 指定入口函数\n\n_start:                  # 在屏幕上显示一个字符串\n\n        movl $len, %edx  # 参数三：字符串长度\n\n        movl $msg, %ecx  # 参数二：要显示的字符串\n\n        movl $1, %ebx    # 参数一：文件描述符(stdout)\n\n        movl $4, %eax    # 系统调用号(sys_write)\n\n        int  $0x80       # 调用内核功能\n\n                         # 退出程序\n\n        movl $0,%ebx     # 参数一：退出代码\n\n        movl $1,%eax     # 系统调用号(sys_exit)\n\n        int  $0x80       # 调用内核功能\n```\n\n初次接触到 AT&T 格式的汇编代码时，很多程序员都认为太晦涩难懂了，没有关系，在 Linux 平台上你同样可以使用 Intel 格式来编写汇编程序：\n\n###### 例2. Intel 格式\n\n; hello.asm\n```\nsection .data            ; 数据段声明\n\n        msg db \"Hello, world!\", 0xA     ; 要输出的字符串\n\n        len equ $ - msg                 ; 字串长度\n\nsection .text            ; 代码段声明\n\nglobal _start            ; 指定入口函数\n\n_start:                  ; 在屏幕上显示一个字符串\n\n        mov edx, len     ; 参数三：字符串长度\n\n        mov ecx, msg     ; 参数二：要显示的字符串\n\n        mov ebx, 1       ; 参数一：文件描述符(stdout)\n\n        mov eax, 4       ; 系统调用号(sys_write)\n\n        int 0x80         ; 调用内核功能\n\n                         ; 退出程序\n\n        mov ebx, 0       ; 参数一：退出代码\n\n        mov eax, 1       ; 系统调用号(sys_exit)\n\n        int 0x80         ; 调用内核功能\n```\n\n上面两个汇编程序采用的语法虽然完全不同，但功能却都是调用 Linux 内核提供的 sys_write 来显示一个字符串，然后再调用 sys_exit 退出程序。在 Linux 内核源文件 include/asm-i386/unistd.h 中，可以找到所有系统调用的定义。\n\n### 四、系统调用\n\n即便是最简单的汇编程序，也难免要用到诸如输入、输出以及退出等操作，而要进行这些操作则需要调用操作系统所提供的服务，也就是系统调用。除非你的程序只完成加减乘除等数学运算，否则将很难避免使用系统调用，事实上除了系统调用不同之外，各种操作系统的汇编编程往往都是很类似的。\n\n在 Linux 平台下有两种方式来使用系统调用：利用封装后的 C 库（libc）或者通过汇编直接调用。其中通过汇编语言来直接调用系统调用，是最高效地使用 Linux 内核服务的方法，因为最终生成的程序不需要与任何库进行链接，而是直接和内核通信。\n\n和 DOS 一样，Linux 下的系统调用也是通过中断（int 0x80）来实现的。在执行 int 80 指令时，寄存器 eax 中存放的是系统调用的功能号，而传给系统调用的参数则必须按顺序放到寄存器 ebx，ecx，edx，esi，edi 中，当系统调用完成之后，返回值可以在寄存器 eax 中获得。\n\n所有的系统调用功能号都可以在文件 /usr/include/bits/syscall.h 中找到，为了便于使用，它们是用 SYS_<name> 这样的宏来定义的，如 SYS_write、SYS_exit 等。例如，经常用到的 write 函数是如下定义的：\n```\nssize_t write(int fd, const void *buf, size_t count);\n```\n该函数的功能最终是通过 SYS_write 这一系统调用来实现的。根据上面的约定，参数 fb、buf 和 count 分别存在寄存器 ebx、ecx 和 edx 中，而系统调用号 SYS_write 则放在寄存器 eax 中，当 int 0x80 指令执行完毕后，返回值可以从寄存器 eax 中获得。\n\n或许你已经发现，在进行系统调用时至多只有 5 个寄存器能够用来保存参数，难道所有系统调用的参数个数都不超过 5 吗？当然不是，例如 mmap 函数就有 6 个参数，这些参数最后都需要传递给系统调用 SYS_mmap：\n```\nvoid * mmap(void *start, size_t length, int prot , int flags, int fd, off_t offset);c\n```\n当一个系统调用所需的参数个数大于 5 时，执行int 0x80 指令时仍需将系统调用功能号保存在寄存器 eax 中，所不同的只是全部参数应该依次放在一块连续的内存区域里，同时在寄存器 ebx 中保存指向该内存区域的指针。系统调用完成之后，返回值仍将保存在寄存器 eax 中。\n\n由于只是需要一块连续的内存区域来保存系统调用的参数，因此完全可以像普通的函数调用一样使用栈(stack)来传递系统调用所需的参数。但要注意一点， Linux 采用的是 C 语言的调用模式，这就意味着所有参数必须以相反的顺序进栈，即最后一个参数先入栈，而第一个参数则最后入栈。如果采用栈来传递系统调用所需的参数，在执行 int 0x80 指令时还应该将栈指针的当前值复制到寄存器 ebx中。\n\n### 五、命令行参数\n\n在 Linux 操作系统中，当一个可执行程序通过命令行启动时，其所需的参数将被保存到栈中：首先是 argc，然后是指向各个命令行参数的指针数组 argv，最后是指向环境变量的指针数据 envp。在编写汇编语言程序时，很多时候需要对这些参数进行处理，下面的代码示范了如何在汇编代码中进行命令行参数的处理：\n\n例3. 处理命令行参数\n\n##### args.S\n```\n.text\n\n.globl _start\n\n_start:\n\npopl %ecx # argc\n\nvnext:\n\npopl %ecx # argv\n\ntest %ecx, %ecx # 空指针表明结束\n\njz exit\n\nmovl %ecx, %ebx\n\nxorl %edx, %edx\n\nstrlen:\n\nmovb (%ebx), %al\n\ninc %edx\n\ninc %ebx\n\ntest %al, %al\n\njnz strlen\n\nmovb $10, -1(%ebx)\n\nmovl $4, %eax # 系统调用号(sys_write)\n\nmovl $1, %ebx # 文件描述符(stdout)\n\nint $0x80\n\njmp vnext\n\nexit: movl $1,%eax # 系统调用号(sys_exit)\n\nxorl %ebx, %ebx # 退出代码\n\nint $0x80\n\nret\n```\n\n### 六、GCC 内联汇编\n\n用汇编编写的程序虽然运行速度快，但开发速度非常慢，效率也很低。如果只是想对关键代码段进行优化，或许更好的办法是将汇编指令嵌入到 C 语言程序中，从而充分利用高级语言和汇编语言各自的特点。但一般来讲，在 C 代码中嵌入汇编语句要比\"纯粹\"的汇编语言代码复杂得多，因为需要解决如何分配寄存器，以及如何与C代码中的变量相结合等问题。\n\nGCC 提供了很好的内联汇编支持，最基本的格式是：\n```\n__asm__(\"asm statements\");\n```\n例如：\n```\n__asm__(\"nop\");\n```\n如果需要同时执行多条汇编语句，则应该用\"\\\\n\\\\t\"将各个语句分隔开，例如：\n```\n__asm__( \"pushl %%eax \\\\n\\\\t\"\n\n\"movl $0, %%eax \\\\n\\\\t\"\n\n\"popl %eax\");\n```\n通常嵌入到 C 代码中的汇编语句很难做到与其它部分没有任何关系，因此更多时候需要用到完整的内联汇编格式：\n```\n__asm__(\"asm statements\" : outputs : inputs : registers-modified);\n```\n插入到 C 代码中的汇编语句是以\":\"分隔的四个部分，其中第一部分就是汇编代码本身，通常称为指令部，其格式和在汇编语言中使用的格式基本相同。指令部分是必须的，而其它部分则可以根据实际情况而省略。\n\n在将汇编语句嵌入到C代码中时，操作数如何与C代码中的变量相结合是个很大的问题。GCC采用如下方法来解决这个问题：程序员提供具体的指令，而对寄存器的使用则只需给出\"样板\"和约束条件就可以了，具体如何将寄存器与变量结合起来完全由GCC和GAS来负责。\n\n在GCC 内联汇编语句的指令部中，加上前缀''%''的数字(如%0，%1)表示的就是需要使用寄存器的\"样板\"操作数。指令部中使用了几个样板操作数，就表明有几个变量需要与寄存器相结合，这样GCC和GAS在编译和汇编时会根据后面给定的约束条件进行恰当的处理。由于样板操作数也使用'' %''作为前缀，因此在涉及到具体的寄存器时，寄存器名前面应该加上两个''%''，以免产生混淆。\n\n紧跟在指令部后面的是输出部，是规定输出变量如何与样板操作数进行结合的条件，每个条件称为一个\"约束\"，必要时可以包含多个约束，相互之间用逗号分隔开就可以了。每个输出约束都以''=''号开始，然后紧跟一个对操作数类型进行说明的字后，最后是如何与变量相结合的约束。凡是与输出部中说明的操作数相结合的寄存器或操作数本身，在执行完嵌入的汇编代码后均不保留执行之前的内容，这是GCC在调度寄存器时所使用的依据。\n\n输出部后面是输入部，输入约束的格式和输出约束相似，但不带''=''号。如果一个输入约束要求使用寄存器，则GCC在预处理时就会为之分配一个寄存器，并插入必要的指令将操作数装入该寄存器。与输入部中说明的操作数结合的寄存器或操作数本身，在执行完嵌入的汇编代码后也不保留执行之前的内容。\n\n有时在进行某些操作时，除了要用到进行数据输入和输出的寄存器外，还要使用多个寄存器来保存中间计算结果，这样就难免会破坏原有寄存器的内容。在GCC内联汇编格式中的最后一个部分中，可以对将产生副作用的寄存器进行说明，以便GCC能够采用相应的措施。\n\n下面是一个内联汇编的简单例子：\n\n###### 例4.内联汇编\n```\nint main()\n{\n    int a = 10, b = 0;\n\n    __asm__ __volatile__(\"movl %1, %%eax;\\\\n\\\\r\"\n\n    \"movl %%eax, %0;\"\n\n    :\"=r\"(b)\n\n    :\"r\"(a)\n\n    :\"%eax\");\n\n    printf(\"Result: %d, %d\\\\n\", a, b);\n}\n```\n\n上面的程序完成将变量a的值赋予变量b，有几点需要说明：\n\n变量b是输出操作数，通过%0来引用，而变量a是输入操作数，通过%1来引用。\n输入操作数和输出操作数都使用r进行约束，表示将变量a和变量b存储在寄存器中。输入约束和输出约束的不同点在于输出约束多一个约束修饰符''=''。\n在内联汇编语句中使用寄存器eax时，寄存器名前应该加两个''%''，即%%eax。内联汇编中使用%0、%1等来标识变量，任何只带一个''%''的标识符都看成是操作数，而不是寄存器。\n内联汇编语句的最后一个部分告诉GCC它将改变寄存器eax中的值，GCC在处理时不应使用该寄存器来存储任何其它的值。\n由于变量b被指定成输出操作数，当内联汇编语句执行完毕后，它所保存的值将被更新。\n在内联汇编中用到的操作数从输出部的第一个约束开始编号，序号从0开始，每个约束记数一次，指令部要引用这些操作数时，只需在序号前加上''%''作为前缀就可以了。需要注意的是，内联汇编语句的指令部在引用一个操作数时总是将其作为32位的长字使用，但实际情况可能需要的是字或字节，因此应该在约束中指明正确的限定符：\n\n\n|                限定符                 |            意义          \n|                -----                 |            -----          \n|                \"m\"、\"v\"、\"o\"          |            内存单元        \n|                \"r\"                    |            任何寄存器         \n|                \"q\"                    |            寄存器eax、ebx、ecx、edx之一     \n|                \"i\"、\"h\"               |            直接操作数          \n|                \"E\"和\"F\"               |            浮点数           \n|                \"g\"                    |            任意          \n|                \"a\"、\"b\"、\"c\"、\"d\"      |            分别表示寄存器eax、ebx、ecx和edx          \n|                \"S\"和\"D\"               |            寄存器esi、edi          \n|                \"I\"                    |            常数（0至31）         \n\n\n\n\n### 七.  LIBCO协程的swap代码  \n```\n.globl coctx_swap\n#if !defined( __APPLE__ )\n.type  coctx_swap, @function\n#endif\ncoctx_swap:\n\n#if defined(__i386__)\n\tleal 4(%esp), %eax //sp \n\tmovl 4(%esp), %esp \n\tleal 32(%esp), %esp //parm a : &regs[7] + sizeof(void*)\n\n\tpushl %eax //esp ->parm a \n\n\tpushl %ebp\n\tpushl %esi\n\tpushl %edi\n\tpushl %edx\n\tpushl %ecx\n\tpushl %ebx\n\tpushl -4(%eax)\n\n\t\n\tmovl 4(%eax), %esp //parm b -> &regs[0]\n\n\tpopl %eax  //ret func addr\n\tpopl %ebx  \n\tpopl %ecx\n\tpopl %edx\n\tpopl %edi\n\tpopl %esi\n\tpopl %ebp\n\tpopl %esp\n\tpushl %eax //set ret func addr\n\n\txorl %eax, %eax\n\tret\n\n#elif defined(__x86_64__)\n\tleaq 8(%rsp),%rax\n\tleaq 112(%rdi),%rsp\n\tpushq %rax\n\tpushq %rbx\n\tpushq %rcx\n\tpushq %rdx\n\n\tpushq -8(%rax) //ret func addr\n\n\tpushq %rsi\n\tpushq %rdi\n\tpushq %rbp\n\tpushq %r8\n\tpushq %r9\n\tpushq %r12\n\tpushq %r13\n\tpushq %r14\n\tpushq %r15\n\t\n\tmovq %rsi, %rsp\n\tpopq %r15\n\tpopq %r14\n\tpopq %r13\n\tpopq %r12\n\tpopq %r9\n\tpopq %r8\n\tpopq %rbp\n\tpopq %rdi\n\tpopq %rsi\n\tpopq %rax //ret func addr\n\tpopq %rdx\n\tpopq %rcx\n\tpopq %rbx\n\tpopq %rsp\n\tpushq %rax\n\t\n\txorl %eax, %eax\n\tret\n#endif\n\n```\n\n使用方式:  \n```\n\n#define ESP 0\n#define EIP 1\n#define EAX 2\n#define ECX 3\n// -----------\n#define RSP 0\n#define RIP 1\n#define RBX 2\n#define RDI 3\n#define RSI 4\n\n#define RBP 5\n#define R12 6\n#define R13 7\n#define R14 8\n#define R15 9\n#define RDX 10\n#define RCX 11\n#define R8 12\n#define R9 13\n\n\n//----- --------\n// 32 bit\n// | regs[0]: ret |\n// | regs[1]: ebx |\n// | regs[2]: ecx |\n// | regs[3]: edx |\n// | regs[4]: edi |\n// | regs[5]: esi |\n// | regs[6]: ebp |\n// | regs[7]: eax |  = esp\nenum\n{\n\tkEIP = 0,\n\tkESP = 7,\n};\n\n//-------------\n// 64 bit\n//low | regs[0]: r15 |\n//    | regs[1]: r14 |\n//    | regs[2]: r13 |\n//    | regs[3]: r12 |\n//    | regs[4]: r9  |\n//    | regs[5]: r8  | \n//    | regs[6]: rbp |\n//    | regs[7]: rdi |\n//    | regs[8]: rsi |\n//    | regs[9]: ret |  //ret func addr\n//    | regs[10]: rdx |\n//    | regs[11]: rcx | \n//    | regs[12]: rbx |\n//hig | regs[13]: rsp |\nenum\n{\n\tkRDI = 7,\n\tkRSI = 8,\n\tkRETAddr = 9,\n\tkRSP = 13,\n};\n\nint coctx_make( coctx_t *ctx,coctx_pfn_t pfn,const void *s,const void *s1 )\n{\n\tchar *sp = ctx->ss_sp + ctx->ss_size;\n\tsp = (char*) ((unsigned long)sp & -16LL  );\n\n\tmemset(ctx->regs, 0, sizeof(ctx->regs));\n\n\tctx->regs[ kRSP ] = sp - 8;\n\n\tctx->regs[ kRETAddr] = (char*)pfn;\n\n\tctx->regs[ kRDI ] = (char*)s;\n\tctx->regs[ kRSI ] = (char*)s1;\n\treturn 0;\n}\n\nint coctx_init( coctx_t *ctx )\n{\n\tmemset( ctx,0,sizeof(*ctx));\n\treturn 0;\n}\n\nextern \"C\"\n{\n    extern void coctx_swap(coctx_t *, coctx_t*) asm(\"coctx_swap\");\n};\n\ncoctx_init(&worker.ctx);\ncoctx_make(&worker.ctx, stress, (void*)0, &worker);\nclock_t start = clock();\nfor (int i = 0; i < 1000 * 10000; ++i)\n{\n    coctx_swap(&main_co.ctx, &worker.ctx);\n}\n\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","slug":"2019-01-11-AT&T-INTEL-ASM","published":1,"updated":"2019-01-17T14:04:35.855Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck44ekz480018r45h7l1ahk5p","content":"<h3><span id=\"一-atampt-格式linux-汇编语法格式\">一、AT&amp;T 格式Linux 汇编语法格式</span></h3><ul>\n<li>在 AT&amp;T 汇编格式中，寄存器名要加上 ‘%’ 作为前缀；而在 Intel 汇编格式中，寄存器名不需要加前缀。例如：  </li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>AT&amp;T格式</th>\n<th>Intel格式</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>pushl %eax</td>\n<td>push eax</td>\n</tr>\n</tbody></table>\n  <a id=\"more\"></a>  \n\n<ul>\n<li>在 AT&amp;T 汇编格式中，用 ‘$’ 前缀表示一个立即操作数；而在 Intel 汇编格式中，立即数的表示不用带任何前缀。例如：  </li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>AT&amp;T格式</th>\n<th>Intel格式</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>pushl $1</td>\n<td>push 1</td>\n</tr>\n</tbody></table>\n<ul>\n<li>AT&amp;T 和 Intel 格式中的源操作数和目标操作数的位置正好相反。在 Intel 汇编格式中，目标操作数在源操作数的左边；而在 AT&amp;T 汇编格式中，目标操作数在源操作数的右边。例如：  </li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>AT&amp;T格式</th>\n<th>Intel格式</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>addl $1, %eax</td>\n<td>add eax, 1</td>\n</tr>\n</tbody></table>\n<ul>\n<li>在 AT&amp;T 汇编格式中，操作数的字长由操作符的最后一个字母决定，后缀’b’、’w’、’l’分别表示操作数为字节（byte，8 比特）、字（word，16 比特）和长字（long，32比特）；而在 Intel 汇编格式中，操作数的字长是用 “byte ptr” 和 “word ptr” 等前缀来表示的。例如：</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>AT&amp;T格式</th>\n<th>Intel格式</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>movb val, %al</td>\n<td>mov al, byte ptr val</td>\n</tr>\n</tbody></table>\n<ul>\n<li>在 AT&amp;T 汇编格式中，绝对转移和调用指令（jump/call）的操作数前要加上’*’作为前缀，而在 Intel 格式中则不需要。  </li>\n<li>远程转移指令和远程子调用指令的操作码，在 AT&amp;T 汇编格式中为 “ljump” 和 “lcall”，而在 Intel 汇编格式中则为 “jmp far” 和 “call far”，即：  </li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>AT&amp;T格式</th>\n<th>Intel格式</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>ljump $section, $offset</td>\n<td>jmp far section:offset</td>\n</tr>\n<tr>\n<td>lcall $section, $offset</td>\n<td>call far section:offset</td>\n</tr>\n</tbody></table>\n<ul>\n<li>与之相应的远程返回指令则为：</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>AT&amp;T格式</th>\n<th>Intel格式</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>lret $stack_adjust</td>\n<td>ret far stack_adjust</td>\n</tr>\n</tbody></table>\n<ul>\n<li>内存操作数的寻址方式  </li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>AT&amp;T格式</th>\n<th>Intel格式</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>section:disp(base, index, scale)</td>\n<td>section:[base + index*scale + disp]</td>\n</tr>\n</tbody></table>\n<ul>\n<li><p>由于 Linux 工作在保护模式下，用的是 32 位线性地址，所以在计算地址时不用考虑段基址和偏移量，而是采用如下的地址计算方法：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">disp + base + index * scale</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>下面是一些内存操作数的例子：  </p>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>AT&amp;T格式</th>\n<th>Intel格式</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>movl -4(%ebp), %eax</td>\n<td>mov eax, [ebp - 4]</td>\n</tr>\n<tr>\n<td>movl array(, %eax, 4), %eax</td>\n<td>mov eax, [eax*4 + array]</td>\n</tr>\n<tr>\n<td>movw array(%ebx, %eax, 4), %cx</td>\n<td>mov cx, [ebx + 4*eax + array]</td>\n</tr>\n<tr>\n<td>movb $4, %fs:(%eax)</td>\n<td>mov fs:eax, 4</td>\n</tr>\n</tbody></table>\n<h3><span id=\"二-hello-world\">二、Hello World!</span></h3><p>既然所有程序设计语言的第一个例子都是在屏幕上打印一个字符串 “Hello World!”，那我们也以这种方式来开始介绍 Linux 下的汇编语言程序设计。  </p>\n<p>在 Linux 操作系统中，你有很多办法可以实现在屏幕上显示一个字符串，但最简洁的方式是使用 Linux 内核提供的系统调用。使用这种方法最大的好处是可以直接和操作系统的内核进行通讯，不需要链接诸如 libc 这样的函数库，也不需要使用 ELF 解释器，因而代码尺寸小且执行速度快。  </p>\n<p>Linux 是一个运行在保护模式下的 32 位操作系统，采用 flat memory 模式，目前最常用到的是 ELF 格式的二进制代码。一个 ELF 格式的可执行程序通常划分为如下几个部分：.text、.data 和 .bss，其中 .text 是只读的代码区，.data 是可读可写的数据区，而 .bss 则是可读可写且没有初始化的数据区。代码区和数据区在 ELF 中统称为 section，根据实际需要你可以使用其它标准的 section，也可以添加自定义 section，但一个 ELF 可执行程序至少应该有一个 .text 部分。下面给出我们的第一个汇编程序，用的是 AT&amp;T 汇编语言格式：   </p>\n<h6><span id=\"例1-atampt-格式\">例1. AT&amp;T 格式</span></h6><ul>\n<li>#hello.s<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.data                    # 数据段声明</span><br><span class=\"line\"></span><br><span class=\"line\">        msg : .string &quot;Hello, world!\\\\n&quot; # 要输出的字符串</span><br><span class=\"line\"></span><br><span class=\"line\">        len &#x3D; . - msg                   # 字串长度</span><br><span class=\"line\"></span><br><span class=\"line\">.text                    # 代码段声明</span><br><span class=\"line\"></span><br><span class=\"line\">.global _start           # 指定入口函数</span><br><span class=\"line\"></span><br><span class=\"line\">_start:                  # 在屏幕上显示一个字符串</span><br><span class=\"line\"></span><br><span class=\"line\">        movl $len, %edx  # 参数三：字符串长度</span><br><span class=\"line\"></span><br><span class=\"line\">        movl $msg, %ecx  # 参数二：要显示的字符串</span><br><span class=\"line\"></span><br><span class=\"line\">        movl $1, %ebx    # 参数一：文件描述符(stdout)</span><br><span class=\"line\"></span><br><span class=\"line\">        movl $4, %eax    # 系统调用号(sys_write)</span><br><span class=\"line\"></span><br><span class=\"line\">        int  $0x80       # 调用内核功能</span><br><span class=\"line\"></span><br><span class=\"line\">                         # 退出程序</span><br><span class=\"line\"></span><br><span class=\"line\">        movl $0,%ebx     # 参数一：退出代码</span><br><span class=\"line\"></span><br><span class=\"line\">        movl $1,%eax     # 系统调用号(sys_exit)</span><br><span class=\"line\"></span><br><span class=\"line\">        int  $0x80       # 调用内核功能</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<p>初次接触到 AT&amp;T 格式的汇编代码时，很多程序员都认为太晦涩难懂了，没有关系，在 Linux 平台上你同样可以使用 Intel 格式来编写汇编程序：</p>\n<h6><span id=\"例2-intel-格式\">例2. Intel 格式</span></h6><p>; hello.asm</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">section .data            ; 数据段声明</span><br><span class=\"line\"></span><br><span class=\"line\">        msg db &quot;Hello, world!&quot;, 0xA     ; 要输出的字符串</span><br><span class=\"line\"></span><br><span class=\"line\">        len equ $ - msg                 ; 字串长度</span><br><span class=\"line\"></span><br><span class=\"line\">section .text            ; 代码段声明</span><br><span class=\"line\"></span><br><span class=\"line\">global _start            ; 指定入口函数</span><br><span class=\"line\"></span><br><span class=\"line\">_start:                  ; 在屏幕上显示一个字符串</span><br><span class=\"line\"></span><br><span class=\"line\">        mov edx, len     ; 参数三：字符串长度</span><br><span class=\"line\"></span><br><span class=\"line\">        mov ecx, msg     ; 参数二：要显示的字符串</span><br><span class=\"line\"></span><br><span class=\"line\">        mov ebx, 1       ; 参数一：文件描述符(stdout)</span><br><span class=\"line\"></span><br><span class=\"line\">        mov eax, 4       ; 系统调用号(sys_write)</span><br><span class=\"line\"></span><br><span class=\"line\">        int 0x80         ; 调用内核功能</span><br><span class=\"line\"></span><br><span class=\"line\">                         ; 退出程序</span><br><span class=\"line\"></span><br><span class=\"line\">        mov ebx, 0       ; 参数一：退出代码</span><br><span class=\"line\"></span><br><span class=\"line\">        mov eax, 1       ; 系统调用号(sys_exit)</span><br><span class=\"line\"></span><br><span class=\"line\">        int 0x80         ; 调用内核功能</span><br></pre></td></tr></table></figure>\n\n<p>上面两个汇编程序采用的语法虽然完全不同，但功能却都是调用 Linux 内核提供的 sys_write 来显示一个字符串，然后再调用 sys_exit 退出程序。在 Linux 内核源文件 include/asm-i386/unistd.h 中，可以找到所有系统调用的定义。</p>\n<h3><span id=\"四-系统调用\">四、系统调用</span></h3><p>即便是最简单的汇编程序，也难免要用到诸如输入、输出以及退出等操作，而要进行这些操作则需要调用操作系统所提供的服务，也就是系统调用。除非你的程序只完成加减乘除等数学运算，否则将很难避免使用系统调用，事实上除了系统调用不同之外，各种操作系统的汇编编程往往都是很类似的。</p>\n<p>在 Linux 平台下有两种方式来使用系统调用：利用封装后的 C 库（libc）或者通过汇编直接调用。其中通过汇编语言来直接调用系统调用，是最高效地使用 Linux 内核服务的方法，因为最终生成的程序不需要与任何库进行链接，而是直接和内核通信。</p>\n<p>和 DOS 一样，Linux 下的系统调用也是通过中断（int 0x80）来实现的。在执行 int 80 指令时，寄存器 eax 中存放的是系统调用的功能号，而传给系统调用的参数则必须按顺序放到寄存器 ebx，ecx，edx，esi，edi 中，当系统调用完成之后，返回值可以在寄存器 eax 中获得。</p>\n<p>所有的系统调用功能号都可以在文件 /usr/include/bits/syscall.h 中找到，为了便于使用，它们是用 SYS_<name> 这样的宏来定义的，如 SYS_write、SYS_exit 等。例如，经常用到的 write 函数是如下定义的：</name></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssize_t write(int fd, const void *buf, size_t count);</span><br></pre></td></tr></table></figure>\n<p>该函数的功能最终是通过 SYS_write 这一系统调用来实现的。根据上面的约定，参数 fb、buf 和 count 分别存在寄存器 ebx、ecx 和 edx 中，而系统调用号 SYS_write 则放在寄存器 eax 中，当 int 0x80 指令执行完毕后，返回值可以从寄存器 eax 中获得。</p>\n<p>或许你已经发现，在进行系统调用时至多只有 5 个寄存器能够用来保存参数，难道所有系统调用的参数个数都不超过 5 吗？当然不是，例如 mmap 函数就有 6 个参数，这些参数最后都需要传递给系统调用 SYS_mmap：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">void * mmap(void *start, size_t length, int prot , int flags, int fd, off_t offset);c</span><br></pre></td></tr></table></figure>\n<p>当一个系统调用所需的参数个数大于 5 时，执行int 0x80 指令时仍需将系统调用功能号保存在寄存器 eax 中，所不同的只是全部参数应该依次放在一块连续的内存区域里，同时在寄存器 ebx 中保存指向该内存区域的指针。系统调用完成之后，返回值仍将保存在寄存器 eax 中。</p>\n<p>由于只是需要一块连续的内存区域来保存系统调用的参数，因此完全可以像普通的函数调用一样使用栈(stack)来传递系统调用所需的参数。但要注意一点， Linux 采用的是 C 语言的调用模式，这就意味着所有参数必须以相反的顺序进栈，即最后一个参数先入栈，而第一个参数则最后入栈。如果采用栈来传递系统调用所需的参数，在执行 int 0x80 指令时还应该将栈指针的当前值复制到寄存器 ebx中。</p>\n<h3><span id=\"五-命令行参数\">五、命令行参数</span></h3><p>在 Linux 操作系统中，当一个可执行程序通过命令行启动时，其所需的参数将被保存到栈中：首先是 argc，然后是指向各个命令行参数的指针数组 argv，最后是指向环境变量的指针数据 envp。在编写汇编语言程序时，很多时候需要对这些参数进行处理，下面的代码示范了如何在汇编代码中进行命令行参数的处理：</p>\n<p>例3. 处理命令行参数</p>\n<h5><span id=\"argss\">args.S</span></h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.text</span><br><span class=\"line\"></span><br><span class=\"line\">.globl _start</span><br><span class=\"line\"></span><br><span class=\"line\">_start:</span><br><span class=\"line\"></span><br><span class=\"line\">popl %ecx # argc</span><br><span class=\"line\"></span><br><span class=\"line\">vnext:</span><br><span class=\"line\"></span><br><span class=\"line\">popl %ecx # argv</span><br><span class=\"line\"></span><br><span class=\"line\">test %ecx, %ecx # 空指针表明结束</span><br><span class=\"line\"></span><br><span class=\"line\">jz exit</span><br><span class=\"line\"></span><br><span class=\"line\">movl %ecx, %ebx</span><br><span class=\"line\"></span><br><span class=\"line\">xorl %edx, %edx</span><br><span class=\"line\"></span><br><span class=\"line\">strlen:</span><br><span class=\"line\"></span><br><span class=\"line\">movb (%ebx), %al</span><br><span class=\"line\"></span><br><span class=\"line\">inc %edx</span><br><span class=\"line\"></span><br><span class=\"line\">inc %ebx</span><br><span class=\"line\"></span><br><span class=\"line\">test %al, %al</span><br><span class=\"line\"></span><br><span class=\"line\">jnz strlen</span><br><span class=\"line\"></span><br><span class=\"line\">movb $10, -1(%ebx)</span><br><span class=\"line\"></span><br><span class=\"line\">movl $4, %eax # 系统调用号(sys_write)</span><br><span class=\"line\"></span><br><span class=\"line\">movl $1, %ebx # 文件描述符(stdout)</span><br><span class=\"line\"></span><br><span class=\"line\">int $0x80</span><br><span class=\"line\"></span><br><span class=\"line\">jmp vnext</span><br><span class=\"line\"></span><br><span class=\"line\">exit: movl $1,%eax # 系统调用号(sys_exit)</span><br><span class=\"line\"></span><br><span class=\"line\">xorl %ebx, %ebx # 退出代码</span><br><span class=\"line\"></span><br><span class=\"line\">int $0x80</span><br><span class=\"line\"></span><br><span class=\"line\">ret</span><br></pre></td></tr></table></figure>\n\n<h3><span id=\"六-gcc-内联汇编\">六、GCC 内联汇编</span></h3><p>用汇编编写的程序虽然运行速度快，但开发速度非常慢，效率也很低。如果只是想对关键代码段进行优化，或许更好的办法是将汇编指令嵌入到 C 语言程序中，从而充分利用高级语言和汇编语言各自的特点。但一般来讲，在 C 代码中嵌入汇编语句要比”纯粹”的汇编语言代码复杂得多，因为需要解决如何分配寄存器，以及如何与C代码中的变量相结合等问题。</p>\n<p>GCC 提供了很好的内联汇编支持，最基本的格式是：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">__asm__(&quot;asm statements&quot;);</span><br></pre></td></tr></table></figure>\n<p>例如：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">__asm__(&quot;nop&quot;);</span><br></pre></td></tr></table></figure>\n<p>如果需要同时执行多条汇编语句，则应该用”\\n\\t”将各个语句分隔开，例如：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">__asm__( &quot;pushl %%eax \\\\n\\\\t&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">&quot;movl $0, %%eax \\\\n\\\\t&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">&quot;popl %eax&quot;);</span><br></pre></td></tr></table></figure>\n<p>通常嵌入到 C 代码中的汇编语句很难做到与其它部分没有任何关系，因此更多时候需要用到完整的内联汇编格式：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">__asm__(&quot;asm statements&quot; : outputs : inputs : registers-modified);</span><br></pre></td></tr></table></figure>\n<p>插入到 C 代码中的汇编语句是以”:”分隔的四个部分，其中第一部分就是汇编代码本身，通常称为指令部，其格式和在汇编语言中使用的格式基本相同。指令部分是必须的，而其它部分则可以根据实际情况而省略。</p>\n<p>在将汇编语句嵌入到C代码中时，操作数如何与C代码中的变量相结合是个很大的问题。GCC采用如下方法来解决这个问题：程序员提供具体的指令，而对寄存器的使用则只需给出”样板”和约束条件就可以了，具体如何将寄存器与变量结合起来完全由GCC和GAS来负责。</p>\n<p>在GCC 内联汇编语句的指令部中，加上前缀’’%’’的数字(如%0，%1)表示的就是需要使用寄存器的”样板”操作数。指令部中使用了几个样板操作数，就表明有几个变量需要与寄存器相结合，这样GCC和GAS在编译和汇编时会根据后面给定的约束条件进行恰当的处理。由于样板操作数也使用’’ %’’作为前缀，因此在涉及到具体的寄存器时，寄存器名前面应该加上两个’’%’’，以免产生混淆。</p>\n<p>紧跟在指令部后面的是输出部，是规定输出变量如何与样板操作数进行结合的条件，每个条件称为一个”约束”，必要时可以包含多个约束，相互之间用逗号分隔开就可以了。每个输出约束都以’’=’’号开始，然后紧跟一个对操作数类型进行说明的字后，最后是如何与变量相结合的约束。凡是与输出部中说明的操作数相结合的寄存器或操作数本身，在执行完嵌入的汇编代码后均不保留执行之前的内容，这是GCC在调度寄存器时所使用的依据。</p>\n<p>输出部后面是输入部，输入约束的格式和输出约束相似，但不带’’=’’号。如果一个输入约束要求使用寄存器，则GCC在预处理时就会为之分配一个寄存器，并插入必要的指令将操作数装入该寄存器。与输入部中说明的操作数结合的寄存器或操作数本身，在执行完嵌入的汇编代码后也不保留执行之前的内容。</p>\n<p>有时在进行某些操作时，除了要用到进行数据输入和输出的寄存器外，还要使用多个寄存器来保存中间计算结果，这样就难免会破坏原有寄存器的内容。在GCC内联汇编格式中的最后一个部分中，可以对将产生副作用的寄存器进行说明，以便GCC能够采用相应的措施。</p>\n<p>下面是一个内联汇编的简单例子：</p>\n<h6><span id=\"例4内联汇编\">例4.内联汇编</span></h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">int main()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    int a &#x3D; 10, b &#x3D; 0;</span><br><span class=\"line\"></span><br><span class=\"line\">    __asm__ __volatile__(&quot;movl %1, %%eax;\\\\n\\\\r&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">    &quot;movl %%eax, %0;&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">    :&quot;&#x3D;r&quot;(b)</span><br><span class=\"line\"></span><br><span class=\"line\">    :&quot;r&quot;(a)</span><br><span class=\"line\"></span><br><span class=\"line\">    :&quot;%eax&quot;);</span><br><span class=\"line\"></span><br><span class=\"line\">    printf(&quot;Result: %d, %d\\\\n&quot;, a, b);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>上面的程序完成将变量a的值赋予变量b，有几点需要说明：</p>\n<p>变量b是输出操作数，通过%0来引用，而变量a是输入操作数，通过%1来引用。<br>输入操作数和输出操作数都使用r进行约束，表示将变量a和变量b存储在寄存器中。输入约束和输出约束的不同点在于输出约束多一个约束修饰符’’=’’。<br>在内联汇编语句中使用寄存器eax时，寄存器名前应该加两个’’%’’，即%%eax。内联汇编中使用%0、%1等来标识变量，任何只带一个’’%’’的标识符都看成是操作数，而不是寄存器。<br>内联汇编语句的最后一个部分告诉GCC它将改变寄存器eax中的值，GCC在处理时不应使用该寄存器来存储任何其它的值。<br>由于变量b被指定成输出操作数，当内联汇编语句执行完毕后，它所保存的值将被更新。<br>在内联汇编中用到的操作数从输出部的第一个约束开始编号，序号从0开始，每个约束记数一次，指令部要引用这些操作数时，只需在序号前加上’’%’’作为前缀就可以了。需要注意的是，内联汇编语句的指令部在引用一个操作数时总是将其作为32位的长字使用，但实际情况可能需要的是字或字节，因此应该在约束中指明正确的限定符：</p>\n<table>\n<thead>\n<tr>\n<th>限定符</th>\n<th>意义</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>“m”、”v”、”o”</td>\n<td>内存单元</td>\n</tr>\n<tr>\n<td>“r”</td>\n<td>任何寄存器</td>\n</tr>\n<tr>\n<td>“q”</td>\n<td>寄存器eax、ebx、ecx、edx之一</td>\n</tr>\n<tr>\n<td>“i”、”h”</td>\n<td>直接操作数</td>\n</tr>\n<tr>\n<td>“E”和”F”</td>\n<td>浮点数</td>\n</tr>\n<tr>\n<td>“g”</td>\n<td>任意</td>\n</tr>\n<tr>\n<td>“a”、”b”、”c”、”d”</td>\n<td>分别表示寄存器eax、ebx、ecx和edx</td>\n</tr>\n<tr>\n<td>“S”和”D”</td>\n<td>寄存器esi、edi</td>\n</tr>\n<tr>\n<td>“I”</td>\n<td>常数（0至31）</td>\n</tr>\n</tbody></table>\n<h3><span id=\"七-libco协程的swap代码\">七.  LIBCO协程的swap代码</span></h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.globl coctx_swap</span><br><span class=\"line\">#if !defined( __APPLE__ )</span><br><span class=\"line\">.type  coctx_swap, @function</span><br><span class=\"line\">#endif</span><br><span class=\"line\">coctx_swap:</span><br><span class=\"line\"></span><br><span class=\"line\">#if defined(__i386__)</span><br><span class=\"line\">\tleal 4(%esp), %eax &#x2F;&#x2F;sp </span><br><span class=\"line\">\tmovl 4(%esp), %esp </span><br><span class=\"line\">\tleal 32(%esp), %esp &#x2F;&#x2F;parm a : &amp;regs[7] + sizeof(void*)</span><br><span class=\"line\"></span><br><span class=\"line\">\tpushl %eax &#x2F;&#x2F;esp -&gt;parm a </span><br><span class=\"line\"></span><br><span class=\"line\">\tpushl %ebp</span><br><span class=\"line\">\tpushl %esi</span><br><span class=\"line\">\tpushl %edi</span><br><span class=\"line\">\tpushl %edx</span><br><span class=\"line\">\tpushl %ecx</span><br><span class=\"line\">\tpushl %ebx</span><br><span class=\"line\">\tpushl -4(%eax)</span><br><span class=\"line\"></span><br><span class=\"line\">\t</span><br><span class=\"line\">\tmovl 4(%eax), %esp &#x2F;&#x2F;parm b -&gt; &amp;regs[0]</span><br><span class=\"line\"></span><br><span class=\"line\">\tpopl %eax  &#x2F;&#x2F;ret func addr</span><br><span class=\"line\">\tpopl %ebx  </span><br><span class=\"line\">\tpopl %ecx</span><br><span class=\"line\">\tpopl %edx</span><br><span class=\"line\">\tpopl %edi</span><br><span class=\"line\">\tpopl %esi</span><br><span class=\"line\">\tpopl %ebp</span><br><span class=\"line\">\tpopl %esp</span><br><span class=\"line\">\tpushl %eax &#x2F;&#x2F;set ret func addr</span><br><span class=\"line\"></span><br><span class=\"line\">\txorl %eax, %eax</span><br><span class=\"line\">\tret</span><br><span class=\"line\"></span><br><span class=\"line\">#elif defined(__x86_64__)</span><br><span class=\"line\">\tleaq 8(%rsp),%rax</span><br><span class=\"line\">\tleaq 112(%rdi),%rsp</span><br><span class=\"line\">\tpushq %rax</span><br><span class=\"line\">\tpushq %rbx</span><br><span class=\"line\">\tpushq %rcx</span><br><span class=\"line\">\tpushq %rdx</span><br><span class=\"line\"></span><br><span class=\"line\">\tpushq -8(%rax) &#x2F;&#x2F;ret func addr</span><br><span class=\"line\"></span><br><span class=\"line\">\tpushq %rsi</span><br><span class=\"line\">\tpushq %rdi</span><br><span class=\"line\">\tpushq %rbp</span><br><span class=\"line\">\tpushq %r8</span><br><span class=\"line\">\tpushq %r9</span><br><span class=\"line\">\tpushq %r12</span><br><span class=\"line\">\tpushq %r13</span><br><span class=\"line\">\tpushq %r14</span><br><span class=\"line\">\tpushq %r15</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tmovq %rsi, %rsp</span><br><span class=\"line\">\tpopq %r15</span><br><span class=\"line\">\tpopq %r14</span><br><span class=\"line\">\tpopq %r13</span><br><span class=\"line\">\tpopq %r12</span><br><span class=\"line\">\tpopq %r9</span><br><span class=\"line\">\tpopq %r8</span><br><span class=\"line\">\tpopq %rbp</span><br><span class=\"line\">\tpopq %rdi</span><br><span class=\"line\">\tpopq %rsi</span><br><span class=\"line\">\tpopq %rax &#x2F;&#x2F;ret func addr</span><br><span class=\"line\">\tpopq %rdx</span><br><span class=\"line\">\tpopq %rcx</span><br><span class=\"line\">\tpopq %rbx</span><br><span class=\"line\">\tpopq %rsp</span><br><span class=\"line\">\tpushq %rax</span><br><span class=\"line\">\t</span><br><span class=\"line\">\txorl %eax, %eax</span><br><span class=\"line\">\tret</span><br><span class=\"line\">#endif</span><br></pre></td></tr></table></figure>\n\n<p>使用方式:  </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">#define ESP 0</span><br><span class=\"line\">#define EIP 1</span><br><span class=\"line\">#define EAX 2</span><br><span class=\"line\">#define ECX 3</span><br><span class=\"line\">&#x2F;&#x2F; -----------</span><br><span class=\"line\">#define RSP 0</span><br><span class=\"line\">#define RIP 1</span><br><span class=\"line\">#define RBX 2</span><br><span class=\"line\">#define RDI 3</span><br><span class=\"line\">#define RSI 4</span><br><span class=\"line\"></span><br><span class=\"line\">#define RBP 5</span><br><span class=\"line\">#define R12 6</span><br><span class=\"line\">#define R13 7</span><br><span class=\"line\">#define R14 8</span><br><span class=\"line\">#define R15 9</span><br><span class=\"line\">#define RDX 10</span><br><span class=\"line\">#define RCX 11</span><br><span class=\"line\">#define R8 12</span><br><span class=\"line\">#define R9 13</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F;----- --------</span><br><span class=\"line\">&#x2F;&#x2F; 32 bit</span><br><span class=\"line\">&#x2F;&#x2F; | regs[0]: ret |</span><br><span class=\"line\">&#x2F;&#x2F; | regs[1]: ebx |</span><br><span class=\"line\">&#x2F;&#x2F; | regs[2]: ecx |</span><br><span class=\"line\">&#x2F;&#x2F; | regs[3]: edx |</span><br><span class=\"line\">&#x2F;&#x2F; | regs[4]: edi |</span><br><span class=\"line\">&#x2F;&#x2F; | regs[5]: esi |</span><br><span class=\"line\">&#x2F;&#x2F; | regs[6]: ebp |</span><br><span class=\"line\">&#x2F;&#x2F; | regs[7]: eax |  &#x3D; esp</span><br><span class=\"line\">enum</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tkEIP &#x3D; 0,</span><br><span class=\"line\">\tkESP &#x3D; 7,</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F;-------------</span><br><span class=\"line\">&#x2F;&#x2F; 64 bit</span><br><span class=\"line\">&#x2F;&#x2F;low | regs[0]: r15 |</span><br><span class=\"line\">&#x2F;&#x2F;    | regs[1]: r14 |</span><br><span class=\"line\">&#x2F;&#x2F;    | regs[2]: r13 |</span><br><span class=\"line\">&#x2F;&#x2F;    | regs[3]: r12 |</span><br><span class=\"line\">&#x2F;&#x2F;    | regs[4]: r9  |</span><br><span class=\"line\">&#x2F;&#x2F;    | regs[5]: r8  | </span><br><span class=\"line\">&#x2F;&#x2F;    | regs[6]: rbp |</span><br><span class=\"line\">&#x2F;&#x2F;    | regs[7]: rdi |</span><br><span class=\"line\">&#x2F;&#x2F;    | regs[8]: rsi |</span><br><span class=\"line\">&#x2F;&#x2F;    | regs[9]: ret |  &#x2F;&#x2F;ret func addr</span><br><span class=\"line\">&#x2F;&#x2F;    | regs[10]: rdx |</span><br><span class=\"line\">&#x2F;&#x2F;    | regs[11]: rcx | </span><br><span class=\"line\">&#x2F;&#x2F;    | regs[12]: rbx |</span><br><span class=\"line\">&#x2F;&#x2F;hig | regs[13]: rsp |</span><br><span class=\"line\">enum</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tkRDI &#x3D; 7,</span><br><span class=\"line\">\tkRSI &#x3D; 8,</span><br><span class=\"line\">\tkRETAddr &#x3D; 9,</span><br><span class=\"line\">\tkRSP &#x3D; 13,</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">int coctx_make( coctx_t *ctx,coctx_pfn_t pfn,const void *s,const void *s1 )</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tchar *sp &#x3D; ctx-&gt;ss_sp + ctx-&gt;ss_size;</span><br><span class=\"line\">\tsp &#x3D; (char*) ((unsigned long)sp &amp; -16LL  );</span><br><span class=\"line\"></span><br><span class=\"line\">\tmemset(ctx-&gt;regs, 0, sizeof(ctx-&gt;regs));</span><br><span class=\"line\"></span><br><span class=\"line\">\tctx-&gt;regs[ kRSP ] &#x3D; sp - 8;</span><br><span class=\"line\"></span><br><span class=\"line\">\tctx-&gt;regs[ kRETAddr] &#x3D; (char*)pfn;</span><br><span class=\"line\"></span><br><span class=\"line\">\tctx-&gt;regs[ kRDI ] &#x3D; (char*)s;</span><br><span class=\"line\">\tctx-&gt;regs[ kRSI ] &#x3D; (char*)s1;</span><br><span class=\"line\">\treturn 0;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">int coctx_init( coctx_t *ctx )</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tmemset( ctx,0,sizeof(*ctx));</span><br><span class=\"line\">\treturn 0;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">extern &quot;C&quot;</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    extern void coctx_swap(coctx_t *, coctx_t*) asm(&quot;coctx_swap&quot;);</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">coctx_init(&amp;worker.ctx);</span><br><span class=\"line\">coctx_make(&amp;worker.ctx, stress, (void*)0, &amp;worker);</span><br><span class=\"line\">clock_t start &#x3D; clock();</span><br><span class=\"line\">for (int i &#x3D; 0; i &lt; 1000 * 10000; ++i)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    coctx_swap(&amp;main_co.ctx, &amp;worker.ctx);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","site":{"data":{}},"excerpt":"<h3 id=\"一、AT-amp-T-格式Linux-汇编语法格式\"><a href=\"#一、AT-amp-T-格式Linux-汇编语法格式\" class=\"headerlink\" title=\"一、AT&amp;T 格式Linux 汇编语法格式\"></a>一、AT&amp;T 格式Linux 汇编语法格式</h3><ul>\n<li>在 AT&amp;T 汇编格式中，寄存器名要加上 ‘%’ 作为前缀；而在 Intel 汇编格式中，寄存器名不需要加前缀。例如：  </li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>AT&amp;T格式</th>\n<th>Intel格式</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>pushl %eax</td>\n<td>push eax</td>\n</tr>\n</tbody></table>","more":"<ul>\n<li>在 AT&amp;T 汇编格式中，用 ‘$’ 前缀表示一个立即操作数；而在 Intel 汇编格式中，立即数的表示不用带任何前缀。例如：  </li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>AT&amp;T格式</th>\n<th>Intel格式</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>pushl $1</td>\n<td>push 1</td>\n</tr>\n</tbody></table>\n<ul>\n<li>AT&amp;T 和 Intel 格式中的源操作数和目标操作数的位置正好相反。在 Intel 汇编格式中，目标操作数在源操作数的左边；而在 AT&amp;T 汇编格式中，目标操作数在源操作数的右边。例如：  </li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>AT&amp;T格式</th>\n<th>Intel格式</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>addl $1, %eax</td>\n<td>add eax, 1</td>\n</tr>\n</tbody></table>\n<ul>\n<li>在 AT&amp;T 汇编格式中，操作数的字长由操作符的最后一个字母决定，后缀’b’、’w’、’l’分别表示操作数为字节（byte，8 比特）、字（word，16 比特）和长字（long，32比特）；而在 Intel 汇编格式中，操作数的字长是用 “byte ptr” 和 “word ptr” 等前缀来表示的。例如：</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>AT&amp;T格式</th>\n<th>Intel格式</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>movb val, %al</td>\n<td>mov al, byte ptr val</td>\n</tr>\n</tbody></table>\n<ul>\n<li>在 AT&amp;T 汇编格式中，绝对转移和调用指令（jump/call）的操作数前要加上’*’作为前缀，而在 Intel 格式中则不需要。  </li>\n<li>远程转移指令和远程子调用指令的操作码，在 AT&amp;T 汇编格式中为 “ljump” 和 “lcall”，而在 Intel 汇编格式中则为 “jmp far” 和 “call far”，即：  </li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>AT&amp;T格式</th>\n<th>Intel格式</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>ljump $section, $offset</td>\n<td>jmp far section:offset</td>\n</tr>\n<tr>\n<td>lcall $section, $offset</td>\n<td>call far section:offset</td>\n</tr>\n</tbody></table>\n<ul>\n<li>与之相应的远程返回指令则为：</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>AT&amp;T格式</th>\n<th>Intel格式</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>lret $stack_adjust</td>\n<td>ret far stack_adjust</td>\n</tr>\n</tbody></table>\n<ul>\n<li>内存操作数的寻址方式  </li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>AT&amp;T格式</th>\n<th>Intel格式</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>section:disp(base, index, scale)</td>\n<td>section:[base + index*scale + disp]</td>\n</tr>\n</tbody></table>\n<ul>\n<li><p>由于 Linux 工作在保护模式下，用的是 32 位线性地址，所以在计算地址时不用考虑段基址和偏移量，而是采用如下的地址计算方法：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">disp + base + index * scale</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>下面是一些内存操作数的例子：  </p>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>AT&amp;T格式</th>\n<th>Intel格式</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>movl -4(%ebp), %eax</td>\n<td>mov eax, [ebp - 4]</td>\n</tr>\n<tr>\n<td>movl array(, %eax, 4), %eax</td>\n<td>mov eax, [eax*4 + array]</td>\n</tr>\n<tr>\n<td>movw array(%ebx, %eax, 4), %cx</td>\n<td>mov cx, [ebx + 4*eax + array]</td>\n</tr>\n<tr>\n<td>movb $4, %fs:(%eax)</td>\n<td>mov fs:eax, 4</td>\n</tr>\n</tbody></table>\n<h3 id=\"二、Hello-World\"><a href=\"#二、Hello-World\" class=\"headerlink\" title=\"二、Hello World!\"></a>二、Hello World!</h3><p>既然所有程序设计语言的第一个例子都是在屏幕上打印一个字符串 “Hello World!”，那我们也以这种方式来开始介绍 Linux 下的汇编语言程序设计。  </p>\n<p>在 Linux 操作系统中，你有很多办法可以实现在屏幕上显示一个字符串，但最简洁的方式是使用 Linux 内核提供的系统调用。使用这种方法最大的好处是可以直接和操作系统的内核进行通讯，不需要链接诸如 libc 这样的函数库，也不需要使用 ELF 解释器，因而代码尺寸小且执行速度快。  </p>\n<p>Linux 是一个运行在保护模式下的 32 位操作系统，采用 flat memory 模式，目前最常用到的是 ELF 格式的二进制代码。一个 ELF 格式的可执行程序通常划分为如下几个部分：.text、.data 和 .bss，其中 .text 是只读的代码区，.data 是可读可写的数据区，而 .bss 则是可读可写且没有初始化的数据区。代码区和数据区在 ELF 中统称为 section，根据实际需要你可以使用其它标准的 section，也可以添加自定义 section，但一个 ELF 可执行程序至少应该有一个 .text 部分。下面给出我们的第一个汇编程序，用的是 AT&amp;T 汇编语言格式：   </p>\n<h6 id=\"例1-AT-amp-T-格式\"><a href=\"#例1-AT-amp-T-格式\" class=\"headerlink\" title=\"例1. AT&amp;T 格式\"></a>例1. AT&amp;T 格式</h6><ul>\n<li>#hello.s<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.data                    # 数据段声明</span><br><span class=\"line\"></span><br><span class=\"line\">        msg : .string &quot;Hello, world!\\\\n&quot; # 要输出的字符串</span><br><span class=\"line\"></span><br><span class=\"line\">        len &#x3D; . - msg                   # 字串长度</span><br><span class=\"line\"></span><br><span class=\"line\">.text                    # 代码段声明</span><br><span class=\"line\"></span><br><span class=\"line\">.global _start           # 指定入口函数</span><br><span class=\"line\"></span><br><span class=\"line\">_start:                  # 在屏幕上显示一个字符串</span><br><span class=\"line\"></span><br><span class=\"line\">        movl $len, %edx  # 参数三：字符串长度</span><br><span class=\"line\"></span><br><span class=\"line\">        movl $msg, %ecx  # 参数二：要显示的字符串</span><br><span class=\"line\"></span><br><span class=\"line\">        movl $1, %ebx    # 参数一：文件描述符(stdout)</span><br><span class=\"line\"></span><br><span class=\"line\">        movl $4, %eax    # 系统调用号(sys_write)</span><br><span class=\"line\"></span><br><span class=\"line\">        int  $0x80       # 调用内核功能</span><br><span class=\"line\"></span><br><span class=\"line\">                         # 退出程序</span><br><span class=\"line\"></span><br><span class=\"line\">        movl $0,%ebx     # 参数一：退出代码</span><br><span class=\"line\"></span><br><span class=\"line\">        movl $1,%eax     # 系统调用号(sys_exit)</span><br><span class=\"line\"></span><br><span class=\"line\">        int  $0x80       # 调用内核功能</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<p>初次接触到 AT&amp;T 格式的汇编代码时，很多程序员都认为太晦涩难懂了，没有关系，在 Linux 平台上你同样可以使用 Intel 格式来编写汇编程序：</p>\n<h6 id=\"例2-Intel-格式\"><a href=\"#例2-Intel-格式\" class=\"headerlink\" title=\"例2. Intel 格式\"></a>例2. Intel 格式</h6><p>; hello.asm</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">section .data            ; 数据段声明</span><br><span class=\"line\"></span><br><span class=\"line\">        msg db &quot;Hello, world!&quot;, 0xA     ; 要输出的字符串</span><br><span class=\"line\"></span><br><span class=\"line\">        len equ $ - msg                 ; 字串长度</span><br><span class=\"line\"></span><br><span class=\"line\">section .text            ; 代码段声明</span><br><span class=\"line\"></span><br><span class=\"line\">global _start            ; 指定入口函数</span><br><span class=\"line\"></span><br><span class=\"line\">_start:                  ; 在屏幕上显示一个字符串</span><br><span class=\"line\"></span><br><span class=\"line\">        mov edx, len     ; 参数三：字符串长度</span><br><span class=\"line\"></span><br><span class=\"line\">        mov ecx, msg     ; 参数二：要显示的字符串</span><br><span class=\"line\"></span><br><span class=\"line\">        mov ebx, 1       ; 参数一：文件描述符(stdout)</span><br><span class=\"line\"></span><br><span class=\"line\">        mov eax, 4       ; 系统调用号(sys_write)</span><br><span class=\"line\"></span><br><span class=\"line\">        int 0x80         ; 调用内核功能</span><br><span class=\"line\"></span><br><span class=\"line\">                         ; 退出程序</span><br><span class=\"line\"></span><br><span class=\"line\">        mov ebx, 0       ; 参数一：退出代码</span><br><span class=\"line\"></span><br><span class=\"line\">        mov eax, 1       ; 系统调用号(sys_exit)</span><br><span class=\"line\"></span><br><span class=\"line\">        int 0x80         ; 调用内核功能</span><br></pre></td></tr></table></figure>\n\n<p>上面两个汇编程序采用的语法虽然完全不同，但功能却都是调用 Linux 内核提供的 sys_write 来显示一个字符串，然后再调用 sys_exit 退出程序。在 Linux 内核源文件 include/asm-i386/unistd.h 中，可以找到所有系统调用的定义。</p>\n<h3 id=\"四、系统调用\"><a href=\"#四、系统调用\" class=\"headerlink\" title=\"四、系统调用\"></a>四、系统调用</h3><p>即便是最简单的汇编程序，也难免要用到诸如输入、输出以及退出等操作，而要进行这些操作则需要调用操作系统所提供的服务，也就是系统调用。除非你的程序只完成加减乘除等数学运算，否则将很难避免使用系统调用，事实上除了系统调用不同之外，各种操作系统的汇编编程往往都是很类似的。</p>\n<p>在 Linux 平台下有两种方式来使用系统调用：利用封装后的 C 库（libc）或者通过汇编直接调用。其中通过汇编语言来直接调用系统调用，是最高效地使用 Linux 内核服务的方法，因为最终生成的程序不需要与任何库进行链接，而是直接和内核通信。</p>\n<p>和 DOS 一样，Linux 下的系统调用也是通过中断（int 0x80）来实现的。在执行 int 80 指令时，寄存器 eax 中存放的是系统调用的功能号，而传给系统调用的参数则必须按顺序放到寄存器 ebx，ecx，edx，esi，edi 中，当系统调用完成之后，返回值可以在寄存器 eax 中获得。</p>\n<p>所有的系统调用功能号都可以在文件 /usr/include/bits/syscall.h 中找到，为了便于使用，它们是用 SYS_<name> 这样的宏来定义的，如 SYS_write、SYS_exit 等。例如，经常用到的 write 函数是如下定义的：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssize_t write(int fd, const void *buf, size_t count);</span><br></pre></td></tr></table></figure>\n<p>该函数的功能最终是通过 SYS_write 这一系统调用来实现的。根据上面的约定，参数 fb、buf 和 count 分别存在寄存器 ebx、ecx 和 edx 中，而系统调用号 SYS_write 则放在寄存器 eax 中，当 int 0x80 指令执行完毕后，返回值可以从寄存器 eax 中获得。</p>\n<p>或许你已经发现，在进行系统调用时至多只有 5 个寄存器能够用来保存参数，难道所有系统调用的参数个数都不超过 5 吗？当然不是，例如 mmap 函数就有 6 个参数，这些参数最后都需要传递给系统调用 SYS_mmap：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">void * mmap(void *start, size_t length, int prot , int flags, int fd, off_t offset);c</span><br></pre></td></tr></table></figure>\n<p>当一个系统调用所需的参数个数大于 5 时，执行int 0x80 指令时仍需将系统调用功能号保存在寄存器 eax 中，所不同的只是全部参数应该依次放在一块连续的内存区域里，同时在寄存器 ebx 中保存指向该内存区域的指针。系统调用完成之后，返回值仍将保存在寄存器 eax 中。</p>\n<p>由于只是需要一块连续的内存区域来保存系统调用的参数，因此完全可以像普通的函数调用一样使用栈(stack)来传递系统调用所需的参数。但要注意一点， Linux 采用的是 C 语言的调用模式，这就意味着所有参数必须以相反的顺序进栈，即最后一个参数先入栈，而第一个参数则最后入栈。如果采用栈来传递系统调用所需的参数，在执行 int 0x80 指令时还应该将栈指针的当前值复制到寄存器 ebx中。</p>\n<h3 id=\"五、命令行参数\"><a href=\"#五、命令行参数\" class=\"headerlink\" title=\"五、命令行参数\"></a>五、命令行参数</h3><p>在 Linux 操作系统中，当一个可执行程序通过命令行启动时，其所需的参数将被保存到栈中：首先是 argc，然后是指向各个命令行参数的指针数组 argv，最后是指向环境变量的指针数据 envp。在编写汇编语言程序时，很多时候需要对这些参数进行处理，下面的代码示范了如何在汇编代码中进行命令行参数的处理：</p>\n<p>例3. 处理命令行参数</p>\n<h5 id=\"args-S\"><a href=\"#args-S\" class=\"headerlink\" title=\"args.S\"></a>args.S</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.text</span><br><span class=\"line\"></span><br><span class=\"line\">.globl _start</span><br><span class=\"line\"></span><br><span class=\"line\">_start:</span><br><span class=\"line\"></span><br><span class=\"line\">popl %ecx # argc</span><br><span class=\"line\"></span><br><span class=\"line\">vnext:</span><br><span class=\"line\"></span><br><span class=\"line\">popl %ecx # argv</span><br><span class=\"line\"></span><br><span class=\"line\">test %ecx, %ecx # 空指针表明结束</span><br><span class=\"line\"></span><br><span class=\"line\">jz exit</span><br><span class=\"line\"></span><br><span class=\"line\">movl %ecx, %ebx</span><br><span class=\"line\"></span><br><span class=\"line\">xorl %edx, %edx</span><br><span class=\"line\"></span><br><span class=\"line\">strlen:</span><br><span class=\"line\"></span><br><span class=\"line\">movb (%ebx), %al</span><br><span class=\"line\"></span><br><span class=\"line\">inc %edx</span><br><span class=\"line\"></span><br><span class=\"line\">inc %ebx</span><br><span class=\"line\"></span><br><span class=\"line\">test %al, %al</span><br><span class=\"line\"></span><br><span class=\"line\">jnz strlen</span><br><span class=\"line\"></span><br><span class=\"line\">movb $10, -1(%ebx)</span><br><span class=\"line\"></span><br><span class=\"line\">movl $4, %eax # 系统调用号(sys_write)</span><br><span class=\"line\"></span><br><span class=\"line\">movl $1, %ebx # 文件描述符(stdout)</span><br><span class=\"line\"></span><br><span class=\"line\">int $0x80</span><br><span class=\"line\"></span><br><span class=\"line\">jmp vnext</span><br><span class=\"line\"></span><br><span class=\"line\">exit: movl $1,%eax # 系统调用号(sys_exit)</span><br><span class=\"line\"></span><br><span class=\"line\">xorl %ebx, %ebx # 退出代码</span><br><span class=\"line\"></span><br><span class=\"line\">int $0x80</span><br><span class=\"line\"></span><br><span class=\"line\">ret</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"六、GCC-内联汇编\"><a href=\"#六、GCC-内联汇编\" class=\"headerlink\" title=\"六、GCC 内联汇编\"></a>六、GCC 内联汇编</h3><p>用汇编编写的程序虽然运行速度快，但开发速度非常慢，效率也很低。如果只是想对关键代码段进行优化，或许更好的办法是将汇编指令嵌入到 C 语言程序中，从而充分利用高级语言和汇编语言各自的特点。但一般来讲，在 C 代码中嵌入汇编语句要比”纯粹”的汇编语言代码复杂得多，因为需要解决如何分配寄存器，以及如何与C代码中的变量相结合等问题。</p>\n<p>GCC 提供了很好的内联汇编支持，最基本的格式是：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">__asm__(&quot;asm statements&quot;);</span><br></pre></td></tr></table></figure>\n<p>例如：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">__asm__(&quot;nop&quot;);</span><br></pre></td></tr></table></figure>\n<p>如果需要同时执行多条汇编语句，则应该用”\\n\\t”将各个语句分隔开，例如：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">__asm__( &quot;pushl %%eax \\\\n\\\\t&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">&quot;movl $0, %%eax \\\\n\\\\t&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">&quot;popl %eax&quot;);</span><br></pre></td></tr></table></figure>\n<p>通常嵌入到 C 代码中的汇编语句很难做到与其它部分没有任何关系，因此更多时候需要用到完整的内联汇编格式：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">__asm__(&quot;asm statements&quot; : outputs : inputs : registers-modified);</span><br></pre></td></tr></table></figure>\n<p>插入到 C 代码中的汇编语句是以”:”分隔的四个部分，其中第一部分就是汇编代码本身，通常称为指令部，其格式和在汇编语言中使用的格式基本相同。指令部分是必须的，而其它部分则可以根据实际情况而省略。</p>\n<p>在将汇编语句嵌入到C代码中时，操作数如何与C代码中的变量相结合是个很大的问题。GCC采用如下方法来解决这个问题：程序员提供具体的指令，而对寄存器的使用则只需给出”样板”和约束条件就可以了，具体如何将寄存器与变量结合起来完全由GCC和GAS来负责。</p>\n<p>在GCC 内联汇编语句的指令部中，加上前缀’’%’’的数字(如%0，%1)表示的就是需要使用寄存器的”样板”操作数。指令部中使用了几个样板操作数，就表明有几个变量需要与寄存器相结合，这样GCC和GAS在编译和汇编时会根据后面给定的约束条件进行恰当的处理。由于样板操作数也使用’’ %’’作为前缀，因此在涉及到具体的寄存器时，寄存器名前面应该加上两个’’%’’，以免产生混淆。</p>\n<p>紧跟在指令部后面的是输出部，是规定输出变量如何与样板操作数进行结合的条件，每个条件称为一个”约束”，必要时可以包含多个约束，相互之间用逗号分隔开就可以了。每个输出约束都以’’=’’号开始，然后紧跟一个对操作数类型进行说明的字后，最后是如何与变量相结合的约束。凡是与输出部中说明的操作数相结合的寄存器或操作数本身，在执行完嵌入的汇编代码后均不保留执行之前的内容，这是GCC在调度寄存器时所使用的依据。</p>\n<p>输出部后面是输入部，输入约束的格式和输出约束相似，但不带’’=’’号。如果一个输入约束要求使用寄存器，则GCC在预处理时就会为之分配一个寄存器，并插入必要的指令将操作数装入该寄存器。与输入部中说明的操作数结合的寄存器或操作数本身，在执行完嵌入的汇编代码后也不保留执行之前的内容。</p>\n<p>有时在进行某些操作时，除了要用到进行数据输入和输出的寄存器外，还要使用多个寄存器来保存中间计算结果，这样就难免会破坏原有寄存器的内容。在GCC内联汇编格式中的最后一个部分中，可以对将产生副作用的寄存器进行说明，以便GCC能够采用相应的措施。</p>\n<p>下面是一个内联汇编的简单例子：</p>\n<h6 id=\"例4-内联汇编\"><a href=\"#例4-内联汇编\" class=\"headerlink\" title=\"例4.内联汇编\"></a>例4.内联汇编</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">int main()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    int a &#x3D; 10, b &#x3D; 0;</span><br><span class=\"line\"></span><br><span class=\"line\">    __asm__ __volatile__(&quot;movl %1, %%eax;\\\\n\\\\r&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">    &quot;movl %%eax, %0;&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">    :&quot;&#x3D;r&quot;(b)</span><br><span class=\"line\"></span><br><span class=\"line\">    :&quot;r&quot;(a)</span><br><span class=\"line\"></span><br><span class=\"line\">    :&quot;%eax&quot;);</span><br><span class=\"line\"></span><br><span class=\"line\">    printf(&quot;Result: %d, %d\\\\n&quot;, a, b);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>上面的程序完成将变量a的值赋予变量b，有几点需要说明：</p>\n<p>变量b是输出操作数，通过%0来引用，而变量a是输入操作数，通过%1来引用。<br>输入操作数和输出操作数都使用r进行约束，表示将变量a和变量b存储在寄存器中。输入约束和输出约束的不同点在于输出约束多一个约束修饰符’’=’’。<br>在内联汇编语句中使用寄存器eax时，寄存器名前应该加两个’’%’’，即%%eax。内联汇编中使用%0、%1等来标识变量，任何只带一个’’%’’的标识符都看成是操作数，而不是寄存器。<br>内联汇编语句的最后一个部分告诉GCC它将改变寄存器eax中的值，GCC在处理时不应使用该寄存器来存储任何其它的值。<br>由于变量b被指定成输出操作数，当内联汇编语句执行完毕后，它所保存的值将被更新。<br>在内联汇编中用到的操作数从输出部的第一个约束开始编号，序号从0开始，每个约束记数一次，指令部要引用这些操作数时，只需在序号前加上’’%’’作为前缀就可以了。需要注意的是，内联汇编语句的指令部在引用一个操作数时总是将其作为32位的长字使用，但实际情况可能需要的是字或字节，因此应该在约束中指明正确的限定符：</p>\n<table>\n<thead>\n<tr>\n<th>限定符</th>\n<th>意义</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>“m”、”v”、”o”</td>\n<td>内存单元</td>\n</tr>\n<tr>\n<td>“r”</td>\n<td>任何寄存器</td>\n</tr>\n<tr>\n<td>“q”</td>\n<td>寄存器eax、ebx、ecx、edx之一</td>\n</tr>\n<tr>\n<td>“i”、”h”</td>\n<td>直接操作数</td>\n</tr>\n<tr>\n<td>“E”和”F”</td>\n<td>浮点数</td>\n</tr>\n<tr>\n<td>“g”</td>\n<td>任意</td>\n</tr>\n<tr>\n<td>“a”、”b”、”c”、”d”</td>\n<td>分别表示寄存器eax、ebx、ecx和edx</td>\n</tr>\n<tr>\n<td>“S”和”D”</td>\n<td>寄存器esi、edi</td>\n</tr>\n<tr>\n<td>“I”</td>\n<td>常数（0至31）</td>\n</tr>\n</tbody></table>\n<h3 id=\"七-LIBCO协程的swap代码\"><a href=\"#七-LIBCO协程的swap代码\" class=\"headerlink\" title=\"七.  LIBCO协程的swap代码\"></a>七.  LIBCO协程的swap代码</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.globl coctx_swap</span><br><span class=\"line\">#if !defined( __APPLE__ )</span><br><span class=\"line\">.type  coctx_swap, @function</span><br><span class=\"line\">#endif</span><br><span class=\"line\">coctx_swap:</span><br><span class=\"line\"></span><br><span class=\"line\">#if defined(__i386__)</span><br><span class=\"line\">\tleal 4(%esp), %eax &#x2F;&#x2F;sp </span><br><span class=\"line\">\tmovl 4(%esp), %esp </span><br><span class=\"line\">\tleal 32(%esp), %esp &#x2F;&#x2F;parm a : &amp;regs[7] + sizeof(void*)</span><br><span class=\"line\"></span><br><span class=\"line\">\tpushl %eax &#x2F;&#x2F;esp -&gt;parm a </span><br><span class=\"line\"></span><br><span class=\"line\">\tpushl %ebp</span><br><span class=\"line\">\tpushl %esi</span><br><span class=\"line\">\tpushl %edi</span><br><span class=\"line\">\tpushl %edx</span><br><span class=\"line\">\tpushl %ecx</span><br><span class=\"line\">\tpushl %ebx</span><br><span class=\"line\">\tpushl -4(%eax)</span><br><span class=\"line\"></span><br><span class=\"line\">\t</span><br><span class=\"line\">\tmovl 4(%eax), %esp &#x2F;&#x2F;parm b -&gt; &amp;regs[0]</span><br><span class=\"line\"></span><br><span class=\"line\">\tpopl %eax  &#x2F;&#x2F;ret func addr</span><br><span class=\"line\">\tpopl %ebx  </span><br><span class=\"line\">\tpopl %ecx</span><br><span class=\"line\">\tpopl %edx</span><br><span class=\"line\">\tpopl %edi</span><br><span class=\"line\">\tpopl %esi</span><br><span class=\"line\">\tpopl %ebp</span><br><span class=\"line\">\tpopl %esp</span><br><span class=\"line\">\tpushl %eax &#x2F;&#x2F;set ret func addr</span><br><span class=\"line\"></span><br><span class=\"line\">\txorl %eax, %eax</span><br><span class=\"line\">\tret</span><br><span class=\"line\"></span><br><span class=\"line\">#elif defined(__x86_64__)</span><br><span class=\"line\">\tleaq 8(%rsp),%rax</span><br><span class=\"line\">\tleaq 112(%rdi),%rsp</span><br><span class=\"line\">\tpushq %rax</span><br><span class=\"line\">\tpushq %rbx</span><br><span class=\"line\">\tpushq %rcx</span><br><span class=\"line\">\tpushq %rdx</span><br><span class=\"line\"></span><br><span class=\"line\">\tpushq -8(%rax) &#x2F;&#x2F;ret func addr</span><br><span class=\"line\"></span><br><span class=\"line\">\tpushq %rsi</span><br><span class=\"line\">\tpushq %rdi</span><br><span class=\"line\">\tpushq %rbp</span><br><span class=\"line\">\tpushq %r8</span><br><span class=\"line\">\tpushq %r9</span><br><span class=\"line\">\tpushq %r12</span><br><span class=\"line\">\tpushq %r13</span><br><span class=\"line\">\tpushq %r14</span><br><span class=\"line\">\tpushq %r15</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tmovq %rsi, %rsp</span><br><span class=\"line\">\tpopq %r15</span><br><span class=\"line\">\tpopq %r14</span><br><span class=\"line\">\tpopq %r13</span><br><span class=\"line\">\tpopq %r12</span><br><span class=\"line\">\tpopq %r9</span><br><span class=\"line\">\tpopq %r8</span><br><span class=\"line\">\tpopq %rbp</span><br><span class=\"line\">\tpopq %rdi</span><br><span class=\"line\">\tpopq %rsi</span><br><span class=\"line\">\tpopq %rax &#x2F;&#x2F;ret func addr</span><br><span class=\"line\">\tpopq %rdx</span><br><span class=\"line\">\tpopq %rcx</span><br><span class=\"line\">\tpopq %rbx</span><br><span class=\"line\">\tpopq %rsp</span><br><span class=\"line\">\tpushq %rax</span><br><span class=\"line\">\t</span><br><span class=\"line\">\txorl %eax, %eax</span><br><span class=\"line\">\tret</span><br><span class=\"line\">#endif</span><br></pre></td></tr></table></figure>\n\n<p>使用方式:  </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">#define ESP 0</span><br><span class=\"line\">#define EIP 1</span><br><span class=\"line\">#define EAX 2</span><br><span class=\"line\">#define ECX 3</span><br><span class=\"line\">&#x2F;&#x2F; -----------</span><br><span class=\"line\">#define RSP 0</span><br><span class=\"line\">#define RIP 1</span><br><span class=\"line\">#define RBX 2</span><br><span class=\"line\">#define RDI 3</span><br><span class=\"line\">#define RSI 4</span><br><span class=\"line\"></span><br><span class=\"line\">#define RBP 5</span><br><span class=\"line\">#define R12 6</span><br><span class=\"line\">#define R13 7</span><br><span class=\"line\">#define R14 8</span><br><span class=\"line\">#define R15 9</span><br><span class=\"line\">#define RDX 10</span><br><span class=\"line\">#define RCX 11</span><br><span class=\"line\">#define R8 12</span><br><span class=\"line\">#define R9 13</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F;----- --------</span><br><span class=\"line\">&#x2F;&#x2F; 32 bit</span><br><span class=\"line\">&#x2F;&#x2F; | regs[0]: ret |</span><br><span class=\"line\">&#x2F;&#x2F; | regs[1]: ebx |</span><br><span class=\"line\">&#x2F;&#x2F; | regs[2]: ecx |</span><br><span class=\"line\">&#x2F;&#x2F; | regs[3]: edx |</span><br><span class=\"line\">&#x2F;&#x2F; | regs[4]: edi |</span><br><span class=\"line\">&#x2F;&#x2F; | regs[5]: esi |</span><br><span class=\"line\">&#x2F;&#x2F; | regs[6]: ebp |</span><br><span class=\"line\">&#x2F;&#x2F; | regs[7]: eax |  &#x3D; esp</span><br><span class=\"line\">enum</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tkEIP &#x3D; 0,</span><br><span class=\"line\">\tkESP &#x3D; 7,</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F;-------------</span><br><span class=\"line\">&#x2F;&#x2F; 64 bit</span><br><span class=\"line\">&#x2F;&#x2F;low | regs[0]: r15 |</span><br><span class=\"line\">&#x2F;&#x2F;    | regs[1]: r14 |</span><br><span class=\"line\">&#x2F;&#x2F;    | regs[2]: r13 |</span><br><span class=\"line\">&#x2F;&#x2F;    | regs[3]: r12 |</span><br><span class=\"line\">&#x2F;&#x2F;    | regs[4]: r9  |</span><br><span class=\"line\">&#x2F;&#x2F;    | regs[5]: r8  | </span><br><span class=\"line\">&#x2F;&#x2F;    | regs[6]: rbp |</span><br><span class=\"line\">&#x2F;&#x2F;    | regs[7]: rdi |</span><br><span class=\"line\">&#x2F;&#x2F;    | regs[8]: rsi |</span><br><span class=\"line\">&#x2F;&#x2F;    | regs[9]: ret |  &#x2F;&#x2F;ret func addr</span><br><span class=\"line\">&#x2F;&#x2F;    | regs[10]: rdx |</span><br><span class=\"line\">&#x2F;&#x2F;    | regs[11]: rcx | </span><br><span class=\"line\">&#x2F;&#x2F;    | regs[12]: rbx |</span><br><span class=\"line\">&#x2F;&#x2F;hig | regs[13]: rsp |</span><br><span class=\"line\">enum</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tkRDI &#x3D; 7,</span><br><span class=\"line\">\tkRSI &#x3D; 8,</span><br><span class=\"line\">\tkRETAddr &#x3D; 9,</span><br><span class=\"line\">\tkRSP &#x3D; 13,</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">int coctx_make( coctx_t *ctx,coctx_pfn_t pfn,const void *s,const void *s1 )</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tchar *sp &#x3D; ctx-&gt;ss_sp + ctx-&gt;ss_size;</span><br><span class=\"line\">\tsp &#x3D; (char*) ((unsigned long)sp &amp; -16LL  );</span><br><span class=\"line\"></span><br><span class=\"line\">\tmemset(ctx-&gt;regs, 0, sizeof(ctx-&gt;regs));</span><br><span class=\"line\"></span><br><span class=\"line\">\tctx-&gt;regs[ kRSP ] &#x3D; sp - 8;</span><br><span class=\"line\"></span><br><span class=\"line\">\tctx-&gt;regs[ kRETAddr] &#x3D; (char*)pfn;</span><br><span class=\"line\"></span><br><span class=\"line\">\tctx-&gt;regs[ kRDI ] &#x3D; (char*)s;</span><br><span class=\"line\">\tctx-&gt;regs[ kRSI ] &#x3D; (char*)s1;</span><br><span class=\"line\">\treturn 0;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">int coctx_init( coctx_t *ctx )</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tmemset( ctx,0,sizeof(*ctx));</span><br><span class=\"line\">\treturn 0;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">extern &quot;C&quot;</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    extern void coctx_swap(coctx_t *, coctx_t*) asm(&quot;coctx_swap&quot;);</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">coctx_init(&amp;worker.ctx);</span><br><span class=\"line\">coctx_make(&amp;worker.ctx, stress, (void*)0, &amp;worker);</span><br><span class=\"line\">clock_t start &#x3D; clock();</span><br><span class=\"line\">for (int i &#x3D; 0; i &lt; 1000 * 10000; ++i)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    coctx_swap(&amp;main_co.ctx, &amp;worker.ctx);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"ELF文件的SECTIO分析","date":"2019-11-08T16:00:00.000Z","author":"yawei.zhang","_content":"\n### 目录  \n\n---  \n\n<!-- TOC -->\n\n- [目录](#目录)\n- [ELF文件类型和描述](#elf文件类型和描述)\n  - [文件类型](#文件类型)\n  - [链接器视图(编译器 汇编器 链接器)](#链接器视图编译器-汇编器-链接器)\n  - [加载器视图 (系统加载器)](#加载器视图-系统加载器)\n  - [基本测试命令](#基本测试命令)\n  - [基础术语知识](#基础术语知识)\n    - [目标文件格式的比较和说明](#目标文件格式的比较和说明)\n    - [其他词汇说明](#其他词汇说明)\n- [可重定位文件](#可重定位文件)\n  - [lib.cpp片段分析](#libcpp片段分析)\n  - [so.cpp片段分析](#socpp片段分析)\n\n<!-- /TOC -->\n\n### ELF文件类型和描述  \n\n---  \n\n(Executable and Linking Format) (可执行可链接格式) 文件    \n#### 文件类型\n* 可重定位文件  (relocatable file)  \n  * 由源文件编译而成但是还没有链接成可执行文件, 扩展名通常为.o  通常'目标文件(object file)'  用于与其他目标文件进行链接成可执行文件或者动态链接库.  \n  * 可重定位是指 对外部符号的访问会进行标记, 在链接时候会重写这部分访问(操作数)重定位到真正的位置上.  \n  * 重定位因为存在该修补 则有以下作用:  \n    * 重定位在执行时是直接使用真实位置 没有其他过程 性能非常好   \n    * 链接共享库的时候如果需要确定地址和修补, 则还需要保证多个共享库的地址不可以重叠, 在32位下这种保证会很容易用尽虚拟(地址)空间  \n    * 重定位需要修改代码段, 从而破坏'代码段'只读属性, 如果在链接阶段无法完成重定位, 则只能放在加载过程完成, 这样会导致'无法实现真正的代码共享' .  比如所有进程使用的相同so文件在内存中实际上只有一份就是依赖于so的代码段只读且一致这个原则上的.  \n\n* 共享目标文件(shared object file)，即动态连接库文件 它在以下两种情况下被使用\n  * 在链接过程中与其它动态链接库或可重定位文件一起构建新的目标文件\n  * 在可执行文件被加载的过程中 被动态链接到新的进程中 成为运行代码的一部分  \n  \n* 可执行文件(executable file)，经过连接的，可以执行的程序文件。  \n          \n* coredump文件 核心转储  \n\n<!-- more -->\n#### 链接器视图(编译器 汇编器 链接器)   \n链接器关心的内容   \n| LINKING VIEW \n| -\n| ELF HEADER\n| PROGRAM HEADER TABLE OPTIONAL \n| SECTION 1  .text\n| SECTION 2  .data\n| SECTION n ...\n| SECTION HEADER TABLE  \n\n#### 加载器视图 (系统加载器) \n加载器关心的内容 \n| EXECUTION VIEW \n| - \n| ELF HEADER\n| PROGRAM HEADER TABLE \n| SEGMENT 1 \n| SEGMENT 2 \n| SEGMENT N ...\n| SECTION HEADER TABLE OPTIONAL \n\n#### 基本测试命令     \n```\nldd - print shared library dependencies  \nreadelf -a 查看elf文件\nobjdump -S 查看汇编码\n\ngcc -g -c lib.cpp  编译目标文件  \ngcc -g -c -fpic lib.cpp  启用地址无关代码选项来编译目标文件   \nar -cr liblib.a  lib.o  打包目标文件到静态库   \ng++ -g -fPIC -shared so.cpp -o so.so  启用地址无关代码的链接选项和编译选项来编译共享库   \ng++ -g -fpie -fPIE -pie -o main  lib.o libso.so \n\nexport LD_LIBRARY_PATH=\"./\" 设置临时的共享库搜索路径  \n\nPIC和PIE都用于编译地址无关代码, PIE假定了最终链接的目标是可执行文件.  \npie是链接选项 用于生成DYN类型的可执行文件.   \n\n```\n\n#### 基础术语知识   \n##### 目标文件格式的比较和说明    \n* a.out 文件格式  \n  * 旧版unix like系统(包括linux1.2以及之前的版本)中用于可执行文件 目标代码 共享库等的文件格式, 后续基本被ELF取代   \n  * 后续习惯性把a.out作为可执行文件的默认输出名, 即使格式不是a.out   \n  * stabs 是一种调试数据格式, 用来存储程序信息供符号级/源代码级的调试器用, 因该信息存储在符号表的一个特殊条目中因此得名为刺 (条目 stabs)  该格式除了完成对a.out的调试信息支持, 还用于COFF ELF的变体中 .   \n\n* ELF 文件格式  \n  * Executable and Linking Format 可执行可链接的文件格式 \n  * 原名 Extensible Linking Format  可扩展可链接的文件格式\n  * DWARF 标准化的调试数据格式 为ELF的补语  \n    * 该符号是一个历史遗留的名称, 没有正式含义, 定义为\"标准化的调试数据格式\", 被广泛使用.   \n      * DWARF使用DIE(调试信息条目)的数据结构来表示每个变量, 类型, 过程, 具有标签,属性(键值对).  \n    * DIE可以嵌套形成树结构.  \n      * DIE属性可以引用树中任何位置的另外一个DIE  \n        * 例如: 表示变量的DIE有一个DW_AT_type条目，该条目指向描述变量类型的DIE  \n\n* COFF 文件格式    \n  * Common Object File Format  通用对象文件格式  类似ELF a.out  \n  * COFF文件的出现主要是因为a.out无法充分支持共享库, 包括外部格式标识, 显式地址链接.  \n  * COFF的设计过于局限和不完整, 导致实际的实现必然违反COFF标准, 目前仍然使用的较为广泛的是windows的PE版本 \n  * COFF对a.out的主要改进是在目标文件中引入了多个命名节  不同的对象文件可能具有不同数量和类型的节  \n  * 文件的第一个字节将被加载的虚拟地址称为映像基地址 文件的其余部分不一定要装入一个连续的块中 而是要装入不同的部分中  \n\n\n| Format name | Operating system                                  | Filename extension | Explicit processor declarations | Arbitrary sections | Metadata[a] | Digital signature | String table | Symbol table | 64-bit    | Fat binaries    | Can contain icon |\n| ----------- | ------------------------------------------------- | ------------------ | ------------------------------- | ------------------ | ----------- | ----------------- | ------------ | ------------ | --------- | --------------- | ---------------- |\n| 格式名      | 操作系统                                          | 文件名扩展         | 显式处理器声明                  | 任意节             | 元数据[a]   | 数字签名          | 字符串表     | 符号表       | 64位      | fat格式文件支持 | 包含图标         |\n| a.out       | Unix-like                                         | none               | No                              | No                 | No          | No                | Yes[1]       | Yes[1]       | Extension | No              | No               |\n| COFF        | Unix-like                                         | none               | Yes by file                     | Yes                | No          | No                | Yes          | Yes          | Extension | No              | No               |\n| XCOFF       | IBM AIX, BeOS, \"classic\" Mac OS                   | none               | Yes by file                     | Yes                | No          | No                | Yes          | Yes[2]       | Yes       | No              | No               |\n| ELF         | Unix-like, OpenVMS, BeOS from R4 onwards, Haiku   | none               | Yes by file                     | Yes                | Yes         | Yes[3]            | Yes          | Yes[4]       | Yes       | Extension[5]    | Extension[6]     |\n| PE          | Windows, ReactOS, HX DOS Extender, BeOS (R3 only) | .EXE               | Yes by file                     | Yes                | Yes         | Yes[10]           | Yes          | Yes          | No        | No              | Yes              |\n\n##### 其他词汇说明  \n* ELF header 文件头   \n  * ELF文件的组成描述\n  * 结构\n    * 版本信息等    \n    * ELF文件类型\n      * ET_REL 可重定位文件 .o .a\n      * ET_DYN 可共享文件 .so  PIE版本的可执行文件   \n      * ET_EXEC 可执行文件   \n      * ET_CORE 核心转储  coredump\n    * 入口点地址  0x400510  \n    * ELF header大小  \n    * PROGRAM HEADERS大小和数量\n    * SECTION HEADERS大小和数量  \n    * Section header string table index 字符串表索引节头位置(.shstrtab) \n* section header SH 节头  \n  * .text section 里装载了可执行代码\n  * .data section 里面装载了被初始化的数据\n  * .bss section 里面装载了未被初始化或者初始化为0的数据  \n    * bss 不占据ELF文件的空间 因为没有内容只有空间大小和类型信息  \n  \n  * .commont 开发环境的时候使用的GCC版本信息   \n  * .shstrtab 指的是section header string table 保存了各个section的名字   \n  * .strtab 或者 .dynstr section 里面装载了字符串信息 字符串和符号的区别是 字符串是程序执行内容中, 符号是代码符号.  \n  * .rodata 字符串常量  \n  * .eh_frame 其内部存放了以DWARF格式保存的一些调试信息 格式与 .debug_frame 是很相似的（不完全相同）.  \n  \n  * .dynsym  动态库的符号表  \n    * 动态加载需要的符号表(动态库)  \n  * .symtab section 符号表(全量)   \n    * 包括了.strtab里面定义的符号 每个符号对应的符号表是一个Elf64_Symbol结构体 除了包含.strtab外 符号表中还包含了一些section的符号表条目 \n    * Value 符号所在的section偏移, 比如代码段的相对偏移地址, 数据段的相对偏移地址    \n    * Size 大小,  如果是变量则是变量的size, 如果是函数则是指令的行数  \n    * Type 符号的类型 NOTYPE或者UND代表是外部符号, FUNC函数, OBJECT数据, SECTION 节 \n      * 如果是so/exe则还有bss data等字段    \n    * Bind 绑定类型 LOCAL GLOBAL  \n    * vis  \n    * NDX\n    * NAME 符号名  \n\n  * .rel 打头的 sections 里面装载了重定位条目   \n    * 在最终二进制文件中 使用\"符号的地址\"在此目标文件中的\"偏移量\"处修补该值   \n\n\n    * .rel.text RELOCATION RECORDS FOR [.text] (object file)包含了代码段中引用的函数和全局变量的重定位条目 包括调用当前编译单元的\n      * Offset 偏移地址 代码段中要修改掉的地址  \n      * Type 类型 不启用PIC的一般是PC32 启用后如下\n        * PLT32 函数符号 外部或者内部  \n        * GOT PC RELX 全局变量符号  包括外部和内部  \n      * VALUE 符号名和加数  \n\n\n\n    * .rela.eh_frame RELOCATION RECORDS FOR [.eh_frame](object file)  eh_frame 的重定位信息    \n      * 在编译成object file的过程中, 该section提供了当前编译单元所定义的函数符号以及符号所在代码段的偏移位置.  \n      * OFFSET 当前函数在代码段中的开始位置  \n      * TYPE   PC32 本地实现  \n      * VALUE  符号表中的类型名以及符号的Value位置   \n\n\n\n    * .rel.plt (动态库或者EXE)节的每个表项对应了所有外部过程调用符号的重定位信息  \n      * 主要是 JUMP_SLOT 类型的重定位项  \n        * 重定位只需将符号地址填入被修正的内存即可\n      * 比如定义了一个函数test, 所有call test的地方都存在这个位置  \n    * .rel.dyn section (动态库或者EXE)的每个表项对应了除了外部过程调用的符号以外的所有重定位对象(一般是数据)  \n      * 主要是 GLOB_DAT 类型的重定位项\n        * 重定位只需将符号地址填入被修正的内存即可\n      * 比如extern来自so文件的全局静态变量  \n      * 或者开启pic后自己的全局静态变量  \n  \n    * 类型  \n      * GOT Global Offset Table  全局偏移表  \n      * PC  program counter relative displacement  程序计数的相对偏移/ IP指令的操作数修改   \n      * PLT procedure linkage table  过程链接表\n      * R_386_GOT32：该重定位类型计算从全局偏移表（global offset table）的基址到符号所在的全局偏移表表项的距离，并且通知链接编辑器建立全局偏移表。（G+A-P）\n      * R_386_PLT32：该重定位类型计算符号的过程链接表表项地址，并且通知链接编辑器构建过程链接表。（L+A-P）\n      * R_386_COPY：链接编辑器创建此重定位类型是用于动态链接的。它的r_offset成员对应一个可写segment中的位置。符号表索引指定了一个在当前目标文件和共享目标文件中都存在的符号。在执行期间，动态链接器拷贝与共享目标的符号相关的数据到偏移指定的位置。（none）\n      * R_386_GLOB_DAT：用于给指定符号的地址设置一个全局偏移表表项。该特殊重定位类型确定符号和全局偏移表项之间的对应关系。（S）\n      * R_386_JMP_SLOT：链接编辑器创建此重定位类型是用于动态链接的，它的偏移给出了过程链接表表项的位置。动态链接器通过修改过程链接表表项，把控制权传递给指定符号的地址，参见第二章“过程链接表”一节。（S）\n      * R_386_RELATIVE：链接编辑器创建此重定位类型是用于动态链接的，它的偏移成员给出了共享目标中的一个位置，这个位置包含了一个表示相对地址的值。动态链接器通过把共享目标被加载的虚拟地址与相对地址相加，计算出对应的虚拟地址。此重定位类型的重定位表项必须把符号表索引置为0。（B+A）\n      * R_386_GOTOFF：此类型的重定位计算符号值和全局偏移表地址的差值，并且通知链接编辑器构建全局偏移表。（S+A-GOT）\n      * R_386_GOTPC：此类型类似于R_386_PC32。只是它在计算中使用全局偏移表的地址。这种类型的重定位引用的通常是_GLOBAL_OFFSET_TABLE_DE类型的符号，并且通知链接编辑器构建全局偏移表。（GOT+A-P）****\n\n  * 这些条目给链接的时候需要和其他可重定位文件或者库的对应的section合并时提供了必要的信息  \n\n\n* program header PH 程序头\n  * segment信息\n* base address             基地址       \n* dynamic linker           动态连接器   \n* dynamic linking          动态连接     \n* global offset table      全局偏移量表 \n* hash table               哈希表       \n* initialization function  初始化函数   \n* link editor              连接编辑器   \n* object file              目标文件     \n* procedure linkage table  函数连接表   \n* program header           程序头       \n* program header table     程序头表     \n* program interpreter      程序解析器   \n* relocation               重定位       \n* shared object            共享目标     \n* section                  节           \n* section header           节头         \n* section header table     节头表       \n* segment                  段           \n* string table             字符串表     \n* symbol table             符号表       \n* termination function     终止函数     \n\n\n\n\n### 可重定位文件    \n\n---  \n \n\n\n\n\n* 注：各个段之间并未严格的首位相接，考虑到对齐的因素，他们之间会存在”空洞”（如图中.shstrtab段和Section Header Table之间的padding分区）；\n\n\n#### lib.cpp片段分析  \n\nlib.cpp\n```\nint g_static_lib_bss = 0;\nint g_static_lib_data = 0xff1234ff;\nint lib_func(int a, int b)\n{\n  return a+b;\n}\n```\n通过命令编译出目标文件lib.o和分析数据\n```\ng++ -c -fpic lib.cpp -o lib.pic.o\ng++ -c       lib.cpp -o lib.npic.o  \ng++ -c -fpie -pie lib.cpp -o lib.pie.o\nreadelf -a lib.npic.o\nreadelf -a lib.pic.o\nobjdump -S lib.npic.o\nobjdump -S lib.pic.o\n```\n\nlib.cpp无论是pie选项还是pic, 编译的结果完全一致 \n\n```\nELF 头：\n  ABI 版本:                          0\n  类型:                              REL (可重定位文件)\n\n重定位节 '.rela.eh_frame' 位于偏移量 0x1f0 含有 1 个条目：\n  偏移量          信息           类型           符号值        符号名称 + 加数\n000000000020  000200000002 R_X86_64_PC32     0000000000000000 .text + 0\n\nSymbol table '.symtab' contains 11 entries:\n   Num:    Value          Size Type    Bind   Vis      Ndx Name\n     0: 0000000000000000     0 NOTYPE  LOCAL  DEFAULT  UND \n     1: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS lib.cpp\n     8: 0000000000000000     4 OBJECT  GLOBAL DEFAULT    3 g_static_lib_bss\n     9: 0000000000000000     4 OBJECT  GLOBAL DEFAULT    2 g_static_lib_data\n    10: 0000000000000000    20 FUNC    GLOBAL DEFAULT    1 _Z8lib_funcii\n\n\n0000000000000000 <_Z8lib_funcii>:\n   0:   55                      push   %rbp\n   1:   48 89 e5                mov    %rsp,%rbp\n   4:   89 7d fc                mov    %edi,-0x4(%rbp)\n   7:   89 75 f8                mov    %esi,-0x8(%rbp)\n   a:   8b 55 fc                mov    -0x4(%rbp),%edx\n   d:   8b 45 f8                mov    -0x8(%rbp),%eax\n  10:   01 d0                   add    %edx,%eax\n  12:   5d                      pop    %rbp\n  13:   c3                      retq   \n```\n\n\n#### so.cpp片段分析  \nso.cpp\n```\nint lib_func(int a, int b);\nint so_func(int a, int b)\n{\n  int ret = lib_func(a, b);\n  return ret;\n}\n```\n通过命令编译出目标文件so.o和分析数据\n```\ng++ -c -fpic so.cpp -o so.pic.o\ng++ -c       so.cpp -o so.npic.o  \nreadelf -a so.npic.o\nreadelf -a so.pic.o\nobjdump -S so.npic.o\nobjdump -S so.pic.o\n```\n\nso.cpp的两个object文件的汇编码一致, 但是readelf中的section不同 主要区别如下:\n* no -fpic选项的目标文件中 .rela.text 的两个引用的符号类型是PC32  \n*    -fpic选项的目标文件中 .rela.text 的两个引用的符号类型是PLT32  \n*    -fpic选项的目标文件中 .symtab 的外部引用符号之前多了一个_GLOBAL_OFFSET_TABLE_  即GOT表的符号和地址信息\n\n* .got.plt .got在共享文件或者可执行文件中  \n* GOT是 GLOBAL_OFFSET_TABLE  全局偏移表  GOT用来做在链接时建立数据和地址的重定位\n  * ELF的数据段里面建立一个指向这些变量的指针数组 当指令中需要访问外部变量时 会先找到GOT 然后根据GOT中变量所对应的项找到变量的目标地址\n  * 链接器在装载模块时会查找每个变量所在的地址 然后填充GOT中每个项 由于GOT是放在数据段的 所以每个进程可以有一个独立的副本  \n  * GOT的意义是访问数据的时候通过GOT读表获取目标数据的地址, 而不是在链接或者加载时对目标代码进行修改(重定向)   \n  * GOT延迟绑定 而不是load的时候一次性全部做好地址的绑定 减少加载时候的工作量\n  * 通过GOT实现 代码应该始终是只读的 \n  * 通过GOT可实现修改符号绑定顺序的能力  \n* PLT 小型过程链接表存根(stub)进行, 如果plt有则直接使用没有则去找, 有的话则用存根ID去GOT中查找记录的地址 \n  * 每个函数对应一个小的过程类似如下: \n    ```\n    0000000000000690 <_Z13so_inner_funcii@plt>:\n    690:   ff 25 8a 09 20 00       jmpq   *0x20098a(%rip)        # 201020 <_Z13so_inner_funcii@@Base+0x200870>\n    696:   68 01 00 00 00          pushq  $0x1\n    69b:   e9 d0 ff ff ff          jmpq   670 <.plt>\n    ```\n\n```\n全局偏移量表(global offset table)在私有数据中包含绝对地址\n出于方便共享和重用的考虑，目标文件中的很多内容是“位置无关”的，其映射到进程内存中的什么位置是不一定的，所以只适合使用相对地址，全局偏移量表是一个例外\n在UNIX System V 环境下的动态连接过程中，got 表是必须的，它的实际内容和格式依处理器不同而不同。\n总的来说，位置独立的代码不能含有绝对的虚拟地址。全局偏移量表选择了在私有数据中含有绝对地址，这种办法在没有牺牲位置独立性和可共享性的前提下保存了绝对地址。引用全局偏移量表的程序可以同时使用位置独立的地址和绝对地址，把位置无关的引用重定向到绝对地址上去。\n一开始，全局偏移量表只包含其重定位项所要求的信息。当系统为可装载的目标文件创建了内存段之后，动态连接器处理重定位项，有些重定位项的类型为R_386_GLOB_DAT，它们指向全局偏移量表。动态连接器决定相应的符号值，计算其绝对地址，并且为内存段设置适当的值。尽管在连接编辑器创建目标文件的时候绝对地址还是未知的，但是动态连接器却知道所有内存段的地址，因此它可以计算所含有的所有符号的绝对地址。\n如果一个程序要求直接访问符号的绝对地址，那么这个符号在全局偏移量表中就必须有一个对应的项。可执行文件和共享目标文件有各自的全局偏移量表，所以一个符号的地址可能会出现在多个表中。动态连接器会在程序开始执行之前，处理好所有全局偏移量表的重定位工作，所以在程序执行的时候，可以保证所有这些符号都有正确的绝对地址。\n全局偏移量表的第 0 项是保留的，它用于持有动态结构的地址，由符号_DYNAMIC 引用。这样，其它程序，比如动态连接器就可以直接找到其动态结构，而不用借助重定位项。这对于动态连接器来说尤为重要，因为它必须在不依赖于其它程序重定位其内存镜像的情况下初始化自己。前面提到过，在 Intel 架构中，全局偏移量表中的第 1 项和第 2 项也是保留的，它们持有函数连接表的信息。\n系统可能为同一个共享目标在不同的程序中选择不同的段地址；甚至也可能每次为同一个程序选择不同的地址。但是，在单次执行中，一旦一个进程的镜像建立起来之后，直到程序退出，内存段的地址都不会再改变了。\n全局偏移量表的格式和解析方法是依处理器而不同的，就 Intel 架构而言，符号_GLOBAL_OFFSET_TABLE_会被用来访问此表。\n\nextern Elf32_Addr _GLOBAL_OFFSET_TABLE_[];\n符号_GLOBAL_OFFSET_TABLE_可能位于.got 节中部，所以它也接受负的数组索引值。\n```\n* PLT是 Procedure Link Table 程序链接表  PLT用来做在链接时建立符号和地址的重定位  \n  * PLT的实现是延迟查找  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","source":"_posts/2019-11-12-elf-section-symbol.md","raw":"---\ntitle: ELF文件的SECTIO分析    \ndate: 2019-11-09\ncategories: develop \nauthor: yawei.zhang \n---\n\n### 目录  \n\n---  \n\n<!-- TOC -->\n\n- [目录](#目录)\n- [ELF文件类型和描述](#elf文件类型和描述)\n  - [文件类型](#文件类型)\n  - [链接器视图(编译器 汇编器 链接器)](#链接器视图编译器-汇编器-链接器)\n  - [加载器视图 (系统加载器)](#加载器视图-系统加载器)\n  - [基本测试命令](#基本测试命令)\n  - [基础术语知识](#基础术语知识)\n    - [目标文件格式的比较和说明](#目标文件格式的比较和说明)\n    - [其他词汇说明](#其他词汇说明)\n- [可重定位文件](#可重定位文件)\n  - [lib.cpp片段分析](#libcpp片段分析)\n  - [so.cpp片段分析](#socpp片段分析)\n\n<!-- /TOC -->\n\n### ELF文件类型和描述  \n\n---  \n\n(Executable and Linking Format) (可执行可链接格式) 文件    \n#### 文件类型\n* 可重定位文件  (relocatable file)  \n  * 由源文件编译而成但是还没有链接成可执行文件, 扩展名通常为.o  通常'目标文件(object file)'  用于与其他目标文件进行链接成可执行文件或者动态链接库.  \n  * 可重定位是指 对外部符号的访问会进行标记, 在链接时候会重写这部分访问(操作数)重定位到真正的位置上.  \n  * 重定位因为存在该修补 则有以下作用:  \n    * 重定位在执行时是直接使用真实位置 没有其他过程 性能非常好   \n    * 链接共享库的时候如果需要确定地址和修补, 则还需要保证多个共享库的地址不可以重叠, 在32位下这种保证会很容易用尽虚拟(地址)空间  \n    * 重定位需要修改代码段, 从而破坏'代码段'只读属性, 如果在链接阶段无法完成重定位, 则只能放在加载过程完成, 这样会导致'无法实现真正的代码共享' .  比如所有进程使用的相同so文件在内存中实际上只有一份就是依赖于so的代码段只读且一致这个原则上的.  \n\n* 共享目标文件(shared object file)，即动态连接库文件 它在以下两种情况下被使用\n  * 在链接过程中与其它动态链接库或可重定位文件一起构建新的目标文件\n  * 在可执行文件被加载的过程中 被动态链接到新的进程中 成为运行代码的一部分  \n  \n* 可执行文件(executable file)，经过连接的，可以执行的程序文件。  \n          \n* coredump文件 核心转储  \n\n<!-- more -->\n#### 链接器视图(编译器 汇编器 链接器)   \n链接器关心的内容   \n| LINKING VIEW \n| -\n| ELF HEADER\n| PROGRAM HEADER TABLE OPTIONAL \n| SECTION 1  .text\n| SECTION 2  .data\n| SECTION n ...\n| SECTION HEADER TABLE  \n\n#### 加载器视图 (系统加载器) \n加载器关心的内容 \n| EXECUTION VIEW \n| - \n| ELF HEADER\n| PROGRAM HEADER TABLE \n| SEGMENT 1 \n| SEGMENT 2 \n| SEGMENT N ...\n| SECTION HEADER TABLE OPTIONAL \n\n#### 基本测试命令     \n```\nldd - print shared library dependencies  \nreadelf -a 查看elf文件\nobjdump -S 查看汇编码\n\ngcc -g -c lib.cpp  编译目标文件  \ngcc -g -c -fpic lib.cpp  启用地址无关代码选项来编译目标文件   \nar -cr liblib.a  lib.o  打包目标文件到静态库   \ng++ -g -fPIC -shared so.cpp -o so.so  启用地址无关代码的链接选项和编译选项来编译共享库   \ng++ -g -fpie -fPIE -pie -o main  lib.o libso.so \n\nexport LD_LIBRARY_PATH=\"./\" 设置临时的共享库搜索路径  \n\nPIC和PIE都用于编译地址无关代码, PIE假定了最终链接的目标是可执行文件.  \npie是链接选项 用于生成DYN类型的可执行文件.   \n\n```\n\n#### 基础术语知识   \n##### 目标文件格式的比较和说明    \n* a.out 文件格式  \n  * 旧版unix like系统(包括linux1.2以及之前的版本)中用于可执行文件 目标代码 共享库等的文件格式, 后续基本被ELF取代   \n  * 后续习惯性把a.out作为可执行文件的默认输出名, 即使格式不是a.out   \n  * stabs 是一种调试数据格式, 用来存储程序信息供符号级/源代码级的调试器用, 因该信息存储在符号表的一个特殊条目中因此得名为刺 (条目 stabs)  该格式除了完成对a.out的调试信息支持, 还用于COFF ELF的变体中 .   \n\n* ELF 文件格式  \n  * Executable and Linking Format 可执行可链接的文件格式 \n  * 原名 Extensible Linking Format  可扩展可链接的文件格式\n  * DWARF 标准化的调试数据格式 为ELF的补语  \n    * 该符号是一个历史遗留的名称, 没有正式含义, 定义为\"标准化的调试数据格式\", 被广泛使用.   \n      * DWARF使用DIE(调试信息条目)的数据结构来表示每个变量, 类型, 过程, 具有标签,属性(键值对).  \n    * DIE可以嵌套形成树结构.  \n      * DIE属性可以引用树中任何位置的另外一个DIE  \n        * 例如: 表示变量的DIE有一个DW_AT_type条目，该条目指向描述变量类型的DIE  \n\n* COFF 文件格式    \n  * Common Object File Format  通用对象文件格式  类似ELF a.out  \n  * COFF文件的出现主要是因为a.out无法充分支持共享库, 包括外部格式标识, 显式地址链接.  \n  * COFF的设计过于局限和不完整, 导致实际的实现必然违反COFF标准, 目前仍然使用的较为广泛的是windows的PE版本 \n  * COFF对a.out的主要改进是在目标文件中引入了多个命名节  不同的对象文件可能具有不同数量和类型的节  \n  * 文件的第一个字节将被加载的虚拟地址称为映像基地址 文件的其余部分不一定要装入一个连续的块中 而是要装入不同的部分中  \n\n\n| Format name | Operating system                                  | Filename extension | Explicit processor declarations | Arbitrary sections | Metadata[a] | Digital signature | String table | Symbol table | 64-bit    | Fat binaries    | Can contain icon |\n| ----------- | ------------------------------------------------- | ------------------ | ------------------------------- | ------------------ | ----------- | ----------------- | ------------ | ------------ | --------- | --------------- | ---------------- |\n| 格式名      | 操作系统                                          | 文件名扩展         | 显式处理器声明                  | 任意节             | 元数据[a]   | 数字签名          | 字符串表     | 符号表       | 64位      | fat格式文件支持 | 包含图标         |\n| a.out       | Unix-like                                         | none               | No                              | No                 | No          | No                | Yes[1]       | Yes[1]       | Extension | No              | No               |\n| COFF        | Unix-like                                         | none               | Yes by file                     | Yes                | No          | No                | Yes          | Yes          | Extension | No              | No               |\n| XCOFF       | IBM AIX, BeOS, \"classic\" Mac OS                   | none               | Yes by file                     | Yes                | No          | No                | Yes          | Yes[2]       | Yes       | No              | No               |\n| ELF         | Unix-like, OpenVMS, BeOS from R4 onwards, Haiku   | none               | Yes by file                     | Yes                | Yes         | Yes[3]            | Yes          | Yes[4]       | Yes       | Extension[5]    | Extension[6]     |\n| PE          | Windows, ReactOS, HX DOS Extender, BeOS (R3 only) | .EXE               | Yes by file                     | Yes                | Yes         | Yes[10]           | Yes          | Yes          | No        | No              | Yes              |\n\n##### 其他词汇说明  \n* ELF header 文件头   \n  * ELF文件的组成描述\n  * 结构\n    * 版本信息等    \n    * ELF文件类型\n      * ET_REL 可重定位文件 .o .a\n      * ET_DYN 可共享文件 .so  PIE版本的可执行文件   \n      * ET_EXEC 可执行文件   \n      * ET_CORE 核心转储  coredump\n    * 入口点地址  0x400510  \n    * ELF header大小  \n    * PROGRAM HEADERS大小和数量\n    * SECTION HEADERS大小和数量  \n    * Section header string table index 字符串表索引节头位置(.shstrtab) \n* section header SH 节头  \n  * .text section 里装载了可执行代码\n  * .data section 里面装载了被初始化的数据\n  * .bss section 里面装载了未被初始化或者初始化为0的数据  \n    * bss 不占据ELF文件的空间 因为没有内容只有空间大小和类型信息  \n  \n  * .commont 开发环境的时候使用的GCC版本信息   \n  * .shstrtab 指的是section header string table 保存了各个section的名字   \n  * .strtab 或者 .dynstr section 里面装载了字符串信息 字符串和符号的区别是 字符串是程序执行内容中, 符号是代码符号.  \n  * .rodata 字符串常量  \n  * .eh_frame 其内部存放了以DWARF格式保存的一些调试信息 格式与 .debug_frame 是很相似的（不完全相同）.  \n  \n  * .dynsym  动态库的符号表  \n    * 动态加载需要的符号表(动态库)  \n  * .symtab section 符号表(全量)   \n    * 包括了.strtab里面定义的符号 每个符号对应的符号表是一个Elf64_Symbol结构体 除了包含.strtab外 符号表中还包含了一些section的符号表条目 \n    * Value 符号所在的section偏移, 比如代码段的相对偏移地址, 数据段的相对偏移地址    \n    * Size 大小,  如果是变量则是变量的size, 如果是函数则是指令的行数  \n    * Type 符号的类型 NOTYPE或者UND代表是外部符号, FUNC函数, OBJECT数据, SECTION 节 \n      * 如果是so/exe则还有bss data等字段    \n    * Bind 绑定类型 LOCAL GLOBAL  \n    * vis  \n    * NDX\n    * NAME 符号名  \n\n  * .rel 打头的 sections 里面装载了重定位条目   \n    * 在最终二进制文件中 使用\"符号的地址\"在此目标文件中的\"偏移量\"处修补该值   \n\n\n    * .rel.text RELOCATION RECORDS FOR [.text] (object file)包含了代码段中引用的函数和全局变量的重定位条目 包括调用当前编译单元的\n      * Offset 偏移地址 代码段中要修改掉的地址  \n      * Type 类型 不启用PIC的一般是PC32 启用后如下\n        * PLT32 函数符号 外部或者内部  \n        * GOT PC RELX 全局变量符号  包括外部和内部  \n      * VALUE 符号名和加数  \n\n\n\n    * .rela.eh_frame RELOCATION RECORDS FOR [.eh_frame](object file)  eh_frame 的重定位信息    \n      * 在编译成object file的过程中, 该section提供了当前编译单元所定义的函数符号以及符号所在代码段的偏移位置.  \n      * OFFSET 当前函数在代码段中的开始位置  \n      * TYPE   PC32 本地实现  \n      * VALUE  符号表中的类型名以及符号的Value位置   \n\n\n\n    * .rel.plt (动态库或者EXE)节的每个表项对应了所有外部过程调用符号的重定位信息  \n      * 主要是 JUMP_SLOT 类型的重定位项  \n        * 重定位只需将符号地址填入被修正的内存即可\n      * 比如定义了一个函数test, 所有call test的地方都存在这个位置  \n    * .rel.dyn section (动态库或者EXE)的每个表项对应了除了外部过程调用的符号以外的所有重定位对象(一般是数据)  \n      * 主要是 GLOB_DAT 类型的重定位项\n        * 重定位只需将符号地址填入被修正的内存即可\n      * 比如extern来自so文件的全局静态变量  \n      * 或者开启pic后自己的全局静态变量  \n  \n    * 类型  \n      * GOT Global Offset Table  全局偏移表  \n      * PC  program counter relative displacement  程序计数的相对偏移/ IP指令的操作数修改   \n      * PLT procedure linkage table  过程链接表\n      * R_386_GOT32：该重定位类型计算从全局偏移表（global offset table）的基址到符号所在的全局偏移表表项的距离，并且通知链接编辑器建立全局偏移表。（G+A-P）\n      * R_386_PLT32：该重定位类型计算符号的过程链接表表项地址，并且通知链接编辑器构建过程链接表。（L+A-P）\n      * R_386_COPY：链接编辑器创建此重定位类型是用于动态链接的。它的r_offset成员对应一个可写segment中的位置。符号表索引指定了一个在当前目标文件和共享目标文件中都存在的符号。在执行期间，动态链接器拷贝与共享目标的符号相关的数据到偏移指定的位置。（none）\n      * R_386_GLOB_DAT：用于给指定符号的地址设置一个全局偏移表表项。该特殊重定位类型确定符号和全局偏移表项之间的对应关系。（S）\n      * R_386_JMP_SLOT：链接编辑器创建此重定位类型是用于动态链接的，它的偏移给出了过程链接表表项的位置。动态链接器通过修改过程链接表表项，把控制权传递给指定符号的地址，参见第二章“过程链接表”一节。（S）\n      * R_386_RELATIVE：链接编辑器创建此重定位类型是用于动态链接的，它的偏移成员给出了共享目标中的一个位置，这个位置包含了一个表示相对地址的值。动态链接器通过把共享目标被加载的虚拟地址与相对地址相加，计算出对应的虚拟地址。此重定位类型的重定位表项必须把符号表索引置为0。（B+A）\n      * R_386_GOTOFF：此类型的重定位计算符号值和全局偏移表地址的差值，并且通知链接编辑器构建全局偏移表。（S+A-GOT）\n      * R_386_GOTPC：此类型类似于R_386_PC32。只是它在计算中使用全局偏移表的地址。这种类型的重定位引用的通常是_GLOBAL_OFFSET_TABLE_DE类型的符号，并且通知链接编辑器构建全局偏移表。（GOT+A-P）****\n\n  * 这些条目给链接的时候需要和其他可重定位文件或者库的对应的section合并时提供了必要的信息  \n\n\n* program header PH 程序头\n  * segment信息\n* base address             基地址       \n* dynamic linker           动态连接器   \n* dynamic linking          动态连接     \n* global offset table      全局偏移量表 \n* hash table               哈希表       \n* initialization function  初始化函数   \n* link editor              连接编辑器   \n* object file              目标文件     \n* procedure linkage table  函数连接表   \n* program header           程序头       \n* program header table     程序头表     \n* program interpreter      程序解析器   \n* relocation               重定位       \n* shared object            共享目标     \n* section                  节           \n* section header           节头         \n* section header table     节头表       \n* segment                  段           \n* string table             字符串表     \n* symbol table             符号表       \n* termination function     终止函数     \n\n\n\n\n### 可重定位文件    \n\n---  \n \n\n\n\n\n* 注：各个段之间并未严格的首位相接，考虑到对齐的因素，他们之间会存在”空洞”（如图中.shstrtab段和Section Header Table之间的padding分区）；\n\n\n#### lib.cpp片段分析  \n\nlib.cpp\n```\nint g_static_lib_bss = 0;\nint g_static_lib_data = 0xff1234ff;\nint lib_func(int a, int b)\n{\n  return a+b;\n}\n```\n通过命令编译出目标文件lib.o和分析数据\n```\ng++ -c -fpic lib.cpp -o lib.pic.o\ng++ -c       lib.cpp -o lib.npic.o  \ng++ -c -fpie -pie lib.cpp -o lib.pie.o\nreadelf -a lib.npic.o\nreadelf -a lib.pic.o\nobjdump -S lib.npic.o\nobjdump -S lib.pic.o\n```\n\nlib.cpp无论是pie选项还是pic, 编译的结果完全一致 \n\n```\nELF 头：\n  ABI 版本:                          0\n  类型:                              REL (可重定位文件)\n\n重定位节 '.rela.eh_frame' 位于偏移量 0x1f0 含有 1 个条目：\n  偏移量          信息           类型           符号值        符号名称 + 加数\n000000000020  000200000002 R_X86_64_PC32     0000000000000000 .text + 0\n\nSymbol table '.symtab' contains 11 entries:\n   Num:    Value          Size Type    Bind   Vis      Ndx Name\n     0: 0000000000000000     0 NOTYPE  LOCAL  DEFAULT  UND \n     1: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS lib.cpp\n     8: 0000000000000000     4 OBJECT  GLOBAL DEFAULT    3 g_static_lib_bss\n     9: 0000000000000000     4 OBJECT  GLOBAL DEFAULT    2 g_static_lib_data\n    10: 0000000000000000    20 FUNC    GLOBAL DEFAULT    1 _Z8lib_funcii\n\n\n0000000000000000 <_Z8lib_funcii>:\n   0:   55                      push   %rbp\n   1:   48 89 e5                mov    %rsp,%rbp\n   4:   89 7d fc                mov    %edi,-0x4(%rbp)\n   7:   89 75 f8                mov    %esi,-0x8(%rbp)\n   a:   8b 55 fc                mov    -0x4(%rbp),%edx\n   d:   8b 45 f8                mov    -0x8(%rbp),%eax\n  10:   01 d0                   add    %edx,%eax\n  12:   5d                      pop    %rbp\n  13:   c3                      retq   \n```\n\n\n#### so.cpp片段分析  \nso.cpp\n```\nint lib_func(int a, int b);\nint so_func(int a, int b)\n{\n  int ret = lib_func(a, b);\n  return ret;\n}\n```\n通过命令编译出目标文件so.o和分析数据\n```\ng++ -c -fpic so.cpp -o so.pic.o\ng++ -c       so.cpp -o so.npic.o  \nreadelf -a so.npic.o\nreadelf -a so.pic.o\nobjdump -S so.npic.o\nobjdump -S so.pic.o\n```\n\nso.cpp的两个object文件的汇编码一致, 但是readelf中的section不同 主要区别如下:\n* no -fpic选项的目标文件中 .rela.text 的两个引用的符号类型是PC32  \n*    -fpic选项的目标文件中 .rela.text 的两个引用的符号类型是PLT32  \n*    -fpic选项的目标文件中 .symtab 的外部引用符号之前多了一个_GLOBAL_OFFSET_TABLE_  即GOT表的符号和地址信息\n\n* .got.plt .got在共享文件或者可执行文件中  \n* GOT是 GLOBAL_OFFSET_TABLE  全局偏移表  GOT用来做在链接时建立数据和地址的重定位\n  * ELF的数据段里面建立一个指向这些变量的指针数组 当指令中需要访问外部变量时 会先找到GOT 然后根据GOT中变量所对应的项找到变量的目标地址\n  * 链接器在装载模块时会查找每个变量所在的地址 然后填充GOT中每个项 由于GOT是放在数据段的 所以每个进程可以有一个独立的副本  \n  * GOT的意义是访问数据的时候通过GOT读表获取目标数据的地址, 而不是在链接或者加载时对目标代码进行修改(重定向)   \n  * GOT延迟绑定 而不是load的时候一次性全部做好地址的绑定 减少加载时候的工作量\n  * 通过GOT实现 代码应该始终是只读的 \n  * 通过GOT可实现修改符号绑定顺序的能力  \n* PLT 小型过程链接表存根(stub)进行, 如果plt有则直接使用没有则去找, 有的话则用存根ID去GOT中查找记录的地址 \n  * 每个函数对应一个小的过程类似如下: \n    ```\n    0000000000000690 <_Z13so_inner_funcii@plt>:\n    690:   ff 25 8a 09 20 00       jmpq   *0x20098a(%rip)        # 201020 <_Z13so_inner_funcii@@Base+0x200870>\n    696:   68 01 00 00 00          pushq  $0x1\n    69b:   e9 d0 ff ff ff          jmpq   670 <.plt>\n    ```\n\n```\n全局偏移量表(global offset table)在私有数据中包含绝对地址\n出于方便共享和重用的考虑，目标文件中的很多内容是“位置无关”的，其映射到进程内存中的什么位置是不一定的，所以只适合使用相对地址，全局偏移量表是一个例外\n在UNIX System V 环境下的动态连接过程中，got 表是必须的，它的实际内容和格式依处理器不同而不同。\n总的来说，位置独立的代码不能含有绝对的虚拟地址。全局偏移量表选择了在私有数据中含有绝对地址，这种办法在没有牺牲位置独立性和可共享性的前提下保存了绝对地址。引用全局偏移量表的程序可以同时使用位置独立的地址和绝对地址，把位置无关的引用重定向到绝对地址上去。\n一开始，全局偏移量表只包含其重定位项所要求的信息。当系统为可装载的目标文件创建了内存段之后，动态连接器处理重定位项，有些重定位项的类型为R_386_GLOB_DAT，它们指向全局偏移量表。动态连接器决定相应的符号值，计算其绝对地址，并且为内存段设置适当的值。尽管在连接编辑器创建目标文件的时候绝对地址还是未知的，但是动态连接器却知道所有内存段的地址，因此它可以计算所含有的所有符号的绝对地址。\n如果一个程序要求直接访问符号的绝对地址，那么这个符号在全局偏移量表中就必须有一个对应的项。可执行文件和共享目标文件有各自的全局偏移量表，所以一个符号的地址可能会出现在多个表中。动态连接器会在程序开始执行之前，处理好所有全局偏移量表的重定位工作，所以在程序执行的时候，可以保证所有这些符号都有正确的绝对地址。\n全局偏移量表的第 0 项是保留的，它用于持有动态结构的地址，由符号_DYNAMIC 引用。这样，其它程序，比如动态连接器就可以直接找到其动态结构，而不用借助重定位项。这对于动态连接器来说尤为重要，因为它必须在不依赖于其它程序重定位其内存镜像的情况下初始化自己。前面提到过，在 Intel 架构中，全局偏移量表中的第 1 项和第 2 项也是保留的，它们持有函数连接表的信息。\n系统可能为同一个共享目标在不同的程序中选择不同的段地址；甚至也可能每次为同一个程序选择不同的地址。但是，在单次执行中，一旦一个进程的镜像建立起来之后，直到程序退出，内存段的地址都不会再改变了。\n全局偏移量表的格式和解析方法是依处理器而不同的，就 Intel 架构而言，符号_GLOBAL_OFFSET_TABLE_会被用来访问此表。\n\nextern Elf32_Addr _GLOBAL_OFFSET_TABLE_[];\n符号_GLOBAL_OFFSET_TABLE_可能位于.got 节中部，所以它也接受负的数组索引值。\n```\n* PLT是 Procedure Link Table 程序链接表  PLT用来做在链接时建立符号和地址的重定位  \n  * PLT的实现是延迟查找  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","slug":"2019-11-12-elf-section-symbol","published":1,"updated":"2019-12-03T09:09:07.333Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck44ekz4a0019r45h8x2ieiyo","content":"<h3><span id=\"目录\">目录</span></h3><hr>\n<!-- TOC -->\n\n<ul>\n<li><a href=\"#目录\">目录</a></li>\n<li><a href=\"#elf文件类型和描述\">ELF文件类型和描述</a><ul>\n<li><a href=\"#文件类型\">文件类型</a></li>\n<li><a href=\"#链接器视图编译器-汇编器-链接器\">链接器视图(编译器 汇编器 链接器)</a></li>\n<li><a href=\"#加载器视图-系统加载器\">加载器视图 (系统加载器)</a></li>\n<li><a href=\"#基本测试命令\">基本测试命令</a></li>\n<li><a href=\"#基础术语知识\">基础术语知识</a><ul>\n<li><a href=\"#目标文件格式的比较和说明\">目标文件格式的比较和说明</a></li>\n<li><a href=\"#其他词汇说明\">其他词汇说明</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a href=\"#可重定位文件\">可重定位文件</a><ul>\n<li><a href=\"#libcpp片段分析\">lib.cpp片段分析</a></li>\n<li><a href=\"#socpp片段分析\">so.cpp片段分析</a></li>\n</ul>\n</li>\n</ul>\n<!-- /TOC -->\n\n<h3><span id=\"elf文件类型和描述\">ELF文件类型和描述</span></h3><hr>\n<p>(Executable and Linking Format) (可执行可链接格式) 文件    </p>\n<h4><span id=\"文件类型\">文件类型</span></h4><ul>\n<li><p>可重定位文件  (relocatable file)  </p>\n<ul>\n<li>由源文件编译而成但是还没有链接成可执行文件, 扩展名通常为.o  通常’目标文件(object file)’  用于与其他目标文件进行链接成可执行文件或者动态链接库.  </li>\n<li>可重定位是指 对外部符号的访问会进行标记, 在链接时候会重写这部分访问(操作数)重定位到真正的位置上.  </li>\n<li>重定位因为存在该修补 则有以下作用:  <ul>\n<li>重定位在执行时是直接使用真实位置 没有其他过程 性能非常好   </li>\n<li>链接共享库的时候如果需要确定地址和修补, 则还需要保证多个共享库的地址不可以重叠, 在32位下这种保证会很容易用尽虚拟(地址)空间  </li>\n<li>重定位需要修改代码段, 从而破坏’代码段’只读属性, 如果在链接阶段无法完成重定位, 则只能放在加载过程完成, 这样会导致’无法实现真正的代码共享’ .  比如所有进程使用的相同so文件在内存中实际上只有一份就是依赖于so的代码段只读且一致这个原则上的.  </li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>共享目标文件(shared object file)，即动态连接库文件 它在以下两种情况下被使用</p>\n<ul>\n<li>在链接过程中与其它动态链接库或可重定位文件一起构建新的目标文件</li>\n<li>在可执行文件被加载的过程中 被动态链接到新的进程中 成为运行代码的一部分  </li>\n</ul>\n</li>\n<li><p>可执行文件(executable file)，经过连接的，可以执行的程序文件。  </p>\n</li>\n<li><p>coredump文件 核心转储  </p>\n</li>\n</ul>\n<a id=\"more\"></a>\n<h4><span id=\"链接器视图编译器-汇编器-链接器\">链接器视图(编译器 汇编器 链接器)</span></h4><p>链接器关心的内容<br>| LINKING VIEW<br>| -<br>| ELF HEADER<br>| PROGRAM HEADER TABLE OPTIONAL<br>| SECTION 1  .text<br>| SECTION 2  .data<br>| SECTION n …<br>| SECTION HEADER TABLE  </p>\n<h4><span id=\"加载器视图-系统加载器\">加载器视图 (系统加载器)</span></h4><p>加载器关心的内容<br>| EXECUTION VIEW<br>| -<br>| ELF HEADER<br>| PROGRAM HEADER TABLE<br>| SEGMENT 1<br>| SEGMENT 2<br>| SEGMENT N …<br>| SECTION HEADER TABLE OPTIONAL </p>\n<h4><span id=\"基本测试命令\">基本测试命令</span></h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ldd - print shared library dependencies  </span><br><span class=\"line\">readelf -a 查看elf文件</span><br><span class=\"line\">objdump -S 查看汇编码</span><br><span class=\"line\"></span><br><span class=\"line\">gcc -g -c lib.cpp  编译目标文件  </span><br><span class=\"line\">gcc -g -c -fpic lib.cpp  启用地址无关代码选项来编译目标文件   </span><br><span class=\"line\">ar -cr liblib.a  lib.o  打包目标文件到静态库   </span><br><span class=\"line\">g++ -g -fPIC -shared so.cpp -o so.so  启用地址无关代码的链接选项和编译选项来编译共享库   </span><br><span class=\"line\">g++ -g -fpie -fPIE -pie -o main  lib.o libso.so </span><br><span class=\"line\"></span><br><span class=\"line\">export LD_LIBRARY_PATH&#x3D;&quot;.&#x2F;&quot; 设置临时的共享库搜索路径  </span><br><span class=\"line\"></span><br><span class=\"line\">PIC和PIE都用于编译地址无关代码, PIE假定了最终链接的目标是可执行文件.  </span><br><span class=\"line\">pie是链接选项 用于生成DYN类型的可执行文件.</span><br></pre></td></tr></table></figure>\n\n<h4><span id=\"基础术语知识\">基础术语知识</span></h4><h5><span id=\"目标文件格式的比较和说明\">目标文件格式的比较和说明</span></h5><ul>\n<li><p>a.out 文件格式  </p>\n<ul>\n<li>旧版unix like系统(包括linux1.2以及之前的版本)中用于可执行文件 目标代码 共享库等的文件格式, 后续基本被ELF取代   </li>\n<li>后续习惯性把a.out作为可执行文件的默认输出名, 即使格式不是a.out   </li>\n<li>stabs 是一种调试数据格式, 用来存储程序信息供符号级/源代码级的调试器用, 因该信息存储在符号表的一个特殊条目中因此得名为刺 (条目 stabs)  该格式除了完成对a.out的调试信息支持, 还用于COFF ELF的变体中 .   </li>\n</ul>\n</li>\n<li><p>ELF 文件格式  </p>\n<ul>\n<li>Executable and Linking Format 可执行可链接的文件格式 </li>\n<li>原名 Extensible Linking Format  可扩展可链接的文件格式</li>\n<li>DWARF 标准化的调试数据格式 为ELF的补语  <ul>\n<li>该符号是一个历史遗留的名称, 没有正式含义, 定义为”标准化的调试数据格式”, 被广泛使用.   <ul>\n<li>DWARF使用DIE(调试信息条目)的数据结构来表示每个变量, 类型, 过程, 具有标签,属性(键值对).  </li>\n</ul>\n</li>\n<li>DIE可以嵌套形成树结构.  <ul>\n<li>DIE属性可以引用树中任何位置的另外一个DIE  <ul>\n<li>例如: 表示变量的DIE有一个DW_AT_type条目，该条目指向描述变量类型的DIE  </li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>COFF 文件格式    </p>\n<ul>\n<li>Common Object File Format  通用对象文件格式  类似ELF a.out  </li>\n<li>COFF文件的出现主要是因为a.out无法充分支持共享库, 包括外部格式标识, 显式地址链接.  </li>\n<li>COFF的设计过于局限和不完整, 导致实际的实现必然违反COFF标准, 目前仍然使用的较为广泛的是windows的PE版本 </li>\n<li>COFF对a.out的主要改进是在目标文件中引入了多个命名节  不同的对象文件可能具有不同数量和类型的节  </li>\n<li>文件的第一个字节将被加载的虚拟地址称为映像基地址 文件的其余部分不一定要装入一个连续的块中 而是要装入不同的部分中  </li>\n</ul>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>Format name</th>\n<th>Operating system</th>\n<th>Filename extension</th>\n<th>Explicit processor declarations</th>\n<th>Arbitrary sections</th>\n<th>Metadata[a]</th>\n<th>Digital signature</th>\n<th>String table</th>\n<th>Symbol table</th>\n<th>64-bit</th>\n<th>Fat binaries</th>\n<th>Can contain icon</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>格式名</td>\n<td>操作系统</td>\n<td>文件名扩展</td>\n<td>显式处理器声明</td>\n<td>任意节</td>\n<td>元数据[a]</td>\n<td>数字签名</td>\n<td>字符串表</td>\n<td>符号表</td>\n<td>64位</td>\n<td>fat格式文件支持</td>\n<td>包含图标</td>\n</tr>\n<tr>\n<td>a.out</td>\n<td>Unix-like</td>\n<td>none</td>\n<td>No</td>\n<td>No</td>\n<td>No</td>\n<td>No</td>\n<td>Yes[1]</td>\n<td>Yes[1]</td>\n<td>Extension</td>\n<td>No</td>\n<td>No</td>\n</tr>\n<tr>\n<td>COFF</td>\n<td>Unix-like</td>\n<td>none</td>\n<td>Yes by file</td>\n<td>Yes</td>\n<td>No</td>\n<td>No</td>\n<td>Yes</td>\n<td>Yes</td>\n<td>Extension</td>\n<td>No</td>\n<td>No</td>\n</tr>\n<tr>\n<td>XCOFF</td>\n<td>IBM AIX, BeOS, “classic” Mac OS</td>\n<td>none</td>\n<td>Yes by file</td>\n<td>Yes</td>\n<td>No</td>\n<td>No</td>\n<td>Yes</td>\n<td>Yes[2]</td>\n<td>Yes</td>\n<td>No</td>\n<td>No</td>\n</tr>\n<tr>\n<td>ELF</td>\n<td>Unix-like, OpenVMS, BeOS from R4 onwards, Haiku</td>\n<td>none</td>\n<td>Yes by file</td>\n<td>Yes</td>\n<td>Yes</td>\n<td>Yes[3]</td>\n<td>Yes</td>\n<td>Yes[4]</td>\n<td>Yes</td>\n<td>Extension[5]</td>\n<td>Extension[6]</td>\n</tr>\n<tr>\n<td>PE</td>\n<td>Windows, ReactOS, HX DOS Extender, BeOS (R3 only)</td>\n<td>.EXE</td>\n<td>Yes by file</td>\n<td>Yes</td>\n<td>Yes</td>\n<td>Yes[10]</td>\n<td>Yes</td>\n<td>Yes</td>\n<td>No</td>\n<td>No</td>\n<td>Yes</td>\n</tr>\n</tbody></table>\n<h5><span id=\"其他词汇说明\">其他词汇说明</span></h5><ul>\n<li><p>ELF header 文件头   </p>\n<ul>\n<li>ELF文件的组成描述</li>\n<li>结构<ul>\n<li>版本信息等    </li>\n<li>ELF文件类型<ul>\n<li>ET_REL 可重定位文件 .o .a</li>\n<li>ET_DYN 可共享文件 .so  PIE版本的可执行文件   </li>\n<li>ET_EXEC 可执行文件   </li>\n<li>ET_CORE 核心转储  coredump</li>\n</ul>\n</li>\n<li>入口点地址  0x400510  </li>\n<li>ELF header大小  </li>\n<li>PROGRAM HEADERS大小和数量</li>\n<li>SECTION HEADERS大小和数量  </li>\n<li>Section header string table index 字符串表索引节头位置(.shstrtab) </li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>section header SH 节头  </p>\n<ul>\n<li><p>.text section 里装载了可执行代码</p>\n</li>\n<li><p>.data section 里面装载了被初始化的数据</p>\n</li>\n<li><p>.bss section 里面装载了未被初始化或者初始化为0的数据  </p>\n<ul>\n<li>bss 不占据ELF文件的空间 因为没有内容只有空间大小和类型信息  </li>\n</ul>\n</li>\n<li><p>.commont 开发环境的时候使用的GCC版本信息   </p>\n</li>\n<li><p>.shstrtab 指的是section header string table 保存了各个section的名字   </p>\n</li>\n<li><p>.strtab 或者 .dynstr section 里面装载了字符串信息 字符串和符号的区别是 字符串是程序执行内容中, 符号是代码符号.  </p>\n</li>\n<li><p>.rodata 字符串常量  </p>\n</li>\n<li><p>.eh_frame 其内部存放了以DWARF格式保存的一些调试信息 格式与 .debug_frame 是很相似的（不完全相同）.  </p>\n</li>\n<li><p>.dynsym  动态库的符号表  </p>\n<ul>\n<li>动态加载需要的符号表(动态库)  </li>\n</ul>\n</li>\n<li><p>.symtab section 符号表(全量)   </p>\n<ul>\n<li>包括了.strtab里面定义的符号 每个符号对应的符号表是一个Elf64_Symbol结构体 除了包含.strtab外 符号表中还包含了一些section的符号表条目 </li>\n<li>Value 符号所在的section偏移, 比如代码段的相对偏移地址, 数据段的相对偏移地址    </li>\n<li>Size 大小,  如果是变量则是变量的size, 如果是函数则是指令的行数  </li>\n<li>Type 符号的类型 NOTYPE或者UND代表是外部符号, FUNC函数, OBJECT数据, SECTION 节 <ul>\n<li>如果是so/exe则还有bss data等字段    </li>\n</ul>\n</li>\n<li>Bind 绑定类型 LOCAL GLOBAL  </li>\n<li>vis  </li>\n<li>NDX</li>\n<li>NAME 符号名  </li>\n</ul>\n</li>\n<li><p>.rel 打头的 sections 里面装载了重定位条目   </p>\n<ul>\n<li>在最终二进制文件中 使用”符号的地址”在此目标文件中的”偏移量”处修补该值   </li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<pre><code>* .rel.text RELOCATION RECORDS FOR [.text] (object file)包含了代码段中引用的函数和全局变量的重定位条目 包括调用当前编译单元的\n  * Offset 偏移地址 代码段中要修改掉的地址  \n  * Type 类型 不启用PIC的一般是PC32 启用后如下\n    * PLT32 函数符号 外部或者内部  \n    * GOT PC RELX 全局变量符号  包括外部和内部  \n  * VALUE 符号名和加数  \n\n\n\n* .rela.eh_frame RELOCATION RECORDS FOR [.eh_frame](object file)  eh_frame 的重定位信息    \n  * 在编译成object file的过程中, 该section提供了当前编译单元所定义的函数符号以及符号所在代码段的偏移位置.  \n  * OFFSET 当前函数在代码段中的开始位置  \n  * TYPE   PC32 本地实现  \n  * VALUE  符号表中的类型名以及符号的Value位置   \n\n\n\n* .rel.plt (动态库或者EXE)节的每个表项对应了所有外部过程调用符号的重定位信息  \n  * 主要是 JUMP_SLOT 类型的重定位项  \n    * 重定位只需将符号地址填入被修正的内存即可\n  * 比如定义了一个函数test, 所有call test的地方都存在这个位置  \n* .rel.dyn section (动态库或者EXE)的每个表项对应了除了外部过程调用的符号以外的所有重定位对象(一般是数据)  \n  * 主要是 GLOB_DAT 类型的重定位项\n    * 重定位只需将符号地址填入被修正的内存即可\n  * 比如extern来自so文件的全局静态变量  \n  * 或者开启pic后自己的全局静态变量  \n\n* 类型  \n  * GOT Global Offset Table  全局偏移表  \n  * PC  program counter relative displacement  程序计数的相对偏移/ IP指令的操作数修改   \n  * PLT procedure linkage table  过程链接表\n  * R_386_GOT32：该重定位类型计算从全局偏移表（global offset table）的基址到符号所在的全局偏移表表项的距离，并且通知链接编辑器建立全局偏移表。（G+A-P）\n  * R_386_PLT32：该重定位类型计算符号的过程链接表表项地址，并且通知链接编辑器构建过程链接表。（L+A-P）\n  * R_386_COPY：链接编辑器创建此重定位类型是用于动态链接的。它的r_offset成员对应一个可写segment中的位置。符号表索引指定了一个在当前目标文件和共享目标文件中都存在的符号。在执行期间，动态链接器拷贝与共享目标的符号相关的数据到偏移指定的位置。（none）\n  * R_386_GLOB_DAT：用于给指定符号的地址设置一个全局偏移表表项。该特殊重定位类型确定符号和全局偏移表项之间的对应关系。（S）\n  * R_386_JMP_SLOT：链接编辑器创建此重定位类型是用于动态链接的，它的偏移给出了过程链接表表项的位置。动态链接器通过修改过程链接表表项，把控制权传递给指定符号的地址，参见第二章“过程链接表”一节。（S）\n  * R_386_RELATIVE：链接编辑器创建此重定位类型是用于动态链接的，它的偏移成员给出了共享目标中的一个位置，这个位置包含了一个表示相对地址的值。动态链接器通过把共享目标被加载的虚拟地址与相对地址相加，计算出对应的虚拟地址。此重定位类型的重定位表项必须把符号表索引置为0。（B+A）\n  * R_386_GOTOFF：此类型的重定位计算符号值和全局偏移表地址的差值，并且通知链接编辑器构建全局偏移表。（S+A-GOT）\n  * R_386_GOTPC：此类型类似于R_386_PC32。只是它在计算中使用全局偏移表的地址。这种类型的重定位引用的通常是_GLOBAL_OFFSET_TABLE_DE类型的符号，并且通知链接编辑器构建全局偏移表。（GOT+A-P）****</code></pre><ul>\n<li>这些条目给链接的时候需要和其他可重定位文件或者库的对应的section合并时提供了必要的信息  </li>\n</ul>\n<ul>\n<li>program header PH 程序头<ul>\n<li>segment信息</li>\n</ul>\n</li>\n<li>base address             基地址       </li>\n<li>dynamic linker           动态连接器   </li>\n<li>dynamic linking          动态连接     </li>\n<li>global offset table      全局偏移量表 </li>\n<li>hash table               哈希表       </li>\n<li>initialization function  初始化函数   </li>\n<li>link editor              连接编辑器   </li>\n<li>object file              目标文件     </li>\n<li>procedure linkage table  函数连接表   </li>\n<li>program header           程序头       </li>\n<li>program header table     程序头表     </li>\n<li>program interpreter      程序解析器   </li>\n<li>relocation               重定位       </li>\n<li>shared object            共享目标     </li>\n<li>section                  节           </li>\n<li>section header           节头         </li>\n<li>section header table     节头表       </li>\n<li>segment                  段           </li>\n<li>string table             字符串表     </li>\n<li>symbol table             符号表       </li>\n<li>termination function     终止函数     </li>\n</ul>\n<h3><span id=\"可重定位文件\">可重定位文件</span></h3><hr>\n<ul>\n<li>注：各个段之间并未严格的首位相接，考虑到对齐的因素，他们之间会存在”空洞”（如图中.shstrtab段和Section Header Table之间的padding分区）；</li>\n</ul>\n<h4><span id=\"libcpp片段分析\">lib.cpp片段分析</span></h4><p>lib.cpp</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">int g_static_lib_bss &#x3D; 0;</span><br><span class=\"line\">int g_static_lib_data &#x3D; 0xff1234ff;</span><br><span class=\"line\">int lib_func(int a, int b)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  return a+b;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>通过命令编译出目标文件lib.o和分析数据</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">g++ -c -fpic lib.cpp -o lib.pic.o</span><br><span class=\"line\">g++ -c       lib.cpp -o lib.npic.o  </span><br><span class=\"line\">g++ -c -fpie -pie lib.cpp -o lib.pie.o</span><br><span class=\"line\">readelf -a lib.npic.o</span><br><span class=\"line\">readelf -a lib.pic.o</span><br><span class=\"line\">objdump -S lib.npic.o</span><br><span class=\"line\">objdump -S lib.pic.o</span><br></pre></td></tr></table></figure>\n\n<p>lib.cpp无论是pie选项还是pic, 编译的结果完全一致 </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ELF 头：</span><br><span class=\"line\">  ABI 版本:                          0</span><br><span class=\"line\">  类型:                              REL (可重定位文件)</span><br><span class=\"line\"></span><br><span class=\"line\">重定位节 &#39;.rela.eh_frame&#39; 位于偏移量 0x1f0 含有 1 个条目：</span><br><span class=\"line\">  偏移量          信息           类型           符号值        符号名称 + 加数</span><br><span class=\"line\">000000000020  000200000002 R_X86_64_PC32     0000000000000000 .text + 0</span><br><span class=\"line\"></span><br><span class=\"line\">Symbol table &#39;.symtab&#39; contains 11 entries:</span><br><span class=\"line\">   Num:    Value          Size Type    Bind   Vis      Ndx Name</span><br><span class=\"line\">     0: 0000000000000000     0 NOTYPE  LOCAL  DEFAULT  UND </span><br><span class=\"line\">     1: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS lib.cpp</span><br><span class=\"line\">     8: 0000000000000000     4 OBJECT  GLOBAL DEFAULT    3 g_static_lib_bss</span><br><span class=\"line\">     9: 0000000000000000     4 OBJECT  GLOBAL DEFAULT    2 g_static_lib_data</span><br><span class=\"line\">    10: 0000000000000000    20 FUNC    GLOBAL DEFAULT    1 _Z8lib_funcii</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">0000000000000000 &lt;_Z8lib_funcii&gt;:</span><br><span class=\"line\">   0:   55                      push   %rbp</span><br><span class=\"line\">   1:   48 89 e5                mov    %rsp,%rbp</span><br><span class=\"line\">   4:   89 7d fc                mov    %edi,-0x4(%rbp)</span><br><span class=\"line\">   7:   89 75 f8                mov    %esi,-0x8(%rbp)</span><br><span class=\"line\">   a:   8b 55 fc                mov    -0x4(%rbp),%edx</span><br><span class=\"line\">   d:   8b 45 f8                mov    -0x8(%rbp),%eax</span><br><span class=\"line\">  10:   01 d0                   add    %edx,%eax</span><br><span class=\"line\">  12:   5d                      pop    %rbp</span><br><span class=\"line\">  13:   c3                      retq</span><br></pre></td></tr></table></figure>\n\n\n<h4><span id=\"socpp片段分析\">so.cpp片段分析</span></h4><p>so.cpp</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">int lib_func(int a, int b);</span><br><span class=\"line\">int so_func(int a, int b)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  int ret &#x3D; lib_func(a, b);</span><br><span class=\"line\">  return ret;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>通过命令编译出目标文件so.o和分析数据</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">g++ -c -fpic so.cpp -o so.pic.o</span><br><span class=\"line\">g++ -c       so.cpp -o so.npic.o  </span><br><span class=\"line\">readelf -a so.npic.o</span><br><span class=\"line\">readelf -a so.pic.o</span><br><span class=\"line\">objdump -S so.npic.o</span><br><span class=\"line\">objdump -S so.pic.o</span><br></pre></td></tr></table></figure>\n\n<p>so.cpp的两个object文件的汇编码一致, 但是readelf中的section不同 主要区别如下:</p>\n<ul>\n<li><p>no -fpic选项的目标文件中 .rela.text 的两个引用的符号类型是PC32  </p>\n</li>\n<li><p>-fpic选项的目标文件中 .rela.text 的两个引用的符号类型是PLT32  </p>\n</li>\n<li><p>-fpic选项的目标文件中 .symtab 的外部引用符号之前多了一个<em>GLOBAL_OFFSET_TABLE</em>  即GOT表的符号和地址信息</p>\n</li>\n<li><p>.got.plt .got在共享文件或者可执行文件中  </p>\n</li>\n<li><p>GOT是 GLOBAL_OFFSET_TABLE  全局偏移表  GOT用来做在链接时建立数据和地址的重定位</p>\n<ul>\n<li>ELF的数据段里面建立一个指向这些变量的指针数组 当指令中需要访问外部变量时 会先找到GOT 然后根据GOT中变量所对应的项找到变量的目标地址</li>\n<li>链接器在装载模块时会查找每个变量所在的地址 然后填充GOT中每个项 由于GOT是放在数据段的 所以每个进程可以有一个独立的副本  </li>\n<li>GOT的意义是访问数据的时候通过GOT读表获取目标数据的地址, 而不是在链接或者加载时对目标代码进行修改(重定向)   </li>\n<li>GOT延迟绑定 而不是load的时候一次性全部做好地址的绑定 减少加载时候的工作量</li>\n<li>通过GOT实现 代码应该始终是只读的 </li>\n<li>通过GOT可实现修改符号绑定顺序的能力  </li>\n</ul>\n</li>\n<li><p>PLT 小型过程链接表存根(stub)进行, 如果plt有则直接使用没有则去找, 有的话则用存根ID去GOT中查找记录的地址 </p>\n<ul>\n<li>每个函数对应一个小的过程类似如下: <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">0000000000000690 &lt;_Z13so_inner_funcii@plt&gt;:</span><br><span class=\"line\">690:   ff 25 8a 09 20 00       jmpq   *0x20098a(%rip)        # 201020 &lt;_Z13so_inner_funcii@@Base+0x200870&gt;</span><br><span class=\"line\">696:   68 01 00 00 00          pushq  $0x1</span><br><span class=\"line\">69b:   e9 d0 ff ff ff          jmpq   670 &lt;.plt&gt;</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">全局偏移量表(global offset table)在私有数据中包含绝对地址</span><br><span class=\"line\">出于方便共享和重用的考虑，目标文件中的很多内容是“位置无关”的，其映射到进程内存中的什么位置是不一定的，所以只适合使用相对地址，全局偏移量表是一个例外</span><br><span class=\"line\">在UNIX System V 环境下的动态连接过程中，got 表是必须的，它的实际内容和格式依处理器不同而不同。</span><br><span class=\"line\">总的来说，位置独立的代码不能含有绝对的虚拟地址。全局偏移量表选择了在私有数据中含有绝对地址，这种办法在没有牺牲位置独立性和可共享性的前提下保存了绝对地址。引用全局偏移量表的程序可以同时使用位置独立的地址和绝对地址，把位置无关的引用重定向到绝对地址上去。</span><br><span class=\"line\">一开始，全局偏移量表只包含其重定位项所要求的信息。当系统为可装载的目标文件创建了内存段之后，动态连接器处理重定位项，有些重定位项的类型为R_386_GLOB_DAT，它们指向全局偏移量表。动态连接器决定相应的符号值，计算其绝对地址，并且为内存段设置适当的值。尽管在连接编辑器创建目标文件的时候绝对地址还是未知的，但是动态连接器却知道所有内存段的地址，因此它可以计算所含有的所有符号的绝对地址。</span><br><span class=\"line\">如果一个程序要求直接访问符号的绝对地址，那么这个符号在全局偏移量表中就必须有一个对应的项。可执行文件和共享目标文件有各自的全局偏移量表，所以一个符号的地址可能会出现在多个表中。动态连接器会在程序开始执行之前，处理好所有全局偏移量表的重定位工作，所以在程序执行的时候，可以保证所有这些符号都有正确的绝对地址。</span><br><span class=\"line\">全局偏移量表的第 0 项是保留的，它用于持有动态结构的地址，由符号_DYNAMIC 引用。这样，其它程序，比如动态连接器就可以直接找到其动态结构，而不用借助重定位项。这对于动态连接器来说尤为重要，因为它必须在不依赖于其它程序重定位其内存镜像的情况下初始化自己。前面提到过，在 Intel 架构中，全局偏移量表中的第 1 项和第 2 项也是保留的，它们持有函数连接表的信息。</span><br><span class=\"line\">系统可能为同一个共享目标在不同的程序中选择不同的段地址；甚至也可能每次为同一个程序选择不同的地址。但是，在单次执行中，一旦一个进程的镜像建立起来之后，直到程序退出，内存段的地址都不会再改变了。</span><br><span class=\"line\">全局偏移量表的格式和解析方法是依处理器而不同的，就 Intel 架构而言，符号_GLOBAL_OFFSET_TABLE_会被用来访问此表。</span><br><span class=\"line\"></span><br><span class=\"line\">extern Elf32_Addr _GLOBAL_OFFSET_TABLE_[];</span><br><span class=\"line\">符号_GLOBAL_OFFSET_TABLE_可能位于.got 节中部，所以它也接受负的数组索引值。</span><br></pre></td></tr></table></figure>\n<ul>\n<li>PLT是 Procedure Link Table 程序链接表  PLT用来做在链接时建立符号和地址的重定位  <ul>\n<li>PLT的实现是延迟查找</li>\n</ul>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"<h3 id=\"目录\"><a href=\"#目录\" class=\"headerlink\" title=\"目录\"></a>目录</h3><hr>\n<!-- TOC -->\n\n<ul>\n<li><a href=\"#目录\">目录</a></li>\n<li><a href=\"#elf文件类型和描述\">ELF文件类型和描述</a><ul>\n<li><a href=\"#文件类型\">文件类型</a></li>\n<li><a href=\"#链接器视图编译器-汇编器-链接器\">链接器视图(编译器 汇编器 链接器)</a></li>\n<li><a href=\"#加载器视图-系统加载器\">加载器视图 (系统加载器)</a></li>\n<li><a href=\"#基本测试命令\">基本测试命令</a></li>\n<li><a href=\"#基础术语知识\">基础术语知识</a><ul>\n<li><a href=\"#目标文件格式的比较和说明\">目标文件格式的比较和说明</a></li>\n<li><a href=\"#其他词汇说明\">其他词汇说明</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a href=\"#可重定位文件\">可重定位文件</a><ul>\n<li><a href=\"#libcpp片段分析\">lib.cpp片段分析</a></li>\n<li><a href=\"#socpp片段分析\">so.cpp片段分析</a></li>\n</ul>\n</li>\n</ul>\n<!-- /TOC -->\n\n<h3 id=\"ELF文件类型和描述\"><a href=\"#ELF文件类型和描述\" class=\"headerlink\" title=\"ELF文件类型和描述\"></a>ELF文件类型和描述</h3><hr>\n<p>(Executable and Linking Format) (可执行可链接格式) 文件    </p>\n<h4 id=\"文件类型\"><a href=\"#文件类型\" class=\"headerlink\" title=\"文件类型\"></a>文件类型</h4><ul>\n<li><p>可重定位文件  (relocatable file)  </p>\n<ul>\n<li>由源文件编译而成但是还没有链接成可执行文件, 扩展名通常为.o  通常’目标文件(object file)’  用于与其他目标文件进行链接成可执行文件或者动态链接库.  </li>\n<li>可重定位是指 对外部符号的访问会进行标记, 在链接时候会重写这部分访问(操作数)重定位到真正的位置上.  </li>\n<li>重定位因为存在该修补 则有以下作用:  <ul>\n<li>重定位在执行时是直接使用真实位置 没有其他过程 性能非常好   </li>\n<li>链接共享库的时候如果需要确定地址和修补, 则还需要保证多个共享库的地址不可以重叠, 在32位下这种保证会很容易用尽虚拟(地址)空间  </li>\n<li>重定位需要修改代码段, 从而破坏’代码段’只读属性, 如果在链接阶段无法完成重定位, 则只能放在加载过程完成, 这样会导致’无法实现真正的代码共享’ .  比如所有进程使用的相同so文件在内存中实际上只有一份就是依赖于so的代码段只读且一致这个原则上的.  </li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>共享目标文件(shared object file)，即动态连接库文件 它在以下两种情况下被使用</p>\n<ul>\n<li>在链接过程中与其它动态链接库或可重定位文件一起构建新的目标文件</li>\n<li>在可执行文件被加载的过程中 被动态链接到新的进程中 成为运行代码的一部分  </li>\n</ul>\n</li>\n<li><p>可执行文件(executable file)，经过连接的，可以执行的程序文件。  </p>\n</li>\n<li><p>coredump文件 核心转储  </p>\n</li>\n</ul>","more":"<h4 id=\"链接器视图-编译器-汇编器-链接器\"><a href=\"#链接器视图-编译器-汇编器-链接器\" class=\"headerlink\" title=\"链接器视图(编译器 汇编器 链接器)\"></a>链接器视图(编译器 汇编器 链接器)</h4><p>链接器关心的内容<br>| LINKING VIEW<br>| -<br>| ELF HEADER<br>| PROGRAM HEADER TABLE OPTIONAL<br>| SECTION 1  .text<br>| SECTION 2  .data<br>| SECTION n …<br>| SECTION HEADER TABLE  </p>\n<h4 id=\"加载器视图-系统加载器\"><a href=\"#加载器视图-系统加载器\" class=\"headerlink\" title=\"加载器视图 (系统加载器)\"></a>加载器视图 (系统加载器)</h4><p>加载器关心的内容<br>| EXECUTION VIEW<br>| -<br>| ELF HEADER<br>| PROGRAM HEADER TABLE<br>| SEGMENT 1<br>| SEGMENT 2<br>| SEGMENT N …<br>| SECTION HEADER TABLE OPTIONAL </p>\n<h4 id=\"基本测试命令\"><a href=\"#基本测试命令\" class=\"headerlink\" title=\"基本测试命令\"></a>基本测试命令</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ldd - print shared library dependencies  </span><br><span class=\"line\">readelf -a 查看elf文件</span><br><span class=\"line\">objdump -S 查看汇编码</span><br><span class=\"line\"></span><br><span class=\"line\">gcc -g -c lib.cpp  编译目标文件  </span><br><span class=\"line\">gcc -g -c -fpic lib.cpp  启用地址无关代码选项来编译目标文件   </span><br><span class=\"line\">ar -cr liblib.a  lib.o  打包目标文件到静态库   </span><br><span class=\"line\">g++ -g -fPIC -shared so.cpp -o so.so  启用地址无关代码的链接选项和编译选项来编译共享库   </span><br><span class=\"line\">g++ -g -fpie -fPIE -pie -o main  lib.o libso.so </span><br><span class=\"line\"></span><br><span class=\"line\">export LD_LIBRARY_PATH&#x3D;&quot;.&#x2F;&quot; 设置临时的共享库搜索路径  </span><br><span class=\"line\"></span><br><span class=\"line\">PIC和PIE都用于编译地址无关代码, PIE假定了最终链接的目标是可执行文件.  </span><br><span class=\"line\">pie是链接选项 用于生成DYN类型的可执行文件.</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"基础术语知识\"><a href=\"#基础术语知识\" class=\"headerlink\" title=\"基础术语知识\"></a>基础术语知识</h4><h5 id=\"目标文件格式的比较和说明\"><a href=\"#目标文件格式的比较和说明\" class=\"headerlink\" title=\"目标文件格式的比较和说明\"></a>目标文件格式的比较和说明</h5><ul>\n<li><p>a.out 文件格式  </p>\n<ul>\n<li>旧版unix like系统(包括linux1.2以及之前的版本)中用于可执行文件 目标代码 共享库等的文件格式, 后续基本被ELF取代   </li>\n<li>后续习惯性把a.out作为可执行文件的默认输出名, 即使格式不是a.out   </li>\n<li>stabs 是一种调试数据格式, 用来存储程序信息供符号级/源代码级的调试器用, 因该信息存储在符号表的一个特殊条目中因此得名为刺 (条目 stabs)  该格式除了完成对a.out的调试信息支持, 还用于COFF ELF的变体中 .   </li>\n</ul>\n</li>\n<li><p>ELF 文件格式  </p>\n<ul>\n<li>Executable and Linking Format 可执行可链接的文件格式 </li>\n<li>原名 Extensible Linking Format  可扩展可链接的文件格式</li>\n<li>DWARF 标准化的调试数据格式 为ELF的补语  <ul>\n<li>该符号是一个历史遗留的名称, 没有正式含义, 定义为”标准化的调试数据格式”, 被广泛使用.   <ul>\n<li>DWARF使用DIE(调试信息条目)的数据结构来表示每个变量, 类型, 过程, 具有标签,属性(键值对).  </li>\n</ul>\n</li>\n<li>DIE可以嵌套形成树结构.  <ul>\n<li>DIE属性可以引用树中任何位置的另外一个DIE  <ul>\n<li>例如: 表示变量的DIE有一个DW_AT_type条目，该条目指向描述变量类型的DIE  </li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>COFF 文件格式    </p>\n<ul>\n<li>Common Object File Format  通用对象文件格式  类似ELF a.out  </li>\n<li>COFF文件的出现主要是因为a.out无法充分支持共享库, 包括外部格式标识, 显式地址链接.  </li>\n<li>COFF的设计过于局限和不完整, 导致实际的实现必然违反COFF标准, 目前仍然使用的较为广泛的是windows的PE版本 </li>\n<li>COFF对a.out的主要改进是在目标文件中引入了多个命名节  不同的对象文件可能具有不同数量和类型的节  </li>\n<li>文件的第一个字节将被加载的虚拟地址称为映像基地址 文件的其余部分不一定要装入一个连续的块中 而是要装入不同的部分中  </li>\n</ul>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>Format name</th>\n<th>Operating system</th>\n<th>Filename extension</th>\n<th>Explicit processor declarations</th>\n<th>Arbitrary sections</th>\n<th>Metadata[a]</th>\n<th>Digital signature</th>\n<th>String table</th>\n<th>Symbol table</th>\n<th>64-bit</th>\n<th>Fat binaries</th>\n<th>Can contain icon</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>格式名</td>\n<td>操作系统</td>\n<td>文件名扩展</td>\n<td>显式处理器声明</td>\n<td>任意节</td>\n<td>元数据[a]</td>\n<td>数字签名</td>\n<td>字符串表</td>\n<td>符号表</td>\n<td>64位</td>\n<td>fat格式文件支持</td>\n<td>包含图标</td>\n</tr>\n<tr>\n<td>a.out</td>\n<td>Unix-like</td>\n<td>none</td>\n<td>No</td>\n<td>No</td>\n<td>No</td>\n<td>No</td>\n<td>Yes[1]</td>\n<td>Yes[1]</td>\n<td>Extension</td>\n<td>No</td>\n<td>No</td>\n</tr>\n<tr>\n<td>COFF</td>\n<td>Unix-like</td>\n<td>none</td>\n<td>Yes by file</td>\n<td>Yes</td>\n<td>No</td>\n<td>No</td>\n<td>Yes</td>\n<td>Yes</td>\n<td>Extension</td>\n<td>No</td>\n<td>No</td>\n</tr>\n<tr>\n<td>XCOFF</td>\n<td>IBM AIX, BeOS, “classic” Mac OS</td>\n<td>none</td>\n<td>Yes by file</td>\n<td>Yes</td>\n<td>No</td>\n<td>No</td>\n<td>Yes</td>\n<td>Yes[2]</td>\n<td>Yes</td>\n<td>No</td>\n<td>No</td>\n</tr>\n<tr>\n<td>ELF</td>\n<td>Unix-like, OpenVMS, BeOS from R4 onwards, Haiku</td>\n<td>none</td>\n<td>Yes by file</td>\n<td>Yes</td>\n<td>Yes</td>\n<td>Yes[3]</td>\n<td>Yes</td>\n<td>Yes[4]</td>\n<td>Yes</td>\n<td>Extension[5]</td>\n<td>Extension[6]</td>\n</tr>\n<tr>\n<td>PE</td>\n<td>Windows, ReactOS, HX DOS Extender, BeOS (R3 only)</td>\n<td>.EXE</td>\n<td>Yes by file</td>\n<td>Yes</td>\n<td>Yes</td>\n<td>Yes[10]</td>\n<td>Yes</td>\n<td>Yes</td>\n<td>No</td>\n<td>No</td>\n<td>Yes</td>\n</tr>\n</tbody></table>\n<h5 id=\"其他词汇说明\"><a href=\"#其他词汇说明\" class=\"headerlink\" title=\"其他词汇说明\"></a>其他词汇说明</h5><ul>\n<li><p>ELF header 文件头   </p>\n<ul>\n<li>ELF文件的组成描述</li>\n<li>结构<ul>\n<li>版本信息等    </li>\n<li>ELF文件类型<ul>\n<li>ET_REL 可重定位文件 .o .a</li>\n<li>ET_DYN 可共享文件 .so  PIE版本的可执行文件   </li>\n<li>ET_EXEC 可执行文件   </li>\n<li>ET_CORE 核心转储  coredump</li>\n</ul>\n</li>\n<li>入口点地址  0x400510  </li>\n<li>ELF header大小  </li>\n<li>PROGRAM HEADERS大小和数量</li>\n<li>SECTION HEADERS大小和数量  </li>\n<li>Section header string table index 字符串表索引节头位置(.shstrtab) </li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>section header SH 节头  </p>\n<ul>\n<li><p>.text section 里装载了可执行代码</p>\n</li>\n<li><p>.data section 里面装载了被初始化的数据</p>\n</li>\n<li><p>.bss section 里面装载了未被初始化或者初始化为0的数据  </p>\n<ul>\n<li>bss 不占据ELF文件的空间 因为没有内容只有空间大小和类型信息  </li>\n</ul>\n</li>\n<li><p>.commont 开发环境的时候使用的GCC版本信息   </p>\n</li>\n<li><p>.shstrtab 指的是section header string table 保存了各个section的名字   </p>\n</li>\n<li><p>.strtab 或者 .dynstr section 里面装载了字符串信息 字符串和符号的区别是 字符串是程序执行内容中, 符号是代码符号.  </p>\n</li>\n<li><p>.rodata 字符串常量  </p>\n</li>\n<li><p>.eh_frame 其内部存放了以DWARF格式保存的一些调试信息 格式与 .debug_frame 是很相似的（不完全相同）.  </p>\n</li>\n<li><p>.dynsym  动态库的符号表  </p>\n<ul>\n<li>动态加载需要的符号表(动态库)  </li>\n</ul>\n</li>\n<li><p>.symtab section 符号表(全量)   </p>\n<ul>\n<li>包括了.strtab里面定义的符号 每个符号对应的符号表是一个Elf64_Symbol结构体 除了包含.strtab外 符号表中还包含了一些section的符号表条目 </li>\n<li>Value 符号所在的section偏移, 比如代码段的相对偏移地址, 数据段的相对偏移地址    </li>\n<li>Size 大小,  如果是变量则是变量的size, 如果是函数则是指令的行数  </li>\n<li>Type 符号的类型 NOTYPE或者UND代表是外部符号, FUNC函数, OBJECT数据, SECTION 节 <ul>\n<li>如果是so/exe则还有bss data等字段    </li>\n</ul>\n</li>\n<li>Bind 绑定类型 LOCAL GLOBAL  </li>\n<li>vis  </li>\n<li>NDX</li>\n<li>NAME 符号名  </li>\n</ul>\n</li>\n<li><p>.rel 打头的 sections 里面装载了重定位条目   </p>\n<ul>\n<li>在最终二进制文件中 使用”符号的地址”在此目标文件中的”偏移量”处修补该值   </li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<pre><code>* .rel.text RELOCATION RECORDS FOR [.text] (object file)包含了代码段中引用的函数和全局变量的重定位条目 包括调用当前编译单元的\n  * Offset 偏移地址 代码段中要修改掉的地址  \n  * Type 类型 不启用PIC的一般是PC32 启用后如下\n    * PLT32 函数符号 外部或者内部  \n    * GOT PC RELX 全局变量符号  包括外部和内部  \n  * VALUE 符号名和加数  \n\n\n\n* .rela.eh_frame RELOCATION RECORDS FOR [.eh_frame](object file)  eh_frame 的重定位信息    \n  * 在编译成object file的过程中, 该section提供了当前编译单元所定义的函数符号以及符号所在代码段的偏移位置.  \n  * OFFSET 当前函数在代码段中的开始位置  \n  * TYPE   PC32 本地实现  \n  * VALUE  符号表中的类型名以及符号的Value位置   \n\n\n\n* .rel.plt (动态库或者EXE)节的每个表项对应了所有外部过程调用符号的重定位信息  \n  * 主要是 JUMP_SLOT 类型的重定位项  \n    * 重定位只需将符号地址填入被修正的内存即可\n  * 比如定义了一个函数test, 所有call test的地方都存在这个位置  \n* .rel.dyn section (动态库或者EXE)的每个表项对应了除了外部过程调用的符号以外的所有重定位对象(一般是数据)  \n  * 主要是 GLOB_DAT 类型的重定位项\n    * 重定位只需将符号地址填入被修正的内存即可\n  * 比如extern来自so文件的全局静态变量  \n  * 或者开启pic后自己的全局静态变量  \n\n* 类型  \n  * GOT Global Offset Table  全局偏移表  \n  * PC  program counter relative displacement  程序计数的相对偏移/ IP指令的操作数修改   \n  * PLT procedure linkage table  过程链接表\n  * R_386_GOT32：该重定位类型计算从全局偏移表（global offset table）的基址到符号所在的全局偏移表表项的距离，并且通知链接编辑器建立全局偏移表。（G+A-P）\n  * R_386_PLT32：该重定位类型计算符号的过程链接表表项地址，并且通知链接编辑器构建过程链接表。（L+A-P）\n  * R_386_COPY：链接编辑器创建此重定位类型是用于动态链接的。它的r_offset成员对应一个可写segment中的位置。符号表索引指定了一个在当前目标文件和共享目标文件中都存在的符号。在执行期间，动态链接器拷贝与共享目标的符号相关的数据到偏移指定的位置。（none）\n  * R_386_GLOB_DAT：用于给指定符号的地址设置一个全局偏移表表项。该特殊重定位类型确定符号和全局偏移表项之间的对应关系。（S）\n  * R_386_JMP_SLOT：链接编辑器创建此重定位类型是用于动态链接的，它的偏移给出了过程链接表表项的位置。动态链接器通过修改过程链接表表项，把控制权传递给指定符号的地址，参见第二章“过程链接表”一节。（S）\n  * R_386_RELATIVE：链接编辑器创建此重定位类型是用于动态链接的，它的偏移成员给出了共享目标中的一个位置，这个位置包含了一个表示相对地址的值。动态链接器通过把共享目标被加载的虚拟地址与相对地址相加，计算出对应的虚拟地址。此重定位类型的重定位表项必须把符号表索引置为0。（B+A）\n  * R_386_GOTOFF：此类型的重定位计算符号值和全局偏移表地址的差值，并且通知链接编辑器构建全局偏移表。（S+A-GOT）\n  * R_386_GOTPC：此类型类似于R_386_PC32。只是它在计算中使用全局偏移表的地址。这种类型的重定位引用的通常是_GLOBAL_OFFSET_TABLE_DE类型的符号，并且通知链接编辑器构建全局偏移表。（GOT+A-P）****</code></pre><ul>\n<li>这些条目给链接的时候需要和其他可重定位文件或者库的对应的section合并时提供了必要的信息  </li>\n</ul>\n<ul>\n<li>program header PH 程序头<ul>\n<li>segment信息</li>\n</ul>\n</li>\n<li>base address             基地址       </li>\n<li>dynamic linker           动态连接器   </li>\n<li>dynamic linking          动态连接     </li>\n<li>global offset table      全局偏移量表 </li>\n<li>hash table               哈希表       </li>\n<li>initialization function  初始化函数   </li>\n<li>link editor              连接编辑器   </li>\n<li>object file              目标文件     </li>\n<li>procedure linkage table  函数连接表   </li>\n<li>program header           程序头       </li>\n<li>program header table     程序头表     </li>\n<li>program interpreter      程序解析器   </li>\n<li>relocation               重定位       </li>\n<li>shared object            共享目标     </li>\n<li>section                  节           </li>\n<li>section header           节头         </li>\n<li>section header table     节头表       </li>\n<li>segment                  段           </li>\n<li>string table             字符串表     </li>\n<li>symbol table             符号表       </li>\n<li>termination function     终止函数     </li>\n</ul>\n<h3 id=\"可重定位文件\"><a href=\"#可重定位文件\" class=\"headerlink\" title=\"可重定位文件\"></a>可重定位文件</h3><hr>\n<ul>\n<li>注：各个段之间并未严格的首位相接，考虑到对齐的因素，他们之间会存在”空洞”（如图中.shstrtab段和Section Header Table之间的padding分区）；</li>\n</ul>\n<h4 id=\"lib-cpp片段分析\"><a href=\"#lib-cpp片段分析\" class=\"headerlink\" title=\"lib.cpp片段分析\"></a>lib.cpp片段分析</h4><p>lib.cpp</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">int g_static_lib_bss &#x3D; 0;</span><br><span class=\"line\">int g_static_lib_data &#x3D; 0xff1234ff;</span><br><span class=\"line\">int lib_func(int a, int b)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  return a+b;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>通过命令编译出目标文件lib.o和分析数据</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">g++ -c -fpic lib.cpp -o lib.pic.o</span><br><span class=\"line\">g++ -c       lib.cpp -o lib.npic.o  </span><br><span class=\"line\">g++ -c -fpie -pie lib.cpp -o lib.pie.o</span><br><span class=\"line\">readelf -a lib.npic.o</span><br><span class=\"line\">readelf -a lib.pic.o</span><br><span class=\"line\">objdump -S lib.npic.o</span><br><span class=\"line\">objdump -S lib.pic.o</span><br></pre></td></tr></table></figure>\n\n<p>lib.cpp无论是pie选项还是pic, 编译的结果完全一致 </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ELF 头：</span><br><span class=\"line\">  ABI 版本:                          0</span><br><span class=\"line\">  类型:                              REL (可重定位文件)</span><br><span class=\"line\"></span><br><span class=\"line\">重定位节 &#39;.rela.eh_frame&#39; 位于偏移量 0x1f0 含有 1 个条目：</span><br><span class=\"line\">  偏移量          信息           类型           符号值        符号名称 + 加数</span><br><span class=\"line\">000000000020  000200000002 R_X86_64_PC32     0000000000000000 .text + 0</span><br><span class=\"line\"></span><br><span class=\"line\">Symbol table &#39;.symtab&#39; contains 11 entries:</span><br><span class=\"line\">   Num:    Value          Size Type    Bind   Vis      Ndx Name</span><br><span class=\"line\">     0: 0000000000000000     0 NOTYPE  LOCAL  DEFAULT  UND </span><br><span class=\"line\">     1: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS lib.cpp</span><br><span class=\"line\">     8: 0000000000000000     4 OBJECT  GLOBAL DEFAULT    3 g_static_lib_bss</span><br><span class=\"line\">     9: 0000000000000000     4 OBJECT  GLOBAL DEFAULT    2 g_static_lib_data</span><br><span class=\"line\">    10: 0000000000000000    20 FUNC    GLOBAL DEFAULT    1 _Z8lib_funcii</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">0000000000000000 &lt;_Z8lib_funcii&gt;:</span><br><span class=\"line\">   0:   55                      push   %rbp</span><br><span class=\"line\">   1:   48 89 e5                mov    %rsp,%rbp</span><br><span class=\"line\">   4:   89 7d fc                mov    %edi,-0x4(%rbp)</span><br><span class=\"line\">   7:   89 75 f8                mov    %esi,-0x8(%rbp)</span><br><span class=\"line\">   a:   8b 55 fc                mov    -0x4(%rbp),%edx</span><br><span class=\"line\">   d:   8b 45 f8                mov    -0x8(%rbp),%eax</span><br><span class=\"line\">  10:   01 d0                   add    %edx,%eax</span><br><span class=\"line\">  12:   5d                      pop    %rbp</span><br><span class=\"line\">  13:   c3                      retq</span><br></pre></td></tr></table></figure>\n\n\n<h4 id=\"so-cpp片段分析\"><a href=\"#so-cpp片段分析\" class=\"headerlink\" title=\"so.cpp片段分析\"></a>so.cpp片段分析</h4><p>so.cpp</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">int lib_func(int a, int b);</span><br><span class=\"line\">int so_func(int a, int b)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  int ret &#x3D; lib_func(a, b);</span><br><span class=\"line\">  return ret;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>通过命令编译出目标文件so.o和分析数据</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">g++ -c -fpic so.cpp -o so.pic.o</span><br><span class=\"line\">g++ -c       so.cpp -o so.npic.o  </span><br><span class=\"line\">readelf -a so.npic.o</span><br><span class=\"line\">readelf -a so.pic.o</span><br><span class=\"line\">objdump -S so.npic.o</span><br><span class=\"line\">objdump -S so.pic.o</span><br></pre></td></tr></table></figure>\n\n<p>so.cpp的两个object文件的汇编码一致, 但是readelf中的section不同 主要区别如下:</p>\n<ul>\n<li><p>no -fpic选项的目标文件中 .rela.text 的两个引用的符号类型是PC32  </p>\n</li>\n<li><p>-fpic选项的目标文件中 .rela.text 的两个引用的符号类型是PLT32  </p>\n</li>\n<li><p>-fpic选项的目标文件中 .symtab 的外部引用符号之前多了一个<em>GLOBAL_OFFSET_TABLE</em>  即GOT表的符号和地址信息</p>\n</li>\n<li><p>.got.plt .got在共享文件或者可执行文件中  </p>\n</li>\n<li><p>GOT是 GLOBAL_OFFSET_TABLE  全局偏移表  GOT用来做在链接时建立数据和地址的重定位</p>\n<ul>\n<li>ELF的数据段里面建立一个指向这些变量的指针数组 当指令中需要访问外部变量时 会先找到GOT 然后根据GOT中变量所对应的项找到变量的目标地址</li>\n<li>链接器在装载模块时会查找每个变量所在的地址 然后填充GOT中每个项 由于GOT是放在数据段的 所以每个进程可以有一个独立的副本  </li>\n<li>GOT的意义是访问数据的时候通过GOT读表获取目标数据的地址, 而不是在链接或者加载时对目标代码进行修改(重定向)   </li>\n<li>GOT延迟绑定 而不是load的时候一次性全部做好地址的绑定 减少加载时候的工作量</li>\n<li>通过GOT实现 代码应该始终是只读的 </li>\n<li>通过GOT可实现修改符号绑定顺序的能力  </li>\n</ul>\n</li>\n<li><p>PLT 小型过程链接表存根(stub)进行, 如果plt有则直接使用没有则去找, 有的话则用存根ID去GOT中查找记录的地址 </p>\n<ul>\n<li>每个函数对应一个小的过程类似如下: <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">0000000000000690 &lt;_Z13so_inner_funcii@plt&gt;:</span><br><span class=\"line\">690:   ff 25 8a 09 20 00       jmpq   *0x20098a(%rip)        # 201020 &lt;_Z13so_inner_funcii@@Base+0x200870&gt;</span><br><span class=\"line\">696:   68 01 00 00 00          pushq  $0x1</span><br><span class=\"line\">69b:   e9 d0 ff ff ff          jmpq   670 &lt;.plt&gt;</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">全局偏移量表(global offset table)在私有数据中包含绝对地址</span><br><span class=\"line\">出于方便共享和重用的考虑，目标文件中的很多内容是“位置无关”的，其映射到进程内存中的什么位置是不一定的，所以只适合使用相对地址，全局偏移量表是一个例外</span><br><span class=\"line\">在UNIX System V 环境下的动态连接过程中，got 表是必须的，它的实际内容和格式依处理器不同而不同。</span><br><span class=\"line\">总的来说，位置独立的代码不能含有绝对的虚拟地址。全局偏移量表选择了在私有数据中含有绝对地址，这种办法在没有牺牲位置独立性和可共享性的前提下保存了绝对地址。引用全局偏移量表的程序可以同时使用位置独立的地址和绝对地址，把位置无关的引用重定向到绝对地址上去。</span><br><span class=\"line\">一开始，全局偏移量表只包含其重定位项所要求的信息。当系统为可装载的目标文件创建了内存段之后，动态连接器处理重定位项，有些重定位项的类型为R_386_GLOB_DAT，它们指向全局偏移量表。动态连接器决定相应的符号值，计算其绝对地址，并且为内存段设置适当的值。尽管在连接编辑器创建目标文件的时候绝对地址还是未知的，但是动态连接器却知道所有内存段的地址，因此它可以计算所含有的所有符号的绝对地址。</span><br><span class=\"line\">如果一个程序要求直接访问符号的绝对地址，那么这个符号在全局偏移量表中就必须有一个对应的项。可执行文件和共享目标文件有各自的全局偏移量表，所以一个符号的地址可能会出现在多个表中。动态连接器会在程序开始执行之前，处理好所有全局偏移量表的重定位工作，所以在程序执行的时候，可以保证所有这些符号都有正确的绝对地址。</span><br><span class=\"line\">全局偏移量表的第 0 项是保留的，它用于持有动态结构的地址，由符号_DYNAMIC 引用。这样，其它程序，比如动态连接器就可以直接找到其动态结构，而不用借助重定位项。这对于动态连接器来说尤为重要，因为它必须在不依赖于其它程序重定位其内存镜像的情况下初始化自己。前面提到过，在 Intel 架构中，全局偏移量表中的第 1 项和第 2 项也是保留的，它们持有函数连接表的信息。</span><br><span class=\"line\">系统可能为同一个共享目标在不同的程序中选择不同的段地址；甚至也可能每次为同一个程序选择不同的地址。但是，在单次执行中，一旦一个进程的镜像建立起来之后，直到程序退出，内存段的地址都不会再改变了。</span><br><span class=\"line\">全局偏移量表的格式和解析方法是依处理器而不同的，就 Intel 架构而言，符号_GLOBAL_OFFSET_TABLE_会被用来访问此表。</span><br><span class=\"line\"></span><br><span class=\"line\">extern Elf32_Addr _GLOBAL_OFFSET_TABLE_[];</span><br><span class=\"line\">符号_GLOBAL_OFFSET_TABLE_可能位于.got 节中部，所以它也接受负的数组索引值。</span><br></pre></td></tr></table></figure>\n<ul>\n<li>PLT是 Procedure Link Table 程序链接表  PLT用来做在链接时建立符号和地址的重定位  <ul>\n<li>PLT的实现是延迟查找</li>\n</ul>\n</li>\n</ul>"},{"title":"汇编语法/寻址/寄存器/代码模型(GNU assembler)","date":"2019-12-10T16:00:00.000Z","author":"yawei.zhang","_content":"\n### 目录  \n\n<!-- TOC -->\n\n- [目录](#目录)\n- [基础语法格式](#基础语法格式)\n- [常见寄存器以及作用](#常见寄存器以及作用)\n    - [通用寄存器](#通用寄存器)\n        - [寄存器使用惯例 原文](#寄存器使用惯例-原文)\n        - [中文对照](#中文对照)\n    - [专用寄存器](#专用寄存器)\n        - [标志寄存器 RFLAGS](#标志寄存器-rflags)\n        - [程序计数器(PC)(Relative Instruction-Pointer)(IP)](#程序计数器pcrelative-instruction-pointerip)\n        - [指令寄存器](#指令寄存器)\n- [汇编语法](#汇编语法)\n    - [汇编指令](#汇编指令)\n    - [操作数格式与寻址](#操作数格式与寻址)\n        - [内存操作数](#内存操作数)\n        - [寻址模式](#寻址模式)\n        - [large code mode:](#large-code-mode)\n        - [共享库中对g_static_so_data的访问](#共享库中对g_static_so_data的访问)\n        - [small code mode:](#small-code-mode)\n        - [备注说明](#备注说明)\n        - [RELRO  Relocation Read Only](#relro--relocation-read-only)\n- [调用惯例Calling Conventions](#调用惯例calling-conventions)\n        - [参数压栈顺序](#参数压栈顺序)\n            - [Caller Save和Callee Save](#caller-save和callee-save)\n- [工具](#工具)\n    - [PEDA插件](#peda插件)\n\n<!-- /TOC -->\n\n### 基础语法格式\n\nGAS汇编的格式阅读起来很自然 如下   \n  \n```\n[操作符]    [源]      [目标]   \nmovl        $0,      -4(%rbp)  \n```\n\n\n但是INTEL格式更贴近C语言的书写风格   \n   \n```\n[操作符]   [目标]    [源]  \nmov        esi,     DWORD PTR [rbp-0x4]\n```\n  \n很像C语言的代码   \n   \n``` assembly\nint esi = *(rbp-0x4);\n```\n\n> 本文基于X86-64架构体系整理了GAS风格的汇编语法, 如无特殊说明后续内容皆以环境为准.    \n\n\"@\"符号表示“将符号左边的变量钳制在符号右边的地址   \n\n<!-- more -->   \n\n### 常见寄存器以及作用   \n16bit寄存器一般没有前缀  例如ax   bx   ds   \n32bit寄存器前缀一般为e   例如eax  ebx  eds   \n64bit寄存器前缀一般为r   例如rax  rbx  rds\n\n#### 通用寄存器   \n\nX86-64体系下有16个通用寄存器 分别为:\n```\nrax    rbx    rcx    rdx    rdi    rsi    rbp    rsp    r8 – r15\n```\n兼容32位模式, 对应为: \n```\neax    ebx    ecx    edx    edi    esi    ebp    esp    e8d – e15d\n```\n\n在所有CPU的架构体系中, 每个寄存器通常都是有其建议的使用用途的, X86-64架构下其用途如下:  \n\n##### 寄存器使用惯例 原文  \n[X86-64 Registers](https://cons.mit.edu/sp17/x86-64-architecture-guide.html)\n\n| Register | Purpose                                | Saved across calls |\n| -------- | -------------------------------------- | ------------------ |\n| %rax     | temp register; return value            | No                 |\n| %rbx     | callee-saved                           | Yes                |\n| %rcx     | used to pass 4th argument to functions | No                 |\n| %rdx     | used to pass 3rd argument to functions | No                 |\n| %rsp     | stack pointer                          | Yes                |\n| %rbp     | callee-saved; base pointer             | Yes                |\n| %rsi     | used to pass 2nd argument to functions | No                 |\n| %rdi     | used to pass 1st argument to functions | No                 |\n| %r8      | used to pass 5th argument to functions | No                 |\n| %r9      | used to pass 6th argument to functions | No                 |\n| %r10-r11 | temporary                              | No                 |\n| %r12-r15 | callee-saved registers                 | Yes                |\n\n##### 中文对照  \n| 寄存器   | 推荐用途                                   | 跨调用过程保存 |\n| -------- | ------------------------------------------ | -------------- |\n| %rax     | 保存函数/计算的返回值                      | No             |\n| %rbx     | callee-saved 基址 (比如找GOT表会临时用下)  | Yes            |\n| %rcx     | 函数的第4个参数                            | No             |\n| %rdx     | 函数的第3个参数                            | 乘法余数       | No |\n| %rsp     | 指向当前栈顶的指针(栈顶)                   | Yes            |\n| %rbp     | callee-saved; 指向当前栈帧的起始位置(栈基) | Yes            |\n| %rsi     | 函数的第2个参数                            | 字符串源串     | No |\n| %rdi     | 函数的第1个参数                            | 字符串目标串   | No |\n| %r8      | 函数的第5个参数                            | No             |\n| %r9      | 函数的第6个参数                            | No             |\n| %r10-r11 | temporary                                  | No             |\n| %r12-r15 | callee-saved registers                     | Yes            |\n\n#### 专用寄存器  \n标志寄存器和程序计数器可能为同一个寄存器实现  \n\n##### 标志寄存器 RFLAGS  \n\nNV UP EI PL NZ NA PO NC表示标志寄存器的值  \n\n| 位编号                           | 1     | 0     |\n| -------------------------------- | ----- | ----- |\n| 溢出标志OF(Over flow flag)       | OV(1) | NV(0) |\n| 方向标志DF(Direction flag)       | DN(1) | UP(0) |\n| 中断标志IF(Interrupt flag)       | EI(1) | DI(0) |\n| 符号标志SF(Sign flag)            | NG(1) | PL(0) |\n| 零标志ZF(Zero flag)              | ZR(1) | NZ(0) |\n| 辅助标志AF(Auxiliary carry flag) | AC(1) | NA(0) |\n| 奇偶标志PF(Parity flag)          | PE(1) | PO(0) |\n| 进位标志CF(Carry flag)           | CY(1) | NC(0) |\n| TF(TrapFlag)                     |       |       |\n\n##### 程序计数器(PC)(Relative Instruction-Pointer)(IP)  \n保存下一行要执行的指令位置  \nIntel的实现叫RIP  \n> The 64-bit instruction pointer RIP points to the next instruction to be executed, and supports a 64-bit flat memory model.  \n> 64位指令指针 RIP 指向预期要执行的下一行指令(位置), 并且支持64位平坦内存模型  \n> RIP-relative addressing: this is new for x64 and allows accessing data tables and such in the code relative to the current instruction pointer, making position independent code easier to implement.  \n> PIC提供了相对于当前指令位置访问数据表这样新的支持, 从而让PIC更容易实现   \n\n例如PLC表在RIP下的应用  \n```\n0000000000000570 <foo@plt>:\n 570:    ff 25 a2 0a 20 00        jmpq   *0x200aa2(%rip)        # 201018 <_GLOBAL_OFFSET_TABLE_+0x18>\n 576:    68 00 00 00 00           pushq  $0x0\n 57b:    e9 e0 ff ff ff           jmpq   560 <_init+0x20>\n```\n\n在没有RIP的情况下需要通过函数调用来实现PLC  会消耗较多的性能     \nwindows则直接采用了'重定位基址'的方式实现非PLC的装载.  \n\n##### 指令寄存器  \n当前正在执行的指令, 简单CPU会预读 但复杂的CPU有流水线/指令级并行计算等    \n \n\n\n\n### 汇编语法   \n#### 汇编指令   \n \n| 操作码                     | 描述                                                                                       |\n| -------------------------- | ------------------------------------------------------------------------------------------ |\n| 复制值                     | _                                                                                          |\n| mov src, dest              | 将值从 寄存器,立即值或存储器地址 复制到 寄存器或存储器地址, 不可以同时为内存地址           |\n| movabs                     | 支持8字节的操作数                                                                          |\n| lea src, dest              | move会取值 lea只取地址    dest只能是寄存器                                                 |\n| 栈操作                     |                                                                                            |\n| enter $x, $0               | 设置堆栈框架 相当于 push ebp      和 mov esp, ebp 然后把当前的esp减去x字节的大小(局部变量) |\n| leave                      | 恢复堆栈框架 相当于 move ebp, esp 和 pop ebp                                               |\n| push src                   | 将src压栈,  rsp-1并把src的内容存储到新位置. src可以是立即数 寄存器 内存地址                |\n| pop dest                   | 出栈并保存到dest 可以是 寄存器 内存地址                                                    |\n| 控制流                     |                                                                                            |\n| call label                 | 无条件跳转到目标(直接跳转)并将返回地址(当前PC/IP +1)压入堆栈                               |\n| call *operand              | 无条件跳转到目标(间接跳转)并将返回地址(当前PC/IP +1)压入堆栈                               |\n| ret                        | 将返回地址弹出堆栈 然后无条件跳转到该地址                                                  |\n| jmp label                  | 无条件跳转到目标(直接跳转)                                                                 |\n| jmp *operand               | 无条件跳转到目标(间接跳转)                                                                 |\n| jg, jge, jl, jle, jne, ... | >, >=, <, <=, !=, ...                                                                      |\n| 算术与逻辑                 |                                                                                            |\n| inc dest                   | dest+=1                                                                                    |\n| dec dest                   | dest-=1                                                                                    |\n| neg dest                   | dest取负                                                                                   |\n| not dest                   | dest取反                                                                                   |\n| add src, dest              | dest加上src                                                                                |\n| sub src, dest              | dest减去src                                                                                |\n| imul src, dest             | dest 乘以src                                                                               |\n| idiv divisor               | rdx:rax除以divisor, 将商存在rax 余数存储在rdx                                              |\n| shr cl, reg                | reg右移cl位                                                                                |\n| shl cl, reg                | reg左移cl位                                                                                |\n| ror src, dest              | dest逐src 位向左或向右旋转。                                                               |\n| cmp src, dest              | 执行sub操作但只设置标志寄存器而不存储结果                                                  |\n| test src, dest             | 执行and操作只设置标志寄存器而不存储结果,其中是否为0的判断一般类似 ```test rax,rax```       |\n| and src, dest              | 执行按位的与操作并保存到dest                                                               |\n| xor src, dest              | 执行按位的异或操作并保存到dest                                                             |\n\n#### 操作数格式与寻址   \n\nM[xx]表示在存储器中xx地址的值   \nR[xx]表示寄存器xx的值   \n这种表示方法将寄存器 内存都看出一个大数组的形式    \n\n| 格式         | 操作数值             | 名称              | 样例(GAS = C语言)               |\n| ------------ | -------------------- | ----------------- | ------------------------------- |\n| %reg         |                      |                   | 寄存器名字前都加 %              |\n| $Imm         | Imm                  | 立即数寻址        | $1 = 1                          |\n| Ea           | R[Ea]                | 寄存器寻址        | %eax = eax                      |\n| Imm          | M[Imm]               | 绝对寻址          | 0x104 = *0x104                  |\n| (Ea)         | M[R[Ea]]             | 间接寻址          | (%eax)= *eax                    |\n| Imm(Ea)      | M[Imm+R[Ea]]         | (基址+偏移量)寻址 | 4(%eax) = *(4+eax)              |\n| (Ea,Eb)      | M[R[Ea]+R[Eb]]       | 变址              | (%eax,%ebx) = *(eax+ebx)        |\n| Imm(Ea,Eb)   | M[Imm+R[Ea]+R[Eb]]   | 寻址              | 9(%eax,%ebx)= *(9+eax+ebx)      |\n| (,Ea,s)      | M[R[Ea]*s]           | 伸缩化变址寻址    | (,%eax,4)= *(eax*4)             |\n| Imm(,Ea,s)   | M[Imm+R[Ea]*s]       | 伸缩化变址寻址    | 0xfc(,%eax,4)= *(0xfc+eax*4)    |\n| (Ea,Eb,s)    | M(R[Ea]+R[Eb]*s)     | 伸缩化变址寻址    | (%eax,%ebx,4) = *(eax+ebx*4)    |\n| Imm(Ea,Eb,s) | M(Imm+R[Ea]+R[Eb]*s) | 伸缩化变址寻址    | 8(%eax,%ebx,4) = *(8+eax+ebx*4) |\n\n##### 内存操作数  \n\n操作数语法:    \n```\nsegment:displacement(base register, index register, scale factor)\n```\n等效intel语法   \n```\nsegment:[base register + displacement + index register * scale factor]\n```\n> 如果segment未指定，则几乎总是假定为ds，除非base register为esp或ebp；否则为。在这种情况下，假定地址是相对于ss  \n  \n> If segment is not specified, as almost always, it is assumed to be ds, unless base register is esp or ebp; in this case, the address is assumed to be relative to ss  \n快速参考  \n\n| 指令                   | 含义                                             |\n| ---------------------- | ------------------------------------------------ |\n| movq %rax, %rbx        | rbx = rax                                        |\n| movq $123, %rax        | rax = 123                                        |\n| movq %rsi, -16（%rbp） | mem [rbp-16] = rsi                               |\n| subq $10, %rbp         | rbp = rbp -10                                    |\n| cmpl %eax %ebx         | 比较然后设置标志。如果eax == ebx, 则设置零标志。 |\n| leal (%ebx),  %eax     | movl %ebx,  %eax                                 |\n\n\n\n##### 寻址模式    \n\n> References to both code and data on x64 are done with instruction-relative (RIP-relative in x64 parlance) addressing modes. The offset from RIP in these instructions is limited to 32 bits.     \n> X64体系下的寻址是建立在相对寻址(RIP-RELATIVE)之上的, RIP的偏移大小最大为32bits  \n\n\n[x64 code mode](https://eli.thegreenplace.net/2012/01/03/understanding-the-x64-code-models)    \n\n> Default operand size in 64-bit mode is still 32-bit and 64-bit immediates are allowed only with mov instruction.  \n> movabs is just AT&T syntax for a mov with a 64-bit immediate operand.    \n> 只有mov操作可以填写8字节的立即数  movabs是AT&T语法中mov的(别名)    \n\n| 指令 | 同义名   | 跳转条件 | 描述     |\n| ---- | -------- | -------- | -------- |\n| jmp  | Label    | 1        | 直接跳转 |\n| jmp  | *Operand | 1        | 间接跳转 |\n\n\n绝对寻址/直接寻址(Absolute or direct):  \n\n```\njump    address   \n```\n\n> (有效PC地址=address)  \n> Effective PC address = address  \n\n\n相对寻址(PC-relative):  \n```\njump    offset    \n```\n\n> (有效PC地址=rip+offset = 下一个指令的地址 + offset)  \n> Effective PC address = next instruction address + offset, offset may be negative  \n\n快速分析:\n```\n00000000000007e0 <.plt>:\n 7e0:   ff 35 22 08 20 00       pushq  0x200822(%rip)        # 201008 <_GLOBAL_OFFSET_TABLE_+0x8>\n 7e6:   ff 25 24 08 20 00       jmpq   *0x200824(%rip)        # 201010 <_GLOBAL_OFFSET_TABLE_+0x10>\n 7ec:   0f 1f 40 00             nopl   0x0(%rax)\n0000000000000810 <_Z12so_func_baseii@plt>:\n 810:   ff 25 12 08 20 00       jmpq   *0x200812(%rip)        # 201028 <_Z12so_func_baseii>\n 816:   68 02 00 00 00          pushq  $0x2\n 81b:   e9 c0 ff ff ff          jmpq   7e0 <.plt>  \n ```\n\n* jmpq   7e0  跳转到 CS:7e0 这个位置  \n  > 实际上二进制的内容仍然是相对寻址(81b+5 + -40) ==  7e0  等同 jumpq * -0x40(%rip) 但省了一个字节的指令   \n\n* jmpq   *0x200812(%rip)  跳转到 816 + 0x200812 这个位置 (rip是一个指针 需要解引用获得目标地址)   \n\n\n```\n a84:   74 20                   je     aa6 <__libc_csu_init+0x56>\n ```\n * 这里跳转指令则只用了两个字节  \n\n\n\n##### large code mode:  \n\n> In the small code model all addresses (including GOT entries) are accessible via the IP-relative addressing provided by the AMD64 architecture. Hence there is no need for an explicit GOT pointer and therefore no function prologue for setting it up is necessary. In the medium and large code models a register has to be allocated to hold the address of the GOT in position-independent objects, because the AMD64 ISA does not support an immediate displacement larger than 32 bits.  \n> 在一个小型代码模型中, 所有的地址(包括GOT入口地址) 都是可以通过IP-RELATIVE访问到.  因此不需要显示声明额外的GOT指针 也不需要设置函数的开始语.  但在一个中型或者大型代码模型中, 必须分配一个寄存器去持有位置无关对象在GOT的地址  (AMD64不支持大于32位的立即跳转)  \n \n```\ng++-6 -O0 so.so main.cpp lib.cpp -pie -fPIE  -mcmodel=large \n```\n \n 举例一个通过.GOT表访问的全局变量代码如下:   \n ```\n a40:   48 8d 1d f9 ff ff ff    lea    -0x7(%rip),%rbx        # a40 <main+0xb>\n a47:   49 bb c0 05 20 00 00    movabs $0x2005c0,%r11\n a4e:   00 00 00 \n a51:   4c 01 db                add    %r11,%rbx\n a54:   89 7d dc                mov    %edi,-0x24(%rbp)\n a57:   48 89 75 d0             mov    %rsi,-0x30(%rbp)\n a5b:   c7 45 ec 00 00 00 00    movl   $0x0,-0x14(%rbp)\n a62:   48 b8 d0 ff ff ff ff    movabs $0xffffffffffffffd0,%rax\n a69:   ff ff ff \n a6c:   48 8b 04 03             mov    (%rbx,%rax,1),%rax\n a70:   c7 00 e8 03 00 00       movl   $0x3e8,(%rax)\n ```\n\na4e为8字节的操作数剩余部分\n\na40行取得当前行的地址 \na51行通过偏移量获得.got表的end 地址 =  a40 + 0x2005c0 =   201000   =.plt.got   (.got表在本测试中大小是0x40)  \na6c行把RBX + 0xffffffffffffffd0 (= -0x30) 得到GOT表中存放全局变量的地址 *(.plt.got -0x30) = got[g_static_so_data]   \na70赋值立即数0x3e8 给全局变量 g_static_so_data = *(got[g_static_so_data])  \n\n\n节点偏移和大小如下    \n\n| [号] | 名称     | 类型     | 地址     | 偏移量 | 大小  | 全体大小 | 旗标 | 链接 | 信息 | 对齐 |\n| ---- | -------- | -------- | -------- | ------ | ----- | -------- | ---- | ---- | ---- | ---- |\n| [23] | .got     | PROGBITS | 00200fc0 | 000fc0 | 00040 | 0008     | WA   | 0    | 0    | 8    |\n| [24] | .got.plt | PROGBITS | 00201000 | 001000 | 00030 | 0008     | WA   | 0    | 0    | 8    |\n| [25] | .data    | PROGBITS | 00201030 | 001030 | 00014 | 0000     | WA   | 0    | 0    | 8    |\n| [26] | .bss     | NOBITS   | 00201044 | 001044 | 0000c | 0000     | WA   | 0    | 0    | 4    |\n\n程序声明如下:   \n```\nextern int g_static_so_bss;\nextern int g_static_so_data;\nextern int errno;\n```\n当前汇编访问的是:g_static_so_data   \n.dyn global data如下  \n```\n000000200fc0  000100000006 R_X86_64_GLOB_DAT 0000000000000000 __cxa_finalize@GLIBC_2.2.5 + 0\n000000200fc8  000300000006 R_X86_64_GLOB_DAT 0000000000000000 _Jv_RegisterClasses + 0\n000000200fd0  000400000006 R_X86_64_GLOB_DAT 0000000000000000 g_static_so_data + 0\n000000200fd8  000500000006 R_X86_64_GLOB_DAT 0000000000000000 g_static_so_bss + 0\n000000200fe0  000800000006 R_X86_64_GLOB_DAT 0000000000000000 _ITM_deregisterTMClone + 0\n000000200fe8  000900000006 R_X86_64_GLOB_DAT 0000000000000000 __libc_start_main@GLIBC_2.2.5 + 0\n000000200ff0  000a00000006 R_X86_64_GLOB_DAT 0000000000000000 __gmon_start__ + 0\n000000200ff8  000b00000006 R_X86_64_GLOB_DAT 0000000000000000 _ITM_registerTMCloneTa + 0\n```\n\n##### 共享库中对g_static_so_data的访问   \n如果代码模型为大型 则和可执行程序中的代码段一致 如果是small或者median 共享库仍然会对全局变量走GOT表  \n汇编如下:    \n```\n 894:   48 8b 05 45 07 20 00    mov    0x200745(%rip),%rax        # 200fe0 <g_static_so_bss@@Base-0x60>\n 89b:   48 8b 00                mov    (%rax),%rax\n 89e:   01 c2                   add    %eax,%edx\n```\n894: 取GOT中存储 g_static_so_bss 的项地址 并把内容(g_static_so_bss的地址)存放到%rax中    \n89b: 取 g_static_so_bss 的内容  \n89e: 加到%edx上  \n\n\n##### small code mode:  \n```\ng++-6 -O0 so.so main.cpp lib.cpp -pie -fPIE  -mcmodel=small \n```\n\n假设了全局变量的存储位置在低端内存, 因此该全局变量直接定义在主程序的data段, 在so文件中仍然通过.got找到真实地址.    \n其类型R_X86_64_COPY  \n在主程序的汇编代码只有一行\n```\n 9f0:   c7 05 4e 06 20 00 e8    movl   $0x3e8,0x20064e(%rip)        # 201048 <g_static_so_data>\n```\n.dyn global\n```\n偏移量          信息           类型           符号值        符号名称 + 加数\n000000201048  001200000005 R_X86_64_COPY     0000000000201048 g_static_so_data + 0\n000000201050  001000000005 R_X86_64_COPY     0000000000201050 g_static_so_bss + 0\n```\n\n.dyn so \n```\n000000200fd8  001300000006 R_X86_64_GLOB_DAT 0000000000201030 g_static_so_data + 0\n000000200fe0  001000000006 R_X86_64_GLOB_DAT 0000000000201040 g_static_so_bss + 0\n```\n\n.symver指令\n> g_static_so_data@@Base-0x58  的意思是: g_static_so_data的符号值-0x58 也就是g_static_so_data的偏移量  \n```\n0000000000201030 - 000000200fd8 = 0x58  \n```\n\n\n##### 备注说明  \n共享库中 无论是large还是small, 都会走so的got表, 区别在于会不会使用movabs进行64位的偏移计算  \ngot表的位置可能紧接着.text并且设置为只读  \n[RELRO](https://systemoverlord.com/2017/03/19/got-and-plt-for-pwning.html)   \n\n\n通过got表访问全局变量:  \n1. 通过RIP-R找到GOT表的位置.   相对于.text固定的偏移量 (large不假定大小)     \n2. 通过项索引偏移找到存储该变量地址的地址并解引用得到 变量地址  \n   1. (large不假定大小, medium会区分把<64k的数据链接到低内存中 多个数据段.ldata(largedata))  \n3. 解引用并使用  \n \n\n```\nmov  (%rbx,%rax,1),%rax  \n```\n这行代码可以优化为一个立即数偏移寻址  即\n```\nmov    0x200745(%rip),%rax  \n```\n\n当前代码段到GOT表的偏移\n\n但是在large模型中 \n\n通过rip寻址的指令中 偏移量不是64位的  因此需要先算一个小的偏移量 再通过支持64bit的 movabs(mov) 添加上一个64bit的偏移\n\n##### RELRO  Relocation Read Only   \n重定位只读技术  \n动态链接器在处理完GOT表后将其设为只读以提高安全性.  \n\n本文测试环境中只读. (实际上这是一个可以成为较为古老的技术了)  \n> Linux version 4.9.0-4-amd64 (debian-kernel@lists.debian.org) \n> (gcc version 6.3.0 20170516 (Debian 6.3.0-18) )  \n> #1 SMP Debian 4.9.65-3+deb9u1 (2017-12-23)   \n> .zsummer  \n\nGOT表为R  只读段.   \n.got.plt存储plt的got仍然是读写段 (惰性加载机制决定, 可以选择非惰性+ro来完成全只读化)  \n\n\n\n\n### 调用惯例Calling Conventions \n计算机中Corotine分两种 Coroutine和Subroutine 前者对应协程 后者对应函数  \n\n* call a routine (trasfer control to procedure)  跳转到目标routine  \n* pass arguments  传递参数  \n  * fixed length\n  * variable length\n  * recursively  \n* return to the caller  返回调用者地址  \n  * putting results in a place where caller an find them  \n* manage register  管理寄存器 \n\n\n##### 参数压栈顺序  \n标准的linux ABI调用约定中\n[System V Application Binary Interface—AMD64 Architecture Processor Supplement]()   \n\n\n###### Caller Save和Callee Save   \n当产生函数调用时 子函数内通常也会使用到通用寄存器 那么这些寄存器中之前保存的调用者(父函数)的值就会被覆盖   \n为了避免数据覆盖而导致从子函数返回时寄存器中的数据不可恢复 CPU 体系结构中就规定了通用寄存器的保存方式   \n\n* Casller Save '调用者保存' 在发起一个调用前需要保存(子例程直接覆盖使用) \n  * 在进入子函数调用前, 调用者需要保存这些寄存器的值.   \n    * 一般做法是进入子函数调用前把这些寄存器压入栈中    \n* Callee Save '被调用者保存' (子例程使用前需要先保存)   \n  * 在进入子函数调用后, 在使用这些寄存器前, 被调用者会保存这些寄存器的内容,并在使用后恢复  \n  * 这种比较特殊也比较麻烦, 因为一旦接受这个设定, 那么所有subroutine都要进行合适的push并保证pop恢复.     \n  * \n\n* cross\n\n### 工具   \n\n* objdump -S 查看汇编指令  \n* gdb  \n  * gdb 通过```  layout regs  ```打开寄存器显示, 通过```set disassemble-next-line on```打开汇编  \n  * gdb 通过peda插件字节显示汇编和寄存器  和上面的原生方式选择一个即可, peda默认显示是intex语法    \n  * disas反汇编命令,直接disas是反汇编当前函数\n    * disas /r (显示汇编指令对应十六进制值)   \n    * disas /m (如果有源码,显示对应行源码)   \n  * intel语法\n    * set disassembly-flavor intel\n    * set disassembly-flavor att\n  * gdb关闭ASLR：\n    * set disable-randomization on\n  * 开启ASLR：\n    * set disable-randomization off\n  * 查看ASLR状态：\n    * show disable-randomization\n  * 查看二进制  \n    * ```x /1ag addr```\n<!-- more -->\n#### PEDA插件  \npeda默认设置的是intel的语法风格\n```\ngit clone https://github.com/longld/peda.git ~/peda\necho \"source ~/peda/peda.py\" >> ~/.gdbinit\necho \"DONE! debug your program with gdb and enjoy\"\n```\n* aslr -- Show/set ASLR setting of GDB\n* checksec -- Check for various security options of binary\n* dumpargs -- Display arguments passed to a function when stopped at a call instruction\n* dumprop -- Dump all ROP gadgets in specific memory range\n* elfheader -- Get headers information from debugged ELF file\n* elfsymbol -- Get non-debugging symbol information from an ELF file\n* lookup -- Search for all addresses/references to addresses which belong to a memory range\n* patch -- Patch memory start at an address with string/hexstring/int\n* pattern -- Generate, search, or write a cyclic pattern to memory\n* procinfo -- Display various info from /proc/pid/\n* pshow -- Show various PEDA options and other settings\n* pset -- Set various PEDA options and other settings\n* readelf -- Get headers information from an ELF file\n* ropgadget -- Get common ROP gadgets of binary or library\n* ropsearch -- Search for ROP gadgets in memory\n* searchmem|find -- Search for a pattern in memory; support regex search\n* shellcode -- Generate or download common shellcodes.\n* skeleton -- Generate python exploit code template\n* vmmap -- Get virtual mapping address ranges of section(s) in debugged process\n* xormem -- XOR a memory region with a key\n","source":"_posts/2019-12-11-asm-syntax.md","raw":"---\ntitle: 汇编语法/寻址/寄存器/代码模型(GNU assembler)    \ndate: 2019-12-11\ncategories: develop \nauthor: yawei.zhang \n---\n\n### 目录  \n\n<!-- TOC -->\n\n- [目录](#目录)\n- [基础语法格式](#基础语法格式)\n- [常见寄存器以及作用](#常见寄存器以及作用)\n    - [通用寄存器](#通用寄存器)\n        - [寄存器使用惯例 原文](#寄存器使用惯例-原文)\n        - [中文对照](#中文对照)\n    - [专用寄存器](#专用寄存器)\n        - [标志寄存器 RFLAGS](#标志寄存器-rflags)\n        - [程序计数器(PC)(Relative Instruction-Pointer)(IP)](#程序计数器pcrelative-instruction-pointerip)\n        - [指令寄存器](#指令寄存器)\n- [汇编语法](#汇编语法)\n    - [汇编指令](#汇编指令)\n    - [操作数格式与寻址](#操作数格式与寻址)\n        - [内存操作数](#内存操作数)\n        - [寻址模式](#寻址模式)\n        - [large code mode:](#large-code-mode)\n        - [共享库中对g_static_so_data的访问](#共享库中对g_static_so_data的访问)\n        - [small code mode:](#small-code-mode)\n        - [备注说明](#备注说明)\n        - [RELRO  Relocation Read Only](#relro--relocation-read-only)\n- [调用惯例Calling Conventions](#调用惯例calling-conventions)\n        - [参数压栈顺序](#参数压栈顺序)\n            - [Caller Save和Callee Save](#caller-save和callee-save)\n- [工具](#工具)\n    - [PEDA插件](#peda插件)\n\n<!-- /TOC -->\n\n### 基础语法格式\n\nGAS汇编的格式阅读起来很自然 如下   \n  \n```\n[操作符]    [源]      [目标]   \nmovl        $0,      -4(%rbp)  \n```\n\n\n但是INTEL格式更贴近C语言的书写风格   \n   \n```\n[操作符]   [目标]    [源]  \nmov        esi,     DWORD PTR [rbp-0x4]\n```\n  \n很像C语言的代码   \n   \n``` assembly\nint esi = *(rbp-0x4);\n```\n\n> 本文基于X86-64架构体系整理了GAS风格的汇编语法, 如无特殊说明后续内容皆以环境为准.    \n\n\"@\"符号表示“将符号左边的变量钳制在符号右边的地址   \n\n<!-- more -->   \n\n### 常见寄存器以及作用   \n16bit寄存器一般没有前缀  例如ax   bx   ds   \n32bit寄存器前缀一般为e   例如eax  ebx  eds   \n64bit寄存器前缀一般为r   例如rax  rbx  rds\n\n#### 通用寄存器   \n\nX86-64体系下有16个通用寄存器 分别为:\n```\nrax    rbx    rcx    rdx    rdi    rsi    rbp    rsp    r8 – r15\n```\n兼容32位模式, 对应为: \n```\neax    ebx    ecx    edx    edi    esi    ebp    esp    e8d – e15d\n```\n\n在所有CPU的架构体系中, 每个寄存器通常都是有其建议的使用用途的, X86-64架构下其用途如下:  \n\n##### 寄存器使用惯例 原文  \n[X86-64 Registers](https://cons.mit.edu/sp17/x86-64-architecture-guide.html)\n\n| Register | Purpose                                | Saved across calls |\n| -------- | -------------------------------------- | ------------------ |\n| %rax     | temp register; return value            | No                 |\n| %rbx     | callee-saved                           | Yes                |\n| %rcx     | used to pass 4th argument to functions | No                 |\n| %rdx     | used to pass 3rd argument to functions | No                 |\n| %rsp     | stack pointer                          | Yes                |\n| %rbp     | callee-saved; base pointer             | Yes                |\n| %rsi     | used to pass 2nd argument to functions | No                 |\n| %rdi     | used to pass 1st argument to functions | No                 |\n| %r8      | used to pass 5th argument to functions | No                 |\n| %r9      | used to pass 6th argument to functions | No                 |\n| %r10-r11 | temporary                              | No                 |\n| %r12-r15 | callee-saved registers                 | Yes                |\n\n##### 中文对照  \n| 寄存器   | 推荐用途                                   | 跨调用过程保存 |\n| -------- | ------------------------------------------ | -------------- |\n| %rax     | 保存函数/计算的返回值                      | No             |\n| %rbx     | callee-saved 基址 (比如找GOT表会临时用下)  | Yes            |\n| %rcx     | 函数的第4个参数                            | No             |\n| %rdx     | 函数的第3个参数                            | 乘法余数       | No |\n| %rsp     | 指向当前栈顶的指针(栈顶)                   | Yes            |\n| %rbp     | callee-saved; 指向当前栈帧的起始位置(栈基) | Yes            |\n| %rsi     | 函数的第2个参数                            | 字符串源串     | No |\n| %rdi     | 函数的第1个参数                            | 字符串目标串   | No |\n| %r8      | 函数的第5个参数                            | No             |\n| %r9      | 函数的第6个参数                            | No             |\n| %r10-r11 | temporary                                  | No             |\n| %r12-r15 | callee-saved registers                     | Yes            |\n\n#### 专用寄存器  \n标志寄存器和程序计数器可能为同一个寄存器实现  \n\n##### 标志寄存器 RFLAGS  \n\nNV UP EI PL NZ NA PO NC表示标志寄存器的值  \n\n| 位编号                           | 1     | 0     |\n| -------------------------------- | ----- | ----- |\n| 溢出标志OF(Over flow flag)       | OV(1) | NV(0) |\n| 方向标志DF(Direction flag)       | DN(1) | UP(0) |\n| 中断标志IF(Interrupt flag)       | EI(1) | DI(0) |\n| 符号标志SF(Sign flag)            | NG(1) | PL(0) |\n| 零标志ZF(Zero flag)              | ZR(1) | NZ(0) |\n| 辅助标志AF(Auxiliary carry flag) | AC(1) | NA(0) |\n| 奇偶标志PF(Parity flag)          | PE(1) | PO(0) |\n| 进位标志CF(Carry flag)           | CY(1) | NC(0) |\n| TF(TrapFlag)                     |       |       |\n\n##### 程序计数器(PC)(Relative Instruction-Pointer)(IP)  \n保存下一行要执行的指令位置  \nIntel的实现叫RIP  \n> The 64-bit instruction pointer RIP points to the next instruction to be executed, and supports a 64-bit flat memory model.  \n> 64位指令指针 RIP 指向预期要执行的下一行指令(位置), 并且支持64位平坦内存模型  \n> RIP-relative addressing: this is new for x64 and allows accessing data tables and such in the code relative to the current instruction pointer, making position independent code easier to implement.  \n> PIC提供了相对于当前指令位置访问数据表这样新的支持, 从而让PIC更容易实现   \n\n例如PLC表在RIP下的应用  \n```\n0000000000000570 <foo@plt>:\n 570:    ff 25 a2 0a 20 00        jmpq   *0x200aa2(%rip)        # 201018 <_GLOBAL_OFFSET_TABLE_+0x18>\n 576:    68 00 00 00 00           pushq  $0x0\n 57b:    e9 e0 ff ff ff           jmpq   560 <_init+0x20>\n```\n\n在没有RIP的情况下需要通过函数调用来实现PLC  会消耗较多的性能     \nwindows则直接采用了'重定位基址'的方式实现非PLC的装载.  \n\n##### 指令寄存器  \n当前正在执行的指令, 简单CPU会预读 但复杂的CPU有流水线/指令级并行计算等    \n \n\n\n\n### 汇编语法   \n#### 汇编指令   \n \n| 操作码                     | 描述                                                                                       |\n| -------------------------- | ------------------------------------------------------------------------------------------ |\n| 复制值                     | _                                                                                          |\n| mov src, dest              | 将值从 寄存器,立即值或存储器地址 复制到 寄存器或存储器地址, 不可以同时为内存地址           |\n| movabs                     | 支持8字节的操作数                                                                          |\n| lea src, dest              | move会取值 lea只取地址    dest只能是寄存器                                                 |\n| 栈操作                     |                                                                                            |\n| enter $x, $0               | 设置堆栈框架 相当于 push ebp      和 mov esp, ebp 然后把当前的esp减去x字节的大小(局部变量) |\n| leave                      | 恢复堆栈框架 相当于 move ebp, esp 和 pop ebp                                               |\n| push src                   | 将src压栈,  rsp-1并把src的内容存储到新位置. src可以是立即数 寄存器 内存地址                |\n| pop dest                   | 出栈并保存到dest 可以是 寄存器 内存地址                                                    |\n| 控制流                     |                                                                                            |\n| call label                 | 无条件跳转到目标(直接跳转)并将返回地址(当前PC/IP +1)压入堆栈                               |\n| call *operand              | 无条件跳转到目标(间接跳转)并将返回地址(当前PC/IP +1)压入堆栈                               |\n| ret                        | 将返回地址弹出堆栈 然后无条件跳转到该地址                                                  |\n| jmp label                  | 无条件跳转到目标(直接跳转)                                                                 |\n| jmp *operand               | 无条件跳转到目标(间接跳转)                                                                 |\n| jg, jge, jl, jle, jne, ... | >, >=, <, <=, !=, ...                                                                      |\n| 算术与逻辑                 |                                                                                            |\n| inc dest                   | dest+=1                                                                                    |\n| dec dest                   | dest-=1                                                                                    |\n| neg dest                   | dest取负                                                                                   |\n| not dest                   | dest取反                                                                                   |\n| add src, dest              | dest加上src                                                                                |\n| sub src, dest              | dest减去src                                                                                |\n| imul src, dest             | dest 乘以src                                                                               |\n| idiv divisor               | rdx:rax除以divisor, 将商存在rax 余数存储在rdx                                              |\n| shr cl, reg                | reg右移cl位                                                                                |\n| shl cl, reg                | reg左移cl位                                                                                |\n| ror src, dest              | dest逐src 位向左或向右旋转。                                                               |\n| cmp src, dest              | 执行sub操作但只设置标志寄存器而不存储结果                                                  |\n| test src, dest             | 执行and操作只设置标志寄存器而不存储结果,其中是否为0的判断一般类似 ```test rax,rax```       |\n| and src, dest              | 执行按位的与操作并保存到dest                                                               |\n| xor src, dest              | 执行按位的异或操作并保存到dest                                                             |\n\n#### 操作数格式与寻址   \n\nM[xx]表示在存储器中xx地址的值   \nR[xx]表示寄存器xx的值   \n这种表示方法将寄存器 内存都看出一个大数组的形式    \n\n| 格式         | 操作数值             | 名称              | 样例(GAS = C语言)               |\n| ------------ | -------------------- | ----------------- | ------------------------------- |\n| %reg         |                      |                   | 寄存器名字前都加 %              |\n| $Imm         | Imm                  | 立即数寻址        | $1 = 1                          |\n| Ea           | R[Ea]                | 寄存器寻址        | %eax = eax                      |\n| Imm          | M[Imm]               | 绝对寻址          | 0x104 = *0x104                  |\n| (Ea)         | M[R[Ea]]             | 间接寻址          | (%eax)= *eax                    |\n| Imm(Ea)      | M[Imm+R[Ea]]         | (基址+偏移量)寻址 | 4(%eax) = *(4+eax)              |\n| (Ea,Eb)      | M[R[Ea]+R[Eb]]       | 变址              | (%eax,%ebx) = *(eax+ebx)        |\n| Imm(Ea,Eb)   | M[Imm+R[Ea]+R[Eb]]   | 寻址              | 9(%eax,%ebx)= *(9+eax+ebx)      |\n| (,Ea,s)      | M[R[Ea]*s]           | 伸缩化变址寻址    | (,%eax,4)= *(eax*4)             |\n| Imm(,Ea,s)   | M[Imm+R[Ea]*s]       | 伸缩化变址寻址    | 0xfc(,%eax,4)= *(0xfc+eax*4)    |\n| (Ea,Eb,s)    | M(R[Ea]+R[Eb]*s)     | 伸缩化变址寻址    | (%eax,%ebx,4) = *(eax+ebx*4)    |\n| Imm(Ea,Eb,s) | M(Imm+R[Ea]+R[Eb]*s) | 伸缩化变址寻址    | 8(%eax,%ebx,4) = *(8+eax+ebx*4) |\n\n##### 内存操作数  \n\n操作数语法:    \n```\nsegment:displacement(base register, index register, scale factor)\n```\n等效intel语法   \n```\nsegment:[base register + displacement + index register * scale factor]\n```\n> 如果segment未指定，则几乎总是假定为ds，除非base register为esp或ebp；否则为。在这种情况下，假定地址是相对于ss  \n  \n> If segment is not specified, as almost always, it is assumed to be ds, unless base register is esp or ebp; in this case, the address is assumed to be relative to ss  \n快速参考  \n\n| 指令                   | 含义                                             |\n| ---------------------- | ------------------------------------------------ |\n| movq %rax, %rbx        | rbx = rax                                        |\n| movq $123, %rax        | rax = 123                                        |\n| movq %rsi, -16（%rbp） | mem [rbp-16] = rsi                               |\n| subq $10, %rbp         | rbp = rbp -10                                    |\n| cmpl %eax %ebx         | 比较然后设置标志。如果eax == ebx, 则设置零标志。 |\n| leal (%ebx),  %eax     | movl %ebx,  %eax                                 |\n\n\n\n##### 寻址模式    \n\n> References to both code and data on x64 are done with instruction-relative (RIP-relative in x64 parlance) addressing modes. The offset from RIP in these instructions is limited to 32 bits.     \n> X64体系下的寻址是建立在相对寻址(RIP-RELATIVE)之上的, RIP的偏移大小最大为32bits  \n\n\n[x64 code mode](https://eli.thegreenplace.net/2012/01/03/understanding-the-x64-code-models)    \n\n> Default operand size in 64-bit mode is still 32-bit and 64-bit immediates are allowed only with mov instruction.  \n> movabs is just AT&T syntax for a mov with a 64-bit immediate operand.    \n> 只有mov操作可以填写8字节的立即数  movabs是AT&T语法中mov的(别名)    \n\n| 指令 | 同义名   | 跳转条件 | 描述     |\n| ---- | -------- | -------- | -------- |\n| jmp  | Label    | 1        | 直接跳转 |\n| jmp  | *Operand | 1        | 间接跳转 |\n\n\n绝对寻址/直接寻址(Absolute or direct):  \n\n```\njump    address   \n```\n\n> (有效PC地址=address)  \n> Effective PC address = address  \n\n\n相对寻址(PC-relative):  \n```\njump    offset    \n```\n\n> (有效PC地址=rip+offset = 下一个指令的地址 + offset)  \n> Effective PC address = next instruction address + offset, offset may be negative  \n\n快速分析:\n```\n00000000000007e0 <.plt>:\n 7e0:   ff 35 22 08 20 00       pushq  0x200822(%rip)        # 201008 <_GLOBAL_OFFSET_TABLE_+0x8>\n 7e6:   ff 25 24 08 20 00       jmpq   *0x200824(%rip)        # 201010 <_GLOBAL_OFFSET_TABLE_+0x10>\n 7ec:   0f 1f 40 00             nopl   0x0(%rax)\n0000000000000810 <_Z12so_func_baseii@plt>:\n 810:   ff 25 12 08 20 00       jmpq   *0x200812(%rip)        # 201028 <_Z12so_func_baseii>\n 816:   68 02 00 00 00          pushq  $0x2\n 81b:   e9 c0 ff ff ff          jmpq   7e0 <.plt>  \n ```\n\n* jmpq   7e0  跳转到 CS:7e0 这个位置  \n  > 实际上二进制的内容仍然是相对寻址(81b+5 + -40) ==  7e0  等同 jumpq * -0x40(%rip) 但省了一个字节的指令   \n\n* jmpq   *0x200812(%rip)  跳转到 816 + 0x200812 这个位置 (rip是一个指针 需要解引用获得目标地址)   \n\n\n```\n a84:   74 20                   je     aa6 <__libc_csu_init+0x56>\n ```\n * 这里跳转指令则只用了两个字节  \n\n\n\n##### large code mode:  \n\n> In the small code model all addresses (including GOT entries) are accessible via the IP-relative addressing provided by the AMD64 architecture. Hence there is no need for an explicit GOT pointer and therefore no function prologue for setting it up is necessary. In the medium and large code models a register has to be allocated to hold the address of the GOT in position-independent objects, because the AMD64 ISA does not support an immediate displacement larger than 32 bits.  \n> 在一个小型代码模型中, 所有的地址(包括GOT入口地址) 都是可以通过IP-RELATIVE访问到.  因此不需要显示声明额外的GOT指针 也不需要设置函数的开始语.  但在一个中型或者大型代码模型中, 必须分配一个寄存器去持有位置无关对象在GOT的地址  (AMD64不支持大于32位的立即跳转)  \n \n```\ng++-6 -O0 so.so main.cpp lib.cpp -pie -fPIE  -mcmodel=large \n```\n \n 举例一个通过.GOT表访问的全局变量代码如下:   \n ```\n a40:   48 8d 1d f9 ff ff ff    lea    -0x7(%rip),%rbx        # a40 <main+0xb>\n a47:   49 bb c0 05 20 00 00    movabs $0x2005c0,%r11\n a4e:   00 00 00 \n a51:   4c 01 db                add    %r11,%rbx\n a54:   89 7d dc                mov    %edi,-0x24(%rbp)\n a57:   48 89 75 d0             mov    %rsi,-0x30(%rbp)\n a5b:   c7 45 ec 00 00 00 00    movl   $0x0,-0x14(%rbp)\n a62:   48 b8 d0 ff ff ff ff    movabs $0xffffffffffffffd0,%rax\n a69:   ff ff ff \n a6c:   48 8b 04 03             mov    (%rbx,%rax,1),%rax\n a70:   c7 00 e8 03 00 00       movl   $0x3e8,(%rax)\n ```\n\na4e为8字节的操作数剩余部分\n\na40行取得当前行的地址 \na51行通过偏移量获得.got表的end 地址 =  a40 + 0x2005c0 =   201000   =.plt.got   (.got表在本测试中大小是0x40)  \na6c行把RBX + 0xffffffffffffffd0 (= -0x30) 得到GOT表中存放全局变量的地址 *(.plt.got -0x30) = got[g_static_so_data]   \na70赋值立即数0x3e8 给全局变量 g_static_so_data = *(got[g_static_so_data])  \n\n\n节点偏移和大小如下    \n\n| [号] | 名称     | 类型     | 地址     | 偏移量 | 大小  | 全体大小 | 旗标 | 链接 | 信息 | 对齐 |\n| ---- | -------- | -------- | -------- | ------ | ----- | -------- | ---- | ---- | ---- | ---- |\n| [23] | .got     | PROGBITS | 00200fc0 | 000fc0 | 00040 | 0008     | WA   | 0    | 0    | 8    |\n| [24] | .got.plt | PROGBITS | 00201000 | 001000 | 00030 | 0008     | WA   | 0    | 0    | 8    |\n| [25] | .data    | PROGBITS | 00201030 | 001030 | 00014 | 0000     | WA   | 0    | 0    | 8    |\n| [26] | .bss     | NOBITS   | 00201044 | 001044 | 0000c | 0000     | WA   | 0    | 0    | 4    |\n\n程序声明如下:   \n```\nextern int g_static_so_bss;\nextern int g_static_so_data;\nextern int errno;\n```\n当前汇编访问的是:g_static_so_data   \n.dyn global data如下  \n```\n000000200fc0  000100000006 R_X86_64_GLOB_DAT 0000000000000000 __cxa_finalize@GLIBC_2.2.5 + 0\n000000200fc8  000300000006 R_X86_64_GLOB_DAT 0000000000000000 _Jv_RegisterClasses + 0\n000000200fd0  000400000006 R_X86_64_GLOB_DAT 0000000000000000 g_static_so_data + 0\n000000200fd8  000500000006 R_X86_64_GLOB_DAT 0000000000000000 g_static_so_bss + 0\n000000200fe0  000800000006 R_X86_64_GLOB_DAT 0000000000000000 _ITM_deregisterTMClone + 0\n000000200fe8  000900000006 R_X86_64_GLOB_DAT 0000000000000000 __libc_start_main@GLIBC_2.2.5 + 0\n000000200ff0  000a00000006 R_X86_64_GLOB_DAT 0000000000000000 __gmon_start__ + 0\n000000200ff8  000b00000006 R_X86_64_GLOB_DAT 0000000000000000 _ITM_registerTMCloneTa + 0\n```\n\n##### 共享库中对g_static_so_data的访问   \n如果代码模型为大型 则和可执行程序中的代码段一致 如果是small或者median 共享库仍然会对全局变量走GOT表  \n汇编如下:    \n```\n 894:   48 8b 05 45 07 20 00    mov    0x200745(%rip),%rax        # 200fe0 <g_static_so_bss@@Base-0x60>\n 89b:   48 8b 00                mov    (%rax),%rax\n 89e:   01 c2                   add    %eax,%edx\n```\n894: 取GOT中存储 g_static_so_bss 的项地址 并把内容(g_static_so_bss的地址)存放到%rax中    \n89b: 取 g_static_so_bss 的内容  \n89e: 加到%edx上  \n\n\n##### small code mode:  \n```\ng++-6 -O0 so.so main.cpp lib.cpp -pie -fPIE  -mcmodel=small \n```\n\n假设了全局变量的存储位置在低端内存, 因此该全局变量直接定义在主程序的data段, 在so文件中仍然通过.got找到真实地址.    \n其类型R_X86_64_COPY  \n在主程序的汇编代码只有一行\n```\n 9f0:   c7 05 4e 06 20 00 e8    movl   $0x3e8,0x20064e(%rip)        # 201048 <g_static_so_data>\n```\n.dyn global\n```\n偏移量          信息           类型           符号值        符号名称 + 加数\n000000201048  001200000005 R_X86_64_COPY     0000000000201048 g_static_so_data + 0\n000000201050  001000000005 R_X86_64_COPY     0000000000201050 g_static_so_bss + 0\n```\n\n.dyn so \n```\n000000200fd8  001300000006 R_X86_64_GLOB_DAT 0000000000201030 g_static_so_data + 0\n000000200fe0  001000000006 R_X86_64_GLOB_DAT 0000000000201040 g_static_so_bss + 0\n```\n\n.symver指令\n> g_static_so_data@@Base-0x58  的意思是: g_static_so_data的符号值-0x58 也就是g_static_so_data的偏移量  \n```\n0000000000201030 - 000000200fd8 = 0x58  \n```\n\n\n##### 备注说明  \n共享库中 无论是large还是small, 都会走so的got表, 区别在于会不会使用movabs进行64位的偏移计算  \ngot表的位置可能紧接着.text并且设置为只读  \n[RELRO](https://systemoverlord.com/2017/03/19/got-and-plt-for-pwning.html)   \n\n\n通过got表访问全局变量:  \n1. 通过RIP-R找到GOT表的位置.   相对于.text固定的偏移量 (large不假定大小)     \n2. 通过项索引偏移找到存储该变量地址的地址并解引用得到 变量地址  \n   1. (large不假定大小, medium会区分把<64k的数据链接到低内存中 多个数据段.ldata(largedata))  \n3. 解引用并使用  \n \n\n```\nmov  (%rbx,%rax,1),%rax  \n```\n这行代码可以优化为一个立即数偏移寻址  即\n```\nmov    0x200745(%rip),%rax  \n```\n\n当前代码段到GOT表的偏移\n\n但是在large模型中 \n\n通过rip寻址的指令中 偏移量不是64位的  因此需要先算一个小的偏移量 再通过支持64bit的 movabs(mov) 添加上一个64bit的偏移\n\n##### RELRO  Relocation Read Only   \n重定位只读技术  \n动态链接器在处理完GOT表后将其设为只读以提高安全性.  \n\n本文测试环境中只读. (实际上这是一个可以成为较为古老的技术了)  \n> Linux version 4.9.0-4-amd64 (debian-kernel@lists.debian.org) \n> (gcc version 6.3.0 20170516 (Debian 6.3.0-18) )  \n> #1 SMP Debian 4.9.65-3+deb9u1 (2017-12-23)   \n> .zsummer  \n\nGOT表为R  只读段.   \n.got.plt存储plt的got仍然是读写段 (惰性加载机制决定, 可以选择非惰性+ro来完成全只读化)  \n\n\n\n\n### 调用惯例Calling Conventions \n计算机中Corotine分两种 Coroutine和Subroutine 前者对应协程 后者对应函数  \n\n* call a routine (trasfer control to procedure)  跳转到目标routine  \n* pass arguments  传递参数  \n  * fixed length\n  * variable length\n  * recursively  \n* return to the caller  返回调用者地址  \n  * putting results in a place where caller an find them  \n* manage register  管理寄存器 \n\n\n##### 参数压栈顺序  \n标准的linux ABI调用约定中\n[System V Application Binary Interface—AMD64 Architecture Processor Supplement]()   \n\n\n###### Caller Save和Callee Save   \n当产生函数调用时 子函数内通常也会使用到通用寄存器 那么这些寄存器中之前保存的调用者(父函数)的值就会被覆盖   \n为了避免数据覆盖而导致从子函数返回时寄存器中的数据不可恢复 CPU 体系结构中就规定了通用寄存器的保存方式   \n\n* Casller Save '调用者保存' 在发起一个调用前需要保存(子例程直接覆盖使用) \n  * 在进入子函数调用前, 调用者需要保存这些寄存器的值.   \n    * 一般做法是进入子函数调用前把这些寄存器压入栈中    \n* Callee Save '被调用者保存' (子例程使用前需要先保存)   \n  * 在进入子函数调用后, 在使用这些寄存器前, 被调用者会保存这些寄存器的内容,并在使用后恢复  \n  * 这种比较特殊也比较麻烦, 因为一旦接受这个设定, 那么所有subroutine都要进行合适的push并保证pop恢复.     \n  * \n\n* cross\n\n### 工具   \n\n* objdump -S 查看汇编指令  \n* gdb  \n  * gdb 通过```  layout regs  ```打开寄存器显示, 通过```set disassemble-next-line on```打开汇编  \n  * gdb 通过peda插件字节显示汇编和寄存器  和上面的原生方式选择一个即可, peda默认显示是intex语法    \n  * disas反汇编命令,直接disas是反汇编当前函数\n    * disas /r (显示汇编指令对应十六进制值)   \n    * disas /m (如果有源码,显示对应行源码)   \n  * intel语法\n    * set disassembly-flavor intel\n    * set disassembly-flavor att\n  * gdb关闭ASLR：\n    * set disable-randomization on\n  * 开启ASLR：\n    * set disable-randomization off\n  * 查看ASLR状态：\n    * show disable-randomization\n  * 查看二进制  \n    * ```x /1ag addr```\n<!-- more -->\n#### PEDA插件  \npeda默认设置的是intel的语法风格\n```\ngit clone https://github.com/longld/peda.git ~/peda\necho \"source ~/peda/peda.py\" >> ~/.gdbinit\necho \"DONE! debug your program with gdb and enjoy\"\n```\n* aslr -- Show/set ASLR setting of GDB\n* checksec -- Check for various security options of binary\n* dumpargs -- Display arguments passed to a function when stopped at a call instruction\n* dumprop -- Dump all ROP gadgets in specific memory range\n* elfheader -- Get headers information from debugged ELF file\n* elfsymbol -- Get non-debugging symbol information from an ELF file\n* lookup -- Search for all addresses/references to addresses which belong to a memory range\n* patch -- Patch memory start at an address with string/hexstring/int\n* pattern -- Generate, search, or write a cyclic pattern to memory\n* procinfo -- Display various info from /proc/pid/\n* pshow -- Show various PEDA options and other settings\n* pset -- Set various PEDA options and other settings\n* readelf -- Get headers information from an ELF file\n* ropgadget -- Get common ROP gadgets of binary or library\n* ropsearch -- Search for ROP gadgets in memory\n* searchmem|find -- Search for a pattern in memory; support regex search\n* shellcode -- Generate or download common shellcodes.\n* skeleton -- Generate python exploit code template\n* vmmap -- Get virtual mapping address ranges of section(s) in debugged process\n* xormem -- XOR a memory region with a key\n","slug":"2019-12-11-asm-syntax","published":1,"updated":"2019-12-13T17:13:08.584Z","_id":"ck44ekz4m001cr45hh0wkhu1z","comments":1,"layout":"post","photos":[],"link":"","content":"<h3><span id=\"目录\">目录</span></h3><!-- TOC -->\n\n<ul>\n<li><a href=\"#目录\">目录</a></li>\n<li><a href=\"#基础语法格式\">基础语法格式</a></li>\n<li><a href=\"#常见寄存器以及作用\">常见寄存器以及作用</a><ul>\n<li><a href=\"#通用寄存器\">通用寄存器</a><ul>\n<li><a href=\"#寄存器使用惯例-原文\">寄存器使用惯例 原文</a></li>\n<li><a href=\"#中文对照\">中文对照</a></li>\n</ul>\n</li>\n<li><a href=\"#专用寄存器\">专用寄存器</a><ul>\n<li><a href=\"#标志寄存器-rflags\">标志寄存器 RFLAGS</a></li>\n<li><a href=\"#程序计数器pcrelative-instruction-pointerip\">程序计数器(PC)(Relative Instruction-Pointer)(IP)</a></li>\n<li><a href=\"#指令寄存器\">指令寄存器</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a href=\"#汇编语法\">汇编语法</a><ul>\n<li><a href=\"#汇编指令\">汇编指令</a></li>\n<li><a href=\"#操作数格式与寻址\">操作数格式与寻址</a><ul>\n<li><a href=\"#内存操作数\">内存操作数</a></li>\n<li><a href=\"#寻址模式\">寻址模式</a></li>\n<li><a href=\"#large-code-mode\">large code mode:</a></li>\n<li><a href=\"#共享库中对g_static_so_data的访问\">共享库中对g_static_so_data的访问</a></li>\n<li><a href=\"#small-code-mode\">small code mode:</a></li>\n<li><a href=\"#备注说明\">备注说明</a></li>\n<li><a href=\"#relro--relocation-read-only\">RELRO  Relocation Read Only</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a href=\"#调用惯例calling-conventions\">调用惯例Calling Conventions</a><pre><code>- [参数压栈顺序](#参数压栈顺序)\n    - [Caller Save和Callee Save](#caller-save和callee-save)</code></pre></li>\n<li><a href=\"#工具\">工具</a><ul>\n<li><a href=\"#peda插件\">PEDA插件</a></li>\n</ul>\n</li>\n</ul>\n<!-- /TOC -->\n\n<h3><span id=\"基础语法格式\">基础语法格式</span></h3><p>GAS汇编的格式阅读起来很自然 如下   </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[操作符]    [源]      [目标]   </span><br><span class=\"line\">movl        $0,      -4(%rbp)</span><br></pre></td></tr></table></figure>\n\n\n<p>但是INTEL格式更贴近C语言的书写风格   </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[操作符]   [目标]    [源]  </span><br><span class=\"line\">mov        esi,     DWORD PTR [rbp-0x4]</span><br></pre></td></tr></table></figure>\n\n<p>很像C语言的代码   </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">int esi &#x3D; *(rbp-0x4);</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>本文基于X86-64架构体系整理了GAS风格的汇编语法, 如无特殊说明后续内容皆以环境为准.    </p>\n</blockquote>\n<p>“@”符号表示“将符号左边的变量钳制在符号右边的地址   </p>\n<a id=\"more\"></a>   \n\n<h3><span id=\"常见寄存器以及作用\">常见寄存器以及作用</span></h3><p>16bit寄存器一般没有前缀  例如ax   bx   ds<br>32bit寄存器前缀一般为e   例如eax  ebx  eds<br>64bit寄存器前缀一般为r   例如rax  rbx  rds</p>\n<h4><span id=\"通用寄存器\">通用寄存器</span></h4><p>X86-64体系下有16个通用寄存器 分别为:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rax    rbx    rcx    rdx    rdi    rsi    rbp    rsp    r8 – r15</span><br></pre></td></tr></table></figure>\n<p>兼容32位模式, 对应为: </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">eax    ebx    ecx    edx    edi    esi    ebp    esp    e8d – e15d</span><br></pre></td></tr></table></figure>\n\n<p>在所有CPU的架构体系中, 每个寄存器通常都是有其建议的使用用途的, X86-64架构下其用途如下:  </p>\n<h5><span id=\"寄存器使用惯例-原文\">寄存器使用惯例 原文</span></h5><p><a href=\"https://cons.mit.edu/sp17/x86-64-architecture-guide.html\" target=\"_blank\" rel=\"noopener\">X86-64 Registers</a></p>\n<table>\n<thead>\n<tr>\n<th>Register</th>\n<th>Purpose</th>\n<th>Saved across calls</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>%rax</td>\n<td>temp register; return value</td>\n<td>No</td>\n</tr>\n<tr>\n<td>%rbx</td>\n<td>callee-saved</td>\n<td>Yes</td>\n</tr>\n<tr>\n<td>%rcx</td>\n<td>used to pass 4th argument to functions</td>\n<td>No</td>\n</tr>\n<tr>\n<td>%rdx</td>\n<td>used to pass 3rd argument to functions</td>\n<td>No</td>\n</tr>\n<tr>\n<td>%rsp</td>\n<td>stack pointer</td>\n<td>Yes</td>\n</tr>\n<tr>\n<td>%rbp</td>\n<td>callee-saved; base pointer</td>\n<td>Yes</td>\n</tr>\n<tr>\n<td>%rsi</td>\n<td>used to pass 2nd argument to functions</td>\n<td>No</td>\n</tr>\n<tr>\n<td>%rdi</td>\n<td>used to pass 1st argument to functions</td>\n<td>No</td>\n</tr>\n<tr>\n<td>%r8</td>\n<td>used to pass 5th argument to functions</td>\n<td>No</td>\n</tr>\n<tr>\n<td>%r9</td>\n<td>used to pass 6th argument to functions</td>\n<td>No</td>\n</tr>\n<tr>\n<td>%r10-r11</td>\n<td>temporary</td>\n<td>No</td>\n</tr>\n<tr>\n<td>%r12-r15</td>\n<td>callee-saved registers</td>\n<td>Yes</td>\n</tr>\n</tbody></table>\n<h5><span id=\"中文对照\">中文对照</span></h5><table>\n<thead>\n<tr>\n<th>寄存器</th>\n<th>推荐用途</th>\n<th>跨调用过程保存</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>%rax</td>\n<td>保存函数/计算的返回值</td>\n<td>No</td>\n</tr>\n<tr>\n<td>%rbx</td>\n<td>callee-saved 基址 (比如找GOT表会临时用下)</td>\n<td>Yes</td>\n</tr>\n<tr>\n<td>%rcx</td>\n<td>函数的第4个参数</td>\n<td>No</td>\n</tr>\n<tr>\n<td>%rdx</td>\n<td>函数的第3个参数</td>\n<td>乘法余数</td>\n</tr>\n<tr>\n<td>%rsp</td>\n<td>指向当前栈顶的指针(栈顶)</td>\n<td>Yes</td>\n</tr>\n<tr>\n<td>%rbp</td>\n<td>callee-saved; 指向当前栈帧的起始位置(栈基)</td>\n<td>Yes</td>\n</tr>\n<tr>\n<td>%rsi</td>\n<td>函数的第2个参数</td>\n<td>字符串源串</td>\n</tr>\n<tr>\n<td>%rdi</td>\n<td>函数的第1个参数</td>\n<td>字符串目标串</td>\n</tr>\n<tr>\n<td>%r8</td>\n<td>函数的第5个参数</td>\n<td>No</td>\n</tr>\n<tr>\n<td>%r9</td>\n<td>函数的第6个参数</td>\n<td>No</td>\n</tr>\n<tr>\n<td>%r10-r11</td>\n<td>temporary</td>\n<td>No</td>\n</tr>\n<tr>\n<td>%r12-r15</td>\n<td>callee-saved registers</td>\n<td>Yes</td>\n</tr>\n</tbody></table>\n<h4><span id=\"专用寄存器\">专用寄存器</span></h4><p>标志寄存器和程序计数器可能为同一个寄存器实现  </p>\n<h5><span id=\"标志寄存器-rflags\">标志寄存器 RFLAGS</span></h5><p>NV UP EI PL NZ NA PO NC表示标志寄存器的值  </p>\n<table>\n<thead>\n<tr>\n<th>位编号</th>\n<th>1</th>\n<th>0</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>溢出标志OF(Over flow flag)</td>\n<td>OV(1)</td>\n<td>NV(0)</td>\n</tr>\n<tr>\n<td>方向标志DF(Direction flag)</td>\n<td>DN(1)</td>\n<td>UP(0)</td>\n</tr>\n<tr>\n<td>中断标志IF(Interrupt flag)</td>\n<td>EI(1)</td>\n<td>DI(0)</td>\n</tr>\n<tr>\n<td>符号标志SF(Sign flag)</td>\n<td>NG(1)</td>\n<td>PL(0)</td>\n</tr>\n<tr>\n<td>零标志ZF(Zero flag)</td>\n<td>ZR(1)</td>\n<td>NZ(0)</td>\n</tr>\n<tr>\n<td>辅助标志AF(Auxiliary carry flag)</td>\n<td>AC(1)</td>\n<td>NA(0)</td>\n</tr>\n<tr>\n<td>奇偶标志PF(Parity flag)</td>\n<td>PE(1)</td>\n<td>PO(0)</td>\n</tr>\n<tr>\n<td>进位标志CF(Carry flag)</td>\n<td>CY(1)</td>\n<td>NC(0)</td>\n</tr>\n<tr>\n<td>TF(TrapFlag)</td>\n<td></td>\n<td></td>\n</tr>\n</tbody></table>\n<h5><span id=\"程序计数器pcrelative-instruction-pointerip\">程序计数器(PC)(Relative Instruction-Pointer)(IP)</span></h5><p>保存下一行要执行的指令位置<br>Intel的实现叫RIP  </p>\n<blockquote>\n<p>The 64-bit instruction pointer RIP points to the next instruction to be executed, and supports a 64-bit flat memory model.<br>64位指令指针 RIP 指向预期要执行的下一行指令(位置), 并且支持64位平坦内存模型<br>RIP-relative addressing: this is new for x64 and allows accessing data tables and such in the code relative to the current instruction pointer, making position independent code easier to implement.<br>PIC提供了相对于当前指令位置访问数据表这样新的支持, 从而让PIC更容易实现   </p>\n</blockquote>\n<p>例如PLC表在RIP下的应用  </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">0000000000000570 &lt;foo@plt&gt;:</span><br><span class=\"line\"> 570:    ff 25 a2 0a 20 00        jmpq   *0x200aa2(%rip)        # 201018 &lt;_GLOBAL_OFFSET_TABLE_+0x18&gt;</span><br><span class=\"line\"> 576:    68 00 00 00 00           pushq  $0x0</span><br><span class=\"line\"> 57b:    e9 e0 ff ff ff           jmpq   560 &lt;_init+0x20&gt;</span><br></pre></td></tr></table></figure>\n\n<p>在没有RIP的情况下需要通过函数调用来实现PLC  会消耗较多的性能<br>windows则直接采用了’重定位基址’的方式实现非PLC的装载.  </p>\n<h5><span id=\"指令寄存器\">指令寄存器</span></h5><p>当前正在执行的指令, 简单CPU会预读 但复杂的CPU有流水线/指令级并行计算等    </p>\n<h3><span id=\"汇编语法\">汇编语法</span></h3><h4><span id=\"汇编指令\">汇编指令</span></h4><table>\n<thead>\n<tr>\n<th>操作码</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>复制值</td>\n<td>_</td>\n</tr>\n<tr>\n<td>mov src, dest</td>\n<td>将值从 寄存器,立即值或存储器地址 复制到 寄存器或存储器地址, 不可以同时为内存地址</td>\n</tr>\n<tr>\n<td>movabs</td>\n<td>支持8字节的操作数</td>\n</tr>\n<tr>\n<td>lea src, dest</td>\n<td>move会取值 lea只取地址    dest只能是寄存器</td>\n</tr>\n<tr>\n<td>栈操作</td>\n<td></td>\n</tr>\n<tr>\n<td>enter $x, $0</td>\n<td>设置堆栈框架 相当于 push ebp      和 mov esp, ebp 然后把当前的esp减去x字节的大小(局部变量)</td>\n</tr>\n<tr>\n<td>leave</td>\n<td>恢复堆栈框架 相当于 move ebp, esp 和 pop ebp</td>\n</tr>\n<tr>\n<td>push src</td>\n<td>将src压栈,  rsp-1并把src的内容存储到新位置. src可以是立即数 寄存器 内存地址</td>\n</tr>\n<tr>\n<td>pop dest</td>\n<td>出栈并保存到dest 可以是 寄存器 内存地址</td>\n</tr>\n<tr>\n<td>控制流</td>\n<td></td>\n</tr>\n<tr>\n<td>call label</td>\n<td>无条件跳转到目标(直接跳转)并将返回地址(当前PC/IP +1)压入堆栈</td>\n</tr>\n<tr>\n<td>call *operand</td>\n<td>无条件跳转到目标(间接跳转)并将返回地址(当前PC/IP +1)压入堆栈</td>\n</tr>\n<tr>\n<td>ret</td>\n<td>将返回地址弹出堆栈 然后无条件跳转到该地址</td>\n</tr>\n<tr>\n<td>jmp label</td>\n<td>无条件跳转到目标(直接跳转)</td>\n</tr>\n<tr>\n<td>jmp *operand</td>\n<td>无条件跳转到目标(间接跳转)</td>\n</tr>\n<tr>\n<td>jg, jge, jl, jle, jne, …</td>\n<td>&gt;, &gt;=, &lt;, &lt;=, !=, …</td>\n</tr>\n<tr>\n<td>算术与逻辑</td>\n<td></td>\n</tr>\n<tr>\n<td>inc dest</td>\n<td>dest+=1</td>\n</tr>\n<tr>\n<td>dec dest</td>\n<td>dest-=1</td>\n</tr>\n<tr>\n<td>neg dest</td>\n<td>dest取负</td>\n</tr>\n<tr>\n<td>not dest</td>\n<td>dest取反</td>\n</tr>\n<tr>\n<td>add src, dest</td>\n<td>dest加上src</td>\n</tr>\n<tr>\n<td>sub src, dest</td>\n<td>dest减去src</td>\n</tr>\n<tr>\n<td>imul src, dest</td>\n<td>dest 乘以src</td>\n</tr>\n<tr>\n<td>idiv divisor</td>\n<td>rdx:rax除以divisor, 将商存在rax 余数存储在rdx</td>\n</tr>\n<tr>\n<td>shr cl, reg</td>\n<td>reg右移cl位</td>\n</tr>\n<tr>\n<td>shl cl, reg</td>\n<td>reg左移cl位</td>\n</tr>\n<tr>\n<td>ror src, dest</td>\n<td>dest逐src 位向左或向右旋转。</td>\n</tr>\n<tr>\n<td>cmp src, dest</td>\n<td>执行sub操作但只设置标志寄存器而不存储结果</td>\n</tr>\n<tr>\n<td>test src, dest</td>\n<td>执行and操作只设置标志寄存器而不存储结果,其中是否为0的判断一般类似 <code>test rax,rax</code></td>\n</tr>\n<tr>\n<td>and src, dest</td>\n<td>执行按位的与操作并保存到dest</td>\n</tr>\n<tr>\n<td>xor src, dest</td>\n<td>执行按位的异或操作并保存到dest</td>\n</tr>\n</tbody></table>\n<h4><span id=\"操作数格式与寻址\">操作数格式与寻址</span></h4><p>M[xx]表示在存储器中xx地址的值<br>R[xx]表示寄存器xx的值<br>这种表示方法将寄存器 内存都看出一个大数组的形式    </p>\n<table>\n<thead>\n<tr>\n<th>格式</th>\n<th>操作数值</th>\n<th>名称</th>\n<th>样例(GAS = C语言)</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>%reg</td>\n<td></td>\n<td></td>\n<td>寄存器名字前都加 %</td>\n</tr>\n<tr>\n<td>$Imm</td>\n<td>Imm</td>\n<td>立即数寻址</td>\n<td>$1 = 1</td>\n</tr>\n<tr>\n<td>Ea</td>\n<td>R[Ea]</td>\n<td>寄存器寻址</td>\n<td>%eax = eax</td>\n</tr>\n<tr>\n<td>Imm</td>\n<td>M[Imm]</td>\n<td>绝对寻址</td>\n<td>0x104 = *0x104</td>\n</tr>\n<tr>\n<td>(Ea)</td>\n<td>M[R[Ea]]</td>\n<td>间接寻址</td>\n<td>(%eax)= *eax</td>\n</tr>\n<tr>\n<td>Imm(Ea)</td>\n<td>M[Imm+R[Ea]]</td>\n<td>(基址+偏移量)寻址</td>\n<td>4(%eax) = *(4+eax)</td>\n</tr>\n<tr>\n<td>(Ea,Eb)</td>\n<td>M[R[Ea]+R[Eb]]</td>\n<td>变址</td>\n<td>(%eax,%ebx) = *(eax+ebx)</td>\n</tr>\n<tr>\n<td>Imm(Ea,Eb)</td>\n<td>M[Imm+R[Ea]+R[Eb]]</td>\n<td>寻址</td>\n<td>9(%eax,%ebx)= *(9+eax+ebx)</td>\n</tr>\n<tr>\n<td>(,Ea,s)</td>\n<td>M[R[Ea]*s]</td>\n<td>伸缩化变址寻址</td>\n<td>(,%eax,4)= <em>(eax</em>4)</td>\n</tr>\n<tr>\n<td>Imm(,Ea,s)</td>\n<td>M[Imm+R[Ea]*s]</td>\n<td>伸缩化变址寻址</td>\n<td>0xfc(,%eax,4)= <em>(0xfc+eax</em>4)</td>\n</tr>\n<tr>\n<td>(Ea,Eb,s)</td>\n<td>M(R[Ea]+R[Eb]*s)</td>\n<td>伸缩化变址寻址</td>\n<td>(%eax,%ebx,4) = <em>(eax+ebx</em>4)</td>\n</tr>\n<tr>\n<td>Imm(Ea,Eb,s)</td>\n<td>M(Imm+R[Ea]+R[Eb]*s)</td>\n<td>伸缩化变址寻址</td>\n<td>8(%eax,%ebx,4) = <em>(8+eax+ebx</em>4)</td>\n</tr>\n</tbody></table>\n<h5><span id=\"内存操作数\">内存操作数</span></h5><p>操作数语法:    </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">segment:displacement(base register, index register, scale factor)</span><br></pre></td></tr></table></figure>\n<p>等效intel语法   </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">segment:[base register + displacement + index register * scale factor]</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>如果segment未指定，则几乎总是假定为ds，除非base register为esp或ebp；否则为。在这种情况下，假定地址是相对于ss  </p>\n</blockquote>\n<blockquote>\n<p>If segment is not specified, as almost always, it is assumed to be ds, unless base register is esp or ebp; in this case, the address is assumed to be relative to ss<br>快速参考  </p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th>指令</th>\n<th>含义</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>movq %rax, %rbx</td>\n<td>rbx = rax</td>\n</tr>\n<tr>\n<td>movq $123, %rax</td>\n<td>rax = 123</td>\n</tr>\n<tr>\n<td>movq %rsi, -16（%rbp）</td>\n<td>mem [rbp-16] = rsi</td>\n</tr>\n<tr>\n<td>subq $10, %rbp</td>\n<td>rbp = rbp -10</td>\n</tr>\n<tr>\n<td>cmpl %eax %ebx</td>\n<td>比较然后设置标志。如果eax == ebx, 则设置零标志。</td>\n</tr>\n<tr>\n<td>leal (%ebx),  %eax</td>\n<td>movl %ebx,  %eax</td>\n</tr>\n</tbody></table>\n<h5><span id=\"寻址模式\">寻址模式</span></h5><blockquote>\n<p>References to both code and data on x64 are done with instruction-relative (RIP-relative in x64 parlance) addressing modes. The offset from RIP in these instructions is limited to 32 bits.<br>X64体系下的寻址是建立在相对寻址(RIP-RELATIVE)之上的, RIP的偏移大小最大为32bits  </p>\n</blockquote>\n<p><a href=\"https://eli.thegreenplace.net/2012/01/03/understanding-the-x64-code-models\" target=\"_blank\" rel=\"noopener\">x64 code mode</a>    </p>\n<blockquote>\n<p>Default operand size in 64-bit mode is still 32-bit and 64-bit immediates are allowed only with mov instruction.<br>movabs is just AT&amp;T syntax for a mov with a 64-bit immediate operand.<br>只有mov操作可以填写8字节的立即数  movabs是AT&amp;T语法中mov的(别名)    </p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th>指令</th>\n<th>同义名</th>\n<th>跳转条件</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>jmp</td>\n<td>Label</td>\n<td>1</td>\n<td>直接跳转</td>\n</tr>\n<tr>\n<td>jmp</td>\n<td>*Operand</td>\n<td>1</td>\n<td>间接跳转</td>\n</tr>\n</tbody></table>\n<p>绝对寻址/直接寻址(Absolute or direct):  </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">jump    address</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>(有效PC地址=address)<br>Effective PC address = address  </p>\n</blockquote>\n<p>相对寻址(PC-relative):  </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">jump    offset</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>(有效PC地址=rip+offset = 下一个指令的地址 + offset)<br>Effective PC address = next instruction address + offset, offset may be negative  </p>\n</blockquote>\n<p>快速分析:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">00000000000007e0 &lt;.plt&gt;:</span><br><span class=\"line\"> 7e0:   ff 35 22 08 20 00       pushq  0x200822(%rip)        # 201008 &lt;_GLOBAL_OFFSET_TABLE_+0x8&gt;</span><br><span class=\"line\"> 7e6:   ff 25 24 08 20 00       jmpq   *0x200824(%rip)        # 201010 &lt;_GLOBAL_OFFSET_TABLE_+0x10&gt;</span><br><span class=\"line\"> 7ec:   0f 1f 40 00             nopl   0x0(%rax)</span><br><span class=\"line\">0000000000000810 &lt;_Z12so_func_baseii@plt&gt;:</span><br><span class=\"line\"> 810:   ff 25 12 08 20 00       jmpq   *0x200812(%rip)        # 201028 &lt;_Z12so_func_baseii&gt;</span><br><span class=\"line\"> 816:   68 02 00 00 00          pushq  $0x2</span><br><span class=\"line\"> 81b:   e9 c0 ff ff ff          jmpq   7e0 &lt;.plt&gt;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><p>jmpq   7e0  跳转到 CS:7e0 这个位置  </p>\n<blockquote>\n<p>实际上二进制的内容仍然是相对寻址(81b+5 + -40) ==  7e0  等同 jumpq * -0x40(%rip) 但省了一个字节的指令   </p>\n</blockquote>\n</li>\n<li><p>jmpq   *0x200812(%rip)  跳转到 816 + 0x200812 这个位置 (rip是一个指针 需要解引用获得目标地址)   </p>\n</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a84:   74 20                   je     aa6 &lt;__libc_csu_init+0x56&gt;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>这里跳转指令则只用了两个字节  </li>\n</ul>\n<h5><span id=\"large-code-mode\">large code mode:</span></h5><blockquote>\n<p>In the small code model all addresses (including GOT entries) are accessible via the IP-relative addressing provided by the AMD64 architecture. Hence there is no need for an explicit GOT pointer and therefore no function prologue for setting it up is necessary. In the medium and large code models a register has to be allocated to hold the address of the GOT in position-independent objects, because the AMD64 ISA does not support an immediate displacement larger than 32 bits.<br>在一个小型代码模型中, 所有的地址(包括GOT入口地址) 都是可以通过IP-RELATIVE访问到.  因此不需要显示声明额外的GOT指针 也不需要设置函数的开始语.  但在一个中型或者大型代码模型中, 必须分配一个寄存器去持有位置无关对象在GOT的地址  (AMD64不支持大于32位的立即跳转)  </p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">g++-6 -O0 so.so main.cpp lib.cpp -pie -fPIE  -mcmodel&#x3D;large</span><br></pre></td></tr></table></figure>\n\n<p> 举例一个通过.GOT表访问的全局变量代码如下:<br> <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a40:   48 8d 1d f9 ff ff ff    lea    -0x7(%rip),%rbx        # a40 &lt;main+0xb&gt;</span><br><span class=\"line\">a47:   49 bb c0 05 20 00 00    movabs $0x2005c0,%r11</span><br><span class=\"line\">a4e:   00 00 00 </span><br><span class=\"line\">a51:   4c 01 db                add    %r11,%rbx</span><br><span class=\"line\">a54:   89 7d dc                mov    %edi,-0x24(%rbp)</span><br><span class=\"line\">a57:   48 89 75 d0             mov    %rsi,-0x30(%rbp)</span><br><span class=\"line\">a5b:   c7 45 ec 00 00 00 00    movl   $0x0,-0x14(%rbp)</span><br><span class=\"line\">a62:   48 b8 d0 ff ff ff ff    movabs $0xffffffffffffffd0,%rax</span><br><span class=\"line\">a69:   ff ff ff </span><br><span class=\"line\">a6c:   48 8b 04 03             mov    (%rbx,%rax,1),%rax</span><br><span class=\"line\">a70:   c7 00 e8 03 00 00       movl   $0x3e8,(%rax)</span><br></pre></td></tr></table></figure></p>\n<p>a4e为8字节的操作数剩余部分</p>\n<p>a40行取得当前行的地址<br>a51行通过偏移量获得.got表的end 地址 =  a40 + 0x2005c0 =   201000   =.plt.got   (.got表在本测试中大小是0x40)<br>a6c行把RBX + 0xffffffffffffffd0 (= -0x30) 得到GOT表中存放全局变量的地址 *(.plt.got -0x30) = got[g_static_so_data]<br>a70赋值立即数0x3e8 给全局变量 g_static_so_data = *(got[g_static_so_data])  </p>\n<p>节点偏移和大小如下    </p>\n<table>\n<thead>\n<tr>\n<th>[号]</th>\n<th>名称</th>\n<th>类型</th>\n<th>地址</th>\n<th>偏移量</th>\n<th>大小</th>\n<th>全体大小</th>\n<th>旗标</th>\n<th>链接</th>\n<th>信息</th>\n<th>对齐</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>[23]</td>\n<td>.got</td>\n<td>PROGBITS</td>\n<td>00200fc0</td>\n<td>000fc0</td>\n<td>00040</td>\n<td>0008</td>\n<td>WA</td>\n<td>0</td>\n<td>0</td>\n<td>8</td>\n</tr>\n<tr>\n<td>[24]</td>\n<td>.got.plt</td>\n<td>PROGBITS</td>\n<td>00201000</td>\n<td>001000</td>\n<td>00030</td>\n<td>0008</td>\n<td>WA</td>\n<td>0</td>\n<td>0</td>\n<td>8</td>\n</tr>\n<tr>\n<td>[25]</td>\n<td>.data</td>\n<td>PROGBITS</td>\n<td>00201030</td>\n<td>001030</td>\n<td>00014</td>\n<td>0000</td>\n<td>WA</td>\n<td>0</td>\n<td>0</td>\n<td>8</td>\n</tr>\n<tr>\n<td>[26]</td>\n<td>.bss</td>\n<td>NOBITS</td>\n<td>00201044</td>\n<td>001044</td>\n<td>0000c</td>\n<td>0000</td>\n<td>WA</td>\n<td>0</td>\n<td>0</td>\n<td>4</td>\n</tr>\n</tbody></table>\n<p>程序声明如下:   </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">extern int g_static_so_bss;</span><br><span class=\"line\">extern int g_static_so_data;</span><br><span class=\"line\">extern int errno;</span><br></pre></td></tr></table></figure>\n<p>当前汇编访问的是:g_static_so_data<br>.dyn global data如下  </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">000000200fc0  000100000006 R_X86_64_GLOB_DAT 0000000000000000 __cxa_finalize@GLIBC_2.2.5 + 0</span><br><span class=\"line\">000000200fc8  000300000006 R_X86_64_GLOB_DAT 0000000000000000 _Jv_RegisterClasses + 0</span><br><span class=\"line\">000000200fd0  000400000006 R_X86_64_GLOB_DAT 0000000000000000 g_static_so_data + 0</span><br><span class=\"line\">000000200fd8  000500000006 R_X86_64_GLOB_DAT 0000000000000000 g_static_so_bss + 0</span><br><span class=\"line\">000000200fe0  000800000006 R_X86_64_GLOB_DAT 0000000000000000 _ITM_deregisterTMClone + 0</span><br><span class=\"line\">000000200fe8  000900000006 R_X86_64_GLOB_DAT 0000000000000000 __libc_start_main@GLIBC_2.2.5 + 0</span><br><span class=\"line\">000000200ff0  000a00000006 R_X86_64_GLOB_DAT 0000000000000000 __gmon_start__ + 0</span><br><span class=\"line\">000000200ff8  000b00000006 R_X86_64_GLOB_DAT 0000000000000000 _ITM_registerTMCloneTa + 0</span><br></pre></td></tr></table></figure>\n\n<h5><span id=\"共享库中对g_static_so_data的访问\">共享库中对g_static_so_data的访问</span></h5><p>如果代码模型为大型 则和可执行程序中的代码段一致 如果是small或者median 共享库仍然会对全局变量走GOT表<br>汇编如下:    </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">894:   48 8b 05 45 07 20 00    mov    0x200745(%rip),%rax        # 200fe0 &lt;g_static_so_bss@@Base-0x60&gt;</span><br><span class=\"line\">89b:   48 8b 00                mov    (%rax),%rax</span><br><span class=\"line\">89e:   01 c2                   add    %eax,%edx</span><br></pre></td></tr></table></figure>\n<p>894: 取GOT中存储 g_static_so_bss 的项地址 并把内容(g_static_so_bss的地址)存放到%rax中<br>89b: 取 g_static_so_bss 的内容<br>89e: 加到%edx上  </p>\n<h5><span id=\"small-code-mode\">small code mode:</span></h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">g++-6 -O0 so.so main.cpp lib.cpp -pie -fPIE  -mcmodel&#x3D;small</span><br></pre></td></tr></table></figure>\n\n<p>假设了全局变量的存储位置在低端内存, 因此该全局变量直接定义在主程序的data段, 在so文件中仍然通过.got找到真实地址.<br>其类型R_X86_64_COPY<br>在主程序的汇编代码只有一行</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">9f0:   c7 05 4e 06 20 00 e8    movl   $0x3e8,0x20064e(%rip)        # 201048 &lt;g_static_so_data&gt;</span><br></pre></td></tr></table></figure>\n<p>.dyn global</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">偏移量          信息           类型           符号值        符号名称 + 加数</span><br><span class=\"line\">000000201048  001200000005 R_X86_64_COPY     0000000000201048 g_static_so_data + 0</span><br><span class=\"line\">000000201050  001000000005 R_X86_64_COPY     0000000000201050 g_static_so_bss + 0</span><br></pre></td></tr></table></figure>\n\n<p>.dyn so </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">000000200fd8  001300000006 R_X86_64_GLOB_DAT 0000000000201030 g_static_so_data + 0</span><br><span class=\"line\">000000200fe0  001000000006 R_X86_64_GLOB_DAT 0000000000201040 g_static_so_bss + 0</span><br></pre></td></tr></table></figure>\n\n<p>.symver指令</p>\n<blockquote>\n<p>g_static_so_data@@Base-0x58  的意思是: g_static_so_data的符号值-0x58 也就是g_static_so_data的偏移量  </p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">0000000000201030 - 000000200fd8 &#x3D; 0x58</span><br></pre></td></tr></table></figure>\n\n\n<h5><span id=\"备注说明\">备注说明</span></h5><p>共享库中 无论是large还是small, 都会走so的got表, 区别在于会不会使用movabs进行64位的偏移计算<br>got表的位置可能紧接着.text并且设置为只读<br><a href=\"https://systemoverlord.com/2017/03/19/got-and-plt-for-pwning.html\" target=\"_blank\" rel=\"noopener\">RELRO</a>   </p>\n<p>通过got表访问全局变量:  </p>\n<ol>\n<li>通过RIP-R找到GOT表的位置.   相对于.text固定的偏移量 (large不假定大小)     </li>\n<li>通过项索引偏移找到存储该变量地址的地址并解引用得到 变量地址  <ol>\n<li>(large不假定大小, medium会区分把&lt;64k的数据链接到低内存中 多个数据段.ldata(largedata))  </li>\n</ol>\n</li>\n<li>解引用并使用  </li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mov  (%rbx,%rax,1),%rax</span><br></pre></td></tr></table></figure>\n<p>这行代码可以优化为一个立即数偏移寻址  即</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mov    0x200745(%rip),%rax</span><br></pre></td></tr></table></figure>\n\n<p>当前代码段到GOT表的偏移</p>\n<p>但是在large模型中 </p>\n<p>通过rip寻址的指令中 偏移量不是64位的  因此需要先算一个小的偏移量 再通过支持64bit的 movabs(mov) 添加上一个64bit的偏移</p>\n<h5><span id=\"relro-relocation-read-only\">RELRO  Relocation Read Only</span></h5><p>重定位只读技术<br>动态链接器在处理完GOT表后将其设为只读以提高安全性.  </p>\n<p>本文测试环境中只读. (实际上这是一个可以成为较为古老的技术了)  </p>\n<blockquote>\n<p>Linux version 4.9.0-4-amd64 (<a href=\"mailto:debian-kernel@lists.debian.org\">debian-kernel@lists.debian.org</a>)<br>(gcc version 6.3.0 20170516 (Debian 6.3.0-18) )<br>#1 SMP Debian 4.9.65-3+deb9u1 (2017-12-23)<br>.zsummer  </p>\n</blockquote>\n<p>GOT表为R  只读段.<br>.got.plt存储plt的got仍然是读写段 (惰性加载机制决定, 可以选择非惰性+ro来完成全只读化)  </p>\n<h3><span id=\"调用惯例calling-conventions\">调用惯例Calling Conventions</span></h3><p>计算机中Corotine分两种 Coroutine和Subroutine 前者对应协程 后者对应函数  </p>\n<ul>\n<li>call a routine (trasfer control to procedure)  跳转到目标routine  </li>\n<li>pass arguments  传递参数  <ul>\n<li>fixed length</li>\n<li>variable length</li>\n<li>recursively  </li>\n</ul>\n</li>\n<li>return to the caller  返回调用者地址  <ul>\n<li>putting results in a place where caller an find them  </li>\n</ul>\n</li>\n<li>manage register  管理寄存器 </li>\n</ul>\n<h5><span id=\"参数压栈顺序\">参数压栈顺序</span></h5><p>标准的linux ABI调用约定中<br><a href=\"\">System V Application Binary Interface—AMD64 Architecture Processor Supplement</a>   </p>\n<h6><span id=\"caller-save和callee-save\">Caller Save和Callee Save</span></h6><p>当产生函数调用时 子函数内通常也会使用到通用寄存器 那么这些寄存器中之前保存的调用者(父函数)的值就会被覆盖<br>为了避免数据覆盖而导致从子函数返回时寄存器中的数据不可恢复 CPU 体系结构中就规定了通用寄存器的保存方式   </p>\n<ul>\n<li><p>Casller Save ‘调用者保存’ 在发起一个调用前需要保存(子例程直接覆盖使用) </p>\n<ul>\n<li>在进入子函数调用前, 调用者需要保存这些寄存器的值.   <ul>\n<li>一般做法是进入子函数调用前把这些寄存器压入栈中    </li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>Callee Save ‘被调用者保存’ (子例程使用前需要先保存)   </p>\n<ul>\n<li>在进入子函数调用后, 在使用这些寄存器前, 被调用者会保存这些寄存器的内容,并在使用后恢复  </li>\n<li>这种比较特殊也比较麻烦, 因为一旦接受这个设定, 那么所有subroutine都要进行合适的push并保证pop恢复.     </li>\n<li></li>\n</ul>\n</li>\n<li><p>cross</p>\n</li>\n</ul>\n<h3><span id=\"工具\">工具</span></h3><ul>\n<li>objdump -S 查看汇编指令  </li>\n<li>gdb  <ul>\n<li>gdb 通过<code>layout regs</code>打开寄存器显示, 通过<code>set disassemble-next-line on</code>打开汇编  </li>\n<li>gdb 通过peda插件字节显示汇编和寄存器  和上面的原生方式选择一个即可, peda默认显示是intex语法    </li>\n<li>disas反汇编命令,直接disas是反汇编当前函数<ul>\n<li>disas /r (显示汇编指令对应十六进制值)   </li>\n<li>disas /m (如果有源码,显示对应行源码)   </li>\n</ul>\n</li>\n<li>intel语法<ul>\n<li>set disassembly-flavor intel</li>\n<li>set disassembly-flavor att</li>\n</ul>\n</li>\n<li>gdb关闭ASLR：<ul>\n<li>set disable-randomization on</li>\n</ul>\n</li>\n<li>开启ASLR：<ul>\n<li>set disable-randomization off</li>\n</ul>\n</li>\n<li>查看ASLR状态：<ul>\n<li>show disable-randomization</li>\n</ul>\n</li>\n<li>查看二进制  <ul>\n<li><code>x /1ag addr</code><!-- more -->\n<h4><span id=\"peda插件\">PEDA插件</span></h4>peda默认设置的是intel的语法风格<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone https:&#x2F;&#x2F;github.com&#x2F;longld&#x2F;peda.git ~&#x2F;peda</span><br><span class=\"line\">echo &quot;source ~&#x2F;peda&#x2F;peda.py&quot; &gt;&gt; ~&#x2F;.gdbinit</span><br><span class=\"line\">echo &quot;DONE! debug your program with gdb and enjoy&quot;</span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>aslr – Show/set ASLR setting of GDB</li>\n<li>checksec – Check for various security options of binary</li>\n<li>dumpargs – Display arguments passed to a function when stopped at a call instruction</li>\n<li>dumprop – Dump all ROP gadgets in specific memory range</li>\n<li>elfheader – Get headers information from debugged ELF file</li>\n<li>elfsymbol – Get non-debugging symbol information from an ELF file</li>\n<li>lookup – Search for all addresses/references to addresses which belong to a memory range</li>\n<li>patch – Patch memory start at an address with string/hexstring/int</li>\n<li>pattern – Generate, search, or write a cyclic pattern to memory</li>\n<li>procinfo – Display various info from /proc/pid/</li>\n<li>pshow – Show various PEDA options and other settings</li>\n<li>pset – Set various PEDA options and other settings</li>\n<li>readelf – Get headers information from an ELF file</li>\n<li>ropgadget – Get common ROP gadgets of binary or library</li>\n<li>ropsearch – Search for ROP gadgets in memory</li>\n<li>searchmem|find – Search for a pattern in memory; support regex search</li>\n<li>shellcode – Generate or download common shellcodes.</li>\n<li>skeleton – Generate python exploit code template</li>\n<li>vmmap – Get virtual mapping address ranges of section(s) in debugged process</li>\n<li>xormem – XOR a memory region with a key</li>\n</ul>\n","site":{"data":{}},"excerpt":"<h3 id=\"目录\"><a href=\"#目录\" class=\"headerlink\" title=\"目录\"></a>目录</h3><!-- TOC -->\n\n<ul>\n<li><a href=\"#目录\">目录</a></li>\n<li><a href=\"#基础语法格式\">基础语法格式</a></li>\n<li><a href=\"#常见寄存器以及作用\">常见寄存器以及作用</a><ul>\n<li><a href=\"#通用寄存器\">通用寄存器</a><ul>\n<li><a href=\"#寄存器使用惯例-原文\">寄存器使用惯例 原文</a></li>\n<li><a href=\"#中文对照\">中文对照</a></li>\n</ul>\n</li>\n<li><a href=\"#专用寄存器\">专用寄存器</a><ul>\n<li><a href=\"#标志寄存器-rflags\">标志寄存器 RFLAGS</a></li>\n<li><a href=\"#程序计数器pcrelative-instruction-pointerip\">程序计数器(PC)(Relative Instruction-Pointer)(IP)</a></li>\n<li><a href=\"#指令寄存器\">指令寄存器</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a href=\"#汇编语法\">汇编语法</a><ul>\n<li><a href=\"#汇编指令\">汇编指令</a></li>\n<li><a href=\"#操作数格式与寻址\">操作数格式与寻址</a><ul>\n<li><a href=\"#内存操作数\">内存操作数</a></li>\n<li><a href=\"#寻址模式\">寻址模式</a></li>\n<li><a href=\"#large-code-mode\">large code mode:</a></li>\n<li><a href=\"#共享库中对g_static_so_data的访问\">共享库中对g_static_so_data的访问</a></li>\n<li><a href=\"#small-code-mode\">small code mode:</a></li>\n<li><a href=\"#备注说明\">备注说明</a></li>\n<li><a href=\"#relro--relocation-read-only\">RELRO  Relocation Read Only</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a href=\"#调用惯例calling-conventions\">调用惯例Calling Conventions</a><pre><code>- [参数压栈顺序](#参数压栈顺序)\n    - [Caller Save和Callee Save](#caller-save和callee-save)</code></pre></li>\n<li><a href=\"#工具\">工具</a><ul>\n<li><a href=\"#peda插件\">PEDA插件</a></li>\n</ul>\n</li>\n</ul>\n<!-- /TOC -->\n\n<h3 id=\"基础语法格式\"><a href=\"#基础语法格式\" class=\"headerlink\" title=\"基础语法格式\"></a>基础语法格式</h3><p>GAS汇编的格式阅读起来很自然 如下   </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[操作符]    [源]      [目标]   </span><br><span class=\"line\">movl        $0,      -4(%rbp)</span><br></pre></td></tr></table></figure>\n\n\n<p>但是INTEL格式更贴近C语言的书写风格   </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[操作符]   [目标]    [源]  </span><br><span class=\"line\">mov        esi,     DWORD PTR [rbp-0x4]</span><br></pre></td></tr></table></figure>\n\n<p>很像C语言的代码   </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">int esi &#x3D; *(rbp-0x4);</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>本文基于X86-64架构体系整理了GAS风格的汇编语法, 如无特殊说明后续内容皆以环境为准.    </p>\n</blockquote>\n<p>“@”符号表示“将符号左边的变量钳制在符号右边的地址   </p>","more":"<h3 id=\"常见寄存器以及作用\"><a href=\"#常见寄存器以及作用\" class=\"headerlink\" title=\"常见寄存器以及作用\"></a>常见寄存器以及作用</h3><p>16bit寄存器一般没有前缀  例如ax   bx   ds<br>32bit寄存器前缀一般为e   例如eax  ebx  eds<br>64bit寄存器前缀一般为r   例如rax  rbx  rds</p>\n<h4 id=\"通用寄存器\"><a href=\"#通用寄存器\" class=\"headerlink\" title=\"通用寄存器\"></a>通用寄存器</h4><p>X86-64体系下有16个通用寄存器 分别为:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rax    rbx    rcx    rdx    rdi    rsi    rbp    rsp    r8 – r15</span><br></pre></td></tr></table></figure>\n<p>兼容32位模式, 对应为: </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">eax    ebx    ecx    edx    edi    esi    ebp    esp    e8d – e15d</span><br></pre></td></tr></table></figure>\n\n<p>在所有CPU的架构体系中, 每个寄存器通常都是有其建议的使用用途的, X86-64架构下其用途如下:  </p>\n<h5 id=\"寄存器使用惯例-原文\"><a href=\"#寄存器使用惯例-原文\" class=\"headerlink\" title=\"寄存器使用惯例 原文\"></a>寄存器使用惯例 原文</h5><p><a href=\"https://cons.mit.edu/sp17/x86-64-architecture-guide.html\" target=\"_blank\" rel=\"noopener\">X86-64 Registers</a></p>\n<table>\n<thead>\n<tr>\n<th>Register</th>\n<th>Purpose</th>\n<th>Saved across calls</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>%rax</td>\n<td>temp register; return value</td>\n<td>No</td>\n</tr>\n<tr>\n<td>%rbx</td>\n<td>callee-saved</td>\n<td>Yes</td>\n</tr>\n<tr>\n<td>%rcx</td>\n<td>used to pass 4th argument to functions</td>\n<td>No</td>\n</tr>\n<tr>\n<td>%rdx</td>\n<td>used to pass 3rd argument to functions</td>\n<td>No</td>\n</tr>\n<tr>\n<td>%rsp</td>\n<td>stack pointer</td>\n<td>Yes</td>\n</tr>\n<tr>\n<td>%rbp</td>\n<td>callee-saved; base pointer</td>\n<td>Yes</td>\n</tr>\n<tr>\n<td>%rsi</td>\n<td>used to pass 2nd argument to functions</td>\n<td>No</td>\n</tr>\n<tr>\n<td>%rdi</td>\n<td>used to pass 1st argument to functions</td>\n<td>No</td>\n</tr>\n<tr>\n<td>%r8</td>\n<td>used to pass 5th argument to functions</td>\n<td>No</td>\n</tr>\n<tr>\n<td>%r9</td>\n<td>used to pass 6th argument to functions</td>\n<td>No</td>\n</tr>\n<tr>\n<td>%r10-r11</td>\n<td>temporary</td>\n<td>No</td>\n</tr>\n<tr>\n<td>%r12-r15</td>\n<td>callee-saved registers</td>\n<td>Yes</td>\n</tr>\n</tbody></table>\n<h5 id=\"中文对照\"><a href=\"#中文对照\" class=\"headerlink\" title=\"中文对照\"></a>中文对照</h5><table>\n<thead>\n<tr>\n<th>寄存器</th>\n<th>推荐用途</th>\n<th>跨调用过程保存</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>%rax</td>\n<td>保存函数/计算的返回值</td>\n<td>No</td>\n</tr>\n<tr>\n<td>%rbx</td>\n<td>callee-saved 基址 (比如找GOT表会临时用下)</td>\n<td>Yes</td>\n</tr>\n<tr>\n<td>%rcx</td>\n<td>函数的第4个参数</td>\n<td>No</td>\n</tr>\n<tr>\n<td>%rdx</td>\n<td>函数的第3个参数</td>\n<td>乘法余数</td>\n</tr>\n<tr>\n<td>%rsp</td>\n<td>指向当前栈顶的指针(栈顶)</td>\n<td>Yes</td>\n</tr>\n<tr>\n<td>%rbp</td>\n<td>callee-saved; 指向当前栈帧的起始位置(栈基)</td>\n<td>Yes</td>\n</tr>\n<tr>\n<td>%rsi</td>\n<td>函数的第2个参数</td>\n<td>字符串源串</td>\n</tr>\n<tr>\n<td>%rdi</td>\n<td>函数的第1个参数</td>\n<td>字符串目标串</td>\n</tr>\n<tr>\n<td>%r8</td>\n<td>函数的第5个参数</td>\n<td>No</td>\n</tr>\n<tr>\n<td>%r9</td>\n<td>函数的第6个参数</td>\n<td>No</td>\n</tr>\n<tr>\n<td>%r10-r11</td>\n<td>temporary</td>\n<td>No</td>\n</tr>\n<tr>\n<td>%r12-r15</td>\n<td>callee-saved registers</td>\n<td>Yes</td>\n</tr>\n</tbody></table>\n<h4 id=\"专用寄存器\"><a href=\"#专用寄存器\" class=\"headerlink\" title=\"专用寄存器\"></a>专用寄存器</h4><p>标志寄存器和程序计数器可能为同一个寄存器实现  </p>\n<h5 id=\"标志寄存器-RFLAGS\"><a href=\"#标志寄存器-RFLAGS\" class=\"headerlink\" title=\"标志寄存器 RFLAGS\"></a>标志寄存器 RFLAGS</h5><p>NV UP EI PL NZ NA PO NC表示标志寄存器的值  </p>\n<table>\n<thead>\n<tr>\n<th>位编号</th>\n<th>1</th>\n<th>0</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>溢出标志OF(Over flow flag)</td>\n<td>OV(1)</td>\n<td>NV(0)</td>\n</tr>\n<tr>\n<td>方向标志DF(Direction flag)</td>\n<td>DN(1)</td>\n<td>UP(0)</td>\n</tr>\n<tr>\n<td>中断标志IF(Interrupt flag)</td>\n<td>EI(1)</td>\n<td>DI(0)</td>\n</tr>\n<tr>\n<td>符号标志SF(Sign flag)</td>\n<td>NG(1)</td>\n<td>PL(0)</td>\n</tr>\n<tr>\n<td>零标志ZF(Zero flag)</td>\n<td>ZR(1)</td>\n<td>NZ(0)</td>\n</tr>\n<tr>\n<td>辅助标志AF(Auxiliary carry flag)</td>\n<td>AC(1)</td>\n<td>NA(0)</td>\n</tr>\n<tr>\n<td>奇偶标志PF(Parity flag)</td>\n<td>PE(1)</td>\n<td>PO(0)</td>\n</tr>\n<tr>\n<td>进位标志CF(Carry flag)</td>\n<td>CY(1)</td>\n<td>NC(0)</td>\n</tr>\n<tr>\n<td>TF(TrapFlag)</td>\n<td></td>\n<td></td>\n</tr>\n</tbody></table>\n<h5 id=\"程序计数器-PC-Relative-Instruction-Pointer-IP\"><a href=\"#程序计数器-PC-Relative-Instruction-Pointer-IP\" class=\"headerlink\" title=\"程序计数器(PC)(Relative Instruction-Pointer)(IP)\"></a>程序计数器(PC)(Relative Instruction-Pointer)(IP)</h5><p>保存下一行要执行的指令位置<br>Intel的实现叫RIP  </p>\n<blockquote>\n<p>The 64-bit instruction pointer RIP points to the next instruction to be executed, and supports a 64-bit flat memory model.<br>64位指令指针 RIP 指向预期要执行的下一行指令(位置), 并且支持64位平坦内存模型<br>RIP-relative addressing: this is new for x64 and allows accessing data tables and such in the code relative to the current instruction pointer, making position independent code easier to implement.<br>PIC提供了相对于当前指令位置访问数据表这样新的支持, 从而让PIC更容易实现   </p>\n</blockquote>\n<p>例如PLC表在RIP下的应用  </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">0000000000000570 &lt;foo@plt&gt;:</span><br><span class=\"line\"> 570:    ff 25 a2 0a 20 00        jmpq   *0x200aa2(%rip)        # 201018 &lt;_GLOBAL_OFFSET_TABLE_+0x18&gt;</span><br><span class=\"line\"> 576:    68 00 00 00 00           pushq  $0x0</span><br><span class=\"line\"> 57b:    e9 e0 ff ff ff           jmpq   560 &lt;_init+0x20&gt;</span><br></pre></td></tr></table></figure>\n\n<p>在没有RIP的情况下需要通过函数调用来实现PLC  会消耗较多的性能<br>windows则直接采用了’重定位基址’的方式实现非PLC的装载.  </p>\n<h5 id=\"指令寄存器\"><a href=\"#指令寄存器\" class=\"headerlink\" title=\"指令寄存器\"></a>指令寄存器</h5><p>当前正在执行的指令, 简单CPU会预读 但复杂的CPU有流水线/指令级并行计算等    </p>\n<h3 id=\"汇编语法\"><a href=\"#汇编语法\" class=\"headerlink\" title=\"汇编语法\"></a>汇编语法</h3><h4 id=\"汇编指令\"><a href=\"#汇编指令\" class=\"headerlink\" title=\"汇编指令\"></a>汇编指令</h4><table>\n<thead>\n<tr>\n<th>操作码</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>复制值</td>\n<td>_</td>\n</tr>\n<tr>\n<td>mov src, dest</td>\n<td>将值从 寄存器,立即值或存储器地址 复制到 寄存器或存储器地址, 不可以同时为内存地址</td>\n</tr>\n<tr>\n<td>movabs</td>\n<td>支持8字节的操作数</td>\n</tr>\n<tr>\n<td>lea src, dest</td>\n<td>move会取值 lea只取地址    dest只能是寄存器</td>\n</tr>\n<tr>\n<td>栈操作</td>\n<td></td>\n</tr>\n<tr>\n<td>enter $x, $0</td>\n<td>设置堆栈框架 相当于 push ebp      和 mov esp, ebp 然后把当前的esp减去x字节的大小(局部变量)</td>\n</tr>\n<tr>\n<td>leave</td>\n<td>恢复堆栈框架 相当于 move ebp, esp 和 pop ebp</td>\n</tr>\n<tr>\n<td>push src</td>\n<td>将src压栈,  rsp-1并把src的内容存储到新位置. src可以是立即数 寄存器 内存地址</td>\n</tr>\n<tr>\n<td>pop dest</td>\n<td>出栈并保存到dest 可以是 寄存器 内存地址</td>\n</tr>\n<tr>\n<td>控制流</td>\n<td></td>\n</tr>\n<tr>\n<td>call label</td>\n<td>无条件跳转到目标(直接跳转)并将返回地址(当前PC/IP +1)压入堆栈</td>\n</tr>\n<tr>\n<td>call *operand</td>\n<td>无条件跳转到目标(间接跳转)并将返回地址(当前PC/IP +1)压入堆栈</td>\n</tr>\n<tr>\n<td>ret</td>\n<td>将返回地址弹出堆栈 然后无条件跳转到该地址</td>\n</tr>\n<tr>\n<td>jmp label</td>\n<td>无条件跳转到目标(直接跳转)</td>\n</tr>\n<tr>\n<td>jmp *operand</td>\n<td>无条件跳转到目标(间接跳转)</td>\n</tr>\n<tr>\n<td>jg, jge, jl, jle, jne, …</td>\n<td>&gt;, &gt;=, &lt;, &lt;=, !=, …</td>\n</tr>\n<tr>\n<td>算术与逻辑</td>\n<td></td>\n</tr>\n<tr>\n<td>inc dest</td>\n<td>dest+=1</td>\n</tr>\n<tr>\n<td>dec dest</td>\n<td>dest-=1</td>\n</tr>\n<tr>\n<td>neg dest</td>\n<td>dest取负</td>\n</tr>\n<tr>\n<td>not dest</td>\n<td>dest取反</td>\n</tr>\n<tr>\n<td>add src, dest</td>\n<td>dest加上src</td>\n</tr>\n<tr>\n<td>sub src, dest</td>\n<td>dest减去src</td>\n</tr>\n<tr>\n<td>imul src, dest</td>\n<td>dest 乘以src</td>\n</tr>\n<tr>\n<td>idiv divisor</td>\n<td>rdx:rax除以divisor, 将商存在rax 余数存储在rdx</td>\n</tr>\n<tr>\n<td>shr cl, reg</td>\n<td>reg右移cl位</td>\n</tr>\n<tr>\n<td>shl cl, reg</td>\n<td>reg左移cl位</td>\n</tr>\n<tr>\n<td>ror src, dest</td>\n<td>dest逐src 位向左或向右旋转。</td>\n</tr>\n<tr>\n<td>cmp src, dest</td>\n<td>执行sub操作但只设置标志寄存器而不存储结果</td>\n</tr>\n<tr>\n<td>test src, dest</td>\n<td>执行and操作只设置标志寄存器而不存储结果,其中是否为0的判断一般类似 <code>test rax,rax</code></td>\n</tr>\n<tr>\n<td>and src, dest</td>\n<td>执行按位的与操作并保存到dest</td>\n</tr>\n<tr>\n<td>xor src, dest</td>\n<td>执行按位的异或操作并保存到dest</td>\n</tr>\n</tbody></table>\n<h4 id=\"操作数格式与寻址\"><a href=\"#操作数格式与寻址\" class=\"headerlink\" title=\"操作数格式与寻址\"></a>操作数格式与寻址</h4><p>M[xx]表示在存储器中xx地址的值<br>R[xx]表示寄存器xx的值<br>这种表示方法将寄存器 内存都看出一个大数组的形式    </p>\n<table>\n<thead>\n<tr>\n<th>格式</th>\n<th>操作数值</th>\n<th>名称</th>\n<th>样例(GAS = C语言)</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>%reg</td>\n<td></td>\n<td></td>\n<td>寄存器名字前都加 %</td>\n</tr>\n<tr>\n<td>$Imm</td>\n<td>Imm</td>\n<td>立即数寻址</td>\n<td>$1 = 1</td>\n</tr>\n<tr>\n<td>Ea</td>\n<td>R[Ea]</td>\n<td>寄存器寻址</td>\n<td>%eax = eax</td>\n</tr>\n<tr>\n<td>Imm</td>\n<td>M[Imm]</td>\n<td>绝对寻址</td>\n<td>0x104 = *0x104</td>\n</tr>\n<tr>\n<td>(Ea)</td>\n<td>M[R[Ea]]</td>\n<td>间接寻址</td>\n<td>(%eax)= *eax</td>\n</tr>\n<tr>\n<td>Imm(Ea)</td>\n<td>M[Imm+R[Ea]]</td>\n<td>(基址+偏移量)寻址</td>\n<td>4(%eax) = *(4+eax)</td>\n</tr>\n<tr>\n<td>(Ea,Eb)</td>\n<td>M[R[Ea]+R[Eb]]</td>\n<td>变址</td>\n<td>(%eax,%ebx) = *(eax+ebx)</td>\n</tr>\n<tr>\n<td>Imm(Ea,Eb)</td>\n<td>M[Imm+R[Ea]+R[Eb]]</td>\n<td>寻址</td>\n<td>9(%eax,%ebx)= *(9+eax+ebx)</td>\n</tr>\n<tr>\n<td>(,Ea,s)</td>\n<td>M[R[Ea]*s]</td>\n<td>伸缩化变址寻址</td>\n<td>(,%eax,4)= <em>(eax</em>4)</td>\n</tr>\n<tr>\n<td>Imm(,Ea,s)</td>\n<td>M[Imm+R[Ea]*s]</td>\n<td>伸缩化变址寻址</td>\n<td>0xfc(,%eax,4)= <em>(0xfc+eax</em>4)</td>\n</tr>\n<tr>\n<td>(Ea,Eb,s)</td>\n<td>M(R[Ea]+R[Eb]*s)</td>\n<td>伸缩化变址寻址</td>\n<td>(%eax,%ebx,4) = <em>(eax+ebx</em>4)</td>\n</tr>\n<tr>\n<td>Imm(Ea,Eb,s)</td>\n<td>M(Imm+R[Ea]+R[Eb]*s)</td>\n<td>伸缩化变址寻址</td>\n<td>8(%eax,%ebx,4) = <em>(8+eax+ebx</em>4)</td>\n</tr>\n</tbody></table>\n<h5 id=\"内存操作数\"><a href=\"#内存操作数\" class=\"headerlink\" title=\"内存操作数\"></a>内存操作数</h5><p>操作数语法:    </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">segment:displacement(base register, index register, scale factor)</span><br></pre></td></tr></table></figure>\n<p>等效intel语法   </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">segment:[base register + displacement + index register * scale factor]</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>如果segment未指定，则几乎总是假定为ds，除非base register为esp或ebp；否则为。在这种情况下，假定地址是相对于ss  </p>\n</blockquote>\n<blockquote>\n<p>If segment is not specified, as almost always, it is assumed to be ds, unless base register is esp or ebp; in this case, the address is assumed to be relative to ss<br>快速参考  </p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th>指令</th>\n<th>含义</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>movq %rax, %rbx</td>\n<td>rbx = rax</td>\n</tr>\n<tr>\n<td>movq $123, %rax</td>\n<td>rax = 123</td>\n</tr>\n<tr>\n<td>movq %rsi, -16（%rbp）</td>\n<td>mem [rbp-16] = rsi</td>\n</tr>\n<tr>\n<td>subq $10, %rbp</td>\n<td>rbp = rbp -10</td>\n</tr>\n<tr>\n<td>cmpl %eax %ebx</td>\n<td>比较然后设置标志。如果eax == ebx, 则设置零标志。</td>\n</tr>\n<tr>\n<td>leal (%ebx),  %eax</td>\n<td>movl %ebx,  %eax</td>\n</tr>\n</tbody></table>\n<h5 id=\"寻址模式\"><a href=\"#寻址模式\" class=\"headerlink\" title=\"寻址模式\"></a>寻址模式</h5><blockquote>\n<p>References to both code and data on x64 are done with instruction-relative (RIP-relative in x64 parlance) addressing modes. The offset from RIP in these instructions is limited to 32 bits.<br>X64体系下的寻址是建立在相对寻址(RIP-RELATIVE)之上的, RIP的偏移大小最大为32bits  </p>\n</blockquote>\n<p><a href=\"https://eli.thegreenplace.net/2012/01/03/understanding-the-x64-code-models\" target=\"_blank\" rel=\"noopener\">x64 code mode</a>    </p>\n<blockquote>\n<p>Default operand size in 64-bit mode is still 32-bit and 64-bit immediates are allowed only with mov instruction.<br>movabs is just AT&amp;T syntax for a mov with a 64-bit immediate operand.<br>只有mov操作可以填写8字节的立即数  movabs是AT&amp;T语法中mov的(别名)    </p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th>指令</th>\n<th>同义名</th>\n<th>跳转条件</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>jmp</td>\n<td>Label</td>\n<td>1</td>\n<td>直接跳转</td>\n</tr>\n<tr>\n<td>jmp</td>\n<td>*Operand</td>\n<td>1</td>\n<td>间接跳转</td>\n</tr>\n</tbody></table>\n<p>绝对寻址/直接寻址(Absolute or direct):  </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">jump    address</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>(有效PC地址=address)<br>Effective PC address = address  </p>\n</blockquote>\n<p>相对寻址(PC-relative):  </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">jump    offset</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>(有效PC地址=rip+offset = 下一个指令的地址 + offset)<br>Effective PC address = next instruction address + offset, offset may be negative  </p>\n</blockquote>\n<p>快速分析:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">00000000000007e0 &lt;.plt&gt;:</span><br><span class=\"line\"> 7e0:   ff 35 22 08 20 00       pushq  0x200822(%rip)        # 201008 &lt;_GLOBAL_OFFSET_TABLE_+0x8&gt;</span><br><span class=\"line\"> 7e6:   ff 25 24 08 20 00       jmpq   *0x200824(%rip)        # 201010 &lt;_GLOBAL_OFFSET_TABLE_+0x10&gt;</span><br><span class=\"line\"> 7ec:   0f 1f 40 00             nopl   0x0(%rax)</span><br><span class=\"line\">0000000000000810 &lt;_Z12so_func_baseii@plt&gt;:</span><br><span class=\"line\"> 810:   ff 25 12 08 20 00       jmpq   *0x200812(%rip)        # 201028 &lt;_Z12so_func_baseii&gt;</span><br><span class=\"line\"> 816:   68 02 00 00 00          pushq  $0x2</span><br><span class=\"line\"> 81b:   e9 c0 ff ff ff          jmpq   7e0 &lt;.plt&gt;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><p>jmpq   7e0  跳转到 CS:7e0 这个位置  </p>\n<blockquote>\n<p>实际上二进制的内容仍然是相对寻址(81b+5 + -40) ==  7e0  等同 jumpq * -0x40(%rip) 但省了一个字节的指令   </p>\n</blockquote>\n</li>\n<li><p>jmpq   *0x200812(%rip)  跳转到 816 + 0x200812 这个位置 (rip是一个指针 需要解引用获得目标地址)   </p>\n</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a84:   74 20                   je     aa6 &lt;__libc_csu_init+0x56&gt;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>这里跳转指令则只用了两个字节  </li>\n</ul>\n<h5 id=\"large-code-mode\"><a href=\"#large-code-mode\" class=\"headerlink\" title=\"large code mode:\"></a>large code mode:</h5><blockquote>\n<p>In the small code model all addresses (including GOT entries) are accessible via the IP-relative addressing provided by the AMD64 architecture. Hence there is no need for an explicit GOT pointer and therefore no function prologue for setting it up is necessary. In the medium and large code models a register has to be allocated to hold the address of the GOT in position-independent objects, because the AMD64 ISA does not support an immediate displacement larger than 32 bits.<br>在一个小型代码模型中, 所有的地址(包括GOT入口地址) 都是可以通过IP-RELATIVE访问到.  因此不需要显示声明额外的GOT指针 也不需要设置函数的开始语.  但在一个中型或者大型代码模型中, 必须分配一个寄存器去持有位置无关对象在GOT的地址  (AMD64不支持大于32位的立即跳转)  </p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">g++-6 -O0 so.so main.cpp lib.cpp -pie -fPIE  -mcmodel&#x3D;large</span><br></pre></td></tr></table></figure>\n\n<p> 举例一个通过.GOT表访问的全局变量代码如下:<br> <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a40:   48 8d 1d f9 ff ff ff    lea    -0x7(%rip),%rbx        # a40 &lt;main+0xb&gt;</span><br><span class=\"line\">a47:   49 bb c0 05 20 00 00    movabs $0x2005c0,%r11</span><br><span class=\"line\">a4e:   00 00 00 </span><br><span class=\"line\">a51:   4c 01 db                add    %r11,%rbx</span><br><span class=\"line\">a54:   89 7d dc                mov    %edi,-0x24(%rbp)</span><br><span class=\"line\">a57:   48 89 75 d0             mov    %rsi,-0x30(%rbp)</span><br><span class=\"line\">a5b:   c7 45 ec 00 00 00 00    movl   $0x0,-0x14(%rbp)</span><br><span class=\"line\">a62:   48 b8 d0 ff ff ff ff    movabs $0xffffffffffffffd0,%rax</span><br><span class=\"line\">a69:   ff ff ff </span><br><span class=\"line\">a6c:   48 8b 04 03             mov    (%rbx,%rax,1),%rax</span><br><span class=\"line\">a70:   c7 00 e8 03 00 00       movl   $0x3e8,(%rax)</span><br></pre></td></tr></table></figure></p>\n<p>a4e为8字节的操作数剩余部分</p>\n<p>a40行取得当前行的地址<br>a51行通过偏移量获得.got表的end 地址 =  a40 + 0x2005c0 =   201000   =.plt.got   (.got表在本测试中大小是0x40)<br>a6c行把RBX + 0xffffffffffffffd0 (= -0x30) 得到GOT表中存放全局变量的地址 *(.plt.got -0x30) = got[g_static_so_data]<br>a70赋值立即数0x3e8 给全局变量 g_static_so_data = *(got[g_static_so_data])  </p>\n<p>节点偏移和大小如下    </p>\n<table>\n<thead>\n<tr>\n<th>[号]</th>\n<th>名称</th>\n<th>类型</th>\n<th>地址</th>\n<th>偏移量</th>\n<th>大小</th>\n<th>全体大小</th>\n<th>旗标</th>\n<th>链接</th>\n<th>信息</th>\n<th>对齐</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>[23]</td>\n<td>.got</td>\n<td>PROGBITS</td>\n<td>00200fc0</td>\n<td>000fc0</td>\n<td>00040</td>\n<td>0008</td>\n<td>WA</td>\n<td>0</td>\n<td>0</td>\n<td>8</td>\n</tr>\n<tr>\n<td>[24]</td>\n<td>.got.plt</td>\n<td>PROGBITS</td>\n<td>00201000</td>\n<td>001000</td>\n<td>00030</td>\n<td>0008</td>\n<td>WA</td>\n<td>0</td>\n<td>0</td>\n<td>8</td>\n</tr>\n<tr>\n<td>[25]</td>\n<td>.data</td>\n<td>PROGBITS</td>\n<td>00201030</td>\n<td>001030</td>\n<td>00014</td>\n<td>0000</td>\n<td>WA</td>\n<td>0</td>\n<td>0</td>\n<td>8</td>\n</tr>\n<tr>\n<td>[26]</td>\n<td>.bss</td>\n<td>NOBITS</td>\n<td>00201044</td>\n<td>001044</td>\n<td>0000c</td>\n<td>0000</td>\n<td>WA</td>\n<td>0</td>\n<td>0</td>\n<td>4</td>\n</tr>\n</tbody></table>\n<p>程序声明如下:   </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">extern int g_static_so_bss;</span><br><span class=\"line\">extern int g_static_so_data;</span><br><span class=\"line\">extern int errno;</span><br></pre></td></tr></table></figure>\n<p>当前汇编访问的是:g_static_so_data<br>.dyn global data如下  </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">000000200fc0  000100000006 R_X86_64_GLOB_DAT 0000000000000000 __cxa_finalize@GLIBC_2.2.5 + 0</span><br><span class=\"line\">000000200fc8  000300000006 R_X86_64_GLOB_DAT 0000000000000000 _Jv_RegisterClasses + 0</span><br><span class=\"line\">000000200fd0  000400000006 R_X86_64_GLOB_DAT 0000000000000000 g_static_so_data + 0</span><br><span class=\"line\">000000200fd8  000500000006 R_X86_64_GLOB_DAT 0000000000000000 g_static_so_bss + 0</span><br><span class=\"line\">000000200fe0  000800000006 R_X86_64_GLOB_DAT 0000000000000000 _ITM_deregisterTMClone + 0</span><br><span class=\"line\">000000200fe8  000900000006 R_X86_64_GLOB_DAT 0000000000000000 __libc_start_main@GLIBC_2.2.5 + 0</span><br><span class=\"line\">000000200ff0  000a00000006 R_X86_64_GLOB_DAT 0000000000000000 __gmon_start__ + 0</span><br><span class=\"line\">000000200ff8  000b00000006 R_X86_64_GLOB_DAT 0000000000000000 _ITM_registerTMCloneTa + 0</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"共享库中对g-static-so-data的访问\"><a href=\"#共享库中对g-static-so-data的访问\" class=\"headerlink\" title=\"共享库中对g_static_so_data的访问\"></a>共享库中对g_static_so_data的访问</h5><p>如果代码模型为大型 则和可执行程序中的代码段一致 如果是small或者median 共享库仍然会对全局变量走GOT表<br>汇编如下:    </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">894:   48 8b 05 45 07 20 00    mov    0x200745(%rip),%rax        # 200fe0 &lt;g_static_so_bss@@Base-0x60&gt;</span><br><span class=\"line\">89b:   48 8b 00                mov    (%rax),%rax</span><br><span class=\"line\">89e:   01 c2                   add    %eax,%edx</span><br></pre></td></tr></table></figure>\n<p>894: 取GOT中存储 g_static_so_bss 的项地址 并把内容(g_static_so_bss的地址)存放到%rax中<br>89b: 取 g_static_so_bss 的内容<br>89e: 加到%edx上  </p>\n<h5 id=\"small-code-mode\"><a href=\"#small-code-mode\" class=\"headerlink\" title=\"small code mode:\"></a>small code mode:</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">g++-6 -O0 so.so main.cpp lib.cpp -pie -fPIE  -mcmodel&#x3D;small</span><br></pre></td></tr></table></figure>\n\n<p>假设了全局变量的存储位置在低端内存, 因此该全局变量直接定义在主程序的data段, 在so文件中仍然通过.got找到真实地址.<br>其类型R_X86_64_COPY<br>在主程序的汇编代码只有一行</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">9f0:   c7 05 4e 06 20 00 e8    movl   $0x3e8,0x20064e(%rip)        # 201048 &lt;g_static_so_data&gt;</span><br></pre></td></tr></table></figure>\n<p>.dyn global</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">偏移量          信息           类型           符号值        符号名称 + 加数</span><br><span class=\"line\">000000201048  001200000005 R_X86_64_COPY     0000000000201048 g_static_so_data + 0</span><br><span class=\"line\">000000201050  001000000005 R_X86_64_COPY     0000000000201050 g_static_so_bss + 0</span><br></pre></td></tr></table></figure>\n\n<p>.dyn so </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">000000200fd8  001300000006 R_X86_64_GLOB_DAT 0000000000201030 g_static_so_data + 0</span><br><span class=\"line\">000000200fe0  001000000006 R_X86_64_GLOB_DAT 0000000000201040 g_static_so_bss + 0</span><br></pre></td></tr></table></figure>\n\n<p>.symver指令</p>\n<blockquote>\n<p>g_static_so_data@@Base-0x58  的意思是: g_static_so_data的符号值-0x58 也就是g_static_so_data的偏移量  </p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">0000000000201030 - 000000200fd8 &#x3D; 0x58</span><br></pre></td></tr></table></figure>\n\n\n<h5 id=\"备注说明\"><a href=\"#备注说明\" class=\"headerlink\" title=\"备注说明\"></a>备注说明</h5><p>共享库中 无论是large还是small, 都会走so的got表, 区别在于会不会使用movabs进行64位的偏移计算<br>got表的位置可能紧接着.text并且设置为只读<br><a href=\"https://systemoverlord.com/2017/03/19/got-and-plt-for-pwning.html\" target=\"_blank\" rel=\"noopener\">RELRO</a>   </p>\n<p>通过got表访问全局变量:  </p>\n<ol>\n<li>通过RIP-R找到GOT表的位置.   相对于.text固定的偏移量 (large不假定大小)     </li>\n<li>通过项索引偏移找到存储该变量地址的地址并解引用得到 变量地址  <ol>\n<li>(large不假定大小, medium会区分把&lt;64k的数据链接到低内存中 多个数据段.ldata(largedata))  </li>\n</ol>\n</li>\n<li>解引用并使用  </li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mov  (%rbx,%rax,1),%rax</span><br></pre></td></tr></table></figure>\n<p>这行代码可以优化为一个立即数偏移寻址  即</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mov    0x200745(%rip),%rax</span><br></pre></td></tr></table></figure>\n\n<p>当前代码段到GOT表的偏移</p>\n<p>但是在large模型中 </p>\n<p>通过rip寻址的指令中 偏移量不是64位的  因此需要先算一个小的偏移量 再通过支持64bit的 movabs(mov) 添加上一个64bit的偏移</p>\n<h5 id=\"RELRO-Relocation-Read-Only\"><a href=\"#RELRO-Relocation-Read-Only\" class=\"headerlink\" title=\"RELRO  Relocation Read Only\"></a>RELRO  Relocation Read Only</h5><p>重定位只读技术<br>动态链接器在处理完GOT表后将其设为只读以提高安全性.  </p>\n<p>本文测试环境中只读. (实际上这是一个可以成为较为古老的技术了)  </p>\n<blockquote>\n<p>Linux version 4.9.0-4-amd64 (<a href=\"mailto:debian-kernel@lists.debian.org\">debian-kernel@lists.debian.org</a>)<br>(gcc version 6.3.0 20170516 (Debian 6.3.0-18) )<br>#1 SMP Debian 4.9.65-3+deb9u1 (2017-12-23)<br>.zsummer  </p>\n</blockquote>\n<p>GOT表为R  只读段.<br>.got.plt存储plt的got仍然是读写段 (惰性加载机制决定, 可以选择非惰性+ro来完成全只读化)  </p>\n<h3 id=\"调用惯例Calling-Conventions\"><a href=\"#调用惯例Calling-Conventions\" class=\"headerlink\" title=\"调用惯例Calling Conventions\"></a>调用惯例Calling Conventions</h3><p>计算机中Corotine分两种 Coroutine和Subroutine 前者对应协程 后者对应函数  </p>\n<ul>\n<li>call a routine (trasfer control to procedure)  跳转到目标routine  </li>\n<li>pass arguments  传递参数  <ul>\n<li>fixed length</li>\n<li>variable length</li>\n<li>recursively  </li>\n</ul>\n</li>\n<li>return to the caller  返回调用者地址  <ul>\n<li>putting results in a place where caller an find them  </li>\n</ul>\n</li>\n<li>manage register  管理寄存器 </li>\n</ul>\n<h5 id=\"参数压栈顺序\"><a href=\"#参数压栈顺序\" class=\"headerlink\" title=\"参数压栈顺序\"></a>参数压栈顺序</h5><p>标准的linux ABI调用约定中<br><a href=\"\">System V Application Binary Interface—AMD64 Architecture Processor Supplement</a>   </p>\n<h6 id=\"Caller-Save和Callee-Save\"><a href=\"#Caller-Save和Callee-Save\" class=\"headerlink\" title=\"Caller Save和Callee Save\"></a>Caller Save和Callee Save</h6><p>当产生函数调用时 子函数内通常也会使用到通用寄存器 那么这些寄存器中之前保存的调用者(父函数)的值就会被覆盖<br>为了避免数据覆盖而导致从子函数返回时寄存器中的数据不可恢复 CPU 体系结构中就规定了通用寄存器的保存方式   </p>\n<ul>\n<li><p>Casller Save ‘调用者保存’ 在发起一个调用前需要保存(子例程直接覆盖使用) </p>\n<ul>\n<li>在进入子函数调用前, 调用者需要保存这些寄存器的值.   <ul>\n<li>一般做法是进入子函数调用前把这些寄存器压入栈中    </li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>Callee Save ‘被调用者保存’ (子例程使用前需要先保存)   </p>\n<ul>\n<li>在进入子函数调用后, 在使用这些寄存器前, 被调用者会保存这些寄存器的内容,并在使用后恢复  </li>\n<li>这种比较特殊也比较麻烦, 因为一旦接受这个设定, 那么所有subroutine都要进行合适的push并保证pop恢复.     </li>\n<li></li>\n</ul>\n</li>\n<li><p>cross</p>\n</li>\n</ul>\n<h3 id=\"工具\"><a href=\"#工具\" class=\"headerlink\" title=\"工具\"></a>工具</h3><ul>\n<li>objdump -S 查看汇编指令  </li>\n<li>gdb  <ul>\n<li>gdb 通过<code>layout regs</code>打开寄存器显示, 通过<code>set disassemble-next-line on</code>打开汇编  </li>\n<li>gdb 通过peda插件字节显示汇编和寄存器  和上面的原生方式选择一个即可, peda默认显示是intex语法    </li>\n<li>disas反汇编命令,直接disas是反汇编当前函数<ul>\n<li>disas /r (显示汇编指令对应十六进制值)   </li>\n<li>disas /m (如果有源码,显示对应行源码)   </li>\n</ul>\n</li>\n<li>intel语法<ul>\n<li>set disassembly-flavor intel</li>\n<li>set disassembly-flavor att</li>\n</ul>\n</li>\n<li>gdb关闭ASLR：<ul>\n<li>set disable-randomization on</li>\n</ul>\n</li>\n<li>开启ASLR：<ul>\n<li>set disable-randomization off</li>\n</ul>\n</li>\n<li>查看ASLR状态：<ul>\n<li>show disable-randomization</li>\n</ul>\n</li>\n<li>查看二进制  <ul>\n<li><code>x /1ag addr</code><!-- more -->\n<h4 id=\"PEDA插件\"><a href=\"#PEDA插件\" class=\"headerlink\" title=\"PEDA插件\"></a>PEDA插件</h4>peda默认设置的是intel的语法风格<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone https:&#x2F;&#x2F;github.com&#x2F;longld&#x2F;peda.git ~&#x2F;peda</span><br><span class=\"line\">echo &quot;source ~&#x2F;peda&#x2F;peda.py&quot; &gt;&gt; ~&#x2F;.gdbinit</span><br><span class=\"line\">echo &quot;DONE! debug your program with gdb and enjoy&quot;</span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>aslr – Show/set ASLR setting of GDB</li>\n<li>checksec – Check for various security options of binary</li>\n<li>dumpargs – Display arguments passed to a function when stopped at a call instruction</li>\n<li>dumprop – Dump all ROP gadgets in specific memory range</li>\n<li>elfheader – Get headers information from debugged ELF file</li>\n<li>elfsymbol – Get non-debugging symbol information from an ELF file</li>\n<li>lookup – Search for all addresses/references to addresses which belong to a memory range</li>\n<li>patch – Patch memory start at an address with string/hexstring/int</li>\n<li>pattern – Generate, search, or write a cyclic pattern to memory</li>\n<li>procinfo – Display various info from /proc/pid/</li>\n<li>pshow – Show various PEDA options and other settings</li>\n<li>pset – Set various PEDA options and other settings</li>\n<li>readelf – Get headers information from an ELF file</li>\n<li>ropgadget – Get common ROP gadgets of binary or library</li>\n<li>ropsearch – Search for ROP gadgets in memory</li>\n<li>searchmem|find – Search for a pattern in memory; support regex search</li>\n<li>shellcode – Generate or download common shellcodes.</li>\n<li>skeleton – Generate python exploit code template</li>\n<li>vmmap – Get virtual mapping address ranges of section(s) in debugged process</li>\n<li>xormem – XOR a memory region with a key</li>\n</ul>"},{"title":"静态链接过程","date":"2019-11-28T16:00:00.000Z","author":"yawei.zhang","_content":"\n### 目录  \n\n---  \n\n<!-- TOC -->\n\n- [目录](#目录)\n- [基本编译链接流程](#基本编译链接流程)\n- [静态链接过程概述](#静态链接过程概述)\n- [静态链接过程流程追踪和代码验证](#静态链接过程流程追踪和代码验证)\n  - [测试源代码](#测试源代码)\n  - [生成汇编代码 (从这里开始会有两个分支代码 NON-PIC 和 PIC对照)](#生成汇编代码-从这里开始会有两个分支代码-non-pic-和-pic对照)\n    - [汇编代码 (相对位置版本)](#汇编代码-相对位置版本)\n    - [汇编代码 (位置无关版本)](#汇编代码-位置无关版本)\n  - [生成ELF的可重定位文件](#生成elf的可重定位文件)\n    - [可重定向文件和汇编指令 (相对位置版本)](#可重定向文件和汇编指令-相对位置版本)\n    - [可重定向文件和汇编指令 (位置无关版本)](#可重定向文件和汇编指令-位置无关版本)\n  - [链接为可执行文件(或者共享库)](#链接为可执行文件或者共享库)\n    - [可执行文件 (相对位置的非PIE(EXEC)版本)](#可执行文件-相对位置的非pieexec版本)\n    - [可执行文件 (相对位置的PIE(DYN)版本)](#可执行文件-相对位置的piedyn版本)\n    - [可执行文件 (位置无关的非PIE(EXEC)版本)](#可执行文件-位置无关的非pieexec版本)\n    - [可执行文件 (位置无关的PIE(DYN)版本)](#可执行文件-位置无关的piedyn版本)\n\n<!-- /TOC -->\n\n### 基本编译链接流程   \n* 编译并输出汇编代码  \n  * g++ -S lib.cpp -o lib.s \n* 打包成ELF可重定位文件 ELF TYPE= ET_REL  即.o文件  \n  * g++ -c lib.s -o lib.o \n* 链接到动态库或者可执行文件\n  * g++ lib.o -o a.out   \n  * g++ -shared lib.o -o a.out \n\n<!-- more -->\n\n### 静态链接过程概述  \n\n### 静态链接过程流程追踪和代码验证\n#### 测试源代码    \n``` C++\nint g_static_bss = 0;\nint g_static_data = 182;\nconst int g_static_text = 1987;\nint main_func(int a, int b)\n{\n   return a+b + g_static_text;\n}\n\n\nint main(int argc, char *argv[])\n{\n   int a = 0;\n   g_static_bss = argc;\n   a += main_func(g_static_bss, g_static_data);\n   return a;\n}\n```\n\n#### 生成汇编代码 (从这里开始会有两个分支代码 NON-PIC 和 PIC对照)    \n\n在这段代码中 \n\n* g_static_bss  \n  * 为全局的符号(给链接器看到) \n  * 被放在.bss字段(未初始化数据段, Block Started by Symbol)中 \n  * 占用4个字节  类型是object 初始化为0   \n  * 4字节对齐  \n\n* g_static_data  \n  * 为全局的符号(给链接器看到) \n  * 被放在.data字段(数据段)中 \n  * 占用4个字节  类型是object 初始化为182   \n  * 4字节对齐  \n\n* _ZL13g_static_text  \n  * 为全局的符号(给链接器看到) \n  * 被放在.rodata字段(只读数据段)中 \n  * 占用4个字节  类型是object 初始化为1987   \n  * 4字节对齐  \n\n* _Z9main_funcii  \n  * 为全局的符号(给链接器看到) \n  * 被放在.text字段(代码段)中 \n  * 占用4个字节  类型是function  \n\n* main  \n  * 为全局的符号(给链接器看到) \n  * 被放在.text字段(代码段)中 \n  * 占用4个字节  类型是function  \n\n* GOTPCREL \n  * PC-REL是指的位置相对代码   \n  * 这里是指的走GOT表的位置相对代码   \n\n* 在下面的对照中  对于全局符号的访问有如下区别\n  * 访问全局对象时 PIC 版本会先从相对当前代码位置的GOT表中读取全局对象的地址到RAX 然后再读取其内容   \n  * 非PIC版本则直接用记录好的地址读取其内容  \n\n\n##### 汇编代码 (相对位置版本)\n``` ARMASM\n    .file    \"test.cpp\"\n    .globl    g_static_bss\n    .bss\n    .align 4\n    .type    g_static_bss, @object\n    .size    g_static_bss, 4\ng_static_bss:\n    .zero    4\n    .globl    g_static_data\n    .data\n    .align 4\n    .type    g_static_data, @object\n    .size    g_static_data, 4\ng_static_data:\n    .long    182\n    .section    .rodata\n    .align 4\n    .type    _ZL13g_static_text, @object\n    .size    _ZL13g_static_text, 4\n_ZL13g_static_text:\n    .long    1987\n    .text\n    .globl    _Z9main_funcii\n    .type    _Z9main_funcii, @function\n_Z9main_funcii:\n.LFB0:\n    .cfi_startproc\n    pushq    %rbp\n    .cfi_def_cfa_offset 16\n    .cfi_offset 6, -16\n    movq    %rsp, %rbp\n    .cfi_def_cfa_register 6\n    movl    %edi, -4(%rbp)\n    movl    %esi, -8(%rbp)\n    movl    -4(%rbp), %edx\n    movl    -8(%rbp), %eax\n    addl    %edx, %eax\n    addl    $1987, %eax\n    popq    %rbp\n    .cfi_def_cfa 7, 8\n    ret\n    .cfi_endproc\n.LFE0:\n    .size    _Z9main_funcii, .-_Z9main_funcii\n    .globl    main\n    .type    main, @function\nmain:\n.LFB1:\n    .cfi_startproc\n    pushq    %rbp\n    .cfi_def_cfa_offset 16\n    .cfi_offset 6, -16\n    movq    %rsp, %rbp\n    .cfi_def_cfa_register 6\n    subq    $32, %rsp\n    movl    %edi, -20(%rbp)\n    movq    %rsi, -32(%rbp)\n    movl    $0, -4(%rbp)\n    movl    -20(%rbp), %eax\n    movl    %eax, g_static_bss(%rip)\n    movl    g_static_data(%rip), %edx\n    movl    g_static_bss(%rip), %eax\n    movl    %edx, %esi\n    movl    %eax, %edi\n    call    _Z9main_funcii\n    addl    %eax, -4(%rbp)\n    movl    -4(%rbp), %eax\n    leave\n    .cfi_def_cfa 7, 8\n    ret\n    .cfi_endproc\n.LFE1:\n    .size    main, .-main\n    .ident    \"GCC: (Debian 6.3.0-18+deb9u1) 6.3.0 20170516\"\n    .section    .note.GNU-stack,\"\",@progbits\n\n```\n\n##### 汇编代码 (位置无关版本) \n``` ARMASM\n    .file    \"test.cpp\"\n    .globl    g_static_bss\n    .bss\n    .align 4\n    .type    g_static_bss, @object\n    .size    g_static_bss, 4\ng_static_bss:\n    .zero    4\n    .globl    g_static_data\n    .data\n    .align 4\n    .type    g_static_data, @object\n    .size    g_static_data, 4\ng_static_data:\n    .long    182\n    .section    .rodata\n    .align 4\n    .type    _ZL13g_static_text, @object\n    .size    _ZL13g_static_text, 4\n_ZL13g_static_text:\n    .long    1987\n    .text\n    .globl    _Z9main_funcii\n    .type    _Z9main_funcii, @function\n_Z9main_funcii:\n.LFB0:\n    .cfi_startproc\n    pushq    %rbp\n    .cfi_def_cfa_offset 16\n    .cfi_offset 6, -16\n    movq    %rsp, %rbp\n    .cfi_def_cfa_register 6\n    movl    %edi, -4(%rbp)\n    movl    %esi, -8(%rbp)\n    movl    -4(%rbp), %edx\n    movl    -8(%rbp), %eax\n    addl    %edx, %eax\n    addl    $1987, %eax\n    popq    %rbp\n    .cfi_def_cfa 7, 8\n    ret\n    .cfi_endproc\n.LFE0:\n    .size    _Z9main_funcii, .-_Z9main_funcii\n    .globl    main\n    .type    main, @function\nmain:\n.LFB1:\n    .cfi_startproc\n    pushq    %rbp\n    .cfi_def_cfa_offset 16\n    .cfi_offset 6, -16\n    movq    %rsp, %rbp\n    .cfi_def_cfa_register 6\n    subq    $32, %rsp\n    movl    %edi, -20(%rbp)\n    movq    %rsi, -32(%rbp)\n    movl    $0, -4(%rbp)\n    movq    g_static_bss@GOTPCREL(%rip), %rax\n    movl    -20(%rbp), %edx\n    movl    %edx, (%rax)\n    movq    g_static_data@GOTPCREL(%rip), %rax\n    movl    (%rax), %edx\n    movq    g_static_bss@GOTPCREL(%rip), %rax\n    movl    (%rax), %eax\n    movl    %edx, %esi\n    movl    %eax, %edi\n    call    _Z9main_funcii@PLT\n    addl    %eax, -4(%rbp)\n    movl    -4(%rbp), %eax\n    leave\n    .cfi_def_cfa 7, 8\n    ret\n    .cfi_endproc\n.LFE1:\n    .size    main, .-main\n    .ident    \"GCC: (Debian 6.3.0-18+deb9u1) 6.3.0 20170516\"\n    .section    .note.GNU-stack,\"\",@progbits\n```\n\n#### 生成ELF的可重定位文件\n\n* .rela.text 重定位section\n  * 包含了所有需要进行重定位的信息, 偏移量是相对于.text  类型则是注明了重定位的方式  \n\n\n* .rela.eh_frame 重定位section  \n* .symtab 符号表section  \n  * Value 标记了符号所在的偏移地址 \n  * SIZE 标记了代码或者变量占的大小  \n  * Ndx 如果不在本编译单元 类型为NOTYPE Ndx为UND   \n  * Bind 全局还是局部符号(是否链接器可见)  \n    * rodata的符号为local是因为直接被编译到了代码中 \n      * 例如g_static_text 1987 => ```add $0x7c3,%eax```\n\n* .rela.eh_frame Call Frame Information \n  * 提供了异常的Stack Unwind 支持  \n  * 这张表提供了'给定一个PC值, 可以查到上一个stack frame位置'\n  * Stack Unwind 指从最內层函数呼叫堆栈开始，找到最外层  \n    * _Unwind_Backtrace()   \n    * uw_frame_state_for() \n    * uw_update_context() \n    * uw_update_context_1()  \n\n\n* PC32 的PC是指的 program counter   在本文的汇编中对应寄存器的RIP \n* PC32 在重定位类型中代表相对指令位置的重定位\n* PLT 则代表使用 过程链接表 进行重定位 (动态定位)   \n* GOT 是全局偏移表  \n* PGOT 是私有全局偏移表  \n\n在这个过程中 \n无论是PIC的PLT调用还是PC调用, 对于call 指令 他的操作数都是0 \n无论是GOTPCREL还是PC 对全局对象符号的访问中 操作数也都是0  \n在重定位节中标记了这些需要在链接过程中重建的具体位置和内容 \n\n\n##### 可重定向文件和汇编指令 (相对位置版本)\n``` ARMASM\n重定位节 '.rela.text' 位于偏移量 0x2c8 含有 4 个条目：\n  偏移量          信息           类型           符号值        符号名称 + 加数\n000000000034  000a00000002 R_X86_64_PC32     0000000000000000 g_static_bss - 4\n00000000003a  000b00000002 R_X86_64_PC32     0000000000000000 g_static_data - 4\n000000000040  000a00000002 R_X86_64_PC32     0000000000000000 g_static_bss - 4\n000000000049  000c00000002 R_X86_64_PC32     0000000000000000 _Z9main_funcii - 4\n\n重定位节 '.rela.eh_frame' 位于偏移量 0x328 含有 2 个条目：\n  偏移量          信息           类型           符号值        符号名称 + 加数\n000000000020  000200000002 R_X86_64_PC32     0000000000000000 .text + 0\n000000000040  000200000002 R_X86_64_PC32     0000000000000000 .text + 19\n\nThe decoding of unwind sections for machine type Advanced Micro Devices X86-64 is not currently supported.\n\nSymbol table '.symtab' contains 14 entries:\n   Num:    Value          Size Type    Bind   Vis      Ndx Name\n     0: 0000000000000000     0 NOTYPE  LOCAL  DEFAULT  UND \n     1: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS test.cpp\n     2: 0000000000000000     0 SECTION LOCAL  DEFAULT    1 \n     3: 0000000000000000     0 SECTION LOCAL  DEFAULT    3 \n     4: 0000000000000000     0 SECTION LOCAL  DEFAULT    4 \n     5: 0000000000000000     0 SECTION LOCAL  DEFAULT    5 \n     6: 0000000000000000     4 OBJECT  LOCAL  DEFAULT    5 _ZL13g_static_text\n     7: 0000000000000000     0 SECTION LOCAL  DEFAULT    7 \n     8: 0000000000000000     0 SECTION LOCAL  DEFAULT    8 \n     9: 0000000000000000     0 SECTION LOCAL  DEFAULT    6 \n    10: 0000000000000000     4 OBJECT  GLOBAL DEFAULT    4 g_static_bss\n    11: 0000000000000000     4 OBJECT  GLOBAL DEFAULT    3 g_static_data\n    12: 0000000000000000    25 FUNC    GLOBAL DEFAULT    1 _Z9main_funcii\n    13: 0000000000000019    60 FUNC    GLOBAL DEFAULT    1 main\n\n.text\n0000000000000000 <_Z9main_funcii>:\n   0:   55                      push   %rbp\n   1:   48 89 e5                mov    %rsp,%rbp\n   4:   89 7d fc                mov    %edi,-0x4(%rbp)\n   7:   89 75 f8                mov    %esi,-0x8(%rbp)\n   a:   8b 55 fc                mov    -0x4(%rbp),%edx\n   d:   8b 45 f8                mov    -0x8(%rbp),%eax\n  10:   01 d0                   add    %edx,%eax\n  12:   05 c3 07 00 00          add    $0x7c3,%eax\n  17:   5d                      pop    %rbp\n  18:   c3                      retq   \n\n0000000000000019 <main>:\n  19:   55                      push   %rbp\n  1a:   48 89 e5                mov    %rsp,%rbp\n  1d:   48 83 ec 20             sub    $0x20,%rsp\n  21:   89 7d ec                mov    %edi,-0x14(%rbp)\n  24:   48 89 75 e0             mov    %rsi,-0x20(%rbp)\n  28:   c7 45 fc 00 00 00 00    movl   $0x0,-0x4(%rbp)\n  2f:   8b 45 ec                mov    -0x14(%rbp),%eax\n  32:   89 05 00 00 00 00       mov    %eax,0x0(%rip)        # 38 <main+0x1f>\n  38:   8b 15 00 00 00 00       mov    0x0(%rip),%edx        # 3e <main+0x25>\n  3e:   8b 05 00 00 00 00       mov    0x0(%rip),%eax        # 44 <main+0x2b>\n  44:   89 d6                   mov    %edx,%esi\n  46:   89 c7                   mov    %eax,%edi\n  48:   e8 00 00 00 00          callq  4d <main+0x34>\n  4d:   01 45 fc                add    %eax,-0x4(%rbp)\n  50:   8b 45 fc                mov    -0x4(%rbp),%eax\n  53:   c9                      leaveq \n  54:   c3                      retq   \n```\n\n\n##### 可重定向文件和汇编指令 (位置无关版本)\n``` ARMASM\n重定位节 '.rela.text' 位于偏移量 0x300 含有 4 个条目：\n  偏移量          信息           类型           符号值        符号名称 + 加数\n000000000032  000a0000002a R_X86_64_REX_GOTP 0000000000000000 g_static_bss - 4\n00000000003e  000b0000002a R_X86_64_REX_GOTP 0000000000000000 g_static_data - 4\n000000000047  000a0000002a R_X86_64_REX_GOTP 0000000000000000 g_static_bss - 4\n000000000052  000c00000004 R_X86_64_PLT32    0000000000000000 _Z9main_funcii - 4\n\n重定位节 '.rela.eh_frame' 位于偏移量 0x360 含有 2 个条目：\n  偏移量          信息           类型           符号值        符号名称 + 加数\n000000000020  000200000002 R_X86_64_PC32     0000000000000000 .text + 0\n000000000040  000200000002 R_X86_64_PC32     0000000000000000 .text + 19\n\nThe decoding of unwind sections for machine type Advanced Micro Devices X86-64 is not currently supported.\n\nSymbol table '.symtab' contains 15 entries:\n   Num:    Value          Size Type    Bind   Vis      Ndx Name\n     0: 0000000000000000     0 NOTYPE  LOCAL  DEFAULT  UND \n     1: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS test.cpp\n     2: 0000000000000000     0 SECTION LOCAL  DEFAULT    1 \n     3: 0000000000000000     0 SECTION LOCAL  DEFAULT    3 \n     4: 0000000000000000     0 SECTION LOCAL  DEFAULT    4 \n     5: 0000000000000000     0 SECTION LOCAL  DEFAULT    5 \n     6: 0000000000000000     4 OBJECT  LOCAL  DEFAULT    5 _ZL13g_static_text\n     7: 0000000000000000     0 SECTION LOCAL  DEFAULT    7 \n     8: 0000000000000000     0 SECTION LOCAL  DEFAULT    8 \n     9: 0000000000000000     0 SECTION LOCAL  DEFAULT    6 \n    10: 0000000000000000     4 OBJECT  GLOBAL DEFAULT    4 g_static_bss\n    11: 0000000000000000     4 OBJECT  GLOBAL DEFAULT    3 g_static_data\n    12: 0000000000000000    25 FUNC    GLOBAL DEFAULT    1 _Z9main_funcii\n    13: 0000000000000019    69 FUNC    GLOBAL DEFAULT    1 main\n    14: 0000000000000000     0 NOTYPE  GLOBAL DEFAULT  UND _GLOBAL_OFFSET_TABLE_\n\n.text\n0000000000000000 <_Z9main_funcii>:\n   0:   55                      push   %rbp\n   1:   48 89 e5                mov    %rsp,%rbp\n   4:   89 7d fc                mov    %edi,-0x4(%rbp)\n   7:   89 75 f8                mov    %esi,-0x8(%rbp)\n   a:   8b 55 fc                mov    -0x4(%rbp),%edx\n   d:   8b 45 f8                mov    -0x8(%rbp),%eax\n  10:   01 d0                   add    %edx,%eax\n  12:   05 c3 07 00 00          add    $0x7c3,%eax\n  17:   5d                      pop    %rbp\n  18:   c3                      retq   \n\n0000000000000019 <main>:\n  19:   55                      push   %rbp\n  1a:   48 89 e5                mov    %rsp,%rbp\n  1d:   48 83 ec 20             sub    $0x20,%rsp\n  21:   89 7d ec                mov    %edi,-0x14(%rbp)\n  24:   48 89 75 e0             mov    %rsi,-0x20(%rbp)\n  28:   c7 45 fc 00 00 00 00    movl   $0x0,-0x4(%rbp)\n  2f:   48 8b 05 00 00 00 00    mov    0x0(%rip),%rax        # 36 <main+0x1d>\n  36:   8b 55 ec                mov    -0x14(%rbp),%edx\n  39:   89 10                   mov    %edx,(%rax)\n  3b:   48 8b 05 00 00 00 00    mov    0x0(%rip),%rax        # 42 <main+0x29>\n  42:   8b 10                   mov    (%rax),%edx\n  44:   48 8b 05 00 00 00 00    mov    0x0(%rip),%rax        # 4b <main+0x32>\n  4b:   8b 00                   mov    (%rax),%eax\n  4d:   89 d6                   mov    %edx,%esi\n  4f:   89 c7                   mov    %eax,%edi\n  51:   e8 00 00 00 00          callq  56 <main+0x3d>\n  56:   01 45 fc                add    %eax,-0x4(%rbp)\n  59:   8b 45 fc                mov    -0x4(%rbp),%eax\n  5c:   c9                      leaveq \n  5d:   c3                      retq \n```\n\n#### 链接为可执行文件(或者共享库)  \n\n在链接为目标文件时, 会合并处理每个目标文件, 生成plt代码 确定GOT(PGOT)的相对位置等  \n\n在相对位置的两个版本中均可以看到对全局符号的访问均正确填充了相对位移  \n\nPIE版本的区别主要是PIE使用了相对位置 连ELF类型都变成了DYN   \n非PIE版本则使用了绝对位置 \n测试代码没有调用外部函数符号 所以在PIC版本的汇编指令中并没有看到PLT指令\n\n##### 可执行文件 (相对位置的非PIE(EXEC)版本)\n``` ARMASM\n重定位节 '.rela.dyn' 位于偏移量 0x388 含有 2 个条目：\n  偏移量          信息           类型           符号值        符号名称 + 加数\n000000600ff0  000100000006 R_X86_64_GLOB_DAT 0000000000000000 __libc_start_main@GLIBC_2.2.5 + 0\n000000600ff8  000200000006 R_X86_64_GLOB_DAT 0000000000000000 __gmon_start__ + 0\n\nThe decoding of unwind sections for machine type Advanced Micro Devices X86-64 is not currently supported.\n\nSymbol table '.dynsym' contains 3 entries:\n   Num:    Value          Size Type    Bind   Vis      Ndx Name\n     0: 0000000000000000     0 NOTYPE  LOCAL  DEFAULT  UND \n     1: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND __libc_start_main@GLIBC_2.2.5 (2)\n     2: 0000000000000000     0 NOTYPE  WEAK   DEFAULT  UND __gmon_start__\n\nSymbol table '.symtab' contains 65 entries:\n   Num:    Value          Size Type    Bind   Vis      Ndx Name\n     0: 0000000000000000     0 NOTYPE  LOCAL  DEFAULT  UND \n     1: 0000000000400238     0 SECTION LOCAL  DEFAULT    1 \n     2: 0000000000400254     0 SECTION LOCAL  DEFAULT    2 \n     3: 0000000000400274     0 SECTION LOCAL  DEFAULT    3 \n     4: 0000000000400298     0 SECTION LOCAL  DEFAULT    4 \n     5: 00000000004002b8     0 SECTION LOCAL  DEFAULT    5 \n     6: 0000000000400300     0 SECTION LOCAL  DEFAULT    6 \n     7: 0000000000400360     0 SECTION LOCAL  DEFAULT    7 \n     8: 0000000000400368     0 SECTION LOCAL  DEFAULT    8 \n     9: 0000000000400388     0 SECTION LOCAL  DEFAULT    9 \n    10: 00000000004003b8     0 SECTION LOCAL  DEFAULT   10 \n    11: 00000000004003d0     0 SECTION LOCAL  DEFAULT   11 \n    12: 00000000004005a4     0 SECTION LOCAL  DEFAULT   12 \n    13: 00000000004005b0     0 SECTION LOCAL  DEFAULT   13 \n    14: 00000000004005b8     0 SECTION LOCAL  DEFAULT   14 \n    15: 00000000004005f8     0 SECTION LOCAL  DEFAULT   15 \n    16: 0000000000600e18     0 SECTION LOCAL  DEFAULT   16 \n    17: 0000000000600e20     0 SECTION LOCAL  DEFAULT   17 \n    18: 0000000000600e28     0 SECTION LOCAL  DEFAULT   18 \n    19: 0000000000600e30     0 SECTION LOCAL  DEFAULT   19 \n    20: 0000000000600ff0     0 SECTION LOCAL  DEFAULT   20 \n    21: 0000000000601000     0 SECTION LOCAL  DEFAULT   21 \n    22: 0000000000601018     0 SECTION LOCAL  DEFAULT   22 \n    23: 000000000060102c     0 SECTION LOCAL  DEFAULT   23 \n    24: 0000000000000000     0 SECTION LOCAL  DEFAULT   24 \n    25: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS crtstuff.c\n    26: 0000000000600e28     0 OBJECT  LOCAL  DEFAULT   18 __JCR_LIST__\n    27: 0000000000400410     0 FUNC    LOCAL  DEFAULT   11 deregister_tm_clones\n    28: 0000000000400450     0 FUNC    LOCAL  DEFAULT   11 register_tm_clones\n    29: 0000000000400490     0 FUNC    LOCAL  DEFAULT   11 __do_global_dtors_aux\n    30: 000000000060102c     1 OBJECT  LOCAL  DEFAULT   23 completed.6972\n    31: 0000000000600e20     0 OBJECT  LOCAL  DEFAULT   17 __do_global_dtors_aux_fin\n    32: 00000000004004b0     0 FUNC    LOCAL  DEFAULT   11 frame_dummy\n    33: 0000000000600e18     0 OBJECT  LOCAL  DEFAULT   16 __frame_dummy_init_array_\n    34: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS test.cpp\n    35: 00000000004005b4     4 OBJECT  LOCAL  DEFAULT   13 _ZL13g_static_text\n    36: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS crtstuff.c\n    37: 00000000004006f8     0 OBJECT  LOCAL  DEFAULT   15 __FRAME_END__\n    38: 0000000000600e28     0 OBJECT  LOCAL  DEFAULT   18 __JCR_END__\n    39: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS \n    40: 00000000004005b8     0 NOTYPE  LOCAL  DEFAULT   14 __GNU_EH_FRAME_HDR\n    41: 0000000000600e30     0 OBJECT  LOCAL  DEFAULT   19 _DYNAMIC\n    42: 0000000000600e20     0 NOTYPE  LOCAL  DEFAULT   16 __init_array_end\n    43: 0000000000600e18     0 NOTYPE  LOCAL  DEFAULT   16 __init_array_start\n    44: 0000000000601000     0 OBJECT  LOCAL  DEFAULT   21 _GLOBAL_OFFSET_TABLE_\n    45: 0000000000601028     4 OBJECT  GLOBAL DEFAULT   22 g_static_data\n    46: 000000000060102c     0 NOTYPE  GLOBAL DEFAULT   22 _edata\n    47: 0000000000601018     0 NOTYPE  WEAK   DEFAULT   22 data_start\n    48: 00000000004005b0     4 OBJECT  GLOBAL DEFAULT   13 _IO_stdin_used\n    49: 00000000004004d6    25 FUNC    GLOBAL DEFAULT   11 _Z9main_funcii\n    50: 00000000004004ef    60 FUNC    GLOBAL DEFAULT   11 main\n    51: 0000000000601020     0 OBJECT  GLOBAL HIDDEN    22 __dso_handle\n    52: 00000000004005a4     0 FUNC    GLOBAL DEFAULT   12 _fini\n    53: 0000000000400400     2 FUNC    GLOBAL HIDDEN    11 _dl_relocate_static_pie\n    54: 00000000004003d0    43 FUNC    GLOBAL DEFAULT   11 _start\n    55: 00000000004003b8     0 FUNC    GLOBAL DEFAULT   10 _init\n    56: 0000000000601030     0 OBJECT  GLOBAL HIDDEN    22 __TMC_END__\n    57: 0000000000601018     0 NOTYPE  GLOBAL DEFAULT   22 __data_start\n    58: 0000000000601038     0 NOTYPE  GLOBAL DEFAULT   23 _end\n    59: 000000000060102c     0 NOTYPE  GLOBAL DEFAULT   23 __bss_start\n    60: 0000000000400530   101 FUNC    GLOBAL DEFAULT   11 __libc_csu_init\n    61: 0000000000601030     4 OBJECT  GLOBAL DEFAULT   23 g_static_bss\n    62: 00000000004005a0     2 FUNC    GLOBAL DEFAULT   11 __libc_csu_fini\n    63: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND __libc_start_main@@GLIBC_\n    64: 0000000000000000     0 NOTYPE  WEAK   DEFAULT  UND __gmon_start__\n\n\n\n.text\n00000000004003b8 <_init>:\n  4003b8:       48 83 ec 08             sub    $0x8,%rsp\n  4003bc:       48 8b 05 35 0c 20 00    mov    0x200c35(%rip),%rax        # 600ff8 <__gmon_start__>\n  4003c3:       48 85 c0                test   %rax,%rax\n  4003c6:       74 02                   je     4003ca <_init+0x12>\n  4003c8:       ff d0                   callq  *%rax\n  4003ca:       48 83 c4 08             add    $0x8,%rsp\n  4003ce:       c3                      retq   \n\nDisassembly of section .text:\n\n00000000004003d0 <_start>:\n  4003d0:       31 ed                   xor    %ebp,%ebp\n  4003d2:       49 89 d1                mov    %rdx,%r9\n  4003d5:       5e                      pop    %rsi\n  4003d6:       48 89 e2                mov    %rsp,%rdx\n  4003d9:       48 83 e4 f0             and    $0xfffffffffffffff0,%rsp\n  4003dd:       50                      push   %rax\n  4003de:       54                      push   %rsp\n  4003df:       49 c7 c0 a0 05 40 00    mov    $0x4005a0,%r8\n  4003e6:       48 c7 c1 30 05 40 00    mov    $0x400530,%rcx\n  4003ed:       48 c7 c7 ef 04 40 00    mov    $0x4004ef,%rdi\n  4003f4:       ff 15 f6 0b 20 00       callq  *0x200bf6(%rip)        # 600ff0 <__libc_start_main@GLIBC_2.2.5>\n  4003fa:       f4                      hlt    \n  4003fb:       0f 1f 44 00 00          nopl   0x0(%rax,%rax,1)\n\n0000000000400400 <_dl_relocate_static_pie>:\n  400400:       f3 c3                   repz retq \n  400402:       66 2e 0f 1f 84 00 00    nopw   %cs:0x0(%rax,%rax,1)\n  400409:       00 00 00 \n  40040c:       0f 1f 40 00             nopl   0x0(%rax)\n\n0000000000400410 <deregister_tm_clones>:\n  400410:       b8 37 10 60 00          mov    $0x601037,%eax\n  400415:       55                      push   %rbp\n  400416:       48 2d 30 10 60 00       sub    $0x601030,%rax\n  40041c:       48 83 f8 0e             cmp    $0xe,%rax\n  400420:       48 89 e5                mov    %rsp,%rbp\n  400423:       76 1b                   jbe    400440 <deregister_tm_clones+0x30>\n  400425:       b8 00 00 00 00          mov    $0x0,%eax\n  40042a:       48 85 c0                test   %rax,%rax\n  40042d:       74 11                   je     400440 <deregister_tm_clones+0x30>\n  40042f:       5d                      pop    %rbp\n  400430:       bf 30 10 60 00          mov    $0x601030,%edi\n  400435:       ff e0                   jmpq   *%rax\n  400437:       66 0f 1f 84 00 00 00    nopw   0x0(%rax,%rax,1)\n  40043e:       00 00 \n  400440:       5d                      pop    %rbp\n  400441:       c3                      retq   \n  400442:       0f 1f 40 00             nopl   0x0(%rax)\n  400446:       66 2e 0f 1f 84 00 00    nopw   %cs:0x0(%rax,%rax,1)\n  40044d:       00 00 00 \n\n0000000000400450 <register_tm_clones>:\n  400450:       be 30 10 60 00          mov    $0x601030,%esi\n  400455:       55                      push   %rbp\n  400456:       48 81 ee 30 10 60 00    sub    $0x601030,%rsi\n  40045d:       48 c1 fe 03             sar    $0x3,%rsi\n  400461:       48 89 e5                mov    %rsp,%rbp\n  400464:       48 89 f0                mov    %rsi,%rax\n  400467:       48 c1 e8 3f             shr    $0x3f,%rax\n  40046b:       48 01 c6                add    %rax,%rsi\n  40046e:       48 d1 fe                sar    %rsi\n  400471:       74 15                   je     400488 <register_tm_clones+0x38>\n  400473:       b8 00 00 00 00          mov    $0x0,%eax\n  400478:       48 85 c0                test   %rax,%rax\n  40047b:       74 0b                   je     400488 <register_tm_clones+0x38>\n  40047d:       5d                      pop    %rbp\n  40047e:       bf 30 10 60 00          mov    $0x601030,%edi\n  400483:       ff e0                   jmpq   *%rax\n  400485:       0f 1f 00                nopl   (%rax)\n  400488:       5d                      pop    %rbp\n  400489:       c3                      retq   \n  40048a:       66 0f 1f 44 00 00       nopw   0x0(%rax,%rax,1)\n\n0000000000400490 <__do_global_dtors_aux>:\n  400490:       80 3d 95 0b 20 00 00    cmpb   $0x0,0x200b95(%rip)        # 60102c <_edata>\n  400497:       75 11                   jne    4004aa <__do_global_dtors_aux+0x1a>\n  400499:       55                      push   %rbp\n  40049a:       48 89 e5                mov    %rsp,%rbp\n  40049d:       e8 6e ff ff ff          callq  400410 <deregister_tm_clones>\n  4004a2:       5d                      pop    %rbp\n  4004a3:       c6 05 82 0b 20 00 01    movb   $0x1,0x200b82(%rip)        # 60102c <_edata>\n  4004aa:       f3 c3                   repz retq \n  4004ac:       0f 1f 40 00             nopl   0x0(%rax)\n\n00000000004004b0 <frame_dummy>:\n  4004b0:       bf 28 0e 60 00          mov    $0x600e28,%edi\n  4004b5:       48 83 3f 00             cmpq   $0x0,(%rdi)\n  4004b9:       75 05                   jne    4004c0 <frame_dummy+0x10>\n  4004bb:       eb 93                   jmp    400450 <register_tm_clones>\n  4004bd:       0f 1f 00                nopl   (%rax)\n  4004c0:       b8 00 00 00 00          mov    $0x0,%eax\n  4004c5:       48 85 c0                test   %rax,%rax\n  4004c8:       74 f1                   je     4004bb <frame_dummy+0xb>\n  4004ca:       55                      push   %rbp\n  4004cb:       48 89 e5                mov    %rsp,%rbp\n  4004ce:       ff d0                   callq  *%rax\n  4004d0:       5d                      pop    %rbp\n  4004d1:       e9 7a ff ff ff          jmpq   400450 <register_tm_clones>\n\n00000000004004d6 <_Z9main_funcii>:\n  4004d6:       55                      push   %rbp\n  4004d7:       48 89 e5                mov    %rsp,%rbp\n  4004da:       89 7d fc                mov    %edi,-0x4(%rbp)\n  4004dd:       89 75 f8                mov    %esi,-0x8(%rbp)\n  4004e0:       8b 55 fc                mov    -0x4(%rbp),%edx\n  4004e3:       8b 45 f8                mov    -0x8(%rbp),%eax\n  4004e6:       01 d0                   add    %edx,%eax\n  4004e8:       05 c3 07 00 00          add    $0x7c3,%eax\n  4004ed:       5d                      pop    %rbp\n  4004ee:       c3                      retq   \n\n00000000004004ef <main>:\n  4004ef:       55                      push   %rbp\n  4004f0:       48 89 e5                mov    %rsp,%rbp\n  4004f3:       48 83 ec 20             sub    $0x20,%rsp\n  4004f7:       89 7d ec                mov    %edi,-0x14(%rbp)\n  4004fa:       48 89 75 e0             mov    %rsi,-0x20(%rbp)\n  4004fe:       c7 45 fc 00 00 00 00    movl   $0x0,-0x4(%rbp)\n  400505:       8b 45 ec                mov    -0x14(%rbp),%eax\n  400508:       89 05 22 0b 20 00       mov    %eax,0x200b22(%rip)        # 601030 <__TMC_END__>\n  40050e:       8b 15 14 0b 20 00       mov    0x200b14(%rip),%edx        # 601028 <g_static_data>\n  400514:       8b 05 16 0b 20 00       mov    0x200b16(%rip),%eax        # 601030 <__TMC_END__>\n  40051a:       89 d6                   mov    %edx,%esi\n  40051c:       89 c7                   mov    %eax,%edi\n  40051e:       e8 b3 ff ff ff          callq  4004d6 <_Z9main_funcii>\n  400523:       01 45 fc                add    %eax,-0x4(%rbp)\n  400526:       8b 45 fc                mov    -0x4(%rbp),%eax\n  400529:       c9                      leaveq \n  40052a:       c3                      retq   \n  40052b:       0f 1f 44 00 00          nopl   0x0(%rax,%rax,1)\n\n0000000000400530 <__libc_csu_init>:\n  400530:       41 57                   push   %r15\n  400532:       41 56                   push   %r14\n  400534:       49 89 d7                mov    %rdx,%r15\n  400537:       41 55                   push   %r13\n  400539:       41 54                   push   %r12\n  40053b:       4c 8d 25 d6 08 20 00    lea    0x2008d6(%rip),%r12        # 600e18 <__frame_dummy_init_array_entry>\n  400542:       55                      push   %rbp\n  400543:       48 8d 2d d6 08 20 00    lea    0x2008d6(%rip),%rbp        # 600e20 <__init_array_end>\n  40054a:       53                      push   %rbx\n  40054b:       41 89 fd                mov    %edi,%r13d\n  40054e:       49 89 f6                mov    %rsi,%r14\n  400551:       4c 29 e5                sub    %r12,%rbp\n  400554:       48 83 ec 08             sub    $0x8,%rsp\n  400558:       48 c1 fd 03             sar    $0x3,%rbp\n  40055c:       e8 57 fe ff ff          callq  4003b8 <_init>\n  400561:       48 85 ed                test   %rbp,%rbp\n  400564:       74 20                   je     400586 <__libc_csu_init+0x56>\n  400566:       31 db                   xor    %ebx,%ebx\n  400568:       0f 1f 84 00 00 00 00    nopl   0x0(%rax,%rax,1)\n  40056f:       00 \n  400570:       4c 89 fa                mov    %r15,%rdx\n  400573:       4c 89 f6                mov    %r14,%rsi\n  400576:       44 89 ef                mov    %r13d,%edi\n  400579:       41 ff 14 dc             callq  *(%r12,%rbx,8)\n  40057d:       48 83 c3 01             add    $0x1,%rbx\n  400581:       48 39 dd                cmp    %rbx,%rbp\n  400584:       75 ea                   jne    400570 <__libc_csu_init+0x40>\n  400586:       48 83 c4 08             add    $0x8,%rsp\n  40058a:       5b                      pop    %rbx\n  40058b:       5d                      pop    %rbp\n  40058c:       41 5c                   pop    %r12\n  40058e:       41 5d                   pop    %r13\n  400590:       41 5e                   pop    %r14\n  400592:       41 5f                   pop    %r15\n  400594:       c3                      retq   \n  400595:       90                      nop\n  400596:       66 2e 0f 1f 84 00 00    nopw   %cs:0x0(%rax,%rax,1)\n  40059d:       00 00 00 \n\n00000000004005a0 <__libc_csu_fini>:\n  4005a0:       f3 c3                   repz retq \n\nDisassembly of section .fini:\n\n00000000004005a4 <_fini>:\n  4005a4:       48 83 ec 08             sub    $0x8,%rsp\n  4005a8:       48 83 c4 08             add    $0x8,%rsp\n  4005ac:       c3                      retq  \n```\n\n##### 可执行文件 (相对位置的PIE(DYN)版本)\n``` ARMASM\n\n重定位节 '.rela.dyn' 位于偏移量 0x448 含有 9 个条目：\n  偏移量          信息           类型           符号值        符号名称 + 加数\n000000200dd8  000000000008 R_X86_64_RELATIVE                    660\n000000200de0  000000000008 R_X86_64_RELATIVE                    620\n000000201020  000000000008 R_X86_64_RELATIVE                    201020\n000000200fd0  000100000006 R_X86_64_GLOB_DAT 0000000000000000 __cxa_finalize@GLIBC_2.2.5 + 0\n000000200fd8  000200000006 R_X86_64_GLOB_DAT 0000000000000000 _Jv_RegisterClasses + 0\n000000200fe0  000300000006 R_X86_64_GLOB_DAT 0000000000000000 _ITM_deregisterTMClone + 0\n000000200fe8  000400000006 R_X86_64_GLOB_DAT 0000000000000000 __libc_start_main@GLIBC_2.2.5 + 0\n000000200ff0  000500000006 R_X86_64_GLOB_DAT 0000000000000000 __gmon_start__ + 0\n000000200ff8  000600000006 R_X86_64_GLOB_DAT 0000000000000000 _ITM_registerTMCloneTa + 0\n\nThe decoding of unwind sections for machine type Advanced Micro Devices X86-64 is not currently supported.\n\nSymbol table '.dynsym' contains 7 entries:\n   Num:    Value          Size Type    Bind   Vis      Ndx Name\n     0: 0000000000000000     0 NOTYPE  LOCAL  DEFAULT  UND \n     1: 0000000000000000     0 FUNC    WEAK   DEFAULT  UND __cxa_finalize@GLIBC_2.2.5 (2)\n     2: 0000000000000000     0 NOTYPE  WEAK   DEFAULT  UND _Jv_RegisterClasses\n     3: 0000000000000000     0 NOTYPE  WEAK   DEFAULT  UND _ITM_deregisterTMCloneTab\n     4: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND __libc_start_main@GLIBC_2.2.5 (2)\n     5: 0000000000000000     0 NOTYPE  WEAK   DEFAULT  UND __gmon_start__\n     6: 0000000000000000     0 NOTYPE  WEAK   DEFAULT  UND _ITM_registerTMCloneTable\n\nSymbol table '.symtab' contains 70 entries:\n   Num:    Value          Size Type    Bind   Vis      Ndx Name\n     0: 0000000000000000     0 NOTYPE  LOCAL  DEFAULT  UND \n     1: 0000000000000238     0 SECTION LOCAL  DEFAULT    1 \n     2: 0000000000000254     0 SECTION LOCAL  DEFAULT    2 \n     3: 0000000000000274     0 SECTION LOCAL  DEFAULT    3 \n     4: 0000000000000298     0 SECTION LOCAL  DEFAULT    4 \n     5: 00000000000002b8     0 SECTION LOCAL  DEFAULT    5 \n     6: 0000000000000360     0 SECTION LOCAL  DEFAULT    6 \n     7: 0000000000000418     0 SECTION LOCAL  DEFAULT    7 \n     8: 0000000000000428     0 SECTION LOCAL  DEFAULT    8 \n     9: 0000000000000448     0 SECTION LOCAL  DEFAULT    9 \n    10: 0000000000000520     0 SECTION LOCAL  DEFAULT   10 \n    11: 0000000000000540     0 SECTION LOCAL  DEFAULT   11 \n    12: 0000000000000550     0 SECTION LOCAL  DEFAULT   12 \n    13: 0000000000000560     0 SECTION LOCAL  DEFAULT   13 \n    14: 0000000000000764     0 SECTION LOCAL  DEFAULT   14 \n    15: 0000000000000770     0 SECTION LOCAL  DEFAULT   15 \n    16: 0000000000000778     0 SECTION LOCAL  DEFAULT   16 \n    17: 00000000000007c0     0 SECTION LOCAL  DEFAULT   17 \n    18: 0000000000200dd8     0 SECTION LOCAL  DEFAULT   18 \n    19: 0000000000200de0     0 SECTION LOCAL  DEFAULT   19 \n    20: 0000000000200de8     0 SECTION LOCAL  DEFAULT   20 \n    21: 0000000000200df0     0 SECTION LOCAL  DEFAULT   21 \n    22: 0000000000200fd0     0 SECTION LOCAL  DEFAULT   22 \n    23: 0000000000201000     0 SECTION LOCAL  DEFAULT   23 \n    24: 0000000000201018     0 SECTION LOCAL  DEFAULT   24 \n    25: 000000000020102c     0 SECTION LOCAL  DEFAULT   25 \n    26: 0000000000000000     0 SECTION LOCAL  DEFAULT   26 \n    27: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS crtstuff.c\n    28: 0000000000200de8     0 OBJECT  LOCAL  DEFAULT   20 __JCR_LIST__\n    29: 0000000000000590     0 FUNC    LOCAL  DEFAULT   13 deregister_tm_clones\n    30: 00000000000005d0     0 FUNC    LOCAL  DEFAULT   13 register_tm_clones\n    31: 0000000000000620     0 FUNC    LOCAL  DEFAULT   13 __do_global_dtors_aux\n    32: 000000000020102c     1 OBJECT  LOCAL  DEFAULT   25 completed.6972\n    33: 0000000000200de0     0 OBJECT  LOCAL  DEFAULT   19 __do_global_dtors_aux_fin\n    34: 0000000000000660     0 FUNC    LOCAL  DEFAULT   13 frame_dummy\n    35: 0000000000200dd8     0 OBJECT  LOCAL  DEFAULT   18 __frame_dummy_init_array_\n    36: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS test.cpp\n    37: 0000000000000774     4 OBJECT  LOCAL  DEFAULT   15 _ZL13g_static_text\n    38: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS crtstuff.c\n    39: 00000000000008e8     0 OBJECT  LOCAL  DEFAULT   17 __FRAME_END__\n    40: 0000000000200de8     0 OBJECT  LOCAL  DEFAULT   20 __JCR_END__\n    41: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS \n    42: 0000000000000778     0 NOTYPE  LOCAL  DEFAULT   16 __GNU_EH_FRAME_HDR\n    43: 0000000000200df0     0 OBJECT  LOCAL  DEFAULT   21 _DYNAMIC\n    44: 0000000000200de0     0 NOTYPE  LOCAL  DEFAULT   18 __init_array_end\n    45: 0000000000200dd8     0 NOTYPE  LOCAL  DEFAULT   18 __init_array_start\n    46: 0000000000201000     0 OBJECT  LOCAL  DEFAULT   23 _GLOBAL_OFFSET_TABLE_\n    47: 0000000000201028     4 OBJECT  GLOBAL DEFAULT   24 g_static_data\n    48: 000000000020102c     0 NOTYPE  GLOBAL DEFAULT   24 _edata\n    49: 0000000000201018     0 NOTYPE  WEAK   DEFAULT   24 data_start\n    50: 0000000000000770     4 OBJECT  GLOBAL DEFAULT   15 _IO_stdin_used\n    51: 0000000000000690    25 FUNC    GLOBAL DEFAULT   13 _Z9main_funcii\n    52: 0000000000000000     0 FUNC    WEAK   DEFAULT  UND __cxa_finalize@@GLIBC_2.2\n    53: 00000000000006a9    60 FUNC    GLOBAL DEFAULT   13 main\n    54: 0000000000201020     0 OBJECT  GLOBAL HIDDEN    24 __dso_handle\n    55: 0000000000000764     0 FUNC    GLOBAL DEFAULT   14 _fini\n    56: 0000000000000560    43 FUNC    GLOBAL DEFAULT   13 _start\n    57: 0000000000000520     0 FUNC    GLOBAL DEFAULT   10 _init\n    58: 0000000000201030     0 OBJECT  GLOBAL HIDDEN    24 __TMC_END__\n    59: 0000000000000000     0 NOTYPE  WEAK   DEFAULT  UND _Jv_RegisterClasses\n    60: 0000000000201018     0 NOTYPE  GLOBAL DEFAULT   24 __data_start\n    61: 0000000000201038     0 NOTYPE  GLOBAL DEFAULT   25 _end\n    62: 000000000020102c     0 NOTYPE  GLOBAL DEFAULT   25 __bss_start\n    63: 00000000000006f0   101 FUNC    GLOBAL DEFAULT   13 __libc_csu_init\n    64: 0000000000201030     4 OBJECT  GLOBAL DEFAULT   25 g_static_bss\n    65: 0000000000000000     0 NOTYPE  WEAK   DEFAULT  UND _ITM_deregisterTMCloneTab\n    66: 0000000000000760     2 FUNC    GLOBAL DEFAULT   13 __libc_csu_fini\n    67: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND __libc_start_main@@GLIBC_\n    68: 0000000000000000     0 NOTYPE  WEAK   DEFAULT  UND __gmon_start__\n    69: 0000000000000000     0 NOTYPE  WEAK   DEFAULT  UND _ITM_registerTMCloneTable\n\n.text\n0000000000000520 <_init>:\n 520:   48 83 ec 08             sub    $0x8,%rsp\n 524:   48 8b 05 c5 0a 20 00    mov    0x200ac5(%rip),%rax        # 200ff0 <__gmon_start__>\n 52b:   48 85 c0                test   %rax,%rax\n 52e:   74 02                   je     532 <_init+0x12>\n 530:   ff d0                   callq  *%rax\n 532:   48 83 c4 08             add    $0x8,%rsp\n 536:   c3                      retq   \n\nDisassembly of section .plt:\n\n0000000000000540 <.plt>:\n 540:   ff 35 c2 0a 20 00       pushq  0x200ac2(%rip)        # 201008 <_GLOBAL_OFFSET_TABLE_+0x8>\n 546:   ff 25 c4 0a 20 00       jmpq   *0x200ac4(%rip)        # 201010 <_GLOBAL_OFFSET_TABLE_+0x10>\n 54c:   0f 1f 40 00             nopl   0x0(%rax)\n\nDisassembly of section .plt.got:\n\n0000000000000550 <.plt.got>:\n 550:   ff 25 7a 0a 20 00       jmpq   *0x200a7a(%rip)        # 200fd0 <__cxa_finalize@GLIBC_2.2.5>\n 556:   66 90                   xchg   %ax,%ax\n\nDisassembly of section .text:\n\n0000000000000560 <_start>:\n 560:   31 ed                   xor    %ebp,%ebp\n 562:   49 89 d1                mov    %rdx,%r9\n 565:   5e                      pop    %rsi\n 566:   48 89 e2                mov    %rsp,%rdx\n 569:   48 83 e4 f0             and    $0xfffffffffffffff0,%rsp\n 56d:   50                      push   %rax\n 56e:   54                      push   %rsp\n 56f:   4c 8d 05 ea 01 00 00    lea    0x1ea(%rip),%r8        # 760 <__libc_csu_fini>\n 576:   48 8d 0d 73 01 00 00    lea    0x173(%rip),%rcx        # 6f0 <__libc_csu_init>\n 57d:   48 8d 3d 25 01 00 00    lea    0x125(%rip),%rdi        # 6a9 <main>\n 584:   ff 15 5e 0a 20 00       callq  *0x200a5e(%rip)        # 200fe8 <__libc_start_main@GLIBC_2.2.5>\n 58a:   f4                      hlt    \n 58b:   0f 1f 44 00 00          nopl   0x0(%rax,%rax,1)\n\n0000000000000590 <deregister_tm_clones>:\n 590:   48 8d 3d 99 0a 20 00    lea    0x200a99(%rip),%rdi        # 201030 <__TMC_END__>\n 597:   48 8d 05 99 0a 20 00    lea    0x200a99(%rip),%rax        # 201037 <__TMC_END__+0x7>\n 59e:   55                      push   %rbp\n 59f:   48 29 f8                sub    %rdi,%rax\n 5a2:   48 89 e5                mov    %rsp,%rbp\n 5a5:   48 83 f8 0e             cmp    $0xe,%rax\n 5a9:   76 15                   jbe    5c0 <deregister_tm_clones+0x30>\n 5ab:   48 8b 05 2e 0a 20 00    mov    0x200a2e(%rip),%rax        # 200fe0 <_ITM_deregisterTMCloneTable>\n 5b2:   48 85 c0                test   %rax,%rax\n 5b5:   74 09                   je     5c0 <deregister_tm_clones+0x30>\n 5b7:   5d                      pop    %rbp\n 5b8:   ff e0                   jmpq   *%rax\n 5ba:   66 0f 1f 44 00 00       nopw   0x0(%rax,%rax,1)\n 5c0:   5d                      pop    %rbp\n 5c1:   c3                      retq   \n 5c2:   0f 1f 40 00             nopl   0x0(%rax)\n 5c6:   66 2e 0f 1f 84 00 00    nopw   %cs:0x0(%rax,%rax,1)\n 5cd:   00 00 00 \n\n00000000000005d0 <register_tm_clones>:\n 5d0:   48 8d 3d 59 0a 20 00    lea    0x200a59(%rip),%rdi        # 201030 <__TMC_END__>\n 5d7:   48 8d 35 52 0a 20 00    lea    0x200a52(%rip),%rsi        # 201030 <__TMC_END__>\n 5de:   55                      push   %rbp\n 5df:   48 29 fe                sub    %rdi,%rsi\n 5e2:   48 89 e5                mov    %rsp,%rbp\n 5e5:   48 c1 fe 03             sar    $0x3,%rsi\n 5e9:   48 89 f0                mov    %rsi,%rax\n 5ec:   48 c1 e8 3f             shr    $0x3f,%rax\n 5f0:   48 01 c6                add    %rax,%rsi\n 5f3:   48 d1 fe                sar    %rsi\n 5f6:   74 18                   je     610 <register_tm_clones+0x40>\n 5f8:   48 8b 05 f9 09 20 00    mov    0x2009f9(%rip),%rax        # 200ff8 <_ITM_registerTMCloneTable>\n 5ff:   48 85 c0                test   %rax,%rax\n 602:   74 0c                   je     610 <register_tm_clones+0x40>\n 604:   5d                      pop    %rbp\n 605:   ff e0                   jmpq   *%rax\n 607:   66 0f 1f 84 00 00 00    nopw   0x0(%rax,%rax,1)\n 60e:   00 00 \n 610:   5d                      pop    %rbp\n 611:   c3                      retq   \n 612:   0f 1f 40 00             nopl   0x0(%rax)\n 616:   66 2e 0f 1f 84 00 00    nopw   %cs:0x0(%rax,%rax,1)\n 61d:   00 00 00 \n\n0000000000000620 <__do_global_dtors_aux>:\n 620:   80 3d 05 0a 20 00 00    cmpb   $0x0,0x200a05(%rip)        # 20102c <_edata>\n 627:   75 27                   jne    650 <__do_global_dtors_aux+0x30>\n 629:   48 83 3d 9f 09 20 00    cmpq   $0x0,0x20099f(%rip)        # 200fd0 <__cxa_finalize@GLIBC_2.2.5>\n 630:   00 \n 631:   55                      push   %rbp\n 632:   48 89 e5                mov    %rsp,%rbp\n 635:   74 0c                   je     643 <__do_global_dtors_aux+0x23>\n 637:   48 8b 3d e2 09 20 00    mov    0x2009e2(%rip),%rdi        # 201020 <__dso_handle>\n 63e:   e8 0d ff ff ff          callq  550 <.plt.got>\n 643:   e8 48 ff ff ff          callq  590 <deregister_tm_clones>\n 648:   5d                      pop    %rbp\n 649:   c6 05 dc 09 20 00 01    movb   $0x1,0x2009dc(%rip)        # 20102c <_edata>\n 650:   f3 c3                   repz retq \n 652:   0f 1f 40 00             nopl   0x0(%rax)\n 656:   66 2e 0f 1f 84 00 00    nopw   %cs:0x0(%rax,%rax,1)\n 65d:   00 00 00 \n\n0000000000000660 <frame_dummy>:\n 660:   48 8d 3d 81 07 20 00    lea    0x200781(%rip),%rdi        # 200de8 <__JCR_END__>\n 667:   48 83 3f 00             cmpq   $0x0,(%rdi)\n 66b:   75 0b                   jne    678 <frame_dummy+0x18>\n 66d:   e9 5e ff ff ff          jmpq   5d0 <register_tm_clones>\n 672:   66 0f 1f 44 00 00       nopw   0x0(%rax,%rax,1)\n 678:   48 8b 05 59 09 20 00    mov    0x200959(%rip),%rax        # 200fd8 <_Jv_RegisterClasses>\n 67f:   48 85 c0                test   %rax,%rax\n 682:   74 e9                   je     66d <frame_dummy+0xd>\n 684:   55                      push   %rbp\n 685:   48 89 e5                mov    %rsp,%rbp\n 688:   ff d0                   callq  *%rax\n 68a:   5d                      pop    %rbp\n 68b:   e9 40 ff ff ff          jmpq   5d0 <register_tm_clones>\n\n0000000000000690 <_Z9main_funcii>:\n 690:   55                      push   %rbp\n 691:   48 89 e5                mov    %rsp,%rbp\n 694:   89 7d fc                mov    %edi,-0x4(%rbp)\n 697:   89 75 f8                mov    %esi,-0x8(%rbp)\n 69a:   8b 55 fc                mov    -0x4(%rbp),%edx\n 69d:   8b 45 f8                mov    -0x8(%rbp),%eax\n 6a0:   01 d0                   add    %edx,%eax\n 6a2:   05 c3 07 00 00          add    $0x7c3,%eax\n 6a7:   5d                      pop    %rbp\n 6a8:   c3                      retq   \n\n00000000000006a9 <main>:\n 6a9:   55                      push   %rbp\n 6aa:   48 89 e5                mov    %rsp,%rbp\n 6ad:   48 83 ec 20             sub    $0x20,%rsp\n 6b1:   89 7d ec                mov    %edi,-0x14(%rbp)\n 6b4:   48 89 75 e0             mov    %rsi,-0x20(%rbp)\n 6b8:   c7 45 fc 00 00 00 00    movl   $0x0,-0x4(%rbp)\n 6bf:   8b 45 ec                mov    -0x14(%rbp),%eax\n 6c2:   89 05 68 09 20 00       mov    %eax,0x200968(%rip)        # 201030 <__TMC_END__>\n 6c8:   8b 15 5a 09 20 00       mov    0x20095a(%rip),%edx        # 201028 <g_static_data>\n 6ce:   8b 05 5c 09 20 00       mov    0x20095c(%rip),%eax        # 201030 <__TMC_END__>\n 6d4:   89 d6                   mov    %edx,%esi\n 6d6:   89 c7                   mov    %eax,%edi\n 6d8:   e8 b3 ff ff ff          callq  690 <_Z9main_funcii>\n 6dd:   01 45 fc                add    %eax,-0x4(%rbp)\n 6e0:   8b 45 fc                mov    -0x4(%rbp),%eax\n 6e3:   c9                      leaveq \n 6e4:   c3                      retq   \n 6e5:   66 2e 0f 1f 84 00 00    nopw   %cs:0x0(%rax,%rax,1)\n 6ec:   00 00 00 \n 6ef:   90                      nop\n\n00000000000006f0 <__libc_csu_init>:\n 6f0:   41 57                   push   %r15\n 6f2:   41 56                   push   %r14\n 6f4:   49 89 d7                mov    %rdx,%r15\n 6f7:   41 55                   push   %r13\n 6f9:   41 54                   push   %r12\n 6fb:   4c 8d 25 d6 06 20 00    lea    0x2006d6(%rip),%r12        # 200dd8 <__frame_dummy_init_array_entry>\n 702:   55                      push   %rbp\n 703:   48 8d 2d d6 06 20 00    lea    0x2006d6(%rip),%rbp        # 200de0 <__init_array_end>\n 70a:   53                      push   %rbx\n 70b:   41 89 fd                mov    %edi,%r13d\n 70e:   49 89 f6                mov    %rsi,%r14\n 711:   4c 29 e5                sub    %r12,%rbp\n 714:   48 83 ec 08             sub    $0x8,%rsp\n 718:   48 c1 fd 03             sar    $0x3,%rbp\n 71c:   e8 ff fd ff ff          callq  520 <_init>\n 721:   48 85 ed                test   %rbp,%rbp\n 724:   74 20                   je     746 <__libc_csu_init+0x56>\n 726:   31 db                   xor    %ebx,%ebx\n 728:   0f 1f 84 00 00 00 00    nopl   0x0(%rax,%rax,1)\n 72f:   00 \n 730:   4c 89 fa                mov    %r15,%rdx\n 733:   4c 89 f6                mov    %r14,%rsi\n 736:   44 89 ef                mov    %r13d,%edi\n 739:   41 ff 14 dc             callq  *(%r12,%rbx,8)\n 73d:   48 83 c3 01             add    $0x1,%rbx\n 741:   48 39 dd                cmp    %rbx,%rbp\n 744:   75 ea                   jne    730 <__libc_csu_init+0x40>\n 746:   48 83 c4 08             add    $0x8,%rsp\n 74a:   5b                      pop    %rbx\n 74b:   5d                      pop    %rbp\n 74c:   41 5c                   pop    %r12\n 74e:   41 5d                   pop    %r13\n 750:   41 5e                   pop    %r14\n 752:   41 5f                   pop    %r15\n 754:   c3                      retq   \n 755:   90                      nop\n 756:   66 2e 0f 1f 84 00 00    nopw   %cs:0x0(%rax,%rax,1)\n 75d:   00 00 00 \n\n0000000000000760 <__libc_csu_fini>:\n 760:   f3 c3                   repz retq \n\nDisassembly of section .fini:\n\n0000000000000764 <_fini>:\n 764:   48 83 ec 08             sub    $0x8,%rsp\n 768:   48 83 c4 08             add    $0x8,%rsp\n 76c:   c3                      retq   \n```\n\n\n##### 可执行文件 (位置无关的非PIE(EXEC)版本)  \n\n``` ARMASM\nDynamic section at offset 0xe30 contains 23 entries:\n  标记        类型                         名称/值\n 0x0000000000000001 (NEEDED)             共享库：[libstdc++.so.6]\n 0x0000000000000001 (NEEDED)             共享库：[libm.so.6]\n 0x0000000000000001 (NEEDED)             共享库：[libgcc_s.so.1]\n 0x0000000000000001 (NEEDED)             共享库：[libc.so.6]\n 0x000000000000000c (INIT)               0x4003b8\n 0x000000000000000d (FINI)               0x4005b4\n 0x0000000000000019 (INIT_ARRAY)         0x600e18\n 0x000000000000001b (INIT_ARRAYSZ)       8 (bytes)\n 0x000000000000001a (FINI_ARRAY)         0x600e20\n 0x000000000000001c (FINI_ARRAYSZ)       8 (bytes)\n 0x000000006ffffef5 (GNU_HASH)           0x400298\n 0x0000000000000005 (STRTAB)             0x400300\n 0x0000000000000006 (SYMTAB)             0x4002b8\n 0x000000000000000a (STRSZ)              95 (bytes)\n 0x000000000000000b (SYMENT)             24 (bytes)\n 0x0000000000000015 (DEBUG)              0x0\n 0x0000000000000007 (RELA)               0x400388\n 0x0000000000000008 (RELASZ)             48 (bytes)\n 0x0000000000000009 (RELAENT)            24 (bytes)\n 0x000000006ffffffe (VERNEED)            0x400368\n 0x000000006fffffff (VERNEEDNUM)         1\n 0x000000006ffffff0 (VERSYM)             0x400360\n 0x0000000000000000 (NULL)               0x0\n\n重定位节 '.rela.dyn' 位于偏移量 0x388 含有 2 个条目：\n  偏移量          信息           类型           符号值        符号名称 + 加数\n000000600ff0  000100000006 R_X86_64_GLOB_DAT 0000000000000000 __libc_start_main@GLIBC_2.2.5 + 0\n000000600ff8  000200000006 R_X86_64_GLOB_DAT 0000000000000000 __gmon_start__ + 0\n\nThe decoding of unwind sections for machine type Advanced Micro Devices X86-64 is not currently supported.\n\nSymbol table '.dynsym' contains 3 entries:\n   Num:    Value          Size Type    Bind   Vis      Ndx Name\n     0: 0000000000000000     0 NOTYPE  LOCAL  DEFAULT  UND \n     1: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND __libc_start_main@GLIBC_2.2.5 (2)\n     2: 0000000000000000     0 NOTYPE  WEAK   DEFAULT  UND __gmon_start__\n\nSymbol table '.symtab' contains 65 entries:\n   Num:    Value          Size Type    Bind   Vis      Ndx Name\n     0: 0000000000000000     0 NOTYPE  LOCAL  DEFAULT  UND \n     1: 0000000000400238     0 SECTION LOCAL  DEFAULT    1 \n     2: 0000000000400254     0 SECTION LOCAL  DEFAULT    2 \n     3: 0000000000400274     0 SECTION LOCAL  DEFAULT    3 \n     4: 0000000000400298     0 SECTION LOCAL  DEFAULT    4 \n     5: 00000000004002b8     0 SECTION LOCAL  DEFAULT    5 \n     6: 0000000000400300     0 SECTION LOCAL  DEFAULT    6 \n     7: 0000000000400360     0 SECTION LOCAL  DEFAULT    7 \n     8: 0000000000400368     0 SECTION LOCAL  DEFAULT    8 \n     9: 0000000000400388     0 SECTION LOCAL  DEFAULT    9 \n    10: 00000000004003b8     0 SECTION LOCAL  DEFAULT   10 \n    11: 00000000004003d0     0 SECTION LOCAL  DEFAULT   11 \n    12: 00000000004005b4     0 SECTION LOCAL  DEFAULT   12 \n    13: 00000000004005c0     0 SECTION LOCAL  DEFAULT   13 \n    14: 00000000004005c8     0 SECTION LOCAL  DEFAULT   14 \n    15: 0000000000400608     0 SECTION LOCAL  DEFAULT   15 \n    16: 0000000000600e18     0 SECTION LOCAL  DEFAULT   16 \n    17: 0000000000600e20     0 SECTION LOCAL  DEFAULT   17 \n    18: 0000000000600e28     0 SECTION LOCAL  DEFAULT   18 \n    19: 0000000000600e30     0 SECTION LOCAL  DEFAULT   19 \n    20: 0000000000600ff0     0 SECTION LOCAL  DEFAULT   20 \n    21: 0000000000601000     0 SECTION LOCAL  DEFAULT   21 \n    22: 0000000000601018     0 SECTION LOCAL  DEFAULT   22 \n    23: 000000000060102c     0 SECTION LOCAL  DEFAULT   23 \n    24: 0000000000000000     0 SECTION LOCAL  DEFAULT   24 \n    25: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS crtstuff.c\n    26: 0000000000600e28     0 OBJECT  LOCAL  DEFAULT   18 __JCR_LIST__\n    27: 0000000000400410     0 FUNC    LOCAL  DEFAULT   11 deregister_tm_clones\n    28: 0000000000400450     0 FUNC    LOCAL  DEFAULT   11 register_tm_clones\n    29: 0000000000400490     0 FUNC    LOCAL  DEFAULT   11 __do_global_dtors_aux\n    30: 000000000060102c     1 OBJECT  LOCAL  DEFAULT   23 completed.6972\n    31: 0000000000600e20     0 OBJECT  LOCAL  DEFAULT   17 __do_global_dtors_aux_fin\n    32: 00000000004004b0     0 FUNC    LOCAL  DEFAULT   11 frame_dummy\n    33: 0000000000600e18     0 OBJECT  LOCAL  DEFAULT   16 __frame_dummy_init_array_\n    34: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS test.cpp\n    35: 00000000004005c4     4 OBJECT  LOCAL  DEFAULT   13 _ZL13g_static_text\n    36: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS crtstuff.c\n    37: 0000000000400708     0 OBJECT  LOCAL  DEFAULT   15 __FRAME_END__\n    38: 0000000000600e28     0 OBJECT  LOCAL  DEFAULT   18 __JCR_END__\n    39: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS \n    40: 00000000004005c8     0 NOTYPE  LOCAL  DEFAULT   14 __GNU_EH_FRAME_HDR\n    41: 0000000000600e30     0 OBJECT  LOCAL  DEFAULT   19 _DYNAMIC\n    42: 0000000000600e20     0 NOTYPE  LOCAL  DEFAULT   16 __init_array_end\n    43: 0000000000600e18     0 NOTYPE  LOCAL  DEFAULT   16 __init_array_start\n    44: 0000000000601000     0 OBJECT  LOCAL  DEFAULT   21 _GLOBAL_OFFSET_TABLE_\n    45: 0000000000601028     4 OBJECT  GLOBAL DEFAULT   22 g_static_data\n    46: 000000000060102c     0 NOTYPE  GLOBAL DEFAULT   22 _edata\n    47: 0000000000601018     0 NOTYPE  WEAK   DEFAULT   22 data_start\n    48: 00000000004005c0     4 OBJECT  GLOBAL DEFAULT   13 _IO_stdin_used\n    49: 00000000004004d6    25 FUNC    GLOBAL DEFAULT   11 _Z9main_funcii\n    50: 00000000004004ef    69 FUNC    GLOBAL DEFAULT   11 main\n    51: 0000000000601020     0 OBJECT  GLOBAL HIDDEN    22 __dso_handle\n    52: 00000000004005b4     0 FUNC    GLOBAL DEFAULT   12 _fini\n    53: 0000000000400400     2 FUNC    GLOBAL HIDDEN    11 _dl_relocate_static_pie\n    54: 00000000004003d0    43 FUNC    GLOBAL DEFAULT   11 _start\n    55: 00000000004003b8     0 FUNC    GLOBAL DEFAULT   10 _init\n    56: 0000000000601030     0 OBJECT  GLOBAL HIDDEN    22 __TMC_END__\n    57: 0000000000601018     0 NOTYPE  GLOBAL DEFAULT   22 __data_start\n    58: 0000000000601038     0 NOTYPE  GLOBAL DEFAULT   23 _end\n    59: 000000000060102c     0 NOTYPE  GLOBAL DEFAULT   23 __bss_start\n    60: 0000000000400540   101 FUNC    GLOBAL DEFAULT   11 __libc_csu_init\n    61: 0000000000601030     4 OBJECT  GLOBAL DEFAULT   23 g_static_bss\n    62: 00000000004005b0     2 FUNC    GLOBAL DEFAULT   11 __libc_csu_fini\n    63: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND __libc_start_main@@GLIBC_\n    64: 0000000000000000     0 NOTYPE  WEAK   DEFAULT  UND __gmon_start__\n\n\n.text\n00000000004003b8 <_init>:\n  4003b8:       48 83 ec 08             sub    $0x8,%rsp\n  4003bc:       48 8b 05 35 0c 20 00    mov    0x200c35(%rip),%rax        # 600ff8 <__gmon_start__>\n  4003c3:       48 85 c0                test   %rax,%rax\n  4003c6:       74 02                   je     4003ca <_init+0x12>\n  4003c8:       ff d0                   callq  *%rax\n  4003ca:       48 83 c4 08             add    $0x8,%rsp\n  4003ce:       c3                      retq   \n\nDisassembly of section .text:\n\n00000000004003d0 <_start>:\n  4003d0:       31 ed                   xor    %ebp,%ebp\n  4003d2:       49 89 d1                mov    %rdx,%r9\n  4003d5:       5e                      pop    %rsi\n  4003d6:       48 89 e2                mov    %rsp,%rdx\n  4003d9:       48 83 e4 f0             and    $0xfffffffffffffff0,%rsp\n  4003dd:       50                      push   %rax\n  4003de:       54                      push   %rsp\n  4003df:       49 c7 c0 b0 05 40 00    mov    $0x4005b0,%r8\n  4003e6:       48 c7 c1 40 05 40 00    mov    $0x400540,%rcx\n  4003ed:       48 c7 c7 ef 04 40 00    mov    $0x4004ef,%rdi\n  4003f4:       ff 15 f6 0b 20 00       callq  *0x200bf6(%rip)        # 600ff0 <__libc_start_main@GLIBC_2.2.5>\n  4003fa:       f4                      hlt    \n  4003fb:       0f 1f 44 00 00          nopl   0x0(%rax,%rax,1)\n\n0000000000400400 <_dl_relocate_static_pie>:\n  400400:       f3 c3                   repz retq \n  400402:       66 2e 0f 1f 84 00 00    nopw   %cs:0x0(%rax,%rax,1)\n  400409:       00 00 00 \n  40040c:       0f 1f 40 00             nopl   0x0(%rax)\n\n0000000000400410 <deregister_tm_clones>:\n  400410:       b8 37 10 60 00          mov    $0x601037,%eax\n  400415:       55                      push   %rbp\n  400416:       48 2d 30 10 60 00       sub    $0x601030,%rax\n  40041c:       48 83 f8 0e             cmp    $0xe,%rax\n  400420:       48 89 e5                mov    %rsp,%rbp\n  400423:       76 1b                   jbe    400440 <deregister_tm_clones+0x30>\n  400425:       b8 00 00 00 00          mov    $0x0,%eax\n  40042a:       48 85 c0                test   %rax,%rax\n  40042d:       74 11                   je     400440 <deregister_tm_clones+0x30>\n  40042f:       5d                      pop    %rbp\n  400430:       bf 30 10 60 00          mov    $0x601030,%edi\n  400435:       ff e0                   jmpq   *%rax\n  400437:       66 0f 1f 84 00 00 00    nopw   0x0(%rax,%rax,1)\n  40043e:       00 00 \n  400440:       5d                      pop    %rbp\n  400441:       c3                      retq   \n  400442:       0f 1f 40 00             nopl   0x0(%rax)\n  400446:       66 2e 0f 1f 84 00 00    nopw   %cs:0x0(%rax,%rax,1)\n  40044d:       00 00 00 \n\n0000000000400450 <register_tm_clones>:\n  400450:       be 30 10 60 00          mov    $0x601030,%esi\n  400455:       55                      push   %rbp\n  400456:       48 81 ee 30 10 60 00    sub    $0x601030,%rsi\n  40045d:       48 c1 fe 03             sar    $0x3,%rsi\n  400461:       48 89 e5                mov    %rsp,%rbp\n  400464:       48 89 f0                mov    %rsi,%rax\n  400467:       48 c1 e8 3f             shr    $0x3f,%rax\n  40046b:       48 01 c6                add    %rax,%rsi\n  40046e:       48 d1 fe                sar    %rsi\n  400471:       74 15                   je     400488 <register_tm_clones+0x38>\n  400473:       b8 00 00 00 00          mov    $0x0,%eax\n  400478:       48 85 c0                test   %rax,%rax\n  40047b:       74 0b                   je     400488 <register_tm_clones+0x38>\n  40047d:       5d                      pop    %rbp\n  40047e:       bf 30 10 60 00          mov    $0x601030,%edi\n  400483:       ff e0                   jmpq   *%rax\n  400485:       0f 1f 00                nopl   (%rax)\n  400488:       5d                      pop    %rbp\n  400489:       c3                      retq   \n  40048a:       66 0f 1f 44 00 00       nopw   0x0(%rax,%rax,1)\n\n0000000000400490 <__do_global_dtors_aux>:\n  400490:       80 3d 95 0b 20 00 00    cmpb   $0x0,0x200b95(%rip)        # 60102c <_edata>\n  400497:       75 11                   jne    4004aa <__do_global_dtors_aux+0x1a>\n  400499:       55                      push   %rbp\n  40049a:       48 89 e5                mov    %rsp,%rbp\n  40049d:       e8 6e ff ff ff          callq  400410 <deregister_tm_clones>\n  4004a2:       5d                      pop    %rbp\n  4004a3:       c6 05 82 0b 20 00 01    movb   $0x1,0x200b82(%rip)        # 60102c <_edata>\n  4004aa:       f3 c3                   repz retq \n  4004ac:       0f 1f 40 00             nopl   0x0(%rax)\n\n00000000004004b0 <frame_dummy>:\n  4004b0:       bf 28 0e 60 00          mov    $0x600e28,%edi\n  4004b5:       48 83 3f 00             cmpq   $0x0,(%rdi)\n  4004b9:       75 05                   jne    4004c0 <frame_dummy+0x10>\n  4004bb:       eb 93                   jmp    400450 <register_tm_clones>\n  4004bd:       0f 1f 00                nopl   (%rax)\n  4004c0:       b8 00 00 00 00          mov    $0x0,%eax\n  4004c5:       48 85 c0                test   %rax,%rax\n  4004c8:       74 f1                   je     4004bb <frame_dummy+0xb>\n  4004ca:       55                      push   %rbp\n  4004cb:       48 89 e5                mov    %rsp,%rbp\n  4004ce:       ff d0                   callq  *%rax\n  4004d0:       5d                      pop    %rbp\n  4004d1:       e9 7a ff ff ff          jmpq   400450 <register_tm_clones>\n\n00000000004004d6 <_Z9main_funcii>:\n  4004d6:       55                      push   %rbp\n  4004d7:       48 89 e5                mov    %rsp,%rbp\n  4004da:       89 7d fc                mov    %edi,-0x4(%rbp)\n  4004dd:       89 75 f8                mov    %esi,-0x8(%rbp)\n  4004e0:       8b 55 fc                mov    -0x4(%rbp),%edx\n  4004e3:       8b 45 f8                mov    -0x8(%rbp),%eax\n  4004e6:       01 d0                   add    %edx,%eax\n  4004e8:       05 c3 07 00 00          add    $0x7c3,%eax\n  4004ed:       5d                      pop    %rbp\n  4004ee:       c3                      retq   \n\n00000000004004ef <main>:\n  4004ef:       55                      push   %rbp\n  4004f0:       48 89 e5                mov    %rsp,%rbp\n  4004f3:       48 83 ec 20             sub    $0x20,%rsp\n  4004f7:       89 7d ec                mov    %edi,-0x14(%rbp)\n  4004fa:       48 89 75 e0             mov    %rsi,-0x20(%rbp)\n  4004fe:       c7 45 fc 00 00 00 00    movl   $0x0,-0x4(%rbp)\n  400505:       48 c7 c0 30 10 60 00    mov    $0x601030,%rax\n  40050c:       8b 55 ec                mov    -0x14(%rbp),%edx\n  40050f:       89 10                   mov    %edx,(%rax)\n  400511:       48 c7 c0 28 10 60 00    mov    $0x601028,%rax\n  400518:       8b 10                   mov    (%rax),%edx\n  40051a:       48 c7 c0 30 10 60 00    mov    $0x601030,%rax\n  400521:       8b 00                   mov    (%rax),%eax\n  400523:       89 d6                   mov    %edx,%esi\n  400525:       89 c7                   mov    %eax,%edi\n  400527:       e8 aa ff ff ff          callq  4004d6 <_Z9main_funcii>\n  40052c:       01 45 fc                add    %eax,-0x4(%rbp)\n  40052f:       8b 45 fc                mov    -0x4(%rbp),%eax\n  400532:       c9                      leaveq \n  400533:       c3                      retq   \n  400534:       66 2e 0f 1f 84 00 00    nopw   %cs:0x0(%rax,%rax,1)\n  40053b:       00 00 00 \n  40053e:       66 90                   xchg   %ax,%ax\n\n0000000000400540 <__libc_csu_init>:\n  400540:       41 57                   push   %r15\n  400542:       41 56                   push   %r14\n  400544:       49 89 d7                mov    %rdx,%r15\n  400547:       41 55                   push   %r13\n  400549:       41 54                   push   %r12\n  40054b:       4c 8d 25 c6 08 20 00    lea    0x2008c6(%rip),%r12        # 600e18 <__frame_dummy_init_array_entry>\n  400552:       55                      push   %rbp\n  400553:       48 8d 2d c6 08 20 00    lea    0x2008c6(%rip),%rbp        # 600e20 <__init_array_end>\n  40055a:       53                      push   %rbx\n  40055b:       41 89 fd                mov    %edi,%r13d\n  40055e:       49 89 f6                mov    %rsi,%r14\n  400561:       4c 29 e5                sub    %r12,%rbp\n  400564:       48 83 ec 08             sub    $0x8,%rsp\n  400568:       48 c1 fd 03             sar    $0x3,%rbp\n  40056c:       e8 47 fe ff ff          callq  4003b8 <_init>\n  400571:       48 85 ed                test   %rbp,%rbp\n  400574:       74 20                   je     400596 <__libc_csu_init+0x56>\n  400576:       31 db                   xor    %ebx,%ebx\n  400578:       0f 1f 84 00 00 00 00    nopl   0x0(%rax,%rax,1)\n  40057f:       00 \n  400580:       4c 89 fa                mov    %r15,%rdx\n  400583:       4c 89 f6                mov    %r14,%rsi\n  400586:       44 89 ef                mov    %r13d,%edi\n  400589:       41 ff 14 dc             callq  *(%r12,%rbx,8)\n  40058d:       48 83 c3 01             add    $0x1,%rbx\n  400591:       48 39 dd                cmp    %rbx,%rbp\n  400594:       75 ea                   jne    400580 <__libc_csu_init+0x40>\n  400596:       48 83 c4 08             add    $0x8,%rsp\n  40059a:       5b                      pop    %rbx\n  40059b:       5d                      pop    %rbp\n  40059c:       41 5c                   pop    %r12\n  40059e:       41 5d                   pop    %r13\n  4005a0:       41 5e                   pop    %r14\n  4005a2:       41 5f                   pop    %r15\n  4005a4:       c3                      retq   \n  4005a5:       90                      nop\n  4005a6:       66 2e 0f 1f 84 00 00    nopw   %cs:0x0(%rax,%rax,1)\n  4005ad:       00 00 00 \n\n00000000004005b0 <__libc_csu_fini>:\n  4005b0:       f3 c3                   repz retq \n\nDisassembly of section .fini:\n\n00000000004005b4 <_fini>:\n  4005b4:       48 83 ec 08             sub    $0x8,%rsp\n  4005b8:       48 83 c4 08             add    $0x8,%rsp\n  4005bc:       c3                      retq  \n```\n\n\n##### 可执行文件 (位置无关的PIE(DYN)版本)  \n```ARMASM\n重定位节 '.rela.dyn' 位于偏移量 0x448 含有 9 个条目：\n  偏移量          信息           类型           符号值        符号名称 + 加数\n000000200dd8  000000000008 R_X86_64_RELATIVE                    660\n000000200de0  000000000008 R_X86_64_RELATIVE                    620\n000000201020  000000000008 R_X86_64_RELATIVE                    201020\n000000200fd0  000100000006 R_X86_64_GLOB_DAT 0000000000000000 __cxa_finalize@GLIBC_2.2.5 + 0\n000000200fd8  000200000006 R_X86_64_GLOB_DAT 0000000000000000 _Jv_RegisterClasses + 0\n000000200fe0  000300000006 R_X86_64_GLOB_DAT 0000000000000000 _ITM_deregisterTMClone + 0\n000000200fe8  000400000006 R_X86_64_GLOB_DAT 0000000000000000 __libc_start_main@GLIBC_2.2.5 + 0\n000000200ff0  000500000006 R_X86_64_GLOB_DAT 0000000000000000 __gmon_start__ + 0\n000000200ff8  000600000006 R_X86_64_GLOB_DAT 0000000000000000 _ITM_registerTMCloneTa + 0\n\nThe decoding of unwind sections for machine type Advanced Micro Devices X86-64 is not currently supported.\n\nSymbol table '.dynsym' contains 7 entries:\n   Num:    Value          Size Type    Bind   Vis      Ndx Name\n     0: 0000000000000000     0 NOTYPE  LOCAL  DEFAULT  UND \n     1: 0000000000000000     0 FUNC    WEAK   DEFAULT  UND __cxa_finalize@GLIBC_2.2.5 (2)\n     2: 0000000000000000     0 NOTYPE  WEAK   DEFAULT  UND _Jv_RegisterClasses\n     3: 0000000000000000     0 NOTYPE  WEAK   DEFAULT  UND _ITM_deregisterTMCloneTab\n     4: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND __libc_start_main@GLIBC_2.2.5 (2)\n     5: 0000000000000000     0 NOTYPE  WEAK   DEFAULT  UND __gmon_start__\n     6: 0000000000000000     0 NOTYPE  WEAK   DEFAULT  UND _ITM_registerTMCloneTable\n\nSymbol table '.symtab' contains 70 entries:\n   Num:    Value          Size Type    Bind   Vis      Ndx Name\n     0: 0000000000000000     0 NOTYPE  LOCAL  DEFAULT  UND \n     1: 0000000000000238     0 SECTION LOCAL  DEFAULT    1 \n     2: 0000000000000254     0 SECTION LOCAL  DEFAULT    2 \n     3: 0000000000000274     0 SECTION LOCAL  DEFAULT    3 \n     4: 0000000000000298     0 SECTION LOCAL  DEFAULT    4 \n     5: 00000000000002b8     0 SECTION LOCAL  DEFAULT    5 \n     6: 0000000000000360     0 SECTION LOCAL  DEFAULT    6 \n     7: 0000000000000418     0 SECTION LOCAL  DEFAULT    7 \n     8: 0000000000000428     0 SECTION LOCAL  DEFAULT    8 \n     9: 0000000000000448     0 SECTION LOCAL  DEFAULT    9 \n    10: 0000000000000520     0 SECTION LOCAL  DEFAULT   10 \n    11: 0000000000000540     0 SECTION LOCAL  DEFAULT   11 \n    12: 0000000000000550     0 SECTION LOCAL  DEFAULT   12 \n    13: 0000000000000560     0 SECTION LOCAL  DEFAULT   13 \n    14: 0000000000000764     0 SECTION LOCAL  DEFAULT   14 \n    15: 0000000000000770     0 SECTION LOCAL  DEFAULT   15 \n    16: 0000000000000778     0 SECTION LOCAL  DEFAULT   16 \n    17: 00000000000007c0     0 SECTION LOCAL  DEFAULT   17 \n    18: 0000000000200dd8     0 SECTION LOCAL  DEFAULT   18 \n    19: 0000000000200de0     0 SECTION LOCAL  DEFAULT   19 \n    20: 0000000000200de8     0 SECTION LOCAL  DEFAULT   20 \n    21: 0000000000200df0     0 SECTION LOCAL  DEFAULT   21 \n    22: 0000000000200fd0     0 SECTION LOCAL  DEFAULT   22 \n    23: 0000000000201000     0 SECTION LOCAL  DEFAULT   23 \n    24: 0000000000201018     0 SECTION LOCAL  DEFAULT   24 \n    25: 000000000020102c     0 SECTION LOCAL  DEFAULT   25 \n    26: 0000000000000000     0 SECTION LOCAL  DEFAULT   26 \n    27: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS crtstuff.c\n    28: 0000000000200de8     0 OBJECT  LOCAL  DEFAULT   20 __JCR_LIST__\n    29: 0000000000000590     0 FUNC    LOCAL  DEFAULT   13 deregister_tm_clones\n    30: 00000000000005d0     0 FUNC    LOCAL  DEFAULT   13 register_tm_clones\n    31: 0000000000000620     0 FUNC    LOCAL  DEFAULT   13 __do_global_dtors_aux\n    32: 000000000020102c     1 OBJECT  LOCAL  DEFAULT   25 completed.6972\n    33: 0000000000200de0     0 OBJECT  LOCAL  DEFAULT   19 __do_global_dtors_aux_fin\n    34: 0000000000000660     0 FUNC    LOCAL  DEFAULT   13 frame_dummy\n    35: 0000000000200dd8     0 OBJECT  LOCAL  DEFAULT   18 __frame_dummy_init_array_\n    36: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS test.cpp\n    37: 0000000000000774     4 OBJECT  LOCAL  DEFAULT   15 _ZL13g_static_text\n    38: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS crtstuff.c\n    39: 00000000000008e8     0 OBJECT  LOCAL  DEFAULT   17 __FRAME_END__\n    40: 0000000000200de8     0 OBJECT  LOCAL  DEFAULT   20 __JCR_END__\n    41: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS \n    42: 0000000000000778     0 NOTYPE  LOCAL  DEFAULT   16 __GNU_EH_FRAME_HDR\n    43: 0000000000200df0     0 OBJECT  LOCAL  DEFAULT   21 _DYNAMIC\n    44: 0000000000200de0     0 NOTYPE  LOCAL  DEFAULT   18 __init_array_end\n    45: 0000000000200dd8     0 NOTYPE  LOCAL  DEFAULT   18 __init_array_start\n    46: 0000000000201000     0 OBJECT  LOCAL  DEFAULT   23 _GLOBAL_OFFSET_TABLE_\n    47: 0000000000201028     4 OBJECT  GLOBAL DEFAULT   24 g_static_data\n    48: 000000000020102c     0 NOTYPE  GLOBAL DEFAULT   24 _edata\n    49: 0000000000201018     0 NOTYPE  WEAK   DEFAULT   24 data_start\n    50: 0000000000000770     4 OBJECT  GLOBAL DEFAULT   15 _IO_stdin_used\n    51: 0000000000000690    25 FUNC    GLOBAL DEFAULT   13 _Z9main_funcii\n    52: 0000000000000000     0 FUNC    WEAK   DEFAULT  UND __cxa_finalize@@GLIBC_2.2\n    53: 00000000000006a9    69 FUNC    GLOBAL DEFAULT   13 main\n    54: 0000000000201020     0 OBJECT  GLOBAL HIDDEN    24 __dso_handle\n    55: 0000000000000764     0 FUNC    GLOBAL DEFAULT   14 _fini\n    56: 0000000000000560    43 FUNC    GLOBAL DEFAULT   13 _start\n    57: 0000000000000520     0 FUNC    GLOBAL DEFAULT   10 _init\n    58: 0000000000201030     0 OBJECT  GLOBAL HIDDEN    24 __TMC_END__\n    59: 0000000000000000     0 NOTYPE  WEAK   DEFAULT  UND _Jv_RegisterClasses\n    60: 0000000000201018     0 NOTYPE  GLOBAL DEFAULT   24 __data_start\n    61: 0000000000201038     0 NOTYPE  GLOBAL DEFAULT   25 _end\n    62: 000000000020102c     0 NOTYPE  GLOBAL DEFAULT   25 __bss_start\n    63: 00000000000006f0   101 FUNC    GLOBAL DEFAULT   13 __libc_csu_init\n    64: 0000000000201030     4 OBJECT  GLOBAL DEFAULT   25 g_static_bss\n    65: 0000000000000000     0 NOTYPE  WEAK   DEFAULT  UND _ITM_deregisterTMCloneTab\n    66: 0000000000000760     2 FUNC    GLOBAL DEFAULT   13 __libc_csu_fini\n    67: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND __libc_start_main@@GLIBC_\n    68: 0000000000000000     0 NOTYPE  WEAK   DEFAULT  UND __gmon_start__\n    69: 0000000000000000     0 NOTYPE  WEAK   DEFAULT  UND _ITM_registerTMCloneTable\n\n\n.text\n0000000000000520 <_init>:\n 520:   48 83 ec 08             sub    $0x8,%rsp\n 524:   48 8b 05 c5 0a 20 00    mov    0x200ac5(%rip),%rax        # 200ff0 <__gmon_start__>\n 52b:   48 85 c0                test   %rax,%rax\n 52e:   74 02                   je     532 <_init+0x12>\n 530:   ff d0                   callq  *%rax\n 532:   48 83 c4 08             add    $0x8,%rsp\n 536:   c3                      retq   \n\nDisassembly of section .plt:\n\n0000000000000540 <.plt>:\n 540:   ff 35 c2 0a 20 00       pushq  0x200ac2(%rip)        # 201008 <_GLOBAL_OFFSET_TABLE_+0x8>\n 546:   ff 25 c4 0a 20 00       jmpq   *0x200ac4(%rip)        # 201010 <_GLOBAL_OFFSET_TABLE_+0x10>\n 54c:   0f 1f 40 00             nopl   0x0(%rax)\n\nDisassembly of section .plt.got:\n\n0000000000000550 <.plt.got>:\n 550:   ff 25 7a 0a 20 00       jmpq   *0x200a7a(%rip)        # 200fd0 <__cxa_finalize@GLIBC_2.2.5>\n 556:   66 90                   xchg   %ax,%ax\n\nDisassembly of section .text:\n\n0000000000000560 <_start>:\n 560:   31 ed                   xor    %ebp,%ebp\n 562:   49 89 d1                mov    %rdx,%r9\n 565:   5e                      pop    %rsi\n 566:   48 89 e2                mov    %rsp,%rdx\n 569:   48 83 e4 f0             and    $0xfffffffffffffff0,%rsp\n 56d:   50                      push   %rax\n 56e:   54                      push   %rsp\n 56f:   4c 8d 05 ea 01 00 00    lea    0x1ea(%rip),%r8        # 760 <__libc_csu_fini>\n 576:   48 8d 0d 73 01 00 00    lea    0x173(%rip),%rcx        # 6f0 <__libc_csu_init>\n 57d:   48 8d 3d 25 01 00 00    lea    0x125(%rip),%rdi        # 6a9 <main>\n 584:   ff 15 5e 0a 20 00       callq  *0x200a5e(%rip)        # 200fe8 <__libc_start_main@GLIBC_2.2.5>\n 58a:   f4                      hlt    \n 58b:   0f 1f 44 00 00          nopl   0x0(%rax,%rax,1)\n\n0000000000000590 <deregister_tm_clones>:\n 590:   48 8d 3d 99 0a 20 00    lea    0x200a99(%rip),%rdi        # 201030 <__TMC_END__>\n 597:   48 8d 05 99 0a 20 00    lea    0x200a99(%rip),%rax        # 201037 <__TMC_END__+0x7>\n 59e:   55                      push   %rbp\n 59f:   48 29 f8                sub    %rdi,%rax\n 5a2:   48 89 e5                mov    %rsp,%rbp\n 5a5:   48 83 f8 0e             cmp    $0xe,%rax\n 5a9:   76 15                   jbe    5c0 <deregister_tm_clones+0x30>\n 5ab:   48 8b 05 2e 0a 20 00    mov    0x200a2e(%rip),%rax        # 200fe0 <_ITM_deregisterTMCloneTable>\n 5b2:   48 85 c0                test   %rax,%rax\n 5b5:   74 09                   je     5c0 <deregister_tm_clones+0x30>\n 5b7:   5d                      pop    %rbp\n 5b8:   ff e0                   jmpq   *%rax\n 5ba:   66 0f 1f 44 00 00       nopw   0x0(%rax,%rax,1)\n 5c0:   5d                      pop    %rbp\n 5c1:   c3                      retq   \n 5c2:   0f 1f 40 00             nopl   0x0(%rax)\n 5c6:   66 2e 0f 1f 84 00 00    nopw   %cs:0x0(%rax,%rax,1)\n 5cd:   00 00 00 \n\n00000000000005d0 <register_tm_clones>:\n 5d0:   48 8d 3d 59 0a 20 00    lea    0x200a59(%rip),%rdi        # 201030 <__TMC_END__>\n 5d7:   48 8d 35 52 0a 20 00    lea    0x200a52(%rip),%rsi        # 201030 <__TMC_END__>\n 5de:   55                      push   %rbp\n 5df:   48 29 fe                sub    %rdi,%rsi\n 5e2:   48 89 e5                mov    %rsp,%rbp\n 5e5:   48 c1 fe 03             sar    $0x3,%rsi\n 5e9:   48 89 f0                mov    %rsi,%rax\n 5ec:   48 c1 e8 3f             shr    $0x3f,%rax\n 5f0:   48 01 c6                add    %rax,%rsi\n 5f3:   48 d1 fe                sar    %rsi\n 5f6:   74 18                   je     610 <register_tm_clones+0x40>\n 5f8:   48 8b 05 f9 09 20 00    mov    0x2009f9(%rip),%rax        # 200ff8 <_ITM_registerTMCloneTable>\n 5ff:   48 85 c0                test   %rax,%rax\n 602:   74 0c                   je     610 <register_tm_clones+0x40>\n 604:   5d                      pop    %rbp\n 605:   ff e0                   jmpq   *%rax\n 607:   66 0f 1f 84 00 00 00    nopw   0x0(%rax,%rax,1)\n 60e:   00 00 \n 610:   5d                      pop    %rbp\n 611:   c3                      retq   \n 612:   0f 1f 40 00             nopl   0x0(%rax)\n 616:   66 2e 0f 1f 84 00 00    nopw   %cs:0x0(%rax,%rax,1)\n 61d:   00 00 00 \n\n0000000000000620 <__do_global_dtors_aux>:\n 620:   80 3d 05 0a 20 00 00    cmpb   $0x0,0x200a05(%rip)        # 20102c <_edata>\n 627:   75 27                   jne    650 <__do_global_dtors_aux+0x30>\n 629:   48 83 3d 9f 09 20 00    cmpq   $0x0,0x20099f(%rip)        # 200fd0 <__cxa_finalize@GLIBC_2.2.5>\n 630:   00 \n 631:   55                      push   %rbp\n 632:   48 89 e5                mov    %rsp,%rbp\n 635:   74 0c                   je     643 <__do_global_dtors_aux+0x23>\n 637:   48 8b 3d e2 09 20 00    mov    0x2009e2(%rip),%rdi        # 201020 <__dso_handle>\n 63e:   e8 0d ff ff ff          callq  550 <.plt.got>\n 643:   e8 48 ff ff ff          callq  590 <deregister_tm_clones>\n 648:   5d                      pop    %rbp\n 649:   c6 05 dc 09 20 00 01    movb   $0x1,0x2009dc(%rip)        # 20102c <_edata>\n 650:   f3 c3                   repz retq \n 652:   0f 1f 40 00             nopl   0x0(%rax)\n 656:   66 2e 0f 1f 84 00 00    nopw   %cs:0x0(%rax,%rax,1)\n 65d:   00 00 00 \n\n0000000000000660 <frame_dummy>:\n 660:   48 8d 3d 81 07 20 00    lea    0x200781(%rip),%rdi        # 200de8 <__JCR_END__>\n 667:   48 83 3f 00             cmpq   $0x0,(%rdi)\n 66b:   75 0b                   jne    678 <frame_dummy+0x18>\n 66d:   e9 5e ff ff ff          jmpq   5d0 <register_tm_clones>\n 672:   66 0f 1f 44 00 00       nopw   0x0(%rax,%rax,1)\n 678:   48 8b 05 59 09 20 00    mov    0x200959(%rip),%rax        # 200fd8 <_Jv_RegisterClasses>\n 67f:   48 85 c0                test   %rax,%rax\n 682:   74 e9                   je     66d <frame_dummy+0xd>\n 684:   55                      push   %rbp\n 685:   48 89 e5                mov    %rsp,%rbp\n 688:   ff d0                   callq  *%rax\n 68a:   5d                      pop    %rbp\n 68b:   e9 40 ff ff ff          jmpq   5d0 <register_tm_clones>\n\n0000000000000690 <_Z9main_funcii>:\n 690:   55                      push   %rbp\n 691:   48 89 e5                mov    %rsp,%rbp\n 694:   89 7d fc                mov    %edi,-0x4(%rbp)\n 697:   89 75 f8                mov    %esi,-0x8(%rbp)\n 69a:   8b 55 fc                mov    -0x4(%rbp),%edx\n 69d:   8b 45 f8                mov    -0x8(%rbp),%eax\n 6a0:   01 d0                   add    %edx,%eax\n 6a2:   05 c3 07 00 00          add    $0x7c3,%eax\n 6a7:   5d                      pop    %rbp\n 6a8:   c3                      retq   \n\n00000000000006a9 <main>:\n 6a9:   55                      push   %rbp\n 6aa:   48 89 e5                mov    %rsp,%rbp\n 6ad:   48 83 ec 20             sub    $0x20,%rsp\n 6b1:   89 7d ec                mov    %edi,-0x14(%rbp)\n 6b4:   48 89 75 e0             mov    %rsi,-0x20(%rbp)\n 6b8:   c7 45 fc 00 00 00 00    movl   $0x0,-0x4(%rbp)\n 6bf:   48 8d 05 6a 09 20 00    lea    0x20096a(%rip),%rax        # 201030 <__TMC_END__>\n 6c6:   8b 55 ec                mov    -0x14(%rbp),%edx\n 6c9:   89 10                   mov    %edx,(%rax)\n 6cb:   48 8d 05 56 09 20 00    lea    0x200956(%rip),%rax        # 201028 <g_static_data>\n 6d2:   8b 10                   mov    (%rax),%edx\n 6d4:   48 8d 05 55 09 20 00    lea    0x200955(%rip),%rax        # 201030 <__TMC_END__>\n 6db:   8b 00                   mov    (%rax),%eax\n 6dd:   89 d6                   mov    %edx,%esi\n 6df:   89 c7                   mov    %eax,%edi\n 6e1:   e8 aa ff ff ff          callq  690 <_Z9main_funcii>\n 6e6:   01 45 fc                add    %eax,-0x4(%rbp)\n 6e9:   8b 45 fc                mov    -0x4(%rbp),%eax\n 6ec:   c9                      leaveq \n 6ed:   c3                      retq   \n 6ee:   66 90                   xchg   %ax,%ax\n\n00000000000006f0 <__libc_csu_init>:\n 6f0:   41 57                   push   %r15\n 6f2:   41 56                   push   %r14\n 6f4:   49 89 d7                mov    %rdx,%r15\n 6f7:   41 55                   push   %r13\n 6f9:   41 54                   push   %r12\n 6fb:   4c 8d 25 d6 06 20 00    lea    0x2006d6(%rip),%r12        # 200dd8 <__frame_dummy_init_array_entry>\n 702:   55                      push   %rbp\n 703:   48 8d 2d d6 06 20 00    lea    0x2006d6(%rip),%rbp        # 200de0 <__init_array_end>\n 70a:   53                      push   %rbx\n 70b:   41 89 fd                mov    %edi,%r13d\n 70e:   49 89 f6                mov    %rsi,%r14\n 711:   4c 29 e5                sub    %r12,%rbp\n 714:   48 83 ec 08             sub    $0x8,%rsp\n 718:   48 c1 fd 03             sar    $0x3,%rbp\n 71c:   e8 ff fd ff ff          callq  520 <_init>\n 721:   48 85 ed                test   %rbp,%rbp\n 724:   74 20                   je     746 <__libc_csu_init+0x56>\n 726:   31 db                   xor    %ebx,%ebx\n 728:   0f 1f 84 00 00 00 00    nopl   0x0(%rax,%rax,1)\n 72f:   00 \n 730:   4c 89 fa                mov    %r15,%rdx\n 733:   4c 89 f6                mov    %r14,%rsi\n 736:   44 89 ef                mov    %r13d,%edi\n 739:   41 ff 14 dc             callq  *(%r12,%rbx,8)\n 73d:   48 83 c3 01             add    $0x1,%rbx\n 741:   48 39 dd                cmp    %rbx,%rbp\n 744:   75 ea                   jne    730 <__libc_csu_init+0x40>\n 746:   48 83 c4 08             add    $0x8,%rsp\n 74a:   5b                      pop    %rbx\n 74b:   5d                      pop    %rbp\n 74c:   41 5c                   pop    %r12\n 74e:   41 5d                   pop    %r13\n 750:   41 5e                   pop    %r14\n 752:   41 5f                   pop    %r15\n 754:   c3                      retq   \n 755:   90                      nop\n 756:   66 2e 0f 1f 84 00 00    nopw   %cs:0x0(%rax,%rax,1)\n 75d:   00 00 00 \n\n0000000000000760 <__libc_csu_fini>:\n 760:   f3 c3                   repz retq \n\nDisassembly of section .fini:\n\n0000000000000764 <_fini>:\n 764:   48 83 ec 08             sub    $0x8,%rsp\n 768:   48 83 c4 08             add    $0x8,%rsp\n 76c:   c3                      retq   \n```","source":"_posts/2019-11-29-static-linking.md","raw":"---\ntitle: 静态链接过程    \ndate: 2019-11-29\ncategories: develop \nauthor: yawei.zhang \n---\n\n### 目录  \n\n---  \n\n<!-- TOC -->\n\n- [目录](#目录)\n- [基本编译链接流程](#基本编译链接流程)\n- [静态链接过程概述](#静态链接过程概述)\n- [静态链接过程流程追踪和代码验证](#静态链接过程流程追踪和代码验证)\n  - [测试源代码](#测试源代码)\n  - [生成汇编代码 (从这里开始会有两个分支代码 NON-PIC 和 PIC对照)](#生成汇编代码-从这里开始会有两个分支代码-non-pic-和-pic对照)\n    - [汇编代码 (相对位置版本)](#汇编代码-相对位置版本)\n    - [汇编代码 (位置无关版本)](#汇编代码-位置无关版本)\n  - [生成ELF的可重定位文件](#生成elf的可重定位文件)\n    - [可重定向文件和汇编指令 (相对位置版本)](#可重定向文件和汇编指令-相对位置版本)\n    - [可重定向文件和汇编指令 (位置无关版本)](#可重定向文件和汇编指令-位置无关版本)\n  - [链接为可执行文件(或者共享库)](#链接为可执行文件或者共享库)\n    - [可执行文件 (相对位置的非PIE(EXEC)版本)](#可执行文件-相对位置的非pieexec版本)\n    - [可执行文件 (相对位置的PIE(DYN)版本)](#可执行文件-相对位置的piedyn版本)\n    - [可执行文件 (位置无关的非PIE(EXEC)版本)](#可执行文件-位置无关的非pieexec版本)\n    - [可执行文件 (位置无关的PIE(DYN)版本)](#可执行文件-位置无关的piedyn版本)\n\n<!-- /TOC -->\n\n### 基本编译链接流程   \n* 编译并输出汇编代码  \n  * g++ -S lib.cpp -o lib.s \n* 打包成ELF可重定位文件 ELF TYPE= ET_REL  即.o文件  \n  * g++ -c lib.s -o lib.o \n* 链接到动态库或者可执行文件\n  * g++ lib.o -o a.out   \n  * g++ -shared lib.o -o a.out \n\n<!-- more -->\n\n### 静态链接过程概述  \n\n### 静态链接过程流程追踪和代码验证\n#### 测试源代码    \n``` C++\nint g_static_bss = 0;\nint g_static_data = 182;\nconst int g_static_text = 1987;\nint main_func(int a, int b)\n{\n   return a+b + g_static_text;\n}\n\n\nint main(int argc, char *argv[])\n{\n   int a = 0;\n   g_static_bss = argc;\n   a += main_func(g_static_bss, g_static_data);\n   return a;\n}\n```\n\n#### 生成汇编代码 (从这里开始会有两个分支代码 NON-PIC 和 PIC对照)    \n\n在这段代码中 \n\n* g_static_bss  \n  * 为全局的符号(给链接器看到) \n  * 被放在.bss字段(未初始化数据段, Block Started by Symbol)中 \n  * 占用4个字节  类型是object 初始化为0   \n  * 4字节对齐  \n\n* g_static_data  \n  * 为全局的符号(给链接器看到) \n  * 被放在.data字段(数据段)中 \n  * 占用4个字节  类型是object 初始化为182   \n  * 4字节对齐  \n\n* _ZL13g_static_text  \n  * 为全局的符号(给链接器看到) \n  * 被放在.rodata字段(只读数据段)中 \n  * 占用4个字节  类型是object 初始化为1987   \n  * 4字节对齐  \n\n* _Z9main_funcii  \n  * 为全局的符号(给链接器看到) \n  * 被放在.text字段(代码段)中 \n  * 占用4个字节  类型是function  \n\n* main  \n  * 为全局的符号(给链接器看到) \n  * 被放在.text字段(代码段)中 \n  * 占用4个字节  类型是function  \n\n* GOTPCREL \n  * PC-REL是指的位置相对代码   \n  * 这里是指的走GOT表的位置相对代码   \n\n* 在下面的对照中  对于全局符号的访问有如下区别\n  * 访问全局对象时 PIC 版本会先从相对当前代码位置的GOT表中读取全局对象的地址到RAX 然后再读取其内容   \n  * 非PIC版本则直接用记录好的地址读取其内容  \n\n\n##### 汇编代码 (相对位置版本)\n``` ARMASM\n    .file    \"test.cpp\"\n    .globl    g_static_bss\n    .bss\n    .align 4\n    .type    g_static_bss, @object\n    .size    g_static_bss, 4\ng_static_bss:\n    .zero    4\n    .globl    g_static_data\n    .data\n    .align 4\n    .type    g_static_data, @object\n    .size    g_static_data, 4\ng_static_data:\n    .long    182\n    .section    .rodata\n    .align 4\n    .type    _ZL13g_static_text, @object\n    .size    _ZL13g_static_text, 4\n_ZL13g_static_text:\n    .long    1987\n    .text\n    .globl    _Z9main_funcii\n    .type    _Z9main_funcii, @function\n_Z9main_funcii:\n.LFB0:\n    .cfi_startproc\n    pushq    %rbp\n    .cfi_def_cfa_offset 16\n    .cfi_offset 6, -16\n    movq    %rsp, %rbp\n    .cfi_def_cfa_register 6\n    movl    %edi, -4(%rbp)\n    movl    %esi, -8(%rbp)\n    movl    -4(%rbp), %edx\n    movl    -8(%rbp), %eax\n    addl    %edx, %eax\n    addl    $1987, %eax\n    popq    %rbp\n    .cfi_def_cfa 7, 8\n    ret\n    .cfi_endproc\n.LFE0:\n    .size    _Z9main_funcii, .-_Z9main_funcii\n    .globl    main\n    .type    main, @function\nmain:\n.LFB1:\n    .cfi_startproc\n    pushq    %rbp\n    .cfi_def_cfa_offset 16\n    .cfi_offset 6, -16\n    movq    %rsp, %rbp\n    .cfi_def_cfa_register 6\n    subq    $32, %rsp\n    movl    %edi, -20(%rbp)\n    movq    %rsi, -32(%rbp)\n    movl    $0, -4(%rbp)\n    movl    -20(%rbp), %eax\n    movl    %eax, g_static_bss(%rip)\n    movl    g_static_data(%rip), %edx\n    movl    g_static_bss(%rip), %eax\n    movl    %edx, %esi\n    movl    %eax, %edi\n    call    _Z9main_funcii\n    addl    %eax, -4(%rbp)\n    movl    -4(%rbp), %eax\n    leave\n    .cfi_def_cfa 7, 8\n    ret\n    .cfi_endproc\n.LFE1:\n    .size    main, .-main\n    .ident    \"GCC: (Debian 6.3.0-18+deb9u1) 6.3.0 20170516\"\n    .section    .note.GNU-stack,\"\",@progbits\n\n```\n\n##### 汇编代码 (位置无关版本) \n``` ARMASM\n    .file    \"test.cpp\"\n    .globl    g_static_bss\n    .bss\n    .align 4\n    .type    g_static_bss, @object\n    .size    g_static_bss, 4\ng_static_bss:\n    .zero    4\n    .globl    g_static_data\n    .data\n    .align 4\n    .type    g_static_data, @object\n    .size    g_static_data, 4\ng_static_data:\n    .long    182\n    .section    .rodata\n    .align 4\n    .type    _ZL13g_static_text, @object\n    .size    _ZL13g_static_text, 4\n_ZL13g_static_text:\n    .long    1987\n    .text\n    .globl    _Z9main_funcii\n    .type    _Z9main_funcii, @function\n_Z9main_funcii:\n.LFB0:\n    .cfi_startproc\n    pushq    %rbp\n    .cfi_def_cfa_offset 16\n    .cfi_offset 6, -16\n    movq    %rsp, %rbp\n    .cfi_def_cfa_register 6\n    movl    %edi, -4(%rbp)\n    movl    %esi, -8(%rbp)\n    movl    -4(%rbp), %edx\n    movl    -8(%rbp), %eax\n    addl    %edx, %eax\n    addl    $1987, %eax\n    popq    %rbp\n    .cfi_def_cfa 7, 8\n    ret\n    .cfi_endproc\n.LFE0:\n    .size    _Z9main_funcii, .-_Z9main_funcii\n    .globl    main\n    .type    main, @function\nmain:\n.LFB1:\n    .cfi_startproc\n    pushq    %rbp\n    .cfi_def_cfa_offset 16\n    .cfi_offset 6, -16\n    movq    %rsp, %rbp\n    .cfi_def_cfa_register 6\n    subq    $32, %rsp\n    movl    %edi, -20(%rbp)\n    movq    %rsi, -32(%rbp)\n    movl    $0, -4(%rbp)\n    movq    g_static_bss@GOTPCREL(%rip), %rax\n    movl    -20(%rbp), %edx\n    movl    %edx, (%rax)\n    movq    g_static_data@GOTPCREL(%rip), %rax\n    movl    (%rax), %edx\n    movq    g_static_bss@GOTPCREL(%rip), %rax\n    movl    (%rax), %eax\n    movl    %edx, %esi\n    movl    %eax, %edi\n    call    _Z9main_funcii@PLT\n    addl    %eax, -4(%rbp)\n    movl    -4(%rbp), %eax\n    leave\n    .cfi_def_cfa 7, 8\n    ret\n    .cfi_endproc\n.LFE1:\n    .size    main, .-main\n    .ident    \"GCC: (Debian 6.3.0-18+deb9u1) 6.3.0 20170516\"\n    .section    .note.GNU-stack,\"\",@progbits\n```\n\n#### 生成ELF的可重定位文件\n\n* .rela.text 重定位section\n  * 包含了所有需要进行重定位的信息, 偏移量是相对于.text  类型则是注明了重定位的方式  \n\n\n* .rela.eh_frame 重定位section  \n* .symtab 符号表section  \n  * Value 标记了符号所在的偏移地址 \n  * SIZE 标记了代码或者变量占的大小  \n  * Ndx 如果不在本编译单元 类型为NOTYPE Ndx为UND   \n  * Bind 全局还是局部符号(是否链接器可见)  \n    * rodata的符号为local是因为直接被编译到了代码中 \n      * 例如g_static_text 1987 => ```add $0x7c3,%eax```\n\n* .rela.eh_frame Call Frame Information \n  * 提供了异常的Stack Unwind 支持  \n  * 这张表提供了'给定一个PC值, 可以查到上一个stack frame位置'\n  * Stack Unwind 指从最內层函数呼叫堆栈开始，找到最外层  \n    * _Unwind_Backtrace()   \n    * uw_frame_state_for() \n    * uw_update_context() \n    * uw_update_context_1()  \n\n\n* PC32 的PC是指的 program counter   在本文的汇编中对应寄存器的RIP \n* PC32 在重定位类型中代表相对指令位置的重定位\n* PLT 则代表使用 过程链接表 进行重定位 (动态定位)   \n* GOT 是全局偏移表  \n* PGOT 是私有全局偏移表  \n\n在这个过程中 \n无论是PIC的PLT调用还是PC调用, 对于call 指令 他的操作数都是0 \n无论是GOTPCREL还是PC 对全局对象符号的访问中 操作数也都是0  \n在重定位节中标记了这些需要在链接过程中重建的具体位置和内容 \n\n\n##### 可重定向文件和汇编指令 (相对位置版本)\n``` ARMASM\n重定位节 '.rela.text' 位于偏移量 0x2c8 含有 4 个条目：\n  偏移量          信息           类型           符号值        符号名称 + 加数\n000000000034  000a00000002 R_X86_64_PC32     0000000000000000 g_static_bss - 4\n00000000003a  000b00000002 R_X86_64_PC32     0000000000000000 g_static_data - 4\n000000000040  000a00000002 R_X86_64_PC32     0000000000000000 g_static_bss - 4\n000000000049  000c00000002 R_X86_64_PC32     0000000000000000 _Z9main_funcii - 4\n\n重定位节 '.rela.eh_frame' 位于偏移量 0x328 含有 2 个条目：\n  偏移量          信息           类型           符号值        符号名称 + 加数\n000000000020  000200000002 R_X86_64_PC32     0000000000000000 .text + 0\n000000000040  000200000002 R_X86_64_PC32     0000000000000000 .text + 19\n\nThe decoding of unwind sections for machine type Advanced Micro Devices X86-64 is not currently supported.\n\nSymbol table '.symtab' contains 14 entries:\n   Num:    Value          Size Type    Bind   Vis      Ndx Name\n     0: 0000000000000000     0 NOTYPE  LOCAL  DEFAULT  UND \n     1: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS test.cpp\n     2: 0000000000000000     0 SECTION LOCAL  DEFAULT    1 \n     3: 0000000000000000     0 SECTION LOCAL  DEFAULT    3 \n     4: 0000000000000000     0 SECTION LOCAL  DEFAULT    4 \n     5: 0000000000000000     0 SECTION LOCAL  DEFAULT    5 \n     6: 0000000000000000     4 OBJECT  LOCAL  DEFAULT    5 _ZL13g_static_text\n     7: 0000000000000000     0 SECTION LOCAL  DEFAULT    7 \n     8: 0000000000000000     0 SECTION LOCAL  DEFAULT    8 \n     9: 0000000000000000     0 SECTION LOCAL  DEFAULT    6 \n    10: 0000000000000000     4 OBJECT  GLOBAL DEFAULT    4 g_static_bss\n    11: 0000000000000000     4 OBJECT  GLOBAL DEFAULT    3 g_static_data\n    12: 0000000000000000    25 FUNC    GLOBAL DEFAULT    1 _Z9main_funcii\n    13: 0000000000000019    60 FUNC    GLOBAL DEFAULT    1 main\n\n.text\n0000000000000000 <_Z9main_funcii>:\n   0:   55                      push   %rbp\n   1:   48 89 e5                mov    %rsp,%rbp\n   4:   89 7d fc                mov    %edi,-0x4(%rbp)\n   7:   89 75 f8                mov    %esi,-0x8(%rbp)\n   a:   8b 55 fc                mov    -0x4(%rbp),%edx\n   d:   8b 45 f8                mov    -0x8(%rbp),%eax\n  10:   01 d0                   add    %edx,%eax\n  12:   05 c3 07 00 00          add    $0x7c3,%eax\n  17:   5d                      pop    %rbp\n  18:   c3                      retq   \n\n0000000000000019 <main>:\n  19:   55                      push   %rbp\n  1a:   48 89 e5                mov    %rsp,%rbp\n  1d:   48 83 ec 20             sub    $0x20,%rsp\n  21:   89 7d ec                mov    %edi,-0x14(%rbp)\n  24:   48 89 75 e0             mov    %rsi,-0x20(%rbp)\n  28:   c7 45 fc 00 00 00 00    movl   $0x0,-0x4(%rbp)\n  2f:   8b 45 ec                mov    -0x14(%rbp),%eax\n  32:   89 05 00 00 00 00       mov    %eax,0x0(%rip)        # 38 <main+0x1f>\n  38:   8b 15 00 00 00 00       mov    0x0(%rip),%edx        # 3e <main+0x25>\n  3e:   8b 05 00 00 00 00       mov    0x0(%rip),%eax        # 44 <main+0x2b>\n  44:   89 d6                   mov    %edx,%esi\n  46:   89 c7                   mov    %eax,%edi\n  48:   e8 00 00 00 00          callq  4d <main+0x34>\n  4d:   01 45 fc                add    %eax,-0x4(%rbp)\n  50:   8b 45 fc                mov    -0x4(%rbp),%eax\n  53:   c9                      leaveq \n  54:   c3                      retq   \n```\n\n\n##### 可重定向文件和汇编指令 (位置无关版本)\n``` ARMASM\n重定位节 '.rela.text' 位于偏移量 0x300 含有 4 个条目：\n  偏移量          信息           类型           符号值        符号名称 + 加数\n000000000032  000a0000002a R_X86_64_REX_GOTP 0000000000000000 g_static_bss - 4\n00000000003e  000b0000002a R_X86_64_REX_GOTP 0000000000000000 g_static_data - 4\n000000000047  000a0000002a R_X86_64_REX_GOTP 0000000000000000 g_static_bss - 4\n000000000052  000c00000004 R_X86_64_PLT32    0000000000000000 _Z9main_funcii - 4\n\n重定位节 '.rela.eh_frame' 位于偏移量 0x360 含有 2 个条目：\n  偏移量          信息           类型           符号值        符号名称 + 加数\n000000000020  000200000002 R_X86_64_PC32     0000000000000000 .text + 0\n000000000040  000200000002 R_X86_64_PC32     0000000000000000 .text + 19\n\nThe decoding of unwind sections for machine type Advanced Micro Devices X86-64 is not currently supported.\n\nSymbol table '.symtab' contains 15 entries:\n   Num:    Value          Size Type    Bind   Vis      Ndx Name\n     0: 0000000000000000     0 NOTYPE  LOCAL  DEFAULT  UND \n     1: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS test.cpp\n     2: 0000000000000000     0 SECTION LOCAL  DEFAULT    1 \n     3: 0000000000000000     0 SECTION LOCAL  DEFAULT    3 \n     4: 0000000000000000     0 SECTION LOCAL  DEFAULT    4 \n     5: 0000000000000000     0 SECTION LOCAL  DEFAULT    5 \n     6: 0000000000000000     4 OBJECT  LOCAL  DEFAULT    5 _ZL13g_static_text\n     7: 0000000000000000     0 SECTION LOCAL  DEFAULT    7 \n     8: 0000000000000000     0 SECTION LOCAL  DEFAULT    8 \n     9: 0000000000000000     0 SECTION LOCAL  DEFAULT    6 \n    10: 0000000000000000     4 OBJECT  GLOBAL DEFAULT    4 g_static_bss\n    11: 0000000000000000     4 OBJECT  GLOBAL DEFAULT    3 g_static_data\n    12: 0000000000000000    25 FUNC    GLOBAL DEFAULT    1 _Z9main_funcii\n    13: 0000000000000019    69 FUNC    GLOBAL DEFAULT    1 main\n    14: 0000000000000000     0 NOTYPE  GLOBAL DEFAULT  UND _GLOBAL_OFFSET_TABLE_\n\n.text\n0000000000000000 <_Z9main_funcii>:\n   0:   55                      push   %rbp\n   1:   48 89 e5                mov    %rsp,%rbp\n   4:   89 7d fc                mov    %edi,-0x4(%rbp)\n   7:   89 75 f8                mov    %esi,-0x8(%rbp)\n   a:   8b 55 fc                mov    -0x4(%rbp),%edx\n   d:   8b 45 f8                mov    -0x8(%rbp),%eax\n  10:   01 d0                   add    %edx,%eax\n  12:   05 c3 07 00 00          add    $0x7c3,%eax\n  17:   5d                      pop    %rbp\n  18:   c3                      retq   \n\n0000000000000019 <main>:\n  19:   55                      push   %rbp\n  1a:   48 89 e5                mov    %rsp,%rbp\n  1d:   48 83 ec 20             sub    $0x20,%rsp\n  21:   89 7d ec                mov    %edi,-0x14(%rbp)\n  24:   48 89 75 e0             mov    %rsi,-0x20(%rbp)\n  28:   c7 45 fc 00 00 00 00    movl   $0x0,-0x4(%rbp)\n  2f:   48 8b 05 00 00 00 00    mov    0x0(%rip),%rax        # 36 <main+0x1d>\n  36:   8b 55 ec                mov    -0x14(%rbp),%edx\n  39:   89 10                   mov    %edx,(%rax)\n  3b:   48 8b 05 00 00 00 00    mov    0x0(%rip),%rax        # 42 <main+0x29>\n  42:   8b 10                   mov    (%rax),%edx\n  44:   48 8b 05 00 00 00 00    mov    0x0(%rip),%rax        # 4b <main+0x32>\n  4b:   8b 00                   mov    (%rax),%eax\n  4d:   89 d6                   mov    %edx,%esi\n  4f:   89 c7                   mov    %eax,%edi\n  51:   e8 00 00 00 00          callq  56 <main+0x3d>\n  56:   01 45 fc                add    %eax,-0x4(%rbp)\n  59:   8b 45 fc                mov    -0x4(%rbp),%eax\n  5c:   c9                      leaveq \n  5d:   c3                      retq \n```\n\n#### 链接为可执行文件(或者共享库)  \n\n在链接为目标文件时, 会合并处理每个目标文件, 生成plt代码 确定GOT(PGOT)的相对位置等  \n\n在相对位置的两个版本中均可以看到对全局符号的访问均正确填充了相对位移  \n\nPIE版本的区别主要是PIE使用了相对位置 连ELF类型都变成了DYN   \n非PIE版本则使用了绝对位置 \n测试代码没有调用外部函数符号 所以在PIC版本的汇编指令中并没有看到PLT指令\n\n##### 可执行文件 (相对位置的非PIE(EXEC)版本)\n``` ARMASM\n重定位节 '.rela.dyn' 位于偏移量 0x388 含有 2 个条目：\n  偏移量          信息           类型           符号值        符号名称 + 加数\n000000600ff0  000100000006 R_X86_64_GLOB_DAT 0000000000000000 __libc_start_main@GLIBC_2.2.5 + 0\n000000600ff8  000200000006 R_X86_64_GLOB_DAT 0000000000000000 __gmon_start__ + 0\n\nThe decoding of unwind sections for machine type Advanced Micro Devices X86-64 is not currently supported.\n\nSymbol table '.dynsym' contains 3 entries:\n   Num:    Value          Size Type    Bind   Vis      Ndx Name\n     0: 0000000000000000     0 NOTYPE  LOCAL  DEFAULT  UND \n     1: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND __libc_start_main@GLIBC_2.2.5 (2)\n     2: 0000000000000000     0 NOTYPE  WEAK   DEFAULT  UND __gmon_start__\n\nSymbol table '.symtab' contains 65 entries:\n   Num:    Value          Size Type    Bind   Vis      Ndx Name\n     0: 0000000000000000     0 NOTYPE  LOCAL  DEFAULT  UND \n     1: 0000000000400238     0 SECTION LOCAL  DEFAULT    1 \n     2: 0000000000400254     0 SECTION LOCAL  DEFAULT    2 \n     3: 0000000000400274     0 SECTION LOCAL  DEFAULT    3 \n     4: 0000000000400298     0 SECTION LOCAL  DEFAULT    4 \n     5: 00000000004002b8     0 SECTION LOCAL  DEFAULT    5 \n     6: 0000000000400300     0 SECTION LOCAL  DEFAULT    6 \n     7: 0000000000400360     0 SECTION LOCAL  DEFAULT    7 \n     8: 0000000000400368     0 SECTION LOCAL  DEFAULT    8 \n     9: 0000000000400388     0 SECTION LOCAL  DEFAULT    9 \n    10: 00000000004003b8     0 SECTION LOCAL  DEFAULT   10 \n    11: 00000000004003d0     0 SECTION LOCAL  DEFAULT   11 \n    12: 00000000004005a4     0 SECTION LOCAL  DEFAULT   12 \n    13: 00000000004005b0     0 SECTION LOCAL  DEFAULT   13 \n    14: 00000000004005b8     0 SECTION LOCAL  DEFAULT   14 \n    15: 00000000004005f8     0 SECTION LOCAL  DEFAULT   15 \n    16: 0000000000600e18     0 SECTION LOCAL  DEFAULT   16 \n    17: 0000000000600e20     0 SECTION LOCAL  DEFAULT   17 \n    18: 0000000000600e28     0 SECTION LOCAL  DEFAULT   18 \n    19: 0000000000600e30     0 SECTION LOCAL  DEFAULT   19 \n    20: 0000000000600ff0     0 SECTION LOCAL  DEFAULT   20 \n    21: 0000000000601000     0 SECTION LOCAL  DEFAULT   21 \n    22: 0000000000601018     0 SECTION LOCAL  DEFAULT   22 \n    23: 000000000060102c     0 SECTION LOCAL  DEFAULT   23 \n    24: 0000000000000000     0 SECTION LOCAL  DEFAULT   24 \n    25: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS crtstuff.c\n    26: 0000000000600e28     0 OBJECT  LOCAL  DEFAULT   18 __JCR_LIST__\n    27: 0000000000400410     0 FUNC    LOCAL  DEFAULT   11 deregister_tm_clones\n    28: 0000000000400450     0 FUNC    LOCAL  DEFAULT   11 register_tm_clones\n    29: 0000000000400490     0 FUNC    LOCAL  DEFAULT   11 __do_global_dtors_aux\n    30: 000000000060102c     1 OBJECT  LOCAL  DEFAULT   23 completed.6972\n    31: 0000000000600e20     0 OBJECT  LOCAL  DEFAULT   17 __do_global_dtors_aux_fin\n    32: 00000000004004b0     0 FUNC    LOCAL  DEFAULT   11 frame_dummy\n    33: 0000000000600e18     0 OBJECT  LOCAL  DEFAULT   16 __frame_dummy_init_array_\n    34: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS test.cpp\n    35: 00000000004005b4     4 OBJECT  LOCAL  DEFAULT   13 _ZL13g_static_text\n    36: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS crtstuff.c\n    37: 00000000004006f8     0 OBJECT  LOCAL  DEFAULT   15 __FRAME_END__\n    38: 0000000000600e28     0 OBJECT  LOCAL  DEFAULT   18 __JCR_END__\n    39: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS \n    40: 00000000004005b8     0 NOTYPE  LOCAL  DEFAULT   14 __GNU_EH_FRAME_HDR\n    41: 0000000000600e30     0 OBJECT  LOCAL  DEFAULT   19 _DYNAMIC\n    42: 0000000000600e20     0 NOTYPE  LOCAL  DEFAULT   16 __init_array_end\n    43: 0000000000600e18     0 NOTYPE  LOCAL  DEFAULT   16 __init_array_start\n    44: 0000000000601000     0 OBJECT  LOCAL  DEFAULT   21 _GLOBAL_OFFSET_TABLE_\n    45: 0000000000601028     4 OBJECT  GLOBAL DEFAULT   22 g_static_data\n    46: 000000000060102c     0 NOTYPE  GLOBAL DEFAULT   22 _edata\n    47: 0000000000601018     0 NOTYPE  WEAK   DEFAULT   22 data_start\n    48: 00000000004005b0     4 OBJECT  GLOBAL DEFAULT   13 _IO_stdin_used\n    49: 00000000004004d6    25 FUNC    GLOBAL DEFAULT   11 _Z9main_funcii\n    50: 00000000004004ef    60 FUNC    GLOBAL DEFAULT   11 main\n    51: 0000000000601020     0 OBJECT  GLOBAL HIDDEN    22 __dso_handle\n    52: 00000000004005a4     0 FUNC    GLOBAL DEFAULT   12 _fini\n    53: 0000000000400400     2 FUNC    GLOBAL HIDDEN    11 _dl_relocate_static_pie\n    54: 00000000004003d0    43 FUNC    GLOBAL DEFAULT   11 _start\n    55: 00000000004003b8     0 FUNC    GLOBAL DEFAULT   10 _init\n    56: 0000000000601030     0 OBJECT  GLOBAL HIDDEN    22 __TMC_END__\n    57: 0000000000601018     0 NOTYPE  GLOBAL DEFAULT   22 __data_start\n    58: 0000000000601038     0 NOTYPE  GLOBAL DEFAULT   23 _end\n    59: 000000000060102c     0 NOTYPE  GLOBAL DEFAULT   23 __bss_start\n    60: 0000000000400530   101 FUNC    GLOBAL DEFAULT   11 __libc_csu_init\n    61: 0000000000601030     4 OBJECT  GLOBAL DEFAULT   23 g_static_bss\n    62: 00000000004005a0     2 FUNC    GLOBAL DEFAULT   11 __libc_csu_fini\n    63: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND __libc_start_main@@GLIBC_\n    64: 0000000000000000     0 NOTYPE  WEAK   DEFAULT  UND __gmon_start__\n\n\n\n.text\n00000000004003b8 <_init>:\n  4003b8:       48 83 ec 08             sub    $0x8,%rsp\n  4003bc:       48 8b 05 35 0c 20 00    mov    0x200c35(%rip),%rax        # 600ff8 <__gmon_start__>\n  4003c3:       48 85 c0                test   %rax,%rax\n  4003c6:       74 02                   je     4003ca <_init+0x12>\n  4003c8:       ff d0                   callq  *%rax\n  4003ca:       48 83 c4 08             add    $0x8,%rsp\n  4003ce:       c3                      retq   \n\nDisassembly of section .text:\n\n00000000004003d0 <_start>:\n  4003d0:       31 ed                   xor    %ebp,%ebp\n  4003d2:       49 89 d1                mov    %rdx,%r9\n  4003d5:       5e                      pop    %rsi\n  4003d6:       48 89 e2                mov    %rsp,%rdx\n  4003d9:       48 83 e4 f0             and    $0xfffffffffffffff0,%rsp\n  4003dd:       50                      push   %rax\n  4003de:       54                      push   %rsp\n  4003df:       49 c7 c0 a0 05 40 00    mov    $0x4005a0,%r8\n  4003e6:       48 c7 c1 30 05 40 00    mov    $0x400530,%rcx\n  4003ed:       48 c7 c7 ef 04 40 00    mov    $0x4004ef,%rdi\n  4003f4:       ff 15 f6 0b 20 00       callq  *0x200bf6(%rip)        # 600ff0 <__libc_start_main@GLIBC_2.2.5>\n  4003fa:       f4                      hlt    \n  4003fb:       0f 1f 44 00 00          nopl   0x0(%rax,%rax,1)\n\n0000000000400400 <_dl_relocate_static_pie>:\n  400400:       f3 c3                   repz retq \n  400402:       66 2e 0f 1f 84 00 00    nopw   %cs:0x0(%rax,%rax,1)\n  400409:       00 00 00 \n  40040c:       0f 1f 40 00             nopl   0x0(%rax)\n\n0000000000400410 <deregister_tm_clones>:\n  400410:       b8 37 10 60 00          mov    $0x601037,%eax\n  400415:       55                      push   %rbp\n  400416:       48 2d 30 10 60 00       sub    $0x601030,%rax\n  40041c:       48 83 f8 0e             cmp    $0xe,%rax\n  400420:       48 89 e5                mov    %rsp,%rbp\n  400423:       76 1b                   jbe    400440 <deregister_tm_clones+0x30>\n  400425:       b8 00 00 00 00          mov    $0x0,%eax\n  40042a:       48 85 c0                test   %rax,%rax\n  40042d:       74 11                   je     400440 <deregister_tm_clones+0x30>\n  40042f:       5d                      pop    %rbp\n  400430:       bf 30 10 60 00          mov    $0x601030,%edi\n  400435:       ff e0                   jmpq   *%rax\n  400437:       66 0f 1f 84 00 00 00    nopw   0x0(%rax,%rax,1)\n  40043e:       00 00 \n  400440:       5d                      pop    %rbp\n  400441:       c3                      retq   \n  400442:       0f 1f 40 00             nopl   0x0(%rax)\n  400446:       66 2e 0f 1f 84 00 00    nopw   %cs:0x0(%rax,%rax,1)\n  40044d:       00 00 00 \n\n0000000000400450 <register_tm_clones>:\n  400450:       be 30 10 60 00          mov    $0x601030,%esi\n  400455:       55                      push   %rbp\n  400456:       48 81 ee 30 10 60 00    sub    $0x601030,%rsi\n  40045d:       48 c1 fe 03             sar    $0x3,%rsi\n  400461:       48 89 e5                mov    %rsp,%rbp\n  400464:       48 89 f0                mov    %rsi,%rax\n  400467:       48 c1 e8 3f             shr    $0x3f,%rax\n  40046b:       48 01 c6                add    %rax,%rsi\n  40046e:       48 d1 fe                sar    %rsi\n  400471:       74 15                   je     400488 <register_tm_clones+0x38>\n  400473:       b8 00 00 00 00          mov    $0x0,%eax\n  400478:       48 85 c0                test   %rax,%rax\n  40047b:       74 0b                   je     400488 <register_tm_clones+0x38>\n  40047d:       5d                      pop    %rbp\n  40047e:       bf 30 10 60 00          mov    $0x601030,%edi\n  400483:       ff e0                   jmpq   *%rax\n  400485:       0f 1f 00                nopl   (%rax)\n  400488:       5d                      pop    %rbp\n  400489:       c3                      retq   \n  40048a:       66 0f 1f 44 00 00       nopw   0x0(%rax,%rax,1)\n\n0000000000400490 <__do_global_dtors_aux>:\n  400490:       80 3d 95 0b 20 00 00    cmpb   $0x0,0x200b95(%rip)        # 60102c <_edata>\n  400497:       75 11                   jne    4004aa <__do_global_dtors_aux+0x1a>\n  400499:       55                      push   %rbp\n  40049a:       48 89 e5                mov    %rsp,%rbp\n  40049d:       e8 6e ff ff ff          callq  400410 <deregister_tm_clones>\n  4004a2:       5d                      pop    %rbp\n  4004a3:       c6 05 82 0b 20 00 01    movb   $0x1,0x200b82(%rip)        # 60102c <_edata>\n  4004aa:       f3 c3                   repz retq \n  4004ac:       0f 1f 40 00             nopl   0x0(%rax)\n\n00000000004004b0 <frame_dummy>:\n  4004b0:       bf 28 0e 60 00          mov    $0x600e28,%edi\n  4004b5:       48 83 3f 00             cmpq   $0x0,(%rdi)\n  4004b9:       75 05                   jne    4004c0 <frame_dummy+0x10>\n  4004bb:       eb 93                   jmp    400450 <register_tm_clones>\n  4004bd:       0f 1f 00                nopl   (%rax)\n  4004c0:       b8 00 00 00 00          mov    $0x0,%eax\n  4004c5:       48 85 c0                test   %rax,%rax\n  4004c8:       74 f1                   je     4004bb <frame_dummy+0xb>\n  4004ca:       55                      push   %rbp\n  4004cb:       48 89 e5                mov    %rsp,%rbp\n  4004ce:       ff d0                   callq  *%rax\n  4004d0:       5d                      pop    %rbp\n  4004d1:       e9 7a ff ff ff          jmpq   400450 <register_tm_clones>\n\n00000000004004d6 <_Z9main_funcii>:\n  4004d6:       55                      push   %rbp\n  4004d7:       48 89 e5                mov    %rsp,%rbp\n  4004da:       89 7d fc                mov    %edi,-0x4(%rbp)\n  4004dd:       89 75 f8                mov    %esi,-0x8(%rbp)\n  4004e0:       8b 55 fc                mov    -0x4(%rbp),%edx\n  4004e3:       8b 45 f8                mov    -0x8(%rbp),%eax\n  4004e6:       01 d0                   add    %edx,%eax\n  4004e8:       05 c3 07 00 00          add    $0x7c3,%eax\n  4004ed:       5d                      pop    %rbp\n  4004ee:       c3                      retq   \n\n00000000004004ef <main>:\n  4004ef:       55                      push   %rbp\n  4004f0:       48 89 e5                mov    %rsp,%rbp\n  4004f3:       48 83 ec 20             sub    $0x20,%rsp\n  4004f7:       89 7d ec                mov    %edi,-0x14(%rbp)\n  4004fa:       48 89 75 e0             mov    %rsi,-0x20(%rbp)\n  4004fe:       c7 45 fc 00 00 00 00    movl   $0x0,-0x4(%rbp)\n  400505:       8b 45 ec                mov    -0x14(%rbp),%eax\n  400508:       89 05 22 0b 20 00       mov    %eax,0x200b22(%rip)        # 601030 <__TMC_END__>\n  40050e:       8b 15 14 0b 20 00       mov    0x200b14(%rip),%edx        # 601028 <g_static_data>\n  400514:       8b 05 16 0b 20 00       mov    0x200b16(%rip),%eax        # 601030 <__TMC_END__>\n  40051a:       89 d6                   mov    %edx,%esi\n  40051c:       89 c7                   mov    %eax,%edi\n  40051e:       e8 b3 ff ff ff          callq  4004d6 <_Z9main_funcii>\n  400523:       01 45 fc                add    %eax,-0x4(%rbp)\n  400526:       8b 45 fc                mov    -0x4(%rbp),%eax\n  400529:       c9                      leaveq \n  40052a:       c3                      retq   \n  40052b:       0f 1f 44 00 00          nopl   0x0(%rax,%rax,1)\n\n0000000000400530 <__libc_csu_init>:\n  400530:       41 57                   push   %r15\n  400532:       41 56                   push   %r14\n  400534:       49 89 d7                mov    %rdx,%r15\n  400537:       41 55                   push   %r13\n  400539:       41 54                   push   %r12\n  40053b:       4c 8d 25 d6 08 20 00    lea    0x2008d6(%rip),%r12        # 600e18 <__frame_dummy_init_array_entry>\n  400542:       55                      push   %rbp\n  400543:       48 8d 2d d6 08 20 00    lea    0x2008d6(%rip),%rbp        # 600e20 <__init_array_end>\n  40054a:       53                      push   %rbx\n  40054b:       41 89 fd                mov    %edi,%r13d\n  40054e:       49 89 f6                mov    %rsi,%r14\n  400551:       4c 29 e5                sub    %r12,%rbp\n  400554:       48 83 ec 08             sub    $0x8,%rsp\n  400558:       48 c1 fd 03             sar    $0x3,%rbp\n  40055c:       e8 57 fe ff ff          callq  4003b8 <_init>\n  400561:       48 85 ed                test   %rbp,%rbp\n  400564:       74 20                   je     400586 <__libc_csu_init+0x56>\n  400566:       31 db                   xor    %ebx,%ebx\n  400568:       0f 1f 84 00 00 00 00    nopl   0x0(%rax,%rax,1)\n  40056f:       00 \n  400570:       4c 89 fa                mov    %r15,%rdx\n  400573:       4c 89 f6                mov    %r14,%rsi\n  400576:       44 89 ef                mov    %r13d,%edi\n  400579:       41 ff 14 dc             callq  *(%r12,%rbx,8)\n  40057d:       48 83 c3 01             add    $0x1,%rbx\n  400581:       48 39 dd                cmp    %rbx,%rbp\n  400584:       75 ea                   jne    400570 <__libc_csu_init+0x40>\n  400586:       48 83 c4 08             add    $0x8,%rsp\n  40058a:       5b                      pop    %rbx\n  40058b:       5d                      pop    %rbp\n  40058c:       41 5c                   pop    %r12\n  40058e:       41 5d                   pop    %r13\n  400590:       41 5e                   pop    %r14\n  400592:       41 5f                   pop    %r15\n  400594:       c3                      retq   \n  400595:       90                      nop\n  400596:       66 2e 0f 1f 84 00 00    nopw   %cs:0x0(%rax,%rax,1)\n  40059d:       00 00 00 \n\n00000000004005a0 <__libc_csu_fini>:\n  4005a0:       f3 c3                   repz retq \n\nDisassembly of section .fini:\n\n00000000004005a4 <_fini>:\n  4005a4:       48 83 ec 08             sub    $0x8,%rsp\n  4005a8:       48 83 c4 08             add    $0x8,%rsp\n  4005ac:       c3                      retq  \n```\n\n##### 可执行文件 (相对位置的PIE(DYN)版本)\n``` ARMASM\n\n重定位节 '.rela.dyn' 位于偏移量 0x448 含有 9 个条目：\n  偏移量          信息           类型           符号值        符号名称 + 加数\n000000200dd8  000000000008 R_X86_64_RELATIVE                    660\n000000200de0  000000000008 R_X86_64_RELATIVE                    620\n000000201020  000000000008 R_X86_64_RELATIVE                    201020\n000000200fd0  000100000006 R_X86_64_GLOB_DAT 0000000000000000 __cxa_finalize@GLIBC_2.2.5 + 0\n000000200fd8  000200000006 R_X86_64_GLOB_DAT 0000000000000000 _Jv_RegisterClasses + 0\n000000200fe0  000300000006 R_X86_64_GLOB_DAT 0000000000000000 _ITM_deregisterTMClone + 0\n000000200fe8  000400000006 R_X86_64_GLOB_DAT 0000000000000000 __libc_start_main@GLIBC_2.2.5 + 0\n000000200ff0  000500000006 R_X86_64_GLOB_DAT 0000000000000000 __gmon_start__ + 0\n000000200ff8  000600000006 R_X86_64_GLOB_DAT 0000000000000000 _ITM_registerTMCloneTa + 0\n\nThe decoding of unwind sections for machine type Advanced Micro Devices X86-64 is not currently supported.\n\nSymbol table '.dynsym' contains 7 entries:\n   Num:    Value          Size Type    Bind   Vis      Ndx Name\n     0: 0000000000000000     0 NOTYPE  LOCAL  DEFAULT  UND \n     1: 0000000000000000     0 FUNC    WEAK   DEFAULT  UND __cxa_finalize@GLIBC_2.2.5 (2)\n     2: 0000000000000000     0 NOTYPE  WEAK   DEFAULT  UND _Jv_RegisterClasses\n     3: 0000000000000000     0 NOTYPE  WEAK   DEFAULT  UND _ITM_deregisterTMCloneTab\n     4: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND __libc_start_main@GLIBC_2.2.5 (2)\n     5: 0000000000000000     0 NOTYPE  WEAK   DEFAULT  UND __gmon_start__\n     6: 0000000000000000     0 NOTYPE  WEAK   DEFAULT  UND _ITM_registerTMCloneTable\n\nSymbol table '.symtab' contains 70 entries:\n   Num:    Value          Size Type    Bind   Vis      Ndx Name\n     0: 0000000000000000     0 NOTYPE  LOCAL  DEFAULT  UND \n     1: 0000000000000238     0 SECTION LOCAL  DEFAULT    1 \n     2: 0000000000000254     0 SECTION LOCAL  DEFAULT    2 \n     3: 0000000000000274     0 SECTION LOCAL  DEFAULT    3 \n     4: 0000000000000298     0 SECTION LOCAL  DEFAULT    4 \n     5: 00000000000002b8     0 SECTION LOCAL  DEFAULT    5 \n     6: 0000000000000360     0 SECTION LOCAL  DEFAULT    6 \n     7: 0000000000000418     0 SECTION LOCAL  DEFAULT    7 \n     8: 0000000000000428     0 SECTION LOCAL  DEFAULT    8 \n     9: 0000000000000448     0 SECTION LOCAL  DEFAULT    9 \n    10: 0000000000000520     0 SECTION LOCAL  DEFAULT   10 \n    11: 0000000000000540     0 SECTION LOCAL  DEFAULT   11 \n    12: 0000000000000550     0 SECTION LOCAL  DEFAULT   12 \n    13: 0000000000000560     0 SECTION LOCAL  DEFAULT   13 \n    14: 0000000000000764     0 SECTION LOCAL  DEFAULT   14 \n    15: 0000000000000770     0 SECTION LOCAL  DEFAULT   15 \n    16: 0000000000000778     0 SECTION LOCAL  DEFAULT   16 \n    17: 00000000000007c0     0 SECTION LOCAL  DEFAULT   17 \n    18: 0000000000200dd8     0 SECTION LOCAL  DEFAULT   18 \n    19: 0000000000200de0     0 SECTION LOCAL  DEFAULT   19 \n    20: 0000000000200de8     0 SECTION LOCAL  DEFAULT   20 \n    21: 0000000000200df0     0 SECTION LOCAL  DEFAULT   21 \n    22: 0000000000200fd0     0 SECTION LOCAL  DEFAULT   22 \n    23: 0000000000201000     0 SECTION LOCAL  DEFAULT   23 \n    24: 0000000000201018     0 SECTION LOCAL  DEFAULT   24 \n    25: 000000000020102c     0 SECTION LOCAL  DEFAULT   25 \n    26: 0000000000000000     0 SECTION LOCAL  DEFAULT   26 \n    27: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS crtstuff.c\n    28: 0000000000200de8     0 OBJECT  LOCAL  DEFAULT   20 __JCR_LIST__\n    29: 0000000000000590     0 FUNC    LOCAL  DEFAULT   13 deregister_tm_clones\n    30: 00000000000005d0     0 FUNC    LOCAL  DEFAULT   13 register_tm_clones\n    31: 0000000000000620     0 FUNC    LOCAL  DEFAULT   13 __do_global_dtors_aux\n    32: 000000000020102c     1 OBJECT  LOCAL  DEFAULT   25 completed.6972\n    33: 0000000000200de0     0 OBJECT  LOCAL  DEFAULT   19 __do_global_dtors_aux_fin\n    34: 0000000000000660     0 FUNC    LOCAL  DEFAULT   13 frame_dummy\n    35: 0000000000200dd8     0 OBJECT  LOCAL  DEFAULT   18 __frame_dummy_init_array_\n    36: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS test.cpp\n    37: 0000000000000774     4 OBJECT  LOCAL  DEFAULT   15 _ZL13g_static_text\n    38: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS crtstuff.c\n    39: 00000000000008e8     0 OBJECT  LOCAL  DEFAULT   17 __FRAME_END__\n    40: 0000000000200de8     0 OBJECT  LOCAL  DEFAULT   20 __JCR_END__\n    41: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS \n    42: 0000000000000778     0 NOTYPE  LOCAL  DEFAULT   16 __GNU_EH_FRAME_HDR\n    43: 0000000000200df0     0 OBJECT  LOCAL  DEFAULT   21 _DYNAMIC\n    44: 0000000000200de0     0 NOTYPE  LOCAL  DEFAULT   18 __init_array_end\n    45: 0000000000200dd8     0 NOTYPE  LOCAL  DEFAULT   18 __init_array_start\n    46: 0000000000201000     0 OBJECT  LOCAL  DEFAULT   23 _GLOBAL_OFFSET_TABLE_\n    47: 0000000000201028     4 OBJECT  GLOBAL DEFAULT   24 g_static_data\n    48: 000000000020102c     0 NOTYPE  GLOBAL DEFAULT   24 _edata\n    49: 0000000000201018     0 NOTYPE  WEAK   DEFAULT   24 data_start\n    50: 0000000000000770     4 OBJECT  GLOBAL DEFAULT   15 _IO_stdin_used\n    51: 0000000000000690    25 FUNC    GLOBAL DEFAULT   13 _Z9main_funcii\n    52: 0000000000000000     0 FUNC    WEAK   DEFAULT  UND __cxa_finalize@@GLIBC_2.2\n    53: 00000000000006a9    60 FUNC    GLOBAL DEFAULT   13 main\n    54: 0000000000201020     0 OBJECT  GLOBAL HIDDEN    24 __dso_handle\n    55: 0000000000000764     0 FUNC    GLOBAL DEFAULT   14 _fini\n    56: 0000000000000560    43 FUNC    GLOBAL DEFAULT   13 _start\n    57: 0000000000000520     0 FUNC    GLOBAL DEFAULT   10 _init\n    58: 0000000000201030     0 OBJECT  GLOBAL HIDDEN    24 __TMC_END__\n    59: 0000000000000000     0 NOTYPE  WEAK   DEFAULT  UND _Jv_RegisterClasses\n    60: 0000000000201018     0 NOTYPE  GLOBAL DEFAULT   24 __data_start\n    61: 0000000000201038     0 NOTYPE  GLOBAL DEFAULT   25 _end\n    62: 000000000020102c     0 NOTYPE  GLOBAL DEFAULT   25 __bss_start\n    63: 00000000000006f0   101 FUNC    GLOBAL DEFAULT   13 __libc_csu_init\n    64: 0000000000201030     4 OBJECT  GLOBAL DEFAULT   25 g_static_bss\n    65: 0000000000000000     0 NOTYPE  WEAK   DEFAULT  UND _ITM_deregisterTMCloneTab\n    66: 0000000000000760     2 FUNC    GLOBAL DEFAULT   13 __libc_csu_fini\n    67: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND __libc_start_main@@GLIBC_\n    68: 0000000000000000     0 NOTYPE  WEAK   DEFAULT  UND __gmon_start__\n    69: 0000000000000000     0 NOTYPE  WEAK   DEFAULT  UND _ITM_registerTMCloneTable\n\n.text\n0000000000000520 <_init>:\n 520:   48 83 ec 08             sub    $0x8,%rsp\n 524:   48 8b 05 c5 0a 20 00    mov    0x200ac5(%rip),%rax        # 200ff0 <__gmon_start__>\n 52b:   48 85 c0                test   %rax,%rax\n 52e:   74 02                   je     532 <_init+0x12>\n 530:   ff d0                   callq  *%rax\n 532:   48 83 c4 08             add    $0x8,%rsp\n 536:   c3                      retq   \n\nDisassembly of section .plt:\n\n0000000000000540 <.plt>:\n 540:   ff 35 c2 0a 20 00       pushq  0x200ac2(%rip)        # 201008 <_GLOBAL_OFFSET_TABLE_+0x8>\n 546:   ff 25 c4 0a 20 00       jmpq   *0x200ac4(%rip)        # 201010 <_GLOBAL_OFFSET_TABLE_+0x10>\n 54c:   0f 1f 40 00             nopl   0x0(%rax)\n\nDisassembly of section .plt.got:\n\n0000000000000550 <.plt.got>:\n 550:   ff 25 7a 0a 20 00       jmpq   *0x200a7a(%rip)        # 200fd0 <__cxa_finalize@GLIBC_2.2.5>\n 556:   66 90                   xchg   %ax,%ax\n\nDisassembly of section .text:\n\n0000000000000560 <_start>:\n 560:   31 ed                   xor    %ebp,%ebp\n 562:   49 89 d1                mov    %rdx,%r9\n 565:   5e                      pop    %rsi\n 566:   48 89 e2                mov    %rsp,%rdx\n 569:   48 83 e4 f0             and    $0xfffffffffffffff0,%rsp\n 56d:   50                      push   %rax\n 56e:   54                      push   %rsp\n 56f:   4c 8d 05 ea 01 00 00    lea    0x1ea(%rip),%r8        # 760 <__libc_csu_fini>\n 576:   48 8d 0d 73 01 00 00    lea    0x173(%rip),%rcx        # 6f0 <__libc_csu_init>\n 57d:   48 8d 3d 25 01 00 00    lea    0x125(%rip),%rdi        # 6a9 <main>\n 584:   ff 15 5e 0a 20 00       callq  *0x200a5e(%rip)        # 200fe8 <__libc_start_main@GLIBC_2.2.5>\n 58a:   f4                      hlt    \n 58b:   0f 1f 44 00 00          nopl   0x0(%rax,%rax,1)\n\n0000000000000590 <deregister_tm_clones>:\n 590:   48 8d 3d 99 0a 20 00    lea    0x200a99(%rip),%rdi        # 201030 <__TMC_END__>\n 597:   48 8d 05 99 0a 20 00    lea    0x200a99(%rip),%rax        # 201037 <__TMC_END__+0x7>\n 59e:   55                      push   %rbp\n 59f:   48 29 f8                sub    %rdi,%rax\n 5a2:   48 89 e5                mov    %rsp,%rbp\n 5a5:   48 83 f8 0e             cmp    $0xe,%rax\n 5a9:   76 15                   jbe    5c0 <deregister_tm_clones+0x30>\n 5ab:   48 8b 05 2e 0a 20 00    mov    0x200a2e(%rip),%rax        # 200fe0 <_ITM_deregisterTMCloneTable>\n 5b2:   48 85 c0                test   %rax,%rax\n 5b5:   74 09                   je     5c0 <deregister_tm_clones+0x30>\n 5b7:   5d                      pop    %rbp\n 5b8:   ff e0                   jmpq   *%rax\n 5ba:   66 0f 1f 44 00 00       nopw   0x0(%rax,%rax,1)\n 5c0:   5d                      pop    %rbp\n 5c1:   c3                      retq   \n 5c2:   0f 1f 40 00             nopl   0x0(%rax)\n 5c6:   66 2e 0f 1f 84 00 00    nopw   %cs:0x0(%rax,%rax,1)\n 5cd:   00 00 00 \n\n00000000000005d0 <register_tm_clones>:\n 5d0:   48 8d 3d 59 0a 20 00    lea    0x200a59(%rip),%rdi        # 201030 <__TMC_END__>\n 5d7:   48 8d 35 52 0a 20 00    lea    0x200a52(%rip),%rsi        # 201030 <__TMC_END__>\n 5de:   55                      push   %rbp\n 5df:   48 29 fe                sub    %rdi,%rsi\n 5e2:   48 89 e5                mov    %rsp,%rbp\n 5e5:   48 c1 fe 03             sar    $0x3,%rsi\n 5e9:   48 89 f0                mov    %rsi,%rax\n 5ec:   48 c1 e8 3f             shr    $0x3f,%rax\n 5f0:   48 01 c6                add    %rax,%rsi\n 5f3:   48 d1 fe                sar    %rsi\n 5f6:   74 18                   je     610 <register_tm_clones+0x40>\n 5f8:   48 8b 05 f9 09 20 00    mov    0x2009f9(%rip),%rax        # 200ff8 <_ITM_registerTMCloneTable>\n 5ff:   48 85 c0                test   %rax,%rax\n 602:   74 0c                   je     610 <register_tm_clones+0x40>\n 604:   5d                      pop    %rbp\n 605:   ff e0                   jmpq   *%rax\n 607:   66 0f 1f 84 00 00 00    nopw   0x0(%rax,%rax,1)\n 60e:   00 00 \n 610:   5d                      pop    %rbp\n 611:   c3                      retq   \n 612:   0f 1f 40 00             nopl   0x0(%rax)\n 616:   66 2e 0f 1f 84 00 00    nopw   %cs:0x0(%rax,%rax,1)\n 61d:   00 00 00 \n\n0000000000000620 <__do_global_dtors_aux>:\n 620:   80 3d 05 0a 20 00 00    cmpb   $0x0,0x200a05(%rip)        # 20102c <_edata>\n 627:   75 27                   jne    650 <__do_global_dtors_aux+0x30>\n 629:   48 83 3d 9f 09 20 00    cmpq   $0x0,0x20099f(%rip)        # 200fd0 <__cxa_finalize@GLIBC_2.2.5>\n 630:   00 \n 631:   55                      push   %rbp\n 632:   48 89 e5                mov    %rsp,%rbp\n 635:   74 0c                   je     643 <__do_global_dtors_aux+0x23>\n 637:   48 8b 3d e2 09 20 00    mov    0x2009e2(%rip),%rdi        # 201020 <__dso_handle>\n 63e:   e8 0d ff ff ff          callq  550 <.plt.got>\n 643:   e8 48 ff ff ff          callq  590 <deregister_tm_clones>\n 648:   5d                      pop    %rbp\n 649:   c6 05 dc 09 20 00 01    movb   $0x1,0x2009dc(%rip)        # 20102c <_edata>\n 650:   f3 c3                   repz retq \n 652:   0f 1f 40 00             nopl   0x0(%rax)\n 656:   66 2e 0f 1f 84 00 00    nopw   %cs:0x0(%rax,%rax,1)\n 65d:   00 00 00 \n\n0000000000000660 <frame_dummy>:\n 660:   48 8d 3d 81 07 20 00    lea    0x200781(%rip),%rdi        # 200de8 <__JCR_END__>\n 667:   48 83 3f 00             cmpq   $0x0,(%rdi)\n 66b:   75 0b                   jne    678 <frame_dummy+0x18>\n 66d:   e9 5e ff ff ff          jmpq   5d0 <register_tm_clones>\n 672:   66 0f 1f 44 00 00       nopw   0x0(%rax,%rax,1)\n 678:   48 8b 05 59 09 20 00    mov    0x200959(%rip),%rax        # 200fd8 <_Jv_RegisterClasses>\n 67f:   48 85 c0                test   %rax,%rax\n 682:   74 e9                   je     66d <frame_dummy+0xd>\n 684:   55                      push   %rbp\n 685:   48 89 e5                mov    %rsp,%rbp\n 688:   ff d0                   callq  *%rax\n 68a:   5d                      pop    %rbp\n 68b:   e9 40 ff ff ff          jmpq   5d0 <register_tm_clones>\n\n0000000000000690 <_Z9main_funcii>:\n 690:   55                      push   %rbp\n 691:   48 89 e5                mov    %rsp,%rbp\n 694:   89 7d fc                mov    %edi,-0x4(%rbp)\n 697:   89 75 f8                mov    %esi,-0x8(%rbp)\n 69a:   8b 55 fc                mov    -0x4(%rbp),%edx\n 69d:   8b 45 f8                mov    -0x8(%rbp),%eax\n 6a0:   01 d0                   add    %edx,%eax\n 6a2:   05 c3 07 00 00          add    $0x7c3,%eax\n 6a7:   5d                      pop    %rbp\n 6a8:   c3                      retq   \n\n00000000000006a9 <main>:\n 6a9:   55                      push   %rbp\n 6aa:   48 89 e5                mov    %rsp,%rbp\n 6ad:   48 83 ec 20             sub    $0x20,%rsp\n 6b1:   89 7d ec                mov    %edi,-0x14(%rbp)\n 6b4:   48 89 75 e0             mov    %rsi,-0x20(%rbp)\n 6b8:   c7 45 fc 00 00 00 00    movl   $0x0,-0x4(%rbp)\n 6bf:   8b 45 ec                mov    -0x14(%rbp),%eax\n 6c2:   89 05 68 09 20 00       mov    %eax,0x200968(%rip)        # 201030 <__TMC_END__>\n 6c8:   8b 15 5a 09 20 00       mov    0x20095a(%rip),%edx        # 201028 <g_static_data>\n 6ce:   8b 05 5c 09 20 00       mov    0x20095c(%rip),%eax        # 201030 <__TMC_END__>\n 6d4:   89 d6                   mov    %edx,%esi\n 6d6:   89 c7                   mov    %eax,%edi\n 6d8:   e8 b3 ff ff ff          callq  690 <_Z9main_funcii>\n 6dd:   01 45 fc                add    %eax,-0x4(%rbp)\n 6e0:   8b 45 fc                mov    -0x4(%rbp),%eax\n 6e3:   c9                      leaveq \n 6e4:   c3                      retq   \n 6e5:   66 2e 0f 1f 84 00 00    nopw   %cs:0x0(%rax,%rax,1)\n 6ec:   00 00 00 \n 6ef:   90                      nop\n\n00000000000006f0 <__libc_csu_init>:\n 6f0:   41 57                   push   %r15\n 6f2:   41 56                   push   %r14\n 6f4:   49 89 d7                mov    %rdx,%r15\n 6f7:   41 55                   push   %r13\n 6f9:   41 54                   push   %r12\n 6fb:   4c 8d 25 d6 06 20 00    lea    0x2006d6(%rip),%r12        # 200dd8 <__frame_dummy_init_array_entry>\n 702:   55                      push   %rbp\n 703:   48 8d 2d d6 06 20 00    lea    0x2006d6(%rip),%rbp        # 200de0 <__init_array_end>\n 70a:   53                      push   %rbx\n 70b:   41 89 fd                mov    %edi,%r13d\n 70e:   49 89 f6                mov    %rsi,%r14\n 711:   4c 29 e5                sub    %r12,%rbp\n 714:   48 83 ec 08             sub    $0x8,%rsp\n 718:   48 c1 fd 03             sar    $0x3,%rbp\n 71c:   e8 ff fd ff ff          callq  520 <_init>\n 721:   48 85 ed                test   %rbp,%rbp\n 724:   74 20                   je     746 <__libc_csu_init+0x56>\n 726:   31 db                   xor    %ebx,%ebx\n 728:   0f 1f 84 00 00 00 00    nopl   0x0(%rax,%rax,1)\n 72f:   00 \n 730:   4c 89 fa                mov    %r15,%rdx\n 733:   4c 89 f6                mov    %r14,%rsi\n 736:   44 89 ef                mov    %r13d,%edi\n 739:   41 ff 14 dc             callq  *(%r12,%rbx,8)\n 73d:   48 83 c3 01             add    $0x1,%rbx\n 741:   48 39 dd                cmp    %rbx,%rbp\n 744:   75 ea                   jne    730 <__libc_csu_init+0x40>\n 746:   48 83 c4 08             add    $0x8,%rsp\n 74a:   5b                      pop    %rbx\n 74b:   5d                      pop    %rbp\n 74c:   41 5c                   pop    %r12\n 74e:   41 5d                   pop    %r13\n 750:   41 5e                   pop    %r14\n 752:   41 5f                   pop    %r15\n 754:   c3                      retq   \n 755:   90                      nop\n 756:   66 2e 0f 1f 84 00 00    nopw   %cs:0x0(%rax,%rax,1)\n 75d:   00 00 00 \n\n0000000000000760 <__libc_csu_fini>:\n 760:   f3 c3                   repz retq \n\nDisassembly of section .fini:\n\n0000000000000764 <_fini>:\n 764:   48 83 ec 08             sub    $0x8,%rsp\n 768:   48 83 c4 08             add    $0x8,%rsp\n 76c:   c3                      retq   \n```\n\n\n##### 可执行文件 (位置无关的非PIE(EXEC)版本)  \n\n``` ARMASM\nDynamic section at offset 0xe30 contains 23 entries:\n  标记        类型                         名称/值\n 0x0000000000000001 (NEEDED)             共享库：[libstdc++.so.6]\n 0x0000000000000001 (NEEDED)             共享库：[libm.so.6]\n 0x0000000000000001 (NEEDED)             共享库：[libgcc_s.so.1]\n 0x0000000000000001 (NEEDED)             共享库：[libc.so.6]\n 0x000000000000000c (INIT)               0x4003b8\n 0x000000000000000d (FINI)               0x4005b4\n 0x0000000000000019 (INIT_ARRAY)         0x600e18\n 0x000000000000001b (INIT_ARRAYSZ)       8 (bytes)\n 0x000000000000001a (FINI_ARRAY)         0x600e20\n 0x000000000000001c (FINI_ARRAYSZ)       8 (bytes)\n 0x000000006ffffef5 (GNU_HASH)           0x400298\n 0x0000000000000005 (STRTAB)             0x400300\n 0x0000000000000006 (SYMTAB)             0x4002b8\n 0x000000000000000a (STRSZ)              95 (bytes)\n 0x000000000000000b (SYMENT)             24 (bytes)\n 0x0000000000000015 (DEBUG)              0x0\n 0x0000000000000007 (RELA)               0x400388\n 0x0000000000000008 (RELASZ)             48 (bytes)\n 0x0000000000000009 (RELAENT)            24 (bytes)\n 0x000000006ffffffe (VERNEED)            0x400368\n 0x000000006fffffff (VERNEEDNUM)         1\n 0x000000006ffffff0 (VERSYM)             0x400360\n 0x0000000000000000 (NULL)               0x0\n\n重定位节 '.rela.dyn' 位于偏移量 0x388 含有 2 个条目：\n  偏移量          信息           类型           符号值        符号名称 + 加数\n000000600ff0  000100000006 R_X86_64_GLOB_DAT 0000000000000000 __libc_start_main@GLIBC_2.2.5 + 0\n000000600ff8  000200000006 R_X86_64_GLOB_DAT 0000000000000000 __gmon_start__ + 0\n\nThe decoding of unwind sections for machine type Advanced Micro Devices X86-64 is not currently supported.\n\nSymbol table '.dynsym' contains 3 entries:\n   Num:    Value          Size Type    Bind   Vis      Ndx Name\n     0: 0000000000000000     0 NOTYPE  LOCAL  DEFAULT  UND \n     1: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND __libc_start_main@GLIBC_2.2.5 (2)\n     2: 0000000000000000     0 NOTYPE  WEAK   DEFAULT  UND __gmon_start__\n\nSymbol table '.symtab' contains 65 entries:\n   Num:    Value          Size Type    Bind   Vis      Ndx Name\n     0: 0000000000000000     0 NOTYPE  LOCAL  DEFAULT  UND \n     1: 0000000000400238     0 SECTION LOCAL  DEFAULT    1 \n     2: 0000000000400254     0 SECTION LOCAL  DEFAULT    2 \n     3: 0000000000400274     0 SECTION LOCAL  DEFAULT    3 \n     4: 0000000000400298     0 SECTION LOCAL  DEFAULT    4 \n     5: 00000000004002b8     0 SECTION LOCAL  DEFAULT    5 \n     6: 0000000000400300     0 SECTION LOCAL  DEFAULT    6 \n     7: 0000000000400360     0 SECTION LOCAL  DEFAULT    7 \n     8: 0000000000400368     0 SECTION LOCAL  DEFAULT    8 \n     9: 0000000000400388     0 SECTION LOCAL  DEFAULT    9 \n    10: 00000000004003b8     0 SECTION LOCAL  DEFAULT   10 \n    11: 00000000004003d0     0 SECTION LOCAL  DEFAULT   11 \n    12: 00000000004005b4     0 SECTION LOCAL  DEFAULT   12 \n    13: 00000000004005c0     0 SECTION LOCAL  DEFAULT   13 \n    14: 00000000004005c8     0 SECTION LOCAL  DEFAULT   14 \n    15: 0000000000400608     0 SECTION LOCAL  DEFAULT   15 \n    16: 0000000000600e18     0 SECTION LOCAL  DEFAULT   16 \n    17: 0000000000600e20     0 SECTION LOCAL  DEFAULT   17 \n    18: 0000000000600e28     0 SECTION LOCAL  DEFAULT   18 \n    19: 0000000000600e30     0 SECTION LOCAL  DEFAULT   19 \n    20: 0000000000600ff0     0 SECTION LOCAL  DEFAULT   20 \n    21: 0000000000601000     0 SECTION LOCAL  DEFAULT   21 \n    22: 0000000000601018     0 SECTION LOCAL  DEFAULT   22 \n    23: 000000000060102c     0 SECTION LOCAL  DEFAULT   23 \n    24: 0000000000000000     0 SECTION LOCAL  DEFAULT   24 \n    25: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS crtstuff.c\n    26: 0000000000600e28     0 OBJECT  LOCAL  DEFAULT   18 __JCR_LIST__\n    27: 0000000000400410     0 FUNC    LOCAL  DEFAULT   11 deregister_tm_clones\n    28: 0000000000400450     0 FUNC    LOCAL  DEFAULT   11 register_tm_clones\n    29: 0000000000400490     0 FUNC    LOCAL  DEFAULT   11 __do_global_dtors_aux\n    30: 000000000060102c     1 OBJECT  LOCAL  DEFAULT   23 completed.6972\n    31: 0000000000600e20     0 OBJECT  LOCAL  DEFAULT   17 __do_global_dtors_aux_fin\n    32: 00000000004004b0     0 FUNC    LOCAL  DEFAULT   11 frame_dummy\n    33: 0000000000600e18     0 OBJECT  LOCAL  DEFAULT   16 __frame_dummy_init_array_\n    34: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS test.cpp\n    35: 00000000004005c4     4 OBJECT  LOCAL  DEFAULT   13 _ZL13g_static_text\n    36: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS crtstuff.c\n    37: 0000000000400708     0 OBJECT  LOCAL  DEFAULT   15 __FRAME_END__\n    38: 0000000000600e28     0 OBJECT  LOCAL  DEFAULT   18 __JCR_END__\n    39: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS \n    40: 00000000004005c8     0 NOTYPE  LOCAL  DEFAULT   14 __GNU_EH_FRAME_HDR\n    41: 0000000000600e30     0 OBJECT  LOCAL  DEFAULT   19 _DYNAMIC\n    42: 0000000000600e20     0 NOTYPE  LOCAL  DEFAULT   16 __init_array_end\n    43: 0000000000600e18     0 NOTYPE  LOCAL  DEFAULT   16 __init_array_start\n    44: 0000000000601000     0 OBJECT  LOCAL  DEFAULT   21 _GLOBAL_OFFSET_TABLE_\n    45: 0000000000601028     4 OBJECT  GLOBAL DEFAULT   22 g_static_data\n    46: 000000000060102c     0 NOTYPE  GLOBAL DEFAULT   22 _edata\n    47: 0000000000601018     0 NOTYPE  WEAK   DEFAULT   22 data_start\n    48: 00000000004005c0     4 OBJECT  GLOBAL DEFAULT   13 _IO_stdin_used\n    49: 00000000004004d6    25 FUNC    GLOBAL DEFAULT   11 _Z9main_funcii\n    50: 00000000004004ef    69 FUNC    GLOBAL DEFAULT   11 main\n    51: 0000000000601020     0 OBJECT  GLOBAL HIDDEN    22 __dso_handle\n    52: 00000000004005b4     0 FUNC    GLOBAL DEFAULT   12 _fini\n    53: 0000000000400400     2 FUNC    GLOBAL HIDDEN    11 _dl_relocate_static_pie\n    54: 00000000004003d0    43 FUNC    GLOBAL DEFAULT   11 _start\n    55: 00000000004003b8     0 FUNC    GLOBAL DEFAULT   10 _init\n    56: 0000000000601030     0 OBJECT  GLOBAL HIDDEN    22 __TMC_END__\n    57: 0000000000601018     0 NOTYPE  GLOBAL DEFAULT   22 __data_start\n    58: 0000000000601038     0 NOTYPE  GLOBAL DEFAULT   23 _end\n    59: 000000000060102c     0 NOTYPE  GLOBAL DEFAULT   23 __bss_start\n    60: 0000000000400540   101 FUNC    GLOBAL DEFAULT   11 __libc_csu_init\n    61: 0000000000601030     4 OBJECT  GLOBAL DEFAULT   23 g_static_bss\n    62: 00000000004005b0     2 FUNC    GLOBAL DEFAULT   11 __libc_csu_fini\n    63: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND __libc_start_main@@GLIBC_\n    64: 0000000000000000     0 NOTYPE  WEAK   DEFAULT  UND __gmon_start__\n\n\n.text\n00000000004003b8 <_init>:\n  4003b8:       48 83 ec 08             sub    $0x8,%rsp\n  4003bc:       48 8b 05 35 0c 20 00    mov    0x200c35(%rip),%rax        # 600ff8 <__gmon_start__>\n  4003c3:       48 85 c0                test   %rax,%rax\n  4003c6:       74 02                   je     4003ca <_init+0x12>\n  4003c8:       ff d0                   callq  *%rax\n  4003ca:       48 83 c4 08             add    $0x8,%rsp\n  4003ce:       c3                      retq   \n\nDisassembly of section .text:\n\n00000000004003d0 <_start>:\n  4003d0:       31 ed                   xor    %ebp,%ebp\n  4003d2:       49 89 d1                mov    %rdx,%r9\n  4003d5:       5e                      pop    %rsi\n  4003d6:       48 89 e2                mov    %rsp,%rdx\n  4003d9:       48 83 e4 f0             and    $0xfffffffffffffff0,%rsp\n  4003dd:       50                      push   %rax\n  4003de:       54                      push   %rsp\n  4003df:       49 c7 c0 b0 05 40 00    mov    $0x4005b0,%r8\n  4003e6:       48 c7 c1 40 05 40 00    mov    $0x400540,%rcx\n  4003ed:       48 c7 c7 ef 04 40 00    mov    $0x4004ef,%rdi\n  4003f4:       ff 15 f6 0b 20 00       callq  *0x200bf6(%rip)        # 600ff0 <__libc_start_main@GLIBC_2.2.5>\n  4003fa:       f4                      hlt    \n  4003fb:       0f 1f 44 00 00          nopl   0x0(%rax,%rax,1)\n\n0000000000400400 <_dl_relocate_static_pie>:\n  400400:       f3 c3                   repz retq \n  400402:       66 2e 0f 1f 84 00 00    nopw   %cs:0x0(%rax,%rax,1)\n  400409:       00 00 00 \n  40040c:       0f 1f 40 00             nopl   0x0(%rax)\n\n0000000000400410 <deregister_tm_clones>:\n  400410:       b8 37 10 60 00          mov    $0x601037,%eax\n  400415:       55                      push   %rbp\n  400416:       48 2d 30 10 60 00       sub    $0x601030,%rax\n  40041c:       48 83 f8 0e             cmp    $0xe,%rax\n  400420:       48 89 e5                mov    %rsp,%rbp\n  400423:       76 1b                   jbe    400440 <deregister_tm_clones+0x30>\n  400425:       b8 00 00 00 00          mov    $0x0,%eax\n  40042a:       48 85 c0                test   %rax,%rax\n  40042d:       74 11                   je     400440 <deregister_tm_clones+0x30>\n  40042f:       5d                      pop    %rbp\n  400430:       bf 30 10 60 00          mov    $0x601030,%edi\n  400435:       ff e0                   jmpq   *%rax\n  400437:       66 0f 1f 84 00 00 00    nopw   0x0(%rax,%rax,1)\n  40043e:       00 00 \n  400440:       5d                      pop    %rbp\n  400441:       c3                      retq   \n  400442:       0f 1f 40 00             nopl   0x0(%rax)\n  400446:       66 2e 0f 1f 84 00 00    nopw   %cs:0x0(%rax,%rax,1)\n  40044d:       00 00 00 \n\n0000000000400450 <register_tm_clones>:\n  400450:       be 30 10 60 00          mov    $0x601030,%esi\n  400455:       55                      push   %rbp\n  400456:       48 81 ee 30 10 60 00    sub    $0x601030,%rsi\n  40045d:       48 c1 fe 03             sar    $0x3,%rsi\n  400461:       48 89 e5                mov    %rsp,%rbp\n  400464:       48 89 f0                mov    %rsi,%rax\n  400467:       48 c1 e8 3f             shr    $0x3f,%rax\n  40046b:       48 01 c6                add    %rax,%rsi\n  40046e:       48 d1 fe                sar    %rsi\n  400471:       74 15                   je     400488 <register_tm_clones+0x38>\n  400473:       b8 00 00 00 00          mov    $0x0,%eax\n  400478:       48 85 c0                test   %rax,%rax\n  40047b:       74 0b                   je     400488 <register_tm_clones+0x38>\n  40047d:       5d                      pop    %rbp\n  40047e:       bf 30 10 60 00          mov    $0x601030,%edi\n  400483:       ff e0                   jmpq   *%rax\n  400485:       0f 1f 00                nopl   (%rax)\n  400488:       5d                      pop    %rbp\n  400489:       c3                      retq   \n  40048a:       66 0f 1f 44 00 00       nopw   0x0(%rax,%rax,1)\n\n0000000000400490 <__do_global_dtors_aux>:\n  400490:       80 3d 95 0b 20 00 00    cmpb   $0x0,0x200b95(%rip)        # 60102c <_edata>\n  400497:       75 11                   jne    4004aa <__do_global_dtors_aux+0x1a>\n  400499:       55                      push   %rbp\n  40049a:       48 89 e5                mov    %rsp,%rbp\n  40049d:       e8 6e ff ff ff          callq  400410 <deregister_tm_clones>\n  4004a2:       5d                      pop    %rbp\n  4004a3:       c6 05 82 0b 20 00 01    movb   $0x1,0x200b82(%rip)        # 60102c <_edata>\n  4004aa:       f3 c3                   repz retq \n  4004ac:       0f 1f 40 00             nopl   0x0(%rax)\n\n00000000004004b0 <frame_dummy>:\n  4004b0:       bf 28 0e 60 00          mov    $0x600e28,%edi\n  4004b5:       48 83 3f 00             cmpq   $0x0,(%rdi)\n  4004b9:       75 05                   jne    4004c0 <frame_dummy+0x10>\n  4004bb:       eb 93                   jmp    400450 <register_tm_clones>\n  4004bd:       0f 1f 00                nopl   (%rax)\n  4004c0:       b8 00 00 00 00          mov    $0x0,%eax\n  4004c5:       48 85 c0                test   %rax,%rax\n  4004c8:       74 f1                   je     4004bb <frame_dummy+0xb>\n  4004ca:       55                      push   %rbp\n  4004cb:       48 89 e5                mov    %rsp,%rbp\n  4004ce:       ff d0                   callq  *%rax\n  4004d0:       5d                      pop    %rbp\n  4004d1:       e9 7a ff ff ff          jmpq   400450 <register_tm_clones>\n\n00000000004004d6 <_Z9main_funcii>:\n  4004d6:       55                      push   %rbp\n  4004d7:       48 89 e5                mov    %rsp,%rbp\n  4004da:       89 7d fc                mov    %edi,-0x4(%rbp)\n  4004dd:       89 75 f8                mov    %esi,-0x8(%rbp)\n  4004e0:       8b 55 fc                mov    -0x4(%rbp),%edx\n  4004e3:       8b 45 f8                mov    -0x8(%rbp),%eax\n  4004e6:       01 d0                   add    %edx,%eax\n  4004e8:       05 c3 07 00 00          add    $0x7c3,%eax\n  4004ed:       5d                      pop    %rbp\n  4004ee:       c3                      retq   \n\n00000000004004ef <main>:\n  4004ef:       55                      push   %rbp\n  4004f0:       48 89 e5                mov    %rsp,%rbp\n  4004f3:       48 83 ec 20             sub    $0x20,%rsp\n  4004f7:       89 7d ec                mov    %edi,-0x14(%rbp)\n  4004fa:       48 89 75 e0             mov    %rsi,-0x20(%rbp)\n  4004fe:       c7 45 fc 00 00 00 00    movl   $0x0,-0x4(%rbp)\n  400505:       48 c7 c0 30 10 60 00    mov    $0x601030,%rax\n  40050c:       8b 55 ec                mov    -0x14(%rbp),%edx\n  40050f:       89 10                   mov    %edx,(%rax)\n  400511:       48 c7 c0 28 10 60 00    mov    $0x601028,%rax\n  400518:       8b 10                   mov    (%rax),%edx\n  40051a:       48 c7 c0 30 10 60 00    mov    $0x601030,%rax\n  400521:       8b 00                   mov    (%rax),%eax\n  400523:       89 d6                   mov    %edx,%esi\n  400525:       89 c7                   mov    %eax,%edi\n  400527:       e8 aa ff ff ff          callq  4004d6 <_Z9main_funcii>\n  40052c:       01 45 fc                add    %eax,-0x4(%rbp)\n  40052f:       8b 45 fc                mov    -0x4(%rbp),%eax\n  400532:       c9                      leaveq \n  400533:       c3                      retq   \n  400534:       66 2e 0f 1f 84 00 00    nopw   %cs:0x0(%rax,%rax,1)\n  40053b:       00 00 00 \n  40053e:       66 90                   xchg   %ax,%ax\n\n0000000000400540 <__libc_csu_init>:\n  400540:       41 57                   push   %r15\n  400542:       41 56                   push   %r14\n  400544:       49 89 d7                mov    %rdx,%r15\n  400547:       41 55                   push   %r13\n  400549:       41 54                   push   %r12\n  40054b:       4c 8d 25 c6 08 20 00    lea    0x2008c6(%rip),%r12        # 600e18 <__frame_dummy_init_array_entry>\n  400552:       55                      push   %rbp\n  400553:       48 8d 2d c6 08 20 00    lea    0x2008c6(%rip),%rbp        # 600e20 <__init_array_end>\n  40055a:       53                      push   %rbx\n  40055b:       41 89 fd                mov    %edi,%r13d\n  40055e:       49 89 f6                mov    %rsi,%r14\n  400561:       4c 29 e5                sub    %r12,%rbp\n  400564:       48 83 ec 08             sub    $0x8,%rsp\n  400568:       48 c1 fd 03             sar    $0x3,%rbp\n  40056c:       e8 47 fe ff ff          callq  4003b8 <_init>\n  400571:       48 85 ed                test   %rbp,%rbp\n  400574:       74 20                   je     400596 <__libc_csu_init+0x56>\n  400576:       31 db                   xor    %ebx,%ebx\n  400578:       0f 1f 84 00 00 00 00    nopl   0x0(%rax,%rax,1)\n  40057f:       00 \n  400580:       4c 89 fa                mov    %r15,%rdx\n  400583:       4c 89 f6                mov    %r14,%rsi\n  400586:       44 89 ef                mov    %r13d,%edi\n  400589:       41 ff 14 dc             callq  *(%r12,%rbx,8)\n  40058d:       48 83 c3 01             add    $0x1,%rbx\n  400591:       48 39 dd                cmp    %rbx,%rbp\n  400594:       75 ea                   jne    400580 <__libc_csu_init+0x40>\n  400596:       48 83 c4 08             add    $0x8,%rsp\n  40059a:       5b                      pop    %rbx\n  40059b:       5d                      pop    %rbp\n  40059c:       41 5c                   pop    %r12\n  40059e:       41 5d                   pop    %r13\n  4005a0:       41 5e                   pop    %r14\n  4005a2:       41 5f                   pop    %r15\n  4005a4:       c3                      retq   \n  4005a5:       90                      nop\n  4005a6:       66 2e 0f 1f 84 00 00    nopw   %cs:0x0(%rax,%rax,1)\n  4005ad:       00 00 00 \n\n00000000004005b0 <__libc_csu_fini>:\n  4005b0:       f3 c3                   repz retq \n\nDisassembly of section .fini:\n\n00000000004005b4 <_fini>:\n  4005b4:       48 83 ec 08             sub    $0x8,%rsp\n  4005b8:       48 83 c4 08             add    $0x8,%rsp\n  4005bc:       c3                      retq  \n```\n\n\n##### 可执行文件 (位置无关的PIE(DYN)版本)  \n```ARMASM\n重定位节 '.rela.dyn' 位于偏移量 0x448 含有 9 个条目：\n  偏移量          信息           类型           符号值        符号名称 + 加数\n000000200dd8  000000000008 R_X86_64_RELATIVE                    660\n000000200de0  000000000008 R_X86_64_RELATIVE                    620\n000000201020  000000000008 R_X86_64_RELATIVE                    201020\n000000200fd0  000100000006 R_X86_64_GLOB_DAT 0000000000000000 __cxa_finalize@GLIBC_2.2.5 + 0\n000000200fd8  000200000006 R_X86_64_GLOB_DAT 0000000000000000 _Jv_RegisterClasses + 0\n000000200fe0  000300000006 R_X86_64_GLOB_DAT 0000000000000000 _ITM_deregisterTMClone + 0\n000000200fe8  000400000006 R_X86_64_GLOB_DAT 0000000000000000 __libc_start_main@GLIBC_2.2.5 + 0\n000000200ff0  000500000006 R_X86_64_GLOB_DAT 0000000000000000 __gmon_start__ + 0\n000000200ff8  000600000006 R_X86_64_GLOB_DAT 0000000000000000 _ITM_registerTMCloneTa + 0\n\nThe decoding of unwind sections for machine type Advanced Micro Devices X86-64 is not currently supported.\n\nSymbol table '.dynsym' contains 7 entries:\n   Num:    Value          Size Type    Bind   Vis      Ndx Name\n     0: 0000000000000000     0 NOTYPE  LOCAL  DEFAULT  UND \n     1: 0000000000000000     0 FUNC    WEAK   DEFAULT  UND __cxa_finalize@GLIBC_2.2.5 (2)\n     2: 0000000000000000     0 NOTYPE  WEAK   DEFAULT  UND _Jv_RegisterClasses\n     3: 0000000000000000     0 NOTYPE  WEAK   DEFAULT  UND _ITM_deregisterTMCloneTab\n     4: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND __libc_start_main@GLIBC_2.2.5 (2)\n     5: 0000000000000000     0 NOTYPE  WEAK   DEFAULT  UND __gmon_start__\n     6: 0000000000000000     0 NOTYPE  WEAK   DEFAULT  UND _ITM_registerTMCloneTable\n\nSymbol table '.symtab' contains 70 entries:\n   Num:    Value          Size Type    Bind   Vis      Ndx Name\n     0: 0000000000000000     0 NOTYPE  LOCAL  DEFAULT  UND \n     1: 0000000000000238     0 SECTION LOCAL  DEFAULT    1 \n     2: 0000000000000254     0 SECTION LOCAL  DEFAULT    2 \n     3: 0000000000000274     0 SECTION LOCAL  DEFAULT    3 \n     4: 0000000000000298     0 SECTION LOCAL  DEFAULT    4 \n     5: 00000000000002b8     0 SECTION LOCAL  DEFAULT    5 \n     6: 0000000000000360     0 SECTION LOCAL  DEFAULT    6 \n     7: 0000000000000418     0 SECTION LOCAL  DEFAULT    7 \n     8: 0000000000000428     0 SECTION LOCAL  DEFAULT    8 \n     9: 0000000000000448     0 SECTION LOCAL  DEFAULT    9 \n    10: 0000000000000520     0 SECTION LOCAL  DEFAULT   10 \n    11: 0000000000000540     0 SECTION LOCAL  DEFAULT   11 \n    12: 0000000000000550     0 SECTION LOCAL  DEFAULT   12 \n    13: 0000000000000560     0 SECTION LOCAL  DEFAULT   13 \n    14: 0000000000000764     0 SECTION LOCAL  DEFAULT   14 \n    15: 0000000000000770     0 SECTION LOCAL  DEFAULT   15 \n    16: 0000000000000778     0 SECTION LOCAL  DEFAULT   16 \n    17: 00000000000007c0     0 SECTION LOCAL  DEFAULT   17 \n    18: 0000000000200dd8     0 SECTION LOCAL  DEFAULT   18 \n    19: 0000000000200de0     0 SECTION LOCAL  DEFAULT   19 \n    20: 0000000000200de8     0 SECTION LOCAL  DEFAULT   20 \n    21: 0000000000200df0     0 SECTION LOCAL  DEFAULT   21 \n    22: 0000000000200fd0     0 SECTION LOCAL  DEFAULT   22 \n    23: 0000000000201000     0 SECTION LOCAL  DEFAULT   23 \n    24: 0000000000201018     0 SECTION LOCAL  DEFAULT   24 \n    25: 000000000020102c     0 SECTION LOCAL  DEFAULT   25 \n    26: 0000000000000000     0 SECTION LOCAL  DEFAULT   26 \n    27: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS crtstuff.c\n    28: 0000000000200de8     0 OBJECT  LOCAL  DEFAULT   20 __JCR_LIST__\n    29: 0000000000000590     0 FUNC    LOCAL  DEFAULT   13 deregister_tm_clones\n    30: 00000000000005d0     0 FUNC    LOCAL  DEFAULT   13 register_tm_clones\n    31: 0000000000000620     0 FUNC    LOCAL  DEFAULT   13 __do_global_dtors_aux\n    32: 000000000020102c     1 OBJECT  LOCAL  DEFAULT   25 completed.6972\n    33: 0000000000200de0     0 OBJECT  LOCAL  DEFAULT   19 __do_global_dtors_aux_fin\n    34: 0000000000000660     0 FUNC    LOCAL  DEFAULT   13 frame_dummy\n    35: 0000000000200dd8     0 OBJECT  LOCAL  DEFAULT   18 __frame_dummy_init_array_\n    36: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS test.cpp\n    37: 0000000000000774     4 OBJECT  LOCAL  DEFAULT   15 _ZL13g_static_text\n    38: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS crtstuff.c\n    39: 00000000000008e8     0 OBJECT  LOCAL  DEFAULT   17 __FRAME_END__\n    40: 0000000000200de8     0 OBJECT  LOCAL  DEFAULT   20 __JCR_END__\n    41: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS \n    42: 0000000000000778     0 NOTYPE  LOCAL  DEFAULT   16 __GNU_EH_FRAME_HDR\n    43: 0000000000200df0     0 OBJECT  LOCAL  DEFAULT   21 _DYNAMIC\n    44: 0000000000200de0     0 NOTYPE  LOCAL  DEFAULT   18 __init_array_end\n    45: 0000000000200dd8     0 NOTYPE  LOCAL  DEFAULT   18 __init_array_start\n    46: 0000000000201000     0 OBJECT  LOCAL  DEFAULT   23 _GLOBAL_OFFSET_TABLE_\n    47: 0000000000201028     4 OBJECT  GLOBAL DEFAULT   24 g_static_data\n    48: 000000000020102c     0 NOTYPE  GLOBAL DEFAULT   24 _edata\n    49: 0000000000201018     0 NOTYPE  WEAK   DEFAULT   24 data_start\n    50: 0000000000000770     4 OBJECT  GLOBAL DEFAULT   15 _IO_stdin_used\n    51: 0000000000000690    25 FUNC    GLOBAL DEFAULT   13 _Z9main_funcii\n    52: 0000000000000000     0 FUNC    WEAK   DEFAULT  UND __cxa_finalize@@GLIBC_2.2\n    53: 00000000000006a9    69 FUNC    GLOBAL DEFAULT   13 main\n    54: 0000000000201020     0 OBJECT  GLOBAL HIDDEN    24 __dso_handle\n    55: 0000000000000764     0 FUNC    GLOBAL DEFAULT   14 _fini\n    56: 0000000000000560    43 FUNC    GLOBAL DEFAULT   13 _start\n    57: 0000000000000520     0 FUNC    GLOBAL DEFAULT   10 _init\n    58: 0000000000201030     0 OBJECT  GLOBAL HIDDEN    24 __TMC_END__\n    59: 0000000000000000     0 NOTYPE  WEAK   DEFAULT  UND _Jv_RegisterClasses\n    60: 0000000000201018     0 NOTYPE  GLOBAL DEFAULT   24 __data_start\n    61: 0000000000201038     0 NOTYPE  GLOBAL DEFAULT   25 _end\n    62: 000000000020102c     0 NOTYPE  GLOBAL DEFAULT   25 __bss_start\n    63: 00000000000006f0   101 FUNC    GLOBAL DEFAULT   13 __libc_csu_init\n    64: 0000000000201030     4 OBJECT  GLOBAL DEFAULT   25 g_static_bss\n    65: 0000000000000000     0 NOTYPE  WEAK   DEFAULT  UND _ITM_deregisterTMCloneTab\n    66: 0000000000000760     2 FUNC    GLOBAL DEFAULT   13 __libc_csu_fini\n    67: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND __libc_start_main@@GLIBC_\n    68: 0000000000000000     0 NOTYPE  WEAK   DEFAULT  UND __gmon_start__\n    69: 0000000000000000     0 NOTYPE  WEAK   DEFAULT  UND _ITM_registerTMCloneTable\n\n\n.text\n0000000000000520 <_init>:\n 520:   48 83 ec 08             sub    $0x8,%rsp\n 524:   48 8b 05 c5 0a 20 00    mov    0x200ac5(%rip),%rax        # 200ff0 <__gmon_start__>\n 52b:   48 85 c0                test   %rax,%rax\n 52e:   74 02                   je     532 <_init+0x12>\n 530:   ff d0                   callq  *%rax\n 532:   48 83 c4 08             add    $0x8,%rsp\n 536:   c3                      retq   \n\nDisassembly of section .plt:\n\n0000000000000540 <.plt>:\n 540:   ff 35 c2 0a 20 00       pushq  0x200ac2(%rip)        # 201008 <_GLOBAL_OFFSET_TABLE_+0x8>\n 546:   ff 25 c4 0a 20 00       jmpq   *0x200ac4(%rip)        # 201010 <_GLOBAL_OFFSET_TABLE_+0x10>\n 54c:   0f 1f 40 00             nopl   0x0(%rax)\n\nDisassembly of section .plt.got:\n\n0000000000000550 <.plt.got>:\n 550:   ff 25 7a 0a 20 00       jmpq   *0x200a7a(%rip)        # 200fd0 <__cxa_finalize@GLIBC_2.2.5>\n 556:   66 90                   xchg   %ax,%ax\n\nDisassembly of section .text:\n\n0000000000000560 <_start>:\n 560:   31 ed                   xor    %ebp,%ebp\n 562:   49 89 d1                mov    %rdx,%r9\n 565:   5e                      pop    %rsi\n 566:   48 89 e2                mov    %rsp,%rdx\n 569:   48 83 e4 f0             and    $0xfffffffffffffff0,%rsp\n 56d:   50                      push   %rax\n 56e:   54                      push   %rsp\n 56f:   4c 8d 05 ea 01 00 00    lea    0x1ea(%rip),%r8        # 760 <__libc_csu_fini>\n 576:   48 8d 0d 73 01 00 00    lea    0x173(%rip),%rcx        # 6f0 <__libc_csu_init>\n 57d:   48 8d 3d 25 01 00 00    lea    0x125(%rip),%rdi        # 6a9 <main>\n 584:   ff 15 5e 0a 20 00       callq  *0x200a5e(%rip)        # 200fe8 <__libc_start_main@GLIBC_2.2.5>\n 58a:   f4                      hlt    \n 58b:   0f 1f 44 00 00          nopl   0x0(%rax,%rax,1)\n\n0000000000000590 <deregister_tm_clones>:\n 590:   48 8d 3d 99 0a 20 00    lea    0x200a99(%rip),%rdi        # 201030 <__TMC_END__>\n 597:   48 8d 05 99 0a 20 00    lea    0x200a99(%rip),%rax        # 201037 <__TMC_END__+0x7>\n 59e:   55                      push   %rbp\n 59f:   48 29 f8                sub    %rdi,%rax\n 5a2:   48 89 e5                mov    %rsp,%rbp\n 5a5:   48 83 f8 0e             cmp    $0xe,%rax\n 5a9:   76 15                   jbe    5c0 <deregister_tm_clones+0x30>\n 5ab:   48 8b 05 2e 0a 20 00    mov    0x200a2e(%rip),%rax        # 200fe0 <_ITM_deregisterTMCloneTable>\n 5b2:   48 85 c0                test   %rax,%rax\n 5b5:   74 09                   je     5c0 <deregister_tm_clones+0x30>\n 5b7:   5d                      pop    %rbp\n 5b8:   ff e0                   jmpq   *%rax\n 5ba:   66 0f 1f 44 00 00       nopw   0x0(%rax,%rax,1)\n 5c0:   5d                      pop    %rbp\n 5c1:   c3                      retq   \n 5c2:   0f 1f 40 00             nopl   0x0(%rax)\n 5c6:   66 2e 0f 1f 84 00 00    nopw   %cs:0x0(%rax,%rax,1)\n 5cd:   00 00 00 \n\n00000000000005d0 <register_tm_clones>:\n 5d0:   48 8d 3d 59 0a 20 00    lea    0x200a59(%rip),%rdi        # 201030 <__TMC_END__>\n 5d7:   48 8d 35 52 0a 20 00    lea    0x200a52(%rip),%rsi        # 201030 <__TMC_END__>\n 5de:   55                      push   %rbp\n 5df:   48 29 fe                sub    %rdi,%rsi\n 5e2:   48 89 e5                mov    %rsp,%rbp\n 5e5:   48 c1 fe 03             sar    $0x3,%rsi\n 5e9:   48 89 f0                mov    %rsi,%rax\n 5ec:   48 c1 e8 3f             shr    $0x3f,%rax\n 5f0:   48 01 c6                add    %rax,%rsi\n 5f3:   48 d1 fe                sar    %rsi\n 5f6:   74 18                   je     610 <register_tm_clones+0x40>\n 5f8:   48 8b 05 f9 09 20 00    mov    0x2009f9(%rip),%rax        # 200ff8 <_ITM_registerTMCloneTable>\n 5ff:   48 85 c0                test   %rax,%rax\n 602:   74 0c                   je     610 <register_tm_clones+0x40>\n 604:   5d                      pop    %rbp\n 605:   ff e0                   jmpq   *%rax\n 607:   66 0f 1f 84 00 00 00    nopw   0x0(%rax,%rax,1)\n 60e:   00 00 \n 610:   5d                      pop    %rbp\n 611:   c3                      retq   \n 612:   0f 1f 40 00             nopl   0x0(%rax)\n 616:   66 2e 0f 1f 84 00 00    nopw   %cs:0x0(%rax,%rax,1)\n 61d:   00 00 00 \n\n0000000000000620 <__do_global_dtors_aux>:\n 620:   80 3d 05 0a 20 00 00    cmpb   $0x0,0x200a05(%rip)        # 20102c <_edata>\n 627:   75 27                   jne    650 <__do_global_dtors_aux+0x30>\n 629:   48 83 3d 9f 09 20 00    cmpq   $0x0,0x20099f(%rip)        # 200fd0 <__cxa_finalize@GLIBC_2.2.5>\n 630:   00 \n 631:   55                      push   %rbp\n 632:   48 89 e5                mov    %rsp,%rbp\n 635:   74 0c                   je     643 <__do_global_dtors_aux+0x23>\n 637:   48 8b 3d e2 09 20 00    mov    0x2009e2(%rip),%rdi        # 201020 <__dso_handle>\n 63e:   e8 0d ff ff ff          callq  550 <.plt.got>\n 643:   e8 48 ff ff ff          callq  590 <deregister_tm_clones>\n 648:   5d                      pop    %rbp\n 649:   c6 05 dc 09 20 00 01    movb   $0x1,0x2009dc(%rip)        # 20102c <_edata>\n 650:   f3 c3                   repz retq \n 652:   0f 1f 40 00             nopl   0x0(%rax)\n 656:   66 2e 0f 1f 84 00 00    nopw   %cs:0x0(%rax,%rax,1)\n 65d:   00 00 00 \n\n0000000000000660 <frame_dummy>:\n 660:   48 8d 3d 81 07 20 00    lea    0x200781(%rip),%rdi        # 200de8 <__JCR_END__>\n 667:   48 83 3f 00             cmpq   $0x0,(%rdi)\n 66b:   75 0b                   jne    678 <frame_dummy+0x18>\n 66d:   e9 5e ff ff ff          jmpq   5d0 <register_tm_clones>\n 672:   66 0f 1f 44 00 00       nopw   0x0(%rax,%rax,1)\n 678:   48 8b 05 59 09 20 00    mov    0x200959(%rip),%rax        # 200fd8 <_Jv_RegisterClasses>\n 67f:   48 85 c0                test   %rax,%rax\n 682:   74 e9                   je     66d <frame_dummy+0xd>\n 684:   55                      push   %rbp\n 685:   48 89 e5                mov    %rsp,%rbp\n 688:   ff d0                   callq  *%rax\n 68a:   5d                      pop    %rbp\n 68b:   e9 40 ff ff ff          jmpq   5d0 <register_tm_clones>\n\n0000000000000690 <_Z9main_funcii>:\n 690:   55                      push   %rbp\n 691:   48 89 e5                mov    %rsp,%rbp\n 694:   89 7d fc                mov    %edi,-0x4(%rbp)\n 697:   89 75 f8                mov    %esi,-0x8(%rbp)\n 69a:   8b 55 fc                mov    -0x4(%rbp),%edx\n 69d:   8b 45 f8                mov    -0x8(%rbp),%eax\n 6a0:   01 d0                   add    %edx,%eax\n 6a2:   05 c3 07 00 00          add    $0x7c3,%eax\n 6a7:   5d                      pop    %rbp\n 6a8:   c3                      retq   \n\n00000000000006a9 <main>:\n 6a9:   55                      push   %rbp\n 6aa:   48 89 e5                mov    %rsp,%rbp\n 6ad:   48 83 ec 20             sub    $0x20,%rsp\n 6b1:   89 7d ec                mov    %edi,-0x14(%rbp)\n 6b4:   48 89 75 e0             mov    %rsi,-0x20(%rbp)\n 6b8:   c7 45 fc 00 00 00 00    movl   $0x0,-0x4(%rbp)\n 6bf:   48 8d 05 6a 09 20 00    lea    0x20096a(%rip),%rax        # 201030 <__TMC_END__>\n 6c6:   8b 55 ec                mov    -0x14(%rbp),%edx\n 6c9:   89 10                   mov    %edx,(%rax)\n 6cb:   48 8d 05 56 09 20 00    lea    0x200956(%rip),%rax        # 201028 <g_static_data>\n 6d2:   8b 10                   mov    (%rax),%edx\n 6d4:   48 8d 05 55 09 20 00    lea    0x200955(%rip),%rax        # 201030 <__TMC_END__>\n 6db:   8b 00                   mov    (%rax),%eax\n 6dd:   89 d6                   mov    %edx,%esi\n 6df:   89 c7                   mov    %eax,%edi\n 6e1:   e8 aa ff ff ff          callq  690 <_Z9main_funcii>\n 6e6:   01 45 fc                add    %eax,-0x4(%rbp)\n 6e9:   8b 45 fc                mov    -0x4(%rbp),%eax\n 6ec:   c9                      leaveq \n 6ed:   c3                      retq   \n 6ee:   66 90                   xchg   %ax,%ax\n\n00000000000006f0 <__libc_csu_init>:\n 6f0:   41 57                   push   %r15\n 6f2:   41 56                   push   %r14\n 6f4:   49 89 d7                mov    %rdx,%r15\n 6f7:   41 55                   push   %r13\n 6f9:   41 54                   push   %r12\n 6fb:   4c 8d 25 d6 06 20 00    lea    0x2006d6(%rip),%r12        # 200dd8 <__frame_dummy_init_array_entry>\n 702:   55                      push   %rbp\n 703:   48 8d 2d d6 06 20 00    lea    0x2006d6(%rip),%rbp        # 200de0 <__init_array_end>\n 70a:   53                      push   %rbx\n 70b:   41 89 fd                mov    %edi,%r13d\n 70e:   49 89 f6                mov    %rsi,%r14\n 711:   4c 29 e5                sub    %r12,%rbp\n 714:   48 83 ec 08             sub    $0x8,%rsp\n 718:   48 c1 fd 03             sar    $0x3,%rbp\n 71c:   e8 ff fd ff ff          callq  520 <_init>\n 721:   48 85 ed                test   %rbp,%rbp\n 724:   74 20                   je     746 <__libc_csu_init+0x56>\n 726:   31 db                   xor    %ebx,%ebx\n 728:   0f 1f 84 00 00 00 00    nopl   0x0(%rax,%rax,1)\n 72f:   00 \n 730:   4c 89 fa                mov    %r15,%rdx\n 733:   4c 89 f6                mov    %r14,%rsi\n 736:   44 89 ef                mov    %r13d,%edi\n 739:   41 ff 14 dc             callq  *(%r12,%rbx,8)\n 73d:   48 83 c3 01             add    $0x1,%rbx\n 741:   48 39 dd                cmp    %rbx,%rbp\n 744:   75 ea                   jne    730 <__libc_csu_init+0x40>\n 746:   48 83 c4 08             add    $0x8,%rsp\n 74a:   5b                      pop    %rbx\n 74b:   5d                      pop    %rbp\n 74c:   41 5c                   pop    %r12\n 74e:   41 5d                   pop    %r13\n 750:   41 5e                   pop    %r14\n 752:   41 5f                   pop    %r15\n 754:   c3                      retq   \n 755:   90                      nop\n 756:   66 2e 0f 1f 84 00 00    nopw   %cs:0x0(%rax,%rax,1)\n 75d:   00 00 00 \n\n0000000000000760 <__libc_csu_fini>:\n 760:   f3 c3                   repz retq \n\nDisassembly of section .fini:\n\n0000000000000764 <_fini>:\n 764:   48 83 ec 08             sub    $0x8,%rsp\n 768:   48 83 c4 08             add    $0x8,%rsp\n 76c:   c3                      retq   \n```","slug":"2019-11-29-static-linking","published":1,"updated":"2019-12-09T03:52:10.718Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck44ekz6b001er45hbtzi58et","content":"<h3><span id=\"目录\">目录</span></h3><hr>\n<!-- TOC -->\n\n<ul>\n<li><a href=\"#目录\">目录</a></li>\n<li><a href=\"#基本编译链接流程\">基本编译链接流程</a></li>\n<li><a href=\"#静态链接过程概述\">静态链接过程概述</a></li>\n<li><a href=\"#静态链接过程流程追踪和代码验证\">静态链接过程流程追踪和代码验证</a><ul>\n<li><a href=\"#测试源代码\">测试源代码</a></li>\n<li><a href=\"#生成汇编代码-从这里开始会有两个分支代码-non-pic-和-pic对照\">生成汇编代码 (从这里开始会有两个分支代码 NON-PIC 和 PIC对照)</a><ul>\n<li><a href=\"#汇编代码-相对位置版本\">汇编代码 (相对位置版本)</a></li>\n<li><a href=\"#汇编代码-位置无关版本\">汇编代码 (位置无关版本)</a></li>\n</ul>\n</li>\n<li><a href=\"#生成elf的可重定位文件\">生成ELF的可重定位文件</a><ul>\n<li><a href=\"#可重定向文件和汇编指令-相对位置版本\">可重定向文件和汇编指令 (相对位置版本)</a></li>\n<li><a href=\"#可重定向文件和汇编指令-位置无关版本\">可重定向文件和汇编指令 (位置无关版本)</a></li>\n</ul>\n</li>\n<li><a href=\"#链接为可执行文件或者共享库\">链接为可执行文件(或者共享库)</a><ul>\n<li><a href=\"#可执行文件-相对位置的非pieexec版本\">可执行文件 (相对位置的非PIE(EXEC)版本)</a></li>\n<li><a href=\"#可执行文件-相对位置的piedyn版本\">可执行文件 (相对位置的PIE(DYN)版本)</a></li>\n<li><a href=\"#可执行文件-位置无关的非pieexec版本\">可执行文件 (位置无关的非PIE(EXEC)版本)</a></li>\n<li><a href=\"#可执行文件-位置无关的piedyn版本\">可执行文件 (位置无关的PIE(DYN)版本)</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<!-- /TOC -->\n\n<h3><span id=\"基本编译链接流程\">基本编译链接流程</span></h3><ul>\n<li>编译并输出汇编代码  <ul>\n<li>g++ -S lib.cpp -o lib.s </li>\n</ul>\n</li>\n<li>打包成ELF可重定位文件 ELF TYPE= ET_REL  即.o文件  <ul>\n<li>g++ -c lib.s -o lib.o </li>\n</ul>\n</li>\n<li>链接到动态库或者可执行文件<ul>\n<li>g++ lib.o -o a.out   </li>\n<li>g++ -shared lib.o -o a.out </li>\n</ul>\n</li>\n</ul>\n<a id=\"more\"></a>\n\n<h3><span id=\"静态链接过程概述\">静态链接过程概述</span></h3><h3><span id=\"静态链接过程流程追踪和代码验证\">静态链接过程流程追踪和代码验证</span></h3><h4><span id=\"测试源代码\">测试源代码</span></h4><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span> g_static_bss = <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> g_static_data = <span class=\"number\">182</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> g_static_text = <span class=\"number\">1987</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main_func</span><span class=\"params\">(<span class=\"keyword\">int</span> a, <span class=\"keyword\">int</span> b)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">   <span class=\"keyword\">return</span> a+b + g_static_text;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"keyword\">int</span> argc, <span class=\"keyword\">char</span> *argv[])</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">   <span class=\"keyword\">int</span> a = <span class=\"number\">0</span>;</span><br><span class=\"line\">   g_static_bss = argc;</span><br><span class=\"line\">   a += main_func(g_static_bss, g_static_data);</span><br><span class=\"line\">   <span class=\"keyword\">return</span> a;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4><span id=\"生成汇编代码-从这里开始会有两个分支代码-non-pic-和-pic对照\">生成汇编代码 (从这里开始会有两个分支代码 NON-PIC 和 PIC对照)</span></h4><p>在这段代码中 </p>\n<ul>\n<li><p>g_static_bss  </p>\n<ul>\n<li>为全局的符号(给链接器看到) </li>\n<li>被放在.bss字段(未初始化数据段, Block Started by Symbol)中 </li>\n<li>占用4个字节  类型是object 初始化为0   </li>\n<li>4字节对齐  </li>\n</ul>\n</li>\n<li><p>g_static_data  </p>\n<ul>\n<li>为全局的符号(给链接器看到) </li>\n<li>被放在.data字段(数据段)中 </li>\n<li>占用4个字节  类型是object 初始化为182   </li>\n<li>4字节对齐  </li>\n</ul>\n</li>\n<li><p>_ZL13g_static_text  </p>\n<ul>\n<li>为全局的符号(给链接器看到) </li>\n<li>被放在.rodata字段(只读数据段)中 </li>\n<li>占用4个字节  类型是object 初始化为1987   </li>\n<li>4字节对齐  </li>\n</ul>\n</li>\n<li><p>_Z9main_funcii  </p>\n<ul>\n<li>为全局的符号(给链接器看到) </li>\n<li>被放在.text字段(代码段)中 </li>\n<li>占用4个字节  类型是function  </li>\n</ul>\n</li>\n<li><p>main  </p>\n<ul>\n<li>为全局的符号(给链接器看到) </li>\n<li>被放在.text字段(代码段)中 </li>\n<li>占用4个字节  类型是function  </li>\n</ul>\n</li>\n<li><p>GOTPCREL </p>\n<ul>\n<li>PC-REL是指的位置相对代码   </li>\n<li>这里是指的走GOT表的位置相对代码   </li>\n</ul>\n</li>\n<li><p>在下面的对照中  对于全局符号的访问有如下区别</p>\n<ul>\n<li>访问全局对象时 PIC 版本会先从相对当前代码位置的GOT表中读取全局对象的地址到RAX 然后再读取其内容   </li>\n<li>非PIC版本则直接用记录好的地址读取其内容  </li>\n</ul>\n</li>\n</ul>\n<h5><span id=\"汇编代码-相对位置版本\">汇编代码 (相对位置版本)</span></h5><figure class=\"highlight armasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">    .file    <span class=\"string\">\"test.cpp\"</span></span><br><span class=\"line\">    .globl    g_static_bss</span><br><span class=\"line\">    .<span class=\"keyword\">bss</span></span><br><span class=\"line\"><span class=\"keyword\"> </span>   <span class=\"meta\">.align</span> <span class=\"number\">4</span></span><br><span class=\"line\">    .type    g_static_bss, <span class=\"comment\">@object</span></span><br><span class=\"line\">    .size    g_static_bss, <span class=\"number\">4</span></span><br><span class=\"line\"><span class=\"symbol\">g_static_bss</span>:</span><br><span class=\"line\">    .zero    <span class=\"number\">4</span></span><br><span class=\"line\">    .globl    g_static_data</span><br><span class=\"line\">    <span class=\"meta\">.data</span></span><br><span class=\"line\">    <span class=\"meta\">.align</span> <span class=\"number\">4</span></span><br><span class=\"line\">    .type    g_static_data, <span class=\"comment\">@object</span></span><br><span class=\"line\">    .size    g_static_data, <span class=\"number\">4</span></span><br><span class=\"line\"><span class=\"symbol\">g_static_data</span>:</span><br><span class=\"line\">    <span class=\"meta\">.long</span>    <span class=\"number\">182</span></span><br><span class=\"line\">    <span class=\"meta\">.section</span>    .rodata</span><br><span class=\"line\">    <span class=\"meta\">.align</span> <span class=\"number\">4</span></span><br><span class=\"line\">    .type    _ZL13g_static_text, <span class=\"comment\">@object</span></span><br><span class=\"line\">    .size    _ZL13g_static_text, <span class=\"number\">4</span></span><br><span class=\"line\"><span class=\"symbol\">_ZL13g_static_text</span>:</span><br><span class=\"line\">    <span class=\"meta\">.long</span>    <span class=\"number\">1987</span></span><br><span class=\"line\">    <span class=\"meta\">.text</span></span><br><span class=\"line\">    .globl    _Z9main_funcii</span><br><span class=\"line\">    .type    _Z9main_funcii, <span class=\"comment\">@function</span></span><br><span class=\"line\"><span class=\"symbol\">_Z9main_funcii</span>:</span><br><span class=\"line\"><span class=\"symbol\">.LFB0</span>:</span><br><span class=\"line\">    .cfi_startproc</span><br><span class=\"line\">    <span class=\"keyword\">pushq </span>   %rbp</span><br><span class=\"line\">    .cfi_def_cfa_offset <span class=\"number\">16</span></span><br><span class=\"line\">    .cfi_offset <span class=\"number\">6</span>, -<span class=\"number\">16</span></span><br><span class=\"line\">    <span class=\"keyword\">movq </span>   %rsp, %rbp</span><br><span class=\"line\">    .cfi_def_cfa_register <span class=\"number\">6</span></span><br><span class=\"line\">    <span class=\"keyword\">movl </span>   %edi, -<span class=\"number\">4</span>(%rbp)</span><br><span class=\"line\">    <span class=\"keyword\">movl </span>   %esi, -<span class=\"number\">8</span>(%rbp)</span><br><span class=\"line\">    <span class=\"keyword\">movl </span>   -<span class=\"number\">4</span>(%rbp), %edx</span><br><span class=\"line\">    <span class=\"keyword\">movl </span>   -<span class=\"number\">8</span>(%rbp), %eax</span><br><span class=\"line\">    <span class=\"keyword\">addl </span>   %edx, %eax</span><br><span class=\"line\">    <span class=\"keyword\">addl </span>   <span class=\"number\">$1987</span>, %eax</span><br><span class=\"line\">    <span class=\"keyword\">popq </span>   %rbp</span><br><span class=\"line\">    .cfi_def_cfa <span class=\"number\">7</span>, <span class=\"number\">8</span></span><br><span class=\"line\">    ret</span><br><span class=\"line\">    .cfi_endproc</span><br><span class=\"line\"><span class=\"symbol\">.LFE0</span>:</span><br><span class=\"line\">    .size    _Z9main_funcii, .-_Z9main_funcii</span><br><span class=\"line\">    .globl    main</span><br><span class=\"line\">    .type    main, <span class=\"comment\">@function</span></span><br><span class=\"line\"><span class=\"symbol\">main</span>:</span><br><span class=\"line\"><span class=\"symbol\">.LFB1</span>:</span><br><span class=\"line\">    .cfi_startproc</span><br><span class=\"line\">    <span class=\"keyword\">pushq </span>   %rbp</span><br><span class=\"line\">    .cfi_def_cfa_offset <span class=\"number\">16</span></span><br><span class=\"line\">    .cfi_offset <span class=\"number\">6</span>, -<span class=\"number\">16</span></span><br><span class=\"line\">    <span class=\"keyword\">movq </span>   %rsp, %rbp</span><br><span class=\"line\">    .cfi_def_cfa_register <span class=\"number\">6</span></span><br><span class=\"line\">    <span class=\"keyword\">subq </span>   <span class=\"number\">$32</span>, %rsp</span><br><span class=\"line\">    <span class=\"keyword\">movl </span>   %edi, -<span class=\"number\">20</span>(%rbp)</span><br><span class=\"line\">    <span class=\"keyword\">movq </span>   %rsi, -<span class=\"number\">32</span>(%rbp)</span><br><span class=\"line\">    <span class=\"keyword\">movl </span>   <span class=\"number\">$0</span>, -<span class=\"number\">4</span>(%rbp)</span><br><span class=\"line\">    <span class=\"keyword\">movl </span>   -<span class=\"number\">20</span>(%rbp), %eax</span><br><span class=\"line\">    <span class=\"keyword\">movl </span>   %eax, g_static_bss(%rip)</span><br><span class=\"line\">    <span class=\"keyword\">movl </span>   g_static_data(%rip), %edx</span><br><span class=\"line\">    <span class=\"keyword\">movl </span>   g_static_bss(%rip), %eax</span><br><span class=\"line\">    <span class=\"keyword\">movl </span>   %edx, %esi</span><br><span class=\"line\">    <span class=\"keyword\">movl </span>   %eax, %edi</span><br><span class=\"line\">    call    _Z9main_funcii</span><br><span class=\"line\">    <span class=\"keyword\">addl </span>   %eax, -<span class=\"number\">4</span>(%rbp)</span><br><span class=\"line\">    <span class=\"keyword\">movl </span>   -<span class=\"number\">4</span>(%rbp), %eax</span><br><span class=\"line\">    leave</span><br><span class=\"line\">    .cfi_def_cfa <span class=\"number\">7</span>, <span class=\"number\">8</span></span><br><span class=\"line\">    ret</span><br><span class=\"line\">    .cfi_endproc</span><br><span class=\"line\"><span class=\"symbol\">.LFE1</span>:</span><br><span class=\"line\">    .size    main, .-main</span><br><span class=\"line\">    .ident    <span class=\"string\">\"GCC: (Debian 6.3.0-18+deb9u1) 6.3.0 20170516\"</span></span><br><span class=\"line\">    <span class=\"meta\">.section</span>    .note.GNU-stack,<span class=\"string\">\"\"</span>,<span class=\"comment\">@progbits</span></span><br></pre></td></tr></table></figure>\n\n<h5><span id=\"汇编代码-位置无关版本\">汇编代码 (位置无关版本)</span></h5><figure class=\"highlight armasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">    .file    <span class=\"string\">\"test.cpp\"</span></span><br><span class=\"line\">    .globl    g_static_bss</span><br><span class=\"line\">    .<span class=\"keyword\">bss</span></span><br><span class=\"line\"><span class=\"keyword\"> </span>   <span class=\"meta\">.align</span> <span class=\"number\">4</span></span><br><span class=\"line\">    .type    g_static_bss, <span class=\"comment\">@object</span></span><br><span class=\"line\">    .size    g_static_bss, <span class=\"number\">4</span></span><br><span class=\"line\"><span class=\"symbol\">g_static_bss</span>:</span><br><span class=\"line\">    .zero    <span class=\"number\">4</span></span><br><span class=\"line\">    .globl    g_static_data</span><br><span class=\"line\">    <span class=\"meta\">.data</span></span><br><span class=\"line\">    <span class=\"meta\">.align</span> <span class=\"number\">4</span></span><br><span class=\"line\">    .type    g_static_data, <span class=\"comment\">@object</span></span><br><span class=\"line\">    .size    g_static_data, <span class=\"number\">4</span></span><br><span class=\"line\"><span class=\"symbol\">g_static_data</span>:</span><br><span class=\"line\">    <span class=\"meta\">.long</span>    <span class=\"number\">182</span></span><br><span class=\"line\">    <span class=\"meta\">.section</span>    .rodata</span><br><span class=\"line\">    <span class=\"meta\">.align</span> <span class=\"number\">4</span></span><br><span class=\"line\">    .type    _ZL13g_static_text, <span class=\"comment\">@object</span></span><br><span class=\"line\">    .size    _ZL13g_static_text, <span class=\"number\">4</span></span><br><span class=\"line\"><span class=\"symbol\">_ZL13g_static_text</span>:</span><br><span class=\"line\">    <span class=\"meta\">.long</span>    <span class=\"number\">1987</span></span><br><span class=\"line\">    <span class=\"meta\">.text</span></span><br><span class=\"line\">    .globl    _Z9main_funcii</span><br><span class=\"line\">    .type    _Z9main_funcii, <span class=\"comment\">@function</span></span><br><span class=\"line\"><span class=\"symbol\">_Z9main_funcii</span>:</span><br><span class=\"line\"><span class=\"symbol\">.LFB0</span>:</span><br><span class=\"line\">    .cfi_startproc</span><br><span class=\"line\">    <span class=\"keyword\">pushq </span>   %rbp</span><br><span class=\"line\">    .cfi_def_cfa_offset <span class=\"number\">16</span></span><br><span class=\"line\">    .cfi_offset <span class=\"number\">6</span>, -<span class=\"number\">16</span></span><br><span class=\"line\">    <span class=\"keyword\">movq </span>   %rsp, %rbp</span><br><span class=\"line\">    .cfi_def_cfa_register <span class=\"number\">6</span></span><br><span class=\"line\">    <span class=\"keyword\">movl </span>   %edi, -<span class=\"number\">4</span>(%rbp)</span><br><span class=\"line\">    <span class=\"keyword\">movl </span>   %esi, -<span class=\"number\">8</span>(%rbp)</span><br><span class=\"line\">    <span class=\"keyword\">movl </span>   -<span class=\"number\">4</span>(%rbp), %edx</span><br><span class=\"line\">    <span class=\"keyword\">movl </span>   -<span class=\"number\">8</span>(%rbp), %eax</span><br><span class=\"line\">    <span class=\"keyword\">addl </span>   %edx, %eax</span><br><span class=\"line\">    <span class=\"keyword\">addl </span>   <span class=\"number\">$1987</span>, %eax</span><br><span class=\"line\">    <span class=\"keyword\">popq </span>   %rbp</span><br><span class=\"line\">    .cfi_def_cfa <span class=\"number\">7</span>, <span class=\"number\">8</span></span><br><span class=\"line\">    ret</span><br><span class=\"line\">    .cfi_endproc</span><br><span class=\"line\"><span class=\"symbol\">.LFE0</span>:</span><br><span class=\"line\">    .size    _Z9main_funcii, .-_Z9main_funcii</span><br><span class=\"line\">    .globl    main</span><br><span class=\"line\">    .type    main, <span class=\"comment\">@function</span></span><br><span class=\"line\"><span class=\"symbol\">main</span>:</span><br><span class=\"line\"><span class=\"symbol\">.LFB1</span>:</span><br><span class=\"line\">    .cfi_startproc</span><br><span class=\"line\">    <span class=\"keyword\">pushq </span>   %rbp</span><br><span class=\"line\">    .cfi_def_cfa_offset <span class=\"number\">16</span></span><br><span class=\"line\">    .cfi_offset <span class=\"number\">6</span>, -<span class=\"number\">16</span></span><br><span class=\"line\">    <span class=\"keyword\">movq </span>   %rsp, %rbp</span><br><span class=\"line\">    .cfi_def_cfa_register <span class=\"number\">6</span></span><br><span class=\"line\">    <span class=\"keyword\">subq </span>   <span class=\"number\">$32</span>, %rsp</span><br><span class=\"line\">    <span class=\"keyword\">movl </span>   %edi, -<span class=\"number\">20</span>(%rbp)</span><br><span class=\"line\">    <span class=\"keyword\">movq </span>   %rsi, -<span class=\"number\">32</span>(%rbp)</span><br><span class=\"line\">    <span class=\"keyword\">movl </span>   <span class=\"number\">$0</span>, -<span class=\"number\">4</span>(%rbp)</span><br><span class=\"line\">    <span class=\"keyword\">movq </span>   g_static_bss<span class=\"comment\">@GOTPCREL(%rip), %rax</span></span><br><span class=\"line\">    <span class=\"keyword\">movl </span>   -<span class=\"number\">20</span>(%rbp), %edx</span><br><span class=\"line\">    <span class=\"keyword\">movl </span>   %edx, (%rax)</span><br><span class=\"line\">    <span class=\"keyword\">movq </span>   g_static_data<span class=\"comment\">@GOTPCREL(%rip), %rax</span></span><br><span class=\"line\">    <span class=\"keyword\">movl </span>   (%rax), %edx</span><br><span class=\"line\">    <span class=\"keyword\">movq </span>   g_static_bss<span class=\"comment\">@GOTPCREL(%rip), %rax</span></span><br><span class=\"line\">    <span class=\"keyword\">movl </span>   (%rax), %eax</span><br><span class=\"line\">    <span class=\"keyword\">movl </span>   %edx, %esi</span><br><span class=\"line\">    <span class=\"keyword\">movl </span>   %eax, %edi</span><br><span class=\"line\">    call    _Z9main_funcii<span class=\"comment\">@PLT</span></span><br><span class=\"line\">    <span class=\"keyword\">addl </span>   %eax, -<span class=\"number\">4</span>(%rbp)</span><br><span class=\"line\">    <span class=\"keyword\">movl </span>   -<span class=\"number\">4</span>(%rbp), %eax</span><br><span class=\"line\">    leave</span><br><span class=\"line\">    .cfi_def_cfa <span class=\"number\">7</span>, <span class=\"number\">8</span></span><br><span class=\"line\">    ret</span><br><span class=\"line\">    .cfi_endproc</span><br><span class=\"line\"><span class=\"symbol\">.LFE1</span>:</span><br><span class=\"line\">    .size    main, .-main</span><br><span class=\"line\">    .ident    <span class=\"string\">\"GCC: (Debian 6.3.0-18+deb9u1) 6.3.0 20170516\"</span></span><br><span class=\"line\">    <span class=\"meta\">.section</span>    .note.GNU-stack,<span class=\"string\">\"\"</span>,<span class=\"comment\">@progbits</span></span><br></pre></td></tr></table></figure>\n\n<h4><span id=\"生成elf的可重定位文件\">生成ELF的可重定位文件</span></h4><ul>\n<li>.rela.text 重定位section<ul>\n<li>包含了所有需要进行重定位的信息, 偏移量是相对于.text  类型则是注明了重定位的方式  </li>\n</ul>\n</li>\n</ul>\n<ul>\n<li><p>.rela.eh_frame 重定位section  </p>\n</li>\n<li><p>.symtab 符号表section  </p>\n<ul>\n<li>Value 标记了符号所在的偏移地址 </li>\n<li>SIZE 标记了代码或者变量占的大小  </li>\n<li>Ndx 如果不在本编译单元 类型为NOTYPE Ndx为UND   </li>\n<li>Bind 全局还是局部符号(是否链接器可见)  <ul>\n<li>rodata的符号为local是因为直接被编译到了代码中 <ul>\n<li>例如g_static_text 1987 =&gt; <code>add $0x7c3,%eax</code></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>.rela.eh_frame Call Frame Information </p>\n<ul>\n<li>提供了异常的Stack Unwind 支持  </li>\n<li>这张表提供了’给定一个PC值, 可以查到上一个stack frame位置’</li>\n<li>Stack Unwind 指从最內层函数呼叫堆栈开始，找到最外层  <ul>\n<li>_Unwind_Backtrace()   </li>\n<li>uw_frame_state_for() </li>\n<li>uw_update_context() </li>\n<li>uw_update_context_1()  </li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<ul>\n<li>PC32 的PC是指的 program counter   在本文的汇编中对应寄存器的RIP </li>\n<li>PC32 在重定位类型中代表相对指令位置的重定位</li>\n<li>PLT 则代表使用 过程链接表 进行重定位 (动态定位)   </li>\n<li>GOT 是全局偏移表  </li>\n<li>PGOT 是私有全局偏移表  </li>\n</ul>\n<p>在这个过程中<br>无论是PIC的PLT调用还是PC调用, 对于call 指令 他的操作数都是0<br>无论是GOTPCREL还是PC 对全局对象符号的访问中 操作数也都是0<br>在重定位节中标记了这些需要在链接过程中重建的具体位置和内容 </p>\n<h5><span id=\"可重定向文件和汇编指令-相对位置版本\">可重定向文件和汇编指令 (相对位置版本)</span></h5><figure class=\"highlight armasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">重定位节 <span class=\"string\">'.rela.text'</span> 位于偏移量 <span class=\"number\">0x2c8</span> 含有 <span class=\"number\">4</span> 个条目：</span><br><span class=\"line\">  偏移量          信息           类型           符号值        符号名称 + 加数</span><br><span class=\"line\"><span class=\"number\">000000000034</span>  <span class=\"number\">000</span>a00000002 R_X86_64_PC32     <span class=\"number\">0000000000000000</span> g_static_bss - <span class=\"number\">4</span></span><br><span class=\"line\"><span class=\"number\">00000000003</span>a  <span class=\"number\">000</span>b00000002 R_X86_64_PC32     <span class=\"number\">0000000000000000</span> g_static_data - <span class=\"number\">4</span></span><br><span class=\"line\"><span class=\"number\">000000000040</span>  <span class=\"number\">000</span>a00000002 R_X86_64_PC32     <span class=\"number\">0000000000000000</span> g_static_bss - <span class=\"number\">4</span></span><br><span class=\"line\"><span class=\"number\">000000000049</span>  <span class=\"number\">000</span>c00000002 R_X86_64_PC32     <span class=\"number\">0000000000000000</span> _Z9main_funcii - <span class=\"number\">4</span></span><br><span class=\"line\"></span><br><span class=\"line\">重定位节 <span class=\"string\">'.rela.eh_frame'</span> 位于偏移量 <span class=\"number\">0x328</span> 含有 <span class=\"number\">2</span> 个条目：</span><br><span class=\"line\">  偏移量          信息           类型           符号值        符号名称 + 加数</span><br><span class=\"line\"><span class=\"number\">000000000020</span>  <span class=\"number\">000200000002</span> R_X86_64_PC32     <span class=\"number\">0000000000000000</span> <span class=\"meta\">.text</span> + <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"number\">000000000040</span>  <span class=\"number\">000200000002</span> R_X86_64_PC32     <span class=\"number\">0000000000000000</span> <span class=\"meta\">.text</span> + <span class=\"number\">19</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"symbol\">The</span> decoding of unwind sections for machine type Advanced Micro Devices X86-<span class=\"number\">64</span> is not currently supported.</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"symbol\">Symbol</span> table <span class=\"string\">'.symtab'</span> contains <span class=\"number\">14</span> entries:</span><br><span class=\"line\"><span class=\"symbol\">   Num:</span>    Value          Size Type    <span class=\"keyword\">Bind </span>  Vis      Ndx Name</span><br><span class=\"line\">     <span class=\"number\">0</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">0</span> NOTYPE  LOCAL  DEFAULT  UND </span><br><span class=\"line\">     <span class=\"number\">1</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">0</span> FILE    LOCAL  DEFAULT  ABS test.cpp</span><br><span class=\"line\">     <span class=\"number\">2</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT    <span class=\"number\">1</span> </span><br><span class=\"line\">     <span class=\"number\">3</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT    <span class=\"number\">3</span> </span><br><span class=\"line\">     <span class=\"number\">4</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT    <span class=\"number\">4</span> </span><br><span class=\"line\">     <span class=\"number\">5</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT    <span class=\"number\">5</span> </span><br><span class=\"line\">     <span class=\"number\">6</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">4</span> OBJECT  LOCAL  DEFAULT    <span class=\"number\">5</span> _ZL13g_static_text</span><br><span class=\"line\">     <span class=\"number\">7</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT    <span class=\"number\">7</span> </span><br><span class=\"line\">     <span class=\"number\">8</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT    <span class=\"number\">8</span> </span><br><span class=\"line\">     <span class=\"number\">9</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT    <span class=\"number\">6</span> </span><br><span class=\"line\">    <span class=\"number\">10</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">4</span> OBJECT  <span class=\"meta\">GLOBAL</span> DEFAULT    <span class=\"number\">4</span> g_static_bss</span><br><span class=\"line\">    <span class=\"number\">11</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">4</span> OBJECT  <span class=\"meta\">GLOBAL</span> DEFAULT    <span class=\"number\">3</span> g_static_data</span><br><span class=\"line\">    <span class=\"number\">12</span>: <span class=\"number\">0000000000000000</span>    <span class=\"number\">25</span> FUNC    <span class=\"meta\">GLOBAL</span> DEFAULT    <span class=\"number\">1</span> _Z9main_funcii</span><br><span class=\"line\">    <span class=\"number\">13</span>: <span class=\"number\">0000000000000019</span>    <span class=\"number\">60</span> FUNC    <span class=\"meta\">GLOBAL</span> DEFAULT    <span class=\"number\">1</span> main</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"symbol\">.text</span></span><br><span class=\"line\"><span class=\"number\">0000000000000000</span> &lt;_Z9main_funcii&gt;:</span><br><span class=\"line\">   <span class=\"number\">0</span>:   <span class=\"number\">55</span>                      <span class=\"keyword\">push </span>  %rbp</span><br><span class=\"line\">   <span class=\"number\">1</span>:   <span class=\"number\">48</span> <span class=\"number\">89</span> e5                <span class=\"keyword\">mov </span>   %rsp,%rbp</span><br><span class=\"line\">   <span class=\"number\">4</span>:   <span class=\"number\">89</span> <span class=\"number\">7</span>d fc                <span class=\"keyword\">mov </span>   %edi,-<span class=\"number\">0x4</span>(%rbp)</span><br><span class=\"line\">   <span class=\"number\">7</span>:   <span class=\"number\">89</span> <span class=\"number\">75</span> f8                <span class=\"keyword\">mov </span>   %esi,-<span class=\"number\">0x8</span>(%rbp)</span><br><span class=\"line\">   a:   <span class=\"number\">8</span>b <span class=\"number\">55</span> fc                <span class=\"keyword\">mov </span>   -<span class=\"number\">0x4</span>(%rbp),%edx</span><br><span class=\"line\">   d:   <span class=\"number\">8</span>b <span class=\"number\">45</span> f8                <span class=\"keyword\">mov </span>   -<span class=\"number\">0x8</span>(%rbp),%eax</span><br><span class=\"line\">  <span class=\"number\">10</span>:   <span class=\"number\">01</span> <span class=\"built_in\">d0</span>                   <span class=\"keyword\">add </span>   %edx,%eax</span><br><span class=\"line\">  <span class=\"number\">12</span>:   <span class=\"number\">05</span> <span class=\"built_in\">c3</span> <span class=\"number\">07</span> <span class=\"number\">00</span> <span class=\"number\">00</span>          <span class=\"keyword\">add </span>   <span class=\"number\">$0x7c3</span>,%eax</span><br><span class=\"line\">  <span class=\"number\">17</span>:   <span class=\"number\">5</span>d                      <span class=\"keyword\">pop </span>   %rbp</span><br><span class=\"line\">  <span class=\"number\">18</span>:   <span class=\"built_in\">c3</span>                      retq   </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">0000000000000019</span> &lt;main&gt;:</span><br><span class=\"line\">  <span class=\"number\">19</span>:   <span class=\"number\">55</span>                      <span class=\"keyword\">push </span>  %rbp</span><br><span class=\"line\">  <span class=\"number\">1</span>a:   <span class=\"number\">48</span> <span class=\"number\">89</span> e5                <span class=\"keyword\">mov </span>   %rsp,%rbp</span><br><span class=\"line\">  <span class=\"number\">1</span>d:   <span class=\"number\">48</span> <span class=\"number\">83</span> ec <span class=\"number\">20</span>             <span class=\"keyword\">sub </span>   <span class=\"number\">$0x20</span>,%rsp</span><br><span class=\"line\">  <span class=\"number\">21</span>:   <span class=\"number\">89</span> <span class=\"number\">7</span>d ec                <span class=\"keyword\">mov </span>   %edi,-<span class=\"number\">0x14</span>(%rbp)</span><br><span class=\"line\">  <span class=\"number\">24</span>:   <span class=\"number\">48</span> <span class=\"number\">89</span> <span class=\"number\">75</span> e0             <span class=\"keyword\">mov </span>   %rsi,-<span class=\"number\">0x20</span>(%rbp)</span><br><span class=\"line\">  <span class=\"number\">28</span>:   <span class=\"built_in\">c7</span> <span class=\"number\">45</span> fc <span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">00</span>    <span class=\"keyword\">movl </span>  <span class=\"number\">$0x0</span>,-<span class=\"number\">0x4</span>(%rbp)</span><br><span class=\"line\">  <span class=\"number\">2</span>f:   <span class=\"number\">8</span>b <span class=\"number\">45</span> ec                <span class=\"keyword\">mov </span>   -<span class=\"number\">0x14</span>(%rbp),%eax</span><br><span class=\"line\">  <span class=\"number\">32</span>:   <span class=\"number\">89</span> <span class=\"number\">05</span> <span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">00</span>       <span class=\"keyword\">mov </span>   %eax,<span class=\"number\">0x0</span>(%rip)        # <span class=\"number\">38</span> &lt;main+<span class=\"number\">0x1f</span>&gt;</span><br><span class=\"line\">  <span class=\"number\">38</span>:   <span class=\"number\">8</span>b <span class=\"number\">15</span> <span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">00</span>       <span class=\"keyword\">mov </span>   <span class=\"number\">0x0</span>(%rip),%edx        # <span class=\"number\">3</span>e &lt;main+<span class=\"number\">0x25</span>&gt;</span><br><span class=\"line\">  <span class=\"number\">3</span>e:   <span class=\"number\">8</span>b <span class=\"number\">05</span> <span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">00</span>       <span class=\"keyword\">mov </span>   <span class=\"number\">0x0</span>(%rip),%eax        # <span class=\"number\">44</span> &lt;main+<span class=\"number\">0x2b</span>&gt;</span><br><span class=\"line\">  <span class=\"number\">44</span>:   <span class=\"number\">89</span> <span class=\"built_in\">d6</span>                   <span class=\"keyword\">mov </span>   %edx,%esi</span><br><span class=\"line\">  <span class=\"number\">46</span>:   <span class=\"number\">89</span> <span class=\"built_in\">c7</span>                   <span class=\"keyword\">mov </span>   %eax,%edi</span><br><span class=\"line\">  <span class=\"number\">48</span>:   e8 <span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">00</span>          callq  <span class=\"number\">4</span>d &lt;main+<span class=\"number\">0x34</span>&gt;</span><br><span class=\"line\">  <span class=\"number\">4</span>d:   <span class=\"number\">01</span> <span class=\"number\">45</span> fc                <span class=\"keyword\">add </span>   %eax,-<span class=\"number\">0x4</span>(%rbp)</span><br><span class=\"line\">  <span class=\"number\">50</span>:   <span class=\"number\">8</span>b <span class=\"number\">45</span> fc                <span class=\"keyword\">mov </span>   -<span class=\"number\">0x4</span>(%rbp),%eax</span><br><span class=\"line\">  <span class=\"number\">53</span>:   <span class=\"built_in\">c9</span>                      leaveq </span><br><span class=\"line\">  <span class=\"number\">54</span>:   <span class=\"built_in\">c3</span>                      retq</span><br></pre></td></tr></table></figure>\n\n\n<h5><span id=\"可重定向文件和汇编指令-位置无关版本\">可重定向文件和汇编指令 (位置无关版本)</span></h5><figure class=\"highlight armasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">重定位节 <span class=\"string\">'.rela.text'</span> 位于偏移量 <span class=\"number\">0x300</span> 含有 <span class=\"number\">4</span> 个条目：</span><br><span class=\"line\">  偏移量          信息           类型           符号值        符号名称 + 加数</span><br><span class=\"line\"><span class=\"number\">000000000032</span>  <span class=\"number\">000</span>a0000002a R_X86_64_REX_GOTP <span class=\"number\">0000000000000000</span> g_static_bss - <span class=\"number\">4</span></span><br><span class=\"line\"><span class=\"number\">00000000003</span>e  <span class=\"number\">000</span>b0000002a R_X86_64_REX_GOTP <span class=\"number\">0000000000000000</span> g_static_data - <span class=\"number\">4</span></span><br><span class=\"line\"><span class=\"number\">000000000047</span>  <span class=\"number\">000</span>a0000002a R_X86_64_REX_GOTP <span class=\"number\">0000000000000000</span> g_static_bss - <span class=\"number\">4</span></span><br><span class=\"line\"><span class=\"number\">000000000052</span>  <span class=\"number\">000</span>c00000004 R_X86_64_PLT32    <span class=\"number\">0000000000000000</span> _Z9main_funcii - <span class=\"number\">4</span></span><br><span class=\"line\"></span><br><span class=\"line\">重定位节 <span class=\"string\">'.rela.eh_frame'</span> 位于偏移量 <span class=\"number\">0x360</span> 含有 <span class=\"number\">2</span> 个条目：</span><br><span class=\"line\">  偏移量          信息           类型           符号值        符号名称 + 加数</span><br><span class=\"line\"><span class=\"number\">000000000020</span>  <span class=\"number\">000200000002</span> R_X86_64_PC32     <span class=\"number\">0000000000000000</span> <span class=\"meta\">.text</span> + <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"number\">000000000040</span>  <span class=\"number\">000200000002</span> R_X86_64_PC32     <span class=\"number\">0000000000000000</span> <span class=\"meta\">.text</span> + <span class=\"number\">19</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"symbol\">The</span> decoding of unwind sections for machine type Advanced Micro Devices X86-<span class=\"number\">64</span> is not currently supported.</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"symbol\">Symbol</span> table <span class=\"string\">'.symtab'</span> contains <span class=\"number\">15</span> entries:</span><br><span class=\"line\"><span class=\"symbol\">   Num:</span>    Value          Size Type    <span class=\"keyword\">Bind </span>  Vis      Ndx Name</span><br><span class=\"line\">     <span class=\"number\">0</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">0</span> NOTYPE  LOCAL  DEFAULT  UND </span><br><span class=\"line\">     <span class=\"number\">1</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">0</span> FILE    LOCAL  DEFAULT  ABS test.cpp</span><br><span class=\"line\">     <span class=\"number\">2</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT    <span class=\"number\">1</span> </span><br><span class=\"line\">     <span class=\"number\">3</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT    <span class=\"number\">3</span> </span><br><span class=\"line\">     <span class=\"number\">4</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT    <span class=\"number\">4</span> </span><br><span class=\"line\">     <span class=\"number\">5</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT    <span class=\"number\">5</span> </span><br><span class=\"line\">     <span class=\"number\">6</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">4</span> OBJECT  LOCAL  DEFAULT    <span class=\"number\">5</span> _ZL13g_static_text</span><br><span class=\"line\">     <span class=\"number\">7</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT    <span class=\"number\">7</span> </span><br><span class=\"line\">     <span class=\"number\">8</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT    <span class=\"number\">8</span> </span><br><span class=\"line\">     <span class=\"number\">9</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT    <span class=\"number\">6</span> </span><br><span class=\"line\">    <span class=\"number\">10</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">4</span> OBJECT  <span class=\"meta\">GLOBAL</span> DEFAULT    <span class=\"number\">4</span> g_static_bss</span><br><span class=\"line\">    <span class=\"number\">11</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">4</span> OBJECT  <span class=\"meta\">GLOBAL</span> DEFAULT    <span class=\"number\">3</span> g_static_data</span><br><span class=\"line\">    <span class=\"number\">12</span>: <span class=\"number\">0000000000000000</span>    <span class=\"number\">25</span> FUNC    <span class=\"meta\">GLOBAL</span> DEFAULT    <span class=\"number\">1</span> _Z9main_funcii</span><br><span class=\"line\">    <span class=\"number\">13</span>: <span class=\"number\">0000000000000019</span>    <span class=\"number\">69</span> FUNC    <span class=\"meta\">GLOBAL</span> DEFAULT    <span class=\"number\">1</span> main</span><br><span class=\"line\">    <span class=\"number\">14</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">0</span> NOTYPE  <span class=\"meta\">GLOBAL</span> DEFAULT  UND _GLOBAL_OFFSET_TABLE_</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"symbol\">.text</span></span><br><span class=\"line\"><span class=\"number\">0000000000000000</span> &lt;_Z9main_funcii&gt;:</span><br><span class=\"line\">   <span class=\"number\">0</span>:   <span class=\"number\">55</span>                      <span class=\"keyword\">push </span>  %rbp</span><br><span class=\"line\">   <span class=\"number\">1</span>:   <span class=\"number\">48</span> <span class=\"number\">89</span> e5                <span class=\"keyword\">mov </span>   %rsp,%rbp</span><br><span class=\"line\">   <span class=\"number\">4</span>:   <span class=\"number\">89</span> <span class=\"number\">7</span>d fc                <span class=\"keyword\">mov </span>   %edi,-<span class=\"number\">0x4</span>(%rbp)</span><br><span class=\"line\">   <span class=\"number\">7</span>:   <span class=\"number\">89</span> <span class=\"number\">75</span> f8                <span class=\"keyword\">mov </span>   %esi,-<span class=\"number\">0x8</span>(%rbp)</span><br><span class=\"line\">   a:   <span class=\"number\">8</span>b <span class=\"number\">55</span> fc                <span class=\"keyword\">mov </span>   -<span class=\"number\">0x4</span>(%rbp),%edx</span><br><span class=\"line\">   d:   <span class=\"number\">8</span>b <span class=\"number\">45</span> f8                <span class=\"keyword\">mov </span>   -<span class=\"number\">0x8</span>(%rbp),%eax</span><br><span class=\"line\">  <span class=\"number\">10</span>:   <span class=\"number\">01</span> <span class=\"built_in\">d0</span>                   <span class=\"keyword\">add </span>   %edx,%eax</span><br><span class=\"line\">  <span class=\"number\">12</span>:   <span class=\"number\">05</span> <span class=\"built_in\">c3</span> <span class=\"number\">07</span> <span class=\"number\">00</span> <span class=\"number\">00</span>          <span class=\"keyword\">add </span>   <span class=\"number\">$0x7c3</span>,%eax</span><br><span class=\"line\">  <span class=\"number\">17</span>:   <span class=\"number\">5</span>d                      <span class=\"keyword\">pop </span>   %rbp</span><br><span class=\"line\">  <span class=\"number\">18</span>:   <span class=\"built_in\">c3</span>                      retq   </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">0000000000000019</span> &lt;main&gt;:</span><br><span class=\"line\">  <span class=\"number\">19</span>:   <span class=\"number\">55</span>                      <span class=\"keyword\">push </span>  %rbp</span><br><span class=\"line\">  <span class=\"number\">1</span>a:   <span class=\"number\">48</span> <span class=\"number\">89</span> e5                <span class=\"keyword\">mov </span>   %rsp,%rbp</span><br><span class=\"line\">  <span class=\"number\">1</span>d:   <span class=\"number\">48</span> <span class=\"number\">83</span> ec <span class=\"number\">20</span>             <span class=\"keyword\">sub </span>   <span class=\"number\">$0x20</span>,%rsp</span><br><span class=\"line\">  <span class=\"number\">21</span>:   <span class=\"number\">89</span> <span class=\"number\">7</span>d ec                <span class=\"keyword\">mov </span>   %edi,-<span class=\"number\">0x14</span>(%rbp)</span><br><span class=\"line\">  <span class=\"number\">24</span>:   <span class=\"number\">48</span> <span class=\"number\">89</span> <span class=\"number\">75</span> e0             <span class=\"keyword\">mov </span>   %rsi,-<span class=\"number\">0x20</span>(%rbp)</span><br><span class=\"line\">  <span class=\"number\">28</span>:   <span class=\"built_in\">c7</span> <span class=\"number\">45</span> fc <span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">00</span>    <span class=\"keyword\">movl </span>  <span class=\"number\">$0x0</span>,-<span class=\"number\">0x4</span>(%rbp)</span><br><span class=\"line\">  <span class=\"number\">2</span>f:   <span class=\"number\">48</span> <span class=\"number\">8</span>b <span class=\"number\">05</span> <span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">00</span>    <span class=\"keyword\">mov </span>   <span class=\"number\">0x0</span>(%rip),%rax        # <span class=\"number\">36</span> &lt;main+<span class=\"number\">0x1d</span>&gt;</span><br><span class=\"line\">  <span class=\"number\">36</span>:   <span class=\"number\">8</span>b <span class=\"number\">55</span> ec                <span class=\"keyword\">mov </span>   -<span class=\"number\">0x14</span>(%rbp),%edx</span><br><span class=\"line\">  <span class=\"number\">39</span>:   <span class=\"number\">89</span> <span class=\"number\">10</span>                   <span class=\"keyword\">mov </span>   %edx,(%rax)</span><br><span class=\"line\">  <span class=\"number\">3</span>b:   <span class=\"number\">48</span> <span class=\"number\">8</span>b <span class=\"number\">05</span> <span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">00</span>    <span class=\"keyword\">mov </span>   <span class=\"number\">0x0</span>(%rip),%rax        # <span class=\"number\">42</span> &lt;main+<span class=\"number\">0x29</span>&gt;</span><br><span class=\"line\">  <span class=\"number\">42</span>:   <span class=\"number\">8</span>b <span class=\"number\">10</span>                   <span class=\"keyword\">mov </span>   (%rax),%edx</span><br><span class=\"line\">  <span class=\"number\">44</span>:   <span class=\"number\">48</span> <span class=\"number\">8</span>b <span class=\"number\">05</span> <span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">00</span>    <span class=\"keyword\">mov </span>   <span class=\"number\">0x0</span>(%rip),%rax        # <span class=\"number\">4</span>b &lt;main+<span class=\"number\">0x32</span>&gt;</span><br><span class=\"line\">  <span class=\"number\">4</span>b:   <span class=\"number\">8</span>b <span class=\"number\">00</span>                   <span class=\"keyword\">mov </span>   (%rax),%eax</span><br><span class=\"line\">  <span class=\"number\">4</span>d:   <span class=\"number\">89</span> <span class=\"built_in\">d6</span>                   <span class=\"keyword\">mov </span>   %edx,%esi</span><br><span class=\"line\">  <span class=\"number\">4</span>f:   <span class=\"number\">89</span> <span class=\"built_in\">c7</span>                   <span class=\"keyword\">mov </span>   %eax,%edi</span><br><span class=\"line\">  <span class=\"number\">51</span>:   e8 <span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">00</span>          callq  <span class=\"number\">56</span> &lt;main+<span class=\"number\">0x3d</span>&gt;</span><br><span class=\"line\">  <span class=\"number\">56</span>:   <span class=\"number\">01</span> <span class=\"number\">45</span> fc                <span class=\"keyword\">add </span>   %eax,-<span class=\"number\">0x4</span>(%rbp)</span><br><span class=\"line\">  <span class=\"number\">59</span>:   <span class=\"number\">8</span>b <span class=\"number\">45</span> fc                <span class=\"keyword\">mov </span>   -<span class=\"number\">0x4</span>(%rbp),%eax</span><br><span class=\"line\">  <span class=\"number\">5</span>c:   <span class=\"built_in\">c9</span>                      leaveq </span><br><span class=\"line\">  <span class=\"number\">5</span>d:   <span class=\"built_in\">c3</span>                      retq</span><br></pre></td></tr></table></figure>\n\n<h4><span id=\"链接为可执行文件或者共享库\">链接为可执行文件(或者共享库)</span></h4><p>在链接为目标文件时, 会合并处理每个目标文件, 生成plt代码 确定GOT(PGOT)的相对位置等  </p>\n<p>在相对位置的两个版本中均可以看到对全局符号的访问均正确填充了相对位移  </p>\n<p>PIE版本的区别主要是PIE使用了相对位置 连ELF类型都变成了DYN<br>非PIE版本则使用了绝对位置<br>测试代码没有调用外部函数符号 所以在PIC版本的汇编指令中并没有看到PLT指令</p>\n<h5><span id=\"可执行文件-相对位置的非pieexec版本\">可执行文件 (相对位置的非PIE(EXEC)版本)</span></h5><figure class=\"highlight armasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">重定位节 <span class=\"string\">'.rela.dyn'</span> 位于偏移量 <span class=\"number\">0x388</span> 含有 <span class=\"number\">2</span> 个条目：</span><br><span class=\"line\">  偏移量          信息           类型           符号值        符号名称 + 加数</span><br><span class=\"line\"><span class=\"number\">000000600</span>ff0  <span class=\"number\">000100000006</span> R_X86_64_GLOB_DAT <span class=\"number\">0000000000000000</span> __libc_start_main<span class=\"comment\">@GLIBC_2.2.5 + 0</span></span><br><span class=\"line\"><span class=\"number\">000000600</span>ff8  <span class=\"number\">000200000006</span> R_X86_64_GLOB_DAT <span class=\"number\">0000000000000000</span> __gmon_start__ + <span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"symbol\">The</span> decoding of unwind sections for machine type Advanced Micro Devices X86-<span class=\"number\">64</span> is not currently supported.</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"symbol\">Symbol</span> table <span class=\"string\">'.dynsym'</span> contains <span class=\"number\">3</span> entries:</span><br><span class=\"line\"><span class=\"symbol\">   Num:</span>    Value          Size Type    <span class=\"keyword\">Bind </span>  Vis      Ndx Name</span><br><span class=\"line\">     <span class=\"number\">0</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">0</span> NOTYPE  LOCAL  DEFAULT  UND </span><br><span class=\"line\">     <span class=\"number\">1</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">0</span> FUNC    <span class=\"meta\">GLOBAL</span> DEFAULT  UND __libc_start_main<span class=\"comment\">@GLIBC_2.2.5 (2)</span></span><br><span class=\"line\">     <span class=\"number\">2</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">0</span> NOTYPE  WEAK   DEFAULT  UND __gmon_start__</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"symbol\">Symbol</span> table <span class=\"string\">'.symtab'</span> contains <span class=\"number\">65</span> entries:</span><br><span class=\"line\"><span class=\"symbol\">   Num:</span>    Value          Size Type    <span class=\"keyword\">Bind </span>  Vis      Ndx Name</span><br><span class=\"line\">     <span class=\"number\">0</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">0</span> NOTYPE  LOCAL  DEFAULT  UND </span><br><span class=\"line\">     <span class=\"number\">1</span>: <span class=\"number\">0000000000400238</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT    <span class=\"number\">1</span> </span><br><span class=\"line\">     <span class=\"number\">2</span>: <span class=\"number\">0000000000400254</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT    <span class=\"number\">2</span> </span><br><span class=\"line\">     <span class=\"number\">3</span>: <span class=\"number\">0000000000400274</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT    <span class=\"number\">3</span> </span><br><span class=\"line\">     <span class=\"number\">4</span>: <span class=\"number\">0000000000400298</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT    <span class=\"number\">4</span> </span><br><span class=\"line\">     <span class=\"number\">5</span>: <span class=\"number\">00000000004002</span>b8     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT    <span class=\"number\">5</span> </span><br><span class=\"line\">     <span class=\"number\">6</span>: <span class=\"number\">0000000000400300</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT    <span class=\"number\">6</span> </span><br><span class=\"line\">     <span class=\"number\">7</span>: <span class=\"number\">0000000000400360</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT    <span class=\"number\">7</span> </span><br><span class=\"line\">     <span class=\"number\">8</span>: <span class=\"number\">0000000000400368</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT    <span class=\"number\">8</span> </span><br><span class=\"line\">     <span class=\"number\">9</span>: <span class=\"number\">0000000000400388</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT    <span class=\"number\">9</span> </span><br><span class=\"line\">    <span class=\"number\">10</span>: <span class=\"number\">00000000004003</span>b8     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT   <span class=\"number\">10</span> </span><br><span class=\"line\">    <span class=\"number\">11</span>: <span class=\"number\">00000000004003</span><span class=\"built_in\">d0</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT   <span class=\"number\">11</span> </span><br><span class=\"line\">    <span class=\"number\">12</span>: <span class=\"number\">00000000004005</span><span class=\"built_in\">a4</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT   <span class=\"number\">12</span> </span><br><span class=\"line\">    <span class=\"number\">13</span>: <span class=\"number\">00000000004005</span>b0     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT   <span class=\"number\">13</span> </span><br><span class=\"line\">    <span class=\"number\">14</span>: <span class=\"number\">00000000004005</span>b8     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT   <span class=\"number\">14</span> </span><br><span class=\"line\">    <span class=\"number\">15</span>: <span class=\"number\">00000000004005</span>f8     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT   <span class=\"number\">15</span> </span><br><span class=\"line\">    <span class=\"number\">16</span>: <span class=\"number\">0000000000600</span>e18     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT   <span class=\"number\">16</span> </span><br><span class=\"line\">    <span class=\"number\">17</span>: <span class=\"number\">0000000000600</span>e20     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT   <span class=\"number\">17</span> </span><br><span class=\"line\">    <span class=\"number\">18</span>: <span class=\"number\">0000000000600</span>e28     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT   <span class=\"number\">18</span> </span><br><span class=\"line\">    <span class=\"number\">19</span>: <span class=\"number\">0000000000600</span>e30     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT   <span class=\"number\">19</span> </span><br><span class=\"line\">    <span class=\"number\">20</span>: <span class=\"number\">0000000000600</span>ff0     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT   <span class=\"number\">20</span> </span><br><span class=\"line\">    <span class=\"number\">21</span>: <span class=\"number\">0000000000601000</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT   <span class=\"number\">21</span> </span><br><span class=\"line\">    <span class=\"number\">22</span>: <span class=\"number\">0000000000601018</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT   <span class=\"number\">22</span> </span><br><span class=\"line\">    <span class=\"number\">23</span>: <span class=\"number\">000000000060102</span>c     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT   <span class=\"number\">23</span> </span><br><span class=\"line\">    <span class=\"number\">24</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT   <span class=\"number\">24</span> </span><br><span class=\"line\">    <span class=\"number\">25</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">0</span> FILE    LOCAL  DEFAULT  ABS crtstuff.c</span><br><span class=\"line\">    <span class=\"number\">26</span>: <span class=\"number\">0000000000600</span>e28     <span class=\"number\">0</span> OBJECT  LOCAL  DEFAULT   <span class=\"number\">18</span> __JCR_LIST__</span><br><span class=\"line\">    <span class=\"number\">27</span>: <span class=\"number\">0000000000400410</span>     <span class=\"number\">0</span> FUNC    LOCAL  DEFAULT   <span class=\"number\">11</span> deregister_tm_clones</span><br><span class=\"line\">    <span class=\"number\">28</span>: <span class=\"number\">0000000000400450</span>     <span class=\"number\">0</span> FUNC    LOCAL  DEFAULT   <span class=\"number\">11</span> register_tm_clones</span><br><span class=\"line\">    <span class=\"number\">29</span>: <span class=\"number\">0000000000400490</span>     <span class=\"number\">0</span> FUNC    LOCAL  DEFAULT   <span class=\"number\">11</span> __do_global_dtors_aux</span><br><span class=\"line\">    <span class=\"number\">30</span>: <span class=\"number\">000000000060102</span>c     <span class=\"number\">1</span> OBJECT  LOCAL  DEFAULT   <span class=\"number\">23</span> completed.<span class=\"number\">6972</span></span><br><span class=\"line\">    <span class=\"number\">31</span>: <span class=\"number\">0000000000600</span>e20     <span class=\"number\">0</span> OBJECT  LOCAL  DEFAULT   <span class=\"number\">17</span> __do_global_dtors_aux_fin</span><br><span class=\"line\">    <span class=\"number\">32</span>: <span class=\"number\">00000000004004</span>b0     <span class=\"number\">0</span> FUNC    LOCAL  DEFAULT   <span class=\"number\">11</span> frame_dummy</span><br><span class=\"line\">    <span class=\"number\">33</span>: <span class=\"number\">0000000000600</span>e18     <span class=\"number\">0</span> OBJECT  LOCAL  DEFAULT   <span class=\"number\">16</span> __frame_dummy_init_array_</span><br><span class=\"line\">    <span class=\"number\">34</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">0</span> FILE    LOCAL  DEFAULT  ABS test.cpp</span><br><span class=\"line\">    <span class=\"number\">35</span>: <span class=\"number\">00000000004005</span>b4     <span class=\"number\">4</span> OBJECT  LOCAL  DEFAULT   <span class=\"number\">13</span> _ZL13g_static_text</span><br><span class=\"line\">    <span class=\"number\">36</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">0</span> FILE    LOCAL  DEFAULT  ABS crtstuff.c</span><br><span class=\"line\">    <span class=\"number\">37</span>: <span class=\"number\">00000000004006</span>f8     <span class=\"number\">0</span> OBJECT  LOCAL  DEFAULT   <span class=\"number\">15</span> __FRAME_END__</span><br><span class=\"line\">    <span class=\"number\">38</span>: <span class=\"number\">0000000000600</span>e28     <span class=\"number\">0</span> OBJECT  LOCAL  DEFAULT   <span class=\"number\">18</span> __JCR_END__</span><br><span class=\"line\">    <span class=\"number\">39</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">0</span> FILE    LOCAL  DEFAULT  ABS </span><br><span class=\"line\">    <span class=\"number\">40</span>: <span class=\"number\">00000000004005</span>b8     <span class=\"number\">0</span> NOTYPE  LOCAL  DEFAULT   <span class=\"number\">14</span> __GNU_EH_FRAME_HDR</span><br><span class=\"line\">    <span class=\"number\">41</span>: <span class=\"number\">0000000000600</span>e30     <span class=\"number\">0</span> OBJECT  LOCAL  DEFAULT   <span class=\"number\">19</span> _DYNAMIC</span><br><span class=\"line\">    <span class=\"number\">42</span>: <span class=\"number\">0000000000600</span>e20     <span class=\"number\">0</span> NOTYPE  LOCAL  DEFAULT   <span class=\"number\">16</span> __init_array_end</span><br><span class=\"line\">    <span class=\"number\">43</span>: <span class=\"number\">0000000000600</span>e18     <span class=\"number\">0</span> NOTYPE  LOCAL  DEFAULT   <span class=\"number\">16</span> __init_array_start</span><br><span class=\"line\">    <span class=\"number\">44</span>: <span class=\"number\">0000000000601000</span>     <span class=\"number\">0</span> OBJECT  LOCAL  DEFAULT   <span class=\"number\">21</span> _GLOBAL_OFFSET_TABLE_</span><br><span class=\"line\">    <span class=\"number\">45</span>: <span class=\"number\">0000000000601028</span>     <span class=\"number\">4</span> OBJECT  <span class=\"meta\">GLOBAL</span> DEFAULT   <span class=\"number\">22</span> g_static_data</span><br><span class=\"line\">    <span class=\"number\">46</span>: <span class=\"number\">000000000060102</span>c     <span class=\"number\">0</span> NOTYPE  <span class=\"meta\">GLOBAL</span> DEFAULT   <span class=\"number\">22</span> _edata</span><br><span class=\"line\">    <span class=\"number\">47</span>: <span class=\"number\">0000000000601018</span>     <span class=\"number\">0</span> NOTYPE  WEAK   DEFAULT   <span class=\"number\">22</span> data_start</span><br><span class=\"line\">    <span class=\"number\">48</span>: <span class=\"number\">00000000004005</span>b0     <span class=\"number\">4</span> OBJECT  <span class=\"meta\">GLOBAL</span> DEFAULT   <span class=\"number\">13</span> _IO_stdin_used</span><br><span class=\"line\">    <span class=\"number\">49</span>: <span class=\"number\">00000000004004</span><span class=\"built_in\">d6</span>    <span class=\"number\">25</span> FUNC    <span class=\"meta\">GLOBAL</span> DEFAULT   <span class=\"number\">11</span> _Z9main_funcii</span><br><span class=\"line\">    <span class=\"number\">50</span>: <span class=\"number\">00000000004004</span>ef    <span class=\"number\">60</span> FUNC    <span class=\"meta\">GLOBAL</span> DEFAULT   <span class=\"number\">11</span> main</span><br><span class=\"line\">    <span class=\"number\">51</span>: <span class=\"number\">0000000000601020</span>     <span class=\"number\">0</span> OBJECT  <span class=\"meta\">GLOBAL</span> HIDDEN    <span class=\"number\">22</span> __dso_handle</span><br><span class=\"line\">    <span class=\"number\">52</span>: <span class=\"number\">00000000004005</span><span class=\"built_in\">a4</span>     <span class=\"number\">0</span> FUNC    <span class=\"meta\">GLOBAL</span> DEFAULT   <span class=\"number\">12</span> _fini</span><br><span class=\"line\">    <span class=\"number\">53</span>: <span class=\"number\">0000000000400400</span>     <span class=\"number\">2</span> FUNC    <span class=\"meta\">GLOBAL</span> HIDDEN    <span class=\"number\">11</span> _dl_relocate_static_pie</span><br><span class=\"line\">    <span class=\"number\">54</span>: <span class=\"number\">00000000004003</span><span class=\"built_in\">d0</span>    <span class=\"number\">43</span> FUNC    <span class=\"meta\">GLOBAL</span> DEFAULT   <span class=\"number\">11</span> _start</span><br><span class=\"line\">    <span class=\"number\">55</span>: <span class=\"number\">00000000004003</span>b8     <span class=\"number\">0</span> FUNC    <span class=\"meta\">GLOBAL</span> DEFAULT   <span class=\"number\">10</span> _init</span><br><span class=\"line\">    <span class=\"number\">56</span>: <span class=\"number\">0000000000601030</span>     <span class=\"number\">0</span> OBJECT  <span class=\"meta\">GLOBAL</span> HIDDEN    <span class=\"number\">22</span> __TMC_END__</span><br><span class=\"line\">    <span class=\"number\">57</span>: <span class=\"number\">0000000000601018</span>     <span class=\"number\">0</span> NOTYPE  <span class=\"meta\">GLOBAL</span> DEFAULT   <span class=\"number\">22</span> __data_start</span><br><span class=\"line\">    <span class=\"number\">58</span>: <span class=\"number\">0000000000601038</span>     <span class=\"number\">0</span> NOTYPE  <span class=\"meta\">GLOBAL</span> DEFAULT   <span class=\"number\">23</span> _<span class=\"meta\">end</span></span><br><span class=\"line\">    <span class=\"number\">59</span>: <span class=\"number\">000000000060102</span>c     <span class=\"number\">0</span> NOTYPE  <span class=\"meta\">GLOBAL</span> DEFAULT   <span class=\"number\">23</span> __bss_start</span><br><span class=\"line\">    <span class=\"number\">60</span>: <span class=\"number\">0000000000400530</span>   <span class=\"number\">101</span> FUNC    <span class=\"meta\">GLOBAL</span> DEFAULT   <span class=\"number\">11</span> __libc_csu_init</span><br><span class=\"line\">    <span class=\"number\">61</span>: <span class=\"number\">0000000000601030</span>     <span class=\"number\">4</span> OBJECT  <span class=\"meta\">GLOBAL</span> DEFAULT   <span class=\"number\">23</span> g_static_bss</span><br><span class=\"line\">    <span class=\"number\">62</span>: <span class=\"number\">00000000004005</span>a0     <span class=\"number\">2</span> FUNC    <span class=\"meta\">GLOBAL</span> DEFAULT   <span class=\"number\">11</span> __libc_csu_fini</span><br><span class=\"line\">    <span class=\"number\">63</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">0</span> FUNC    <span class=\"meta\">GLOBAL</span> DEFAULT  UND __libc_start_main<span class=\"comment\">@@GLIBC_</span></span><br><span class=\"line\">    <span class=\"number\">64</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">0</span> NOTYPE  WEAK   DEFAULT  UND __gmon_start__</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"symbol\">.text</span></span><br><span class=\"line\"><span class=\"number\">00000000004003</span>b8 &lt;_init&gt;:</span><br><span class=\"line\">  <span class=\"number\">4003</span>b8:       <span class=\"number\">48</span> <span class=\"number\">83</span> ec <span class=\"number\">08</span>             <span class=\"keyword\">sub </span>   <span class=\"number\">$0x8</span>,%rsp</span><br><span class=\"line\">  <span class=\"number\">4003</span>bc:       <span class=\"number\">48</span> <span class=\"number\">8</span>b <span class=\"number\">05</span> <span class=\"number\">35</span> <span class=\"number\">0</span>c <span class=\"number\">20</span> <span class=\"number\">00</span>    <span class=\"keyword\">mov </span>   <span class=\"number\">0x200c35</span>(%rip),%rax        # <span class=\"number\">600</span>ff8 &lt;__gmon_start__&gt;</span><br><span class=\"line\">  <span class=\"number\">4003</span><span class=\"built_in\">c3</span>:       <span class=\"number\">48</span> <span class=\"number\">85</span> <span class=\"built_in\">c0</span>                test   %rax,%rax</span><br><span class=\"line\">  <span class=\"number\">4003</span><span class=\"built_in\">c6</span>:       <span class=\"number\">74</span> <span class=\"number\">02</span>                   je     <span class=\"number\">4003</span>ca &lt;_init+<span class=\"number\">0x12</span>&gt;</span><br><span class=\"line\">  <span class=\"number\">4003</span><span class=\"built_in\">c8</span>:       ff <span class=\"built_in\">d0</span>                   callq  *%rax</span><br><span class=\"line\">  <span class=\"number\">4003</span>ca:       <span class=\"number\">48</span> <span class=\"number\">83</span> <span class=\"built_in\">c4</span> <span class=\"number\">08</span>             <span class=\"keyword\">add </span>   <span class=\"number\">$0x8</span>,%rsp</span><br><span class=\"line\">  <span class=\"number\">4003</span>ce:       <span class=\"built_in\">c3</span>                      retq   </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"symbol\">Disassembly</span> of section <span class=\"meta\">.text</span>:</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">00000000004003</span><span class=\"built_in\">d0</span> &lt;_start&gt;:</span><br><span class=\"line\">  <span class=\"number\">4003</span><span class=\"built_in\">d0</span>:       <span class=\"number\">31</span> ed                   xor    %ebp,%ebp</span><br><span class=\"line\">  <span class=\"number\">4003</span><span class=\"built_in\">d2</span>:       <span class=\"number\">49</span> <span class=\"number\">89</span> <span class=\"built_in\">d1</span>                <span class=\"keyword\">mov </span>   %rdx,%<span class=\"built_in\">r9</span></span><br><span class=\"line\">  <span class=\"number\">4003</span><span class=\"built_in\">d5</span>:       <span class=\"number\">5</span>e                      <span class=\"keyword\">pop </span>   %rsi</span><br><span class=\"line\">  <span class=\"number\">4003</span><span class=\"built_in\">d6</span>:       <span class=\"number\">48</span> <span class=\"number\">89</span> e2                <span class=\"keyword\">mov </span>   %rsp,%rdx</span><br><span class=\"line\">  <span class=\"number\">4003</span><span class=\"built_in\">d9</span>:       <span class=\"number\">48</span> <span class=\"number\">83</span> e4 <span class=\"built_in\">f0</span>             <span class=\"keyword\">and </span>   <span class=\"number\">$0xfffffffffffffff0</span>,%rsp</span><br><span class=\"line\">  <span class=\"number\">4003</span>dd:       <span class=\"number\">50</span>                      <span class=\"keyword\">push </span>  %rax</span><br><span class=\"line\">  <span class=\"number\">4003</span>de:       <span class=\"number\">54</span>                      <span class=\"keyword\">push </span>  %rsp</span><br><span class=\"line\">  <span class=\"number\">4003</span>df:       <span class=\"number\">49</span> <span class=\"built_in\">c7</span> <span class=\"built_in\">c0</span> a0 <span class=\"number\">05</span> <span class=\"number\">40</span> <span class=\"number\">00</span>    <span class=\"keyword\">mov </span>   <span class=\"number\">$0x4005a0</span>,%<span class=\"built_in\">r8</span></span><br><span class=\"line\">  <span class=\"number\">4003</span>e6:       <span class=\"number\">48</span> <span class=\"built_in\">c7</span> <span class=\"built_in\">c1</span> <span class=\"number\">30</span> <span class=\"number\">05</span> <span class=\"number\">40</span> <span class=\"number\">00</span>    <span class=\"keyword\">mov </span>   <span class=\"number\">$0x400530</span>,%rcx</span><br><span class=\"line\">  <span class=\"number\">4003</span>ed:       <span class=\"number\">48</span> <span class=\"built_in\">c7</span> <span class=\"built_in\">c7</span> ef <span class=\"number\">04</span> <span class=\"number\">40</span> <span class=\"number\">00</span>    <span class=\"keyword\">mov </span>   <span class=\"number\">$0x4004ef</span>,%rdi</span><br><span class=\"line\">  <span class=\"number\">4003</span><span class=\"built_in\">f4</span>:       ff <span class=\"number\">15</span> <span class=\"built_in\">f6</span> <span class=\"number\">0</span>b <span class=\"number\">20</span> <span class=\"number\">00</span>       callq  *<span class=\"number\">0x200bf6</span>(%rip)        # <span class=\"number\">600</span>ff0 &lt;__libc_start_main<span class=\"comment\">@GLIBC_2.2.5&gt;</span></span><br><span class=\"line\">  <span class=\"number\">4003</span>fa:       <span class=\"built_in\">f4</span>                      hlt    </span><br><span class=\"line\">  <span class=\"number\">4003</span>fb:       <span class=\"number\">0</span>f <span class=\"number\">1</span>f <span class=\"number\">44</span> <span class=\"number\">00</span> <span class=\"number\">00</span>          <span class=\"keyword\">nopl </span>  <span class=\"number\">0x0</span>(%rax,%rax,<span class=\"number\">1</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">0000000000400400</span> &lt;_dl_relocate_static_pie&gt;:</span><br><span class=\"line\">  <span class=\"number\">400400</span>:       <span class=\"built_in\">f3</span> <span class=\"built_in\">c3</span>                   repz retq </span><br><span class=\"line\">  <span class=\"number\">400402</span>:       <span class=\"number\">66</span> <span class=\"number\">2</span>e <span class=\"number\">0</span>f <span class=\"number\">1</span>f <span class=\"number\">84</span> <span class=\"number\">00</span> <span class=\"number\">00</span>    <span class=\"keyword\">nopw </span>  %cs:<span class=\"number\">0x0</span>(%rax,%rax,<span class=\"number\">1</span>)</span><br><span class=\"line\">  <span class=\"number\">400409</span>:       <span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">00</span> </span><br><span class=\"line\">  <span class=\"number\">40040</span>c:       <span class=\"number\">0</span>f <span class=\"number\">1</span>f <span class=\"number\">40</span> <span class=\"number\">00</span>             <span class=\"keyword\">nopl </span>  <span class=\"number\">0x0</span>(%rax)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">0000000000400410</span> &lt;deregister_tm_clones&gt;:</span><br><span class=\"line\">  <span class=\"number\">400410</span>:       <span class=\"keyword\">b8 </span><span class=\"number\">37</span> <span class=\"number\">10</span> <span class=\"number\">60</span> <span class=\"number\">00</span>          <span class=\"keyword\">mov </span>   <span class=\"number\">$0x601037</span>,%eax</span><br><span class=\"line\">  <span class=\"number\">400415</span>:       <span class=\"number\">55</span>                      <span class=\"keyword\">push </span>  %rbp</span><br><span class=\"line\">  <span class=\"number\">400416</span>:       <span class=\"number\">48</span> <span class=\"number\">2</span>d <span class=\"number\">30</span> <span class=\"number\">10</span> <span class=\"number\">60</span> <span class=\"number\">00</span>       <span class=\"keyword\">sub </span>   <span class=\"number\">$0x601030</span>,%rax</span><br><span class=\"line\">  <span class=\"number\">40041</span>c:       <span class=\"number\">48</span> <span class=\"number\">83</span> f8 <span class=\"number\">0</span>e             <span class=\"keyword\">cmp </span>   <span class=\"number\">$0xe</span>,%rax</span><br><span class=\"line\">  <span class=\"number\">400420</span>:       <span class=\"number\">48</span> <span class=\"number\">89</span> e5                <span class=\"keyword\">mov </span>   %rsp,%rbp</span><br><span class=\"line\">  <span class=\"number\">400423</span>:       <span class=\"number\">76</span> <span class=\"number\">1</span>b                   jbe    <span class=\"number\">400440</span> &lt;deregister_tm_clones+<span class=\"number\">0x30</span>&gt;</span><br><span class=\"line\">  <span class=\"number\">400425</span>:       <span class=\"keyword\">b8 </span><span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">00</span>          <span class=\"keyword\">mov </span>   <span class=\"number\">$0x0</span>,%eax</span><br><span class=\"line\">  <span class=\"number\">40042</span>a:       <span class=\"number\">48</span> <span class=\"number\">85</span> <span class=\"built_in\">c0</span>                test   %rax,%rax</span><br><span class=\"line\">  <span class=\"number\">40042</span>d:       <span class=\"number\">74</span> <span class=\"number\">11</span>                   je     <span class=\"number\">400440</span> &lt;deregister_tm_clones+<span class=\"number\">0x30</span>&gt;</span><br><span class=\"line\">  <span class=\"number\">40042</span>f:       <span class=\"number\">5</span>d                      <span class=\"keyword\">pop </span>   %rbp</span><br><span class=\"line\">  <span class=\"number\">400430</span>:       <span class=\"keyword\">bf </span><span class=\"number\">30</span> <span class=\"number\">10</span> <span class=\"number\">60</span> <span class=\"number\">00</span>          <span class=\"keyword\">mov </span>   <span class=\"number\">$0x601030</span>,%edi</span><br><span class=\"line\">  <span class=\"number\">400435</span>:       ff e0                   jmpq   *%rax</span><br><span class=\"line\">  <span class=\"number\">400437</span>:       <span class=\"number\">66</span> <span class=\"number\">0</span>f <span class=\"number\">1</span>f <span class=\"number\">84</span> <span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">00</span>    <span class=\"keyword\">nopw </span>  <span class=\"number\">0x0</span>(%rax,%rax,<span class=\"number\">1</span>)</span><br><span class=\"line\">  <span class=\"number\">40043</span>e:       <span class=\"number\">00</span> <span class=\"number\">00</span> </span><br><span class=\"line\">  <span class=\"number\">400440</span>:       <span class=\"number\">5</span>d                      <span class=\"keyword\">pop </span>   %rbp</span><br><span class=\"line\">  <span class=\"number\">400441</span>:       <span class=\"built_in\">c3</span>                      retq   </span><br><span class=\"line\">  <span class=\"number\">400442</span>:       <span class=\"number\">0</span>f <span class=\"number\">1</span>f <span class=\"number\">40</span> <span class=\"number\">00</span>             <span class=\"keyword\">nopl </span>  <span class=\"number\">0x0</span>(%rax)</span><br><span class=\"line\">  <span class=\"number\">400446</span>:       <span class=\"number\">66</span> <span class=\"number\">2</span>e <span class=\"number\">0</span>f <span class=\"number\">1</span>f <span class=\"number\">84</span> <span class=\"number\">00</span> <span class=\"number\">00</span>    <span class=\"keyword\">nopw </span>  %cs:<span class=\"number\">0x0</span>(%rax,%rax,<span class=\"number\">1</span>)</span><br><span class=\"line\">  <span class=\"number\">40044</span>d:       <span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">00</span> </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">0000000000400450</span> &lt;register_tm_clones&gt;:</span><br><span class=\"line\">  <span class=\"number\">400450</span>:       <span class=\"keyword\">be </span><span class=\"number\">30</span> <span class=\"number\">10</span> <span class=\"number\">60</span> <span class=\"number\">00</span>          <span class=\"keyword\">mov </span>   <span class=\"number\">$0x601030</span>,%esi</span><br><span class=\"line\">  <span class=\"number\">400455</span>:       <span class=\"number\">55</span>                      <span class=\"keyword\">push </span>  %rbp</span><br><span class=\"line\">  <span class=\"number\">400456</span>:       <span class=\"number\">48</span> <span class=\"number\">81</span> ee <span class=\"number\">30</span> <span class=\"number\">10</span> <span class=\"number\">60</span> <span class=\"number\">00</span>    <span class=\"keyword\">sub </span>   <span class=\"number\">$0x601030</span>,%rsi</span><br><span class=\"line\">  <span class=\"number\">40045</span>d:       <span class=\"number\">48</span> <span class=\"built_in\">c1</span> fe <span class=\"number\">03</span>             sar    <span class=\"number\">$0x3</span>,%rsi</span><br><span class=\"line\">  <span class=\"number\">400461</span>:       <span class=\"number\">48</span> <span class=\"number\">89</span> e5                <span class=\"keyword\">mov </span>   %rsp,%rbp</span><br><span class=\"line\">  <span class=\"number\">400464</span>:       <span class=\"number\">48</span> <span class=\"number\">89</span> <span class=\"built_in\">f0</span>                <span class=\"keyword\">mov </span>   %rsi,%rax</span><br><span class=\"line\">  <span class=\"number\">400467</span>:       <span class=\"number\">48</span> <span class=\"built_in\">c1</span> e8 <span class=\"number\">3</span>f             shr    <span class=\"number\">$0x3f</span>,%rax</span><br><span class=\"line\">  <span class=\"number\">40046</span>b:       <span class=\"number\">48</span> <span class=\"number\">01</span> <span class=\"built_in\">c6</span>                <span class=\"keyword\">add </span>   %rax,%rsi</span><br><span class=\"line\">  <span class=\"number\">40046</span>e:       <span class=\"number\">48</span> <span class=\"built_in\">d1</span> fe                sar    %rsi</span><br><span class=\"line\">  <span class=\"number\">400471</span>:       <span class=\"number\">74</span> <span class=\"number\">15</span>                   je     <span class=\"number\">400488</span> &lt;register_tm_clones+<span class=\"number\">0x38</span>&gt;</span><br><span class=\"line\">  <span class=\"number\">400473</span>:       <span class=\"keyword\">b8 </span><span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">00</span>          <span class=\"keyword\">mov </span>   <span class=\"number\">$0x0</span>,%eax</span><br><span class=\"line\">  <span class=\"number\">400478</span>:       <span class=\"number\">48</span> <span class=\"number\">85</span> <span class=\"built_in\">c0</span>                test   %rax,%rax</span><br><span class=\"line\">  <span class=\"number\">40047</span>b:       <span class=\"number\">74</span> <span class=\"number\">0</span>b                   je     <span class=\"number\">400488</span> &lt;register_tm_clones+<span class=\"number\">0x38</span>&gt;</span><br><span class=\"line\">  <span class=\"number\">40047</span>d:       <span class=\"number\">5</span>d                      <span class=\"keyword\">pop </span>   %rbp</span><br><span class=\"line\">  <span class=\"number\">40047</span>e:       <span class=\"keyword\">bf </span><span class=\"number\">30</span> <span class=\"number\">10</span> <span class=\"number\">60</span> <span class=\"number\">00</span>          <span class=\"keyword\">mov </span>   <span class=\"number\">$0x601030</span>,%edi</span><br><span class=\"line\">  <span class=\"number\">400483</span>:       ff e0                   jmpq   *%rax</span><br><span class=\"line\">  <span class=\"number\">400485</span>:       <span class=\"number\">0</span>f <span class=\"number\">1</span>f <span class=\"number\">00</span>                <span class=\"keyword\">nopl </span>  (%rax)</span><br><span class=\"line\">  <span class=\"number\">400488</span>:       <span class=\"number\">5</span>d                      <span class=\"keyword\">pop </span>   %rbp</span><br><span class=\"line\">  <span class=\"number\">400489</span>:       <span class=\"built_in\">c3</span>                      retq   </span><br><span class=\"line\">  <span class=\"number\">40048</span>a:       <span class=\"number\">66</span> <span class=\"number\">0</span>f <span class=\"number\">1</span>f <span class=\"number\">44</span> <span class=\"number\">00</span> <span class=\"number\">00</span>       <span class=\"keyword\">nopw </span>  <span class=\"number\">0x0</span>(%rax,%rax,<span class=\"number\">1</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">0000000000400490</span> &lt;__do_global_dtors_aux&gt;:</span><br><span class=\"line\">  <span class=\"number\">400490</span>:       <span class=\"number\">80</span> <span class=\"number\">3</span>d <span class=\"number\">95</span> <span class=\"number\">0</span>b <span class=\"number\">20</span> <span class=\"number\">00</span> <span class=\"number\">00</span>    <span class=\"keyword\">cmpb </span>  <span class=\"number\">$0x0</span>,<span class=\"number\">0x200b95</span>(%rip)        # <span class=\"number\">60102</span>c &lt;_edata&gt;</span><br><span class=\"line\">  <span class=\"number\">400497</span>:       <span class=\"number\">75</span> <span class=\"number\">11</span>                   jne    <span class=\"number\">4004</span>aa &lt;__do_global_dtors_aux+<span class=\"number\">0x1a</span>&gt;</span><br><span class=\"line\">  <span class=\"number\">400499</span>:       <span class=\"number\">55</span>                      <span class=\"keyword\">push </span>  %rbp</span><br><span class=\"line\">  <span class=\"number\">40049</span>a:       <span class=\"number\">48</span> <span class=\"number\">89</span> e5                <span class=\"keyword\">mov </span>   %rsp,%rbp</span><br><span class=\"line\">  <span class=\"number\">40049</span>d:       e8 <span class=\"number\">6</span>e ff ff ff          callq  <span class=\"number\">400410</span> &lt;deregister_tm_clones&gt;</span><br><span class=\"line\">  <span class=\"number\">4004</span><span class=\"built_in\">a2</span>:       <span class=\"number\">5</span>d                      <span class=\"keyword\">pop </span>   %rbp</span><br><span class=\"line\">  <span class=\"number\">4004</span><span class=\"built_in\">a3</span>:       <span class=\"built_in\">c6</span> <span class=\"number\">05</span> <span class=\"number\">82</span> <span class=\"number\">0</span>b <span class=\"number\">20</span> <span class=\"number\">00</span> <span class=\"number\">01</span>    <span class=\"keyword\">movb </span>  <span class=\"number\">$0x1</span>,<span class=\"number\">0x200b82</span>(%rip)        # <span class=\"number\">60102</span>c &lt;_edata&gt;</span><br><span class=\"line\">  <span class=\"number\">4004</span>aa:       <span class=\"built_in\">f3</span> <span class=\"built_in\">c3</span>                   repz retq </span><br><span class=\"line\">  <span class=\"number\">4004</span>ac:       <span class=\"number\">0</span>f <span class=\"number\">1</span>f <span class=\"number\">40</span> <span class=\"number\">00</span>             <span class=\"keyword\">nopl </span>  <span class=\"number\">0x0</span>(%rax)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">00000000004004</span>b0 &lt;frame_dummy&gt;:</span><br><span class=\"line\">  <span class=\"number\">4004</span>b0:       <span class=\"keyword\">bf </span><span class=\"number\">28</span> <span class=\"number\">0</span>e <span class=\"number\">60</span> <span class=\"number\">00</span>          <span class=\"keyword\">mov </span>   <span class=\"number\">$0x600e28</span>,%edi</span><br><span class=\"line\">  <span class=\"number\">4004</span>b5:       <span class=\"number\">48</span> <span class=\"number\">83</span> <span class=\"number\">3</span>f <span class=\"number\">00</span>             <span class=\"keyword\">cmpq </span>  <span class=\"number\">$0x0</span>,(%rdi)</span><br><span class=\"line\">  <span class=\"number\">4004</span>b9:       <span class=\"number\">75</span> <span class=\"number\">05</span>                   jne    <span class=\"number\">4004</span><span class=\"built_in\">c0</span> &lt;frame_dummy+<span class=\"number\">0x10</span>&gt;</span><br><span class=\"line\">  <span class=\"number\">4004</span>bb:       eb <span class=\"number\">93</span>                   jmp    <span class=\"number\">400450</span> &lt;register_tm_clones&gt;</span><br><span class=\"line\">  <span class=\"number\">4004</span>bd:       <span class=\"number\">0</span>f <span class=\"number\">1</span>f <span class=\"number\">00</span>                <span class=\"keyword\">nopl </span>  (%rax)</span><br><span class=\"line\">  <span class=\"number\">4004</span><span class=\"built_in\">c0</span>:       <span class=\"keyword\">b8 </span><span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">00</span>          <span class=\"keyword\">mov </span>   <span class=\"number\">$0x0</span>,%eax</span><br><span class=\"line\">  <span class=\"number\">4004</span><span class=\"built_in\">c5</span>:       <span class=\"number\">48</span> <span class=\"number\">85</span> <span class=\"built_in\">c0</span>                test   %rax,%rax</span><br><span class=\"line\">  <span class=\"number\">4004</span><span class=\"built_in\">c8</span>:       <span class=\"number\">74</span> <span class=\"built_in\">f1</span>                   je     <span class=\"number\">4004</span>bb &lt;frame_dummy+<span class=\"number\">0xb</span>&gt;</span><br><span class=\"line\">  <span class=\"number\">4004</span>ca:       <span class=\"number\">55</span>                      <span class=\"keyword\">push </span>  %rbp</span><br><span class=\"line\">  <span class=\"number\">4004</span>cb:       <span class=\"number\">48</span> <span class=\"number\">89</span> e5                <span class=\"keyword\">mov </span>   %rsp,%rbp</span><br><span class=\"line\">  <span class=\"number\">4004</span>ce:       ff <span class=\"built_in\">d0</span>                   callq  *%rax</span><br><span class=\"line\">  <span class=\"number\">4004</span><span class=\"built_in\">d0</span>:       <span class=\"number\">5</span>d                      <span class=\"keyword\">pop </span>   %rbp</span><br><span class=\"line\">  <span class=\"number\">4004</span><span class=\"built_in\">d1</span>:       e9 <span class=\"number\">7</span>a ff ff ff          jmpq   <span class=\"number\">400450</span> &lt;register_tm_clones&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">00000000004004</span><span class=\"built_in\">d6</span> &lt;_Z9main_funcii&gt;:</span><br><span class=\"line\">  <span class=\"number\">4004</span><span class=\"built_in\">d6</span>:       <span class=\"number\">55</span>                      <span class=\"keyword\">push </span>  %rbp</span><br><span class=\"line\">  <span class=\"number\">4004</span><span class=\"built_in\">d7</span>:       <span class=\"number\">48</span> <span class=\"number\">89</span> e5                <span class=\"keyword\">mov </span>   %rsp,%rbp</span><br><span class=\"line\">  <span class=\"number\">4004</span>da:       <span class=\"number\">89</span> <span class=\"number\">7</span>d fc                <span class=\"keyword\">mov </span>   %edi,-<span class=\"number\">0x4</span>(%rbp)</span><br><span class=\"line\">  <span class=\"number\">4004</span>dd:       <span class=\"number\">89</span> <span class=\"number\">75</span> f8                <span class=\"keyword\">mov </span>   %esi,-<span class=\"number\">0x8</span>(%rbp)</span><br><span class=\"line\">  <span class=\"number\">4004</span>e0:       <span class=\"number\">8</span>b <span class=\"number\">55</span> fc                <span class=\"keyword\">mov </span>   -<span class=\"number\">0x4</span>(%rbp),%edx</span><br><span class=\"line\">  <span class=\"number\">4004</span>e3:       <span class=\"number\">8</span>b <span class=\"number\">45</span> f8                <span class=\"keyword\">mov </span>   -<span class=\"number\">0x8</span>(%rbp),%eax</span><br><span class=\"line\">  <span class=\"number\">4004</span>e6:       <span class=\"number\">01</span> <span class=\"built_in\">d0</span>                   <span class=\"keyword\">add </span>   %edx,%eax</span><br><span class=\"line\">  <span class=\"number\">4004</span>e8:       <span class=\"number\">05</span> <span class=\"built_in\">c3</span> <span class=\"number\">07</span> <span class=\"number\">00</span> <span class=\"number\">00</span>          <span class=\"keyword\">add </span>   <span class=\"number\">$0x7c3</span>,%eax</span><br><span class=\"line\">  <span class=\"number\">4004</span>ed:       <span class=\"number\">5</span>d                      <span class=\"keyword\">pop </span>   %rbp</span><br><span class=\"line\">  <span class=\"number\">4004</span>ee:       <span class=\"built_in\">c3</span>                      retq   </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">00000000004004</span>ef &lt;main&gt;:</span><br><span class=\"line\">  <span class=\"number\">4004</span>ef:       <span class=\"number\">55</span>                      <span class=\"keyword\">push </span>  %rbp</span><br><span class=\"line\">  <span class=\"number\">4004</span><span class=\"built_in\">f0</span>:       <span class=\"number\">48</span> <span class=\"number\">89</span> e5                <span class=\"keyword\">mov </span>   %rsp,%rbp</span><br><span class=\"line\">  <span class=\"number\">4004</span><span class=\"built_in\">f3</span>:       <span class=\"number\">48</span> <span class=\"number\">83</span> ec <span class=\"number\">20</span>             <span class=\"keyword\">sub </span>   <span class=\"number\">$0x20</span>,%rsp</span><br><span class=\"line\">  <span class=\"number\">4004</span><span class=\"built_in\">f7</span>:       <span class=\"number\">89</span> <span class=\"number\">7</span>d ec                <span class=\"keyword\">mov </span>   %edi,-<span class=\"number\">0x14</span>(%rbp)</span><br><span class=\"line\">  <span class=\"number\">4004</span>fa:       <span class=\"number\">48</span> <span class=\"number\">89</span> <span class=\"number\">75</span> e0             <span class=\"keyword\">mov </span>   %rsi,-<span class=\"number\">0x20</span>(%rbp)</span><br><span class=\"line\">  <span class=\"number\">4004</span>fe:       <span class=\"built_in\">c7</span> <span class=\"number\">45</span> fc <span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">00</span>    <span class=\"keyword\">movl </span>  <span class=\"number\">$0x0</span>,-<span class=\"number\">0x4</span>(%rbp)</span><br><span class=\"line\">  <span class=\"number\">400505</span>:       <span class=\"number\">8</span>b <span class=\"number\">45</span> ec                <span class=\"keyword\">mov </span>   -<span class=\"number\">0x14</span>(%rbp),%eax</span><br><span class=\"line\">  <span class=\"number\">400508</span>:       <span class=\"number\">89</span> <span class=\"number\">05</span> <span class=\"number\">22</span> <span class=\"number\">0</span>b <span class=\"number\">20</span> <span class=\"number\">00</span>       <span class=\"keyword\">mov </span>   %eax,<span class=\"number\">0x200b22</span>(%rip)        # <span class=\"number\">601030</span> &lt;__TMC_END__&gt;</span><br><span class=\"line\">  <span class=\"number\">40050</span>e:       <span class=\"number\">8</span>b <span class=\"number\">15</span> <span class=\"number\">14</span> <span class=\"number\">0</span>b <span class=\"number\">20</span> <span class=\"number\">00</span>       <span class=\"keyword\">mov </span>   <span class=\"number\">0x200b14</span>(%rip),%edx        # <span class=\"number\">601028</span> &lt;g_static_data&gt;</span><br><span class=\"line\">  <span class=\"number\">400514</span>:       <span class=\"number\">8</span>b <span class=\"number\">05</span> <span class=\"number\">16</span> <span class=\"number\">0</span>b <span class=\"number\">20</span> <span class=\"number\">00</span>       <span class=\"keyword\">mov </span>   <span class=\"number\">0x200b16</span>(%rip),%eax        # <span class=\"number\">601030</span> &lt;__TMC_END__&gt;</span><br><span class=\"line\">  <span class=\"number\">40051</span>a:       <span class=\"number\">89</span> <span class=\"built_in\">d6</span>                   <span class=\"keyword\">mov </span>   %edx,%esi</span><br><span class=\"line\">  <span class=\"number\">40051</span>c:       <span class=\"number\">89</span> <span class=\"built_in\">c7</span>                   <span class=\"keyword\">mov </span>   %eax,%edi</span><br><span class=\"line\">  <span class=\"number\">40051</span>e:       e8 <span class=\"keyword\">b3 </span>ff ff ff          callq  <span class=\"number\">4004</span><span class=\"built_in\">d6</span> &lt;_Z9main_funcii&gt;</span><br><span class=\"line\">  <span class=\"number\">400523</span>:       <span class=\"number\">01</span> <span class=\"number\">45</span> fc                <span class=\"keyword\">add </span>   %eax,-<span class=\"number\">0x4</span>(%rbp)</span><br><span class=\"line\">  <span class=\"number\">400526</span>:       <span class=\"number\">8</span>b <span class=\"number\">45</span> fc                <span class=\"keyword\">mov </span>   -<span class=\"number\">0x4</span>(%rbp),%eax</span><br><span class=\"line\">  <span class=\"number\">400529</span>:       <span class=\"built_in\">c9</span>                      leaveq </span><br><span class=\"line\">  <span class=\"number\">40052</span>a:       <span class=\"built_in\">c3</span>                      retq   </span><br><span class=\"line\">  <span class=\"number\">40052</span>b:       <span class=\"number\">0</span>f <span class=\"number\">1</span>f <span class=\"number\">44</span> <span class=\"number\">00</span> <span class=\"number\">00</span>          <span class=\"keyword\">nopl </span>  <span class=\"number\">0x0</span>(%rax,%rax,<span class=\"number\">1</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">0000000000400530</span> &lt;__libc_csu_init&gt;:</span><br><span class=\"line\">  <span class=\"number\">400530</span>:       <span class=\"number\">41</span> <span class=\"number\">57</span>                   <span class=\"keyword\">push </span>  %<span class=\"built_in\">r15</span></span><br><span class=\"line\">  <span class=\"number\">400532</span>:       <span class=\"number\">41</span> <span class=\"number\">56</span>                   <span class=\"keyword\">push </span>  %<span class=\"built_in\">r14</span></span><br><span class=\"line\">  <span class=\"number\">400534</span>:       <span class=\"number\">49</span> <span class=\"number\">89</span> <span class=\"built_in\">d7</span>                <span class=\"keyword\">mov </span>   %rdx,%<span class=\"built_in\">r15</span></span><br><span class=\"line\">  <span class=\"number\">400537</span>:       <span class=\"number\">41</span> <span class=\"number\">55</span>                   <span class=\"keyword\">push </span>  %<span class=\"built_in\">r13</span></span><br><span class=\"line\">  <span class=\"number\">400539</span>:       <span class=\"number\">41</span> <span class=\"number\">54</span>                   <span class=\"keyword\">push </span>  %<span class=\"built_in\">r12</span></span><br><span class=\"line\">  <span class=\"number\">40053</span>b:       <span class=\"number\">4</span>c <span class=\"number\">8</span>d <span class=\"number\">25</span> <span class=\"built_in\">d6</span> <span class=\"number\">08</span> <span class=\"number\">20</span> <span class=\"number\">00</span>    lea    <span class=\"number\">0x2008d6</span>(%rip),%<span class=\"built_in\">r12</span>        # <span class=\"number\">600</span>e18 &lt;__frame_dummy_init_array_entry&gt;</span><br><span class=\"line\">  <span class=\"number\">400542</span>:       <span class=\"number\">55</span>                      <span class=\"keyword\">push </span>  %rbp</span><br><span class=\"line\">  <span class=\"number\">400543</span>:       <span class=\"number\">48</span> <span class=\"number\">8</span>d <span class=\"number\">2</span>d <span class=\"built_in\">d6</span> <span class=\"number\">08</span> <span class=\"number\">20</span> <span class=\"number\">00</span>    lea    <span class=\"number\">0x2008d6</span>(%rip),%rbp        # <span class=\"number\">600</span>e20 &lt;__init_array_end&gt;</span><br><span class=\"line\">  <span class=\"number\">40054</span>a:       <span class=\"number\">53</span>                      <span class=\"keyword\">push </span>  %rbx</span><br><span class=\"line\">  <span class=\"number\">40054</span>b:       <span class=\"number\">41</span> <span class=\"number\">89</span> fd                <span class=\"keyword\">mov </span>   %edi,%r13d</span><br><span class=\"line\">  <span class=\"number\">40054</span>e:       <span class=\"number\">49</span> <span class=\"number\">89</span> <span class=\"built_in\">f6</span>                <span class=\"keyword\">mov </span>   %rsi,%<span class=\"built_in\">r14</span></span><br><span class=\"line\">  <span class=\"number\">400551</span>:       <span class=\"number\">4</span>c <span class=\"number\">29</span> e5                <span class=\"keyword\">sub </span>   %<span class=\"built_in\">r12</span>,%rbp</span><br><span class=\"line\">  <span class=\"number\">400554</span>:       <span class=\"number\">48</span> <span class=\"number\">83</span> ec <span class=\"number\">08</span>             <span class=\"keyword\">sub </span>   <span class=\"number\">$0x8</span>,%rsp</span><br><span class=\"line\">  <span class=\"number\">400558</span>:       <span class=\"number\">48</span> <span class=\"built_in\">c1</span> fd <span class=\"number\">03</span>             sar    <span class=\"number\">$0x3</span>,%rbp</span><br><span class=\"line\">  <span class=\"number\">40055</span>c:       e8 <span class=\"number\">57</span> fe ff ff          callq  <span class=\"number\">4003</span>b8 &lt;_init&gt;</span><br><span class=\"line\">  <span class=\"number\">400561</span>:       <span class=\"number\">48</span> <span class=\"number\">85</span> ed                test   %rbp,%rbp</span><br><span class=\"line\">  <span class=\"number\">400564</span>:       <span class=\"number\">74</span> <span class=\"number\">20</span>                   je     <span class=\"number\">400586</span> &lt;__libc_csu_init+<span class=\"number\">0x56</span>&gt;</span><br><span class=\"line\">  <span class=\"number\">400566</span>:       <span class=\"number\">31</span> db                   xor    %ebx,%ebx</span><br><span class=\"line\">  <span class=\"number\">400568</span>:       <span class=\"number\">0</span>f <span class=\"number\">1</span>f <span class=\"number\">84</span> <span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">00</span>    <span class=\"keyword\">nopl </span>  <span class=\"number\">0x0</span>(%rax,%rax,<span class=\"number\">1</span>)</span><br><span class=\"line\">  <span class=\"number\">40056</span>f:       <span class=\"number\">00</span> </span><br><span class=\"line\">  <span class=\"number\">400570</span>:       <span class=\"number\">4</span>c <span class=\"number\">89</span> fa                <span class=\"keyword\">mov </span>   %<span class=\"built_in\">r15</span>,%rdx</span><br><span class=\"line\">  <span class=\"number\">400573</span>:       <span class=\"number\">4</span>c <span class=\"number\">89</span> <span class=\"built_in\">f6</span>                <span class=\"keyword\">mov </span>   %<span class=\"built_in\">r14</span>,%rsi</span><br><span class=\"line\">  <span class=\"number\">400576</span>:       <span class=\"number\">44</span> <span class=\"number\">89</span> ef                <span class=\"keyword\">mov </span>   %r13d,%edi</span><br><span class=\"line\">  <span class=\"number\">400579</span>:       <span class=\"number\">41</span> ff <span class=\"number\">14</span> dc             callq  *(%<span class=\"built_in\">r12</span>,%rbx,<span class=\"number\">8</span>)</span><br><span class=\"line\">  <span class=\"number\">40057</span>d:       <span class=\"number\">48</span> <span class=\"number\">83</span> <span class=\"built_in\">c3</span> <span class=\"number\">01</span>             <span class=\"keyword\">add </span>   <span class=\"number\">$0x1</span>,%rbx</span><br><span class=\"line\">  <span class=\"number\">400581</span>:       <span class=\"number\">48</span> <span class=\"number\">39</span> dd                <span class=\"keyword\">cmp </span>   %rbx,%rbp</span><br><span class=\"line\">  <span class=\"number\">400584</span>:       <span class=\"number\">75</span> ea                   jne    <span class=\"number\">400570</span> &lt;__libc_csu_init+<span class=\"number\">0x40</span>&gt;</span><br><span class=\"line\">  <span class=\"number\">400586</span>:       <span class=\"number\">48</span> <span class=\"number\">83</span> <span class=\"built_in\">c4</span> <span class=\"number\">08</span>             <span class=\"keyword\">add </span>   <span class=\"number\">$0x8</span>,%rsp</span><br><span class=\"line\">  <span class=\"number\">40058</span>a:       <span class=\"number\">5</span>b                      <span class=\"keyword\">pop </span>   %rbx</span><br><span class=\"line\">  <span class=\"number\">40058</span>b:       <span class=\"number\">5</span>d                      <span class=\"keyword\">pop </span>   %rbp</span><br><span class=\"line\">  <span class=\"number\">40058</span>c:       <span class=\"number\">41</span> <span class=\"number\">5</span>c                   <span class=\"keyword\">pop </span>   %<span class=\"built_in\">r12</span></span><br><span class=\"line\">  <span class=\"number\">40058</span>e:       <span class=\"number\">41</span> <span class=\"number\">5</span>d                   <span class=\"keyword\">pop </span>   %<span class=\"built_in\">r13</span></span><br><span class=\"line\">  <span class=\"number\">400590</span>:       <span class=\"number\">41</span> <span class=\"number\">5</span>e                   <span class=\"keyword\">pop </span>   %<span class=\"built_in\">r14</span></span><br><span class=\"line\">  <span class=\"number\">400592</span>:       <span class=\"number\">41</span> <span class=\"number\">5</span>f                   <span class=\"keyword\">pop </span>   %<span class=\"built_in\">r15</span></span><br><span class=\"line\">  <span class=\"number\">400594</span>:       <span class=\"built_in\">c3</span>                      retq   </span><br><span class=\"line\">  <span class=\"number\">400595</span>:       <span class=\"number\">90</span>                      <span class=\"keyword\">nop</span></span><br><span class=\"line\"><span class=\"keyword\"> </span> <span class=\"number\">400596</span>:       <span class=\"number\">66</span> <span class=\"number\">2</span>e <span class=\"number\">0</span>f <span class=\"number\">1</span>f <span class=\"number\">84</span> <span class=\"number\">00</span> <span class=\"number\">00</span>    <span class=\"keyword\">nopw </span>  %cs:<span class=\"number\">0x0</span>(%rax,%rax,<span class=\"number\">1</span>)</span><br><span class=\"line\">  <span class=\"number\">40059</span>d:       <span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">00</span> </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">00000000004005</span>a0 &lt;__libc_csu_fini&gt;:</span><br><span class=\"line\">  <span class=\"number\">4005</span>a0:       <span class=\"built_in\">f3</span> <span class=\"built_in\">c3</span>                   repz retq </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"symbol\">Disassembly</span> of section .fini:</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">00000000004005</span><span class=\"built_in\">a4</span> &lt;_fini&gt;:</span><br><span class=\"line\">  <span class=\"number\">4005</span><span class=\"built_in\">a4</span>:       <span class=\"number\">48</span> <span class=\"number\">83</span> ec <span class=\"number\">08</span>             <span class=\"keyword\">sub </span>   <span class=\"number\">$0x8</span>,%rsp</span><br><span class=\"line\">  <span class=\"number\">4005</span>a8:       <span class=\"number\">48</span> <span class=\"number\">83</span> <span class=\"built_in\">c4</span> <span class=\"number\">08</span>             <span class=\"keyword\">add </span>   <span class=\"number\">$0x8</span>,%rsp</span><br><span class=\"line\">  <span class=\"number\">4005</span>ac:       <span class=\"built_in\">c3</span>                      retq</span><br></pre></td></tr></table></figure>\n\n<h5><span id=\"可执行文件-相对位置的piedyn版本\">可执行文件 (相对位置的PIE(DYN)版本)</span></h5><figure class=\"highlight armasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">重定位节 <span class=\"string\">'.rela.dyn'</span> 位于偏移量 <span class=\"number\">0x448</span> 含有 <span class=\"number\">9</span> 个条目：</span><br><span class=\"line\">  偏移量          信息           类型           符号值        符号名称 + 加数</span><br><span class=\"line\"><span class=\"number\">000000200</span>dd8  <span class=\"number\">000000000008</span> R_X86_64_RELATIVE                    <span class=\"number\">660</span></span><br><span class=\"line\"><span class=\"number\">000000200</span>de0  <span class=\"number\">000000000008</span> R_X86_64_RELATIVE                    <span class=\"number\">620</span></span><br><span class=\"line\"><span class=\"number\">000000201020</span>  <span class=\"number\">000000000008</span> R_X86_64_RELATIVE                    <span class=\"number\">201020</span></span><br><span class=\"line\"><span class=\"number\">000000200</span>fd0  <span class=\"number\">000100000006</span> R_X86_64_GLOB_DAT <span class=\"number\">0000000000000000</span> __cxa_finalize<span class=\"comment\">@GLIBC_2.2.5 + 0</span></span><br><span class=\"line\"><span class=\"number\">000000200</span>fd8  <span class=\"number\">000200000006</span> R_X86_64_GLOB_DAT <span class=\"number\">0000000000000000</span> _Jv_RegisterClasses + <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"number\">000000200</span>fe0  <span class=\"number\">000300000006</span> R_X86_64_GLOB_DAT <span class=\"number\">0000000000000000</span> _ITM_deregisterTMClone + <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"number\">000000200</span>fe8  <span class=\"number\">000400000006</span> R_X86_64_GLOB_DAT <span class=\"number\">0000000000000000</span> __libc_start_main<span class=\"comment\">@GLIBC_2.2.5 + 0</span></span><br><span class=\"line\"><span class=\"number\">000000200</span>ff0  <span class=\"number\">000500000006</span> R_X86_64_GLOB_DAT <span class=\"number\">0000000000000000</span> __gmon_start__ + <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"number\">000000200</span>ff8  <span class=\"number\">000600000006</span> R_X86_64_GLOB_DAT <span class=\"number\">0000000000000000</span> _ITM_registerTMCloneTa + <span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"symbol\">The</span> decoding of unwind sections for machine type Advanced Micro Devices X86-<span class=\"number\">64</span> is not currently supported.</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"symbol\">Symbol</span> table <span class=\"string\">'.dynsym'</span> contains <span class=\"number\">7</span> entries:</span><br><span class=\"line\"><span class=\"symbol\">   Num:</span>    Value          Size Type    <span class=\"keyword\">Bind </span>  Vis      Ndx Name</span><br><span class=\"line\">     <span class=\"number\">0</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">0</span> NOTYPE  LOCAL  DEFAULT  UND </span><br><span class=\"line\">     <span class=\"number\">1</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">0</span> FUNC    WEAK   DEFAULT  UND __cxa_finalize<span class=\"comment\">@GLIBC_2.2.5 (2)</span></span><br><span class=\"line\">     <span class=\"number\">2</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">0</span> NOTYPE  WEAK   DEFAULT  UND _Jv_RegisterClasses</span><br><span class=\"line\">     <span class=\"number\">3</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">0</span> NOTYPE  WEAK   DEFAULT  UND _ITM_deregisterTMCloneTab</span><br><span class=\"line\">     <span class=\"number\">4</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">0</span> FUNC    <span class=\"meta\">GLOBAL</span> DEFAULT  UND __libc_start_main<span class=\"comment\">@GLIBC_2.2.5 (2)</span></span><br><span class=\"line\">     <span class=\"number\">5</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">0</span> NOTYPE  WEAK   DEFAULT  UND __gmon_start__</span><br><span class=\"line\">     <span class=\"number\">6</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">0</span> NOTYPE  WEAK   DEFAULT  UND _ITM_registerTMCloneTable</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"symbol\">Symbol</span> table <span class=\"string\">'.symtab'</span> contains <span class=\"number\">70</span> entries:</span><br><span class=\"line\"><span class=\"symbol\">   Num:</span>    Value          Size Type    <span class=\"keyword\">Bind </span>  Vis      Ndx Name</span><br><span class=\"line\">     <span class=\"number\">0</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">0</span> NOTYPE  LOCAL  DEFAULT  UND </span><br><span class=\"line\">     <span class=\"number\">1</span>: <span class=\"number\">0000000000000238</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT    <span class=\"number\">1</span> </span><br><span class=\"line\">     <span class=\"number\">2</span>: <span class=\"number\">0000000000000254</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT    <span class=\"number\">2</span> </span><br><span class=\"line\">     <span class=\"number\">3</span>: <span class=\"number\">0000000000000274</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT    <span class=\"number\">3</span> </span><br><span class=\"line\">     <span class=\"number\">4</span>: <span class=\"number\">0000000000000298</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT    <span class=\"number\">4</span> </span><br><span class=\"line\">     <span class=\"number\">5</span>: <span class=\"number\">00000000000002</span>b8     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT    <span class=\"number\">5</span> </span><br><span class=\"line\">     <span class=\"number\">6</span>: <span class=\"number\">0000000000000360</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT    <span class=\"number\">6</span> </span><br><span class=\"line\">     <span class=\"number\">7</span>: <span class=\"number\">0000000000000418</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT    <span class=\"number\">7</span> </span><br><span class=\"line\">     <span class=\"number\">8</span>: <span class=\"number\">0000000000000428</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT    <span class=\"number\">8</span> </span><br><span class=\"line\">     <span class=\"number\">9</span>: <span class=\"number\">0000000000000448</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT    <span class=\"number\">9</span> </span><br><span class=\"line\">    <span class=\"number\">10</span>: <span class=\"number\">0000000000000520</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT   <span class=\"number\">10</span> </span><br><span class=\"line\">    <span class=\"number\">11</span>: <span class=\"number\">0000000000000540</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT   <span class=\"number\">11</span> </span><br><span class=\"line\">    <span class=\"number\">12</span>: <span class=\"number\">0000000000000550</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT   <span class=\"number\">12</span> </span><br><span class=\"line\">    <span class=\"number\">13</span>: <span class=\"number\">0000000000000560</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT   <span class=\"number\">13</span> </span><br><span class=\"line\">    <span class=\"number\">14</span>: <span class=\"number\">0000000000000764</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT   <span class=\"number\">14</span> </span><br><span class=\"line\">    <span class=\"number\">15</span>: <span class=\"number\">0000000000000770</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT   <span class=\"number\">15</span> </span><br><span class=\"line\">    <span class=\"number\">16</span>: <span class=\"number\">0000000000000778</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT   <span class=\"number\">16</span> </span><br><span class=\"line\">    <span class=\"number\">17</span>: <span class=\"number\">00000000000007</span><span class=\"built_in\">c0</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT   <span class=\"number\">17</span> </span><br><span class=\"line\">    <span class=\"number\">18</span>: <span class=\"number\">0000000000200</span>dd8     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT   <span class=\"number\">18</span> </span><br><span class=\"line\">    <span class=\"number\">19</span>: <span class=\"number\">0000000000200</span>de0     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT   <span class=\"number\">19</span> </span><br><span class=\"line\">    <span class=\"number\">20</span>: <span class=\"number\">0000000000200</span>de8     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT   <span class=\"number\">20</span> </span><br><span class=\"line\">    <span class=\"number\">21</span>: <span class=\"number\">0000000000200</span>df0     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT   <span class=\"number\">21</span> </span><br><span class=\"line\">    <span class=\"number\">22</span>: <span class=\"number\">0000000000200</span>fd0     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT   <span class=\"number\">22</span> </span><br><span class=\"line\">    <span class=\"number\">23</span>: <span class=\"number\">0000000000201000</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT   <span class=\"number\">23</span> </span><br><span class=\"line\">    <span class=\"number\">24</span>: <span class=\"number\">0000000000201018</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT   <span class=\"number\">24</span> </span><br><span class=\"line\">    <span class=\"number\">25</span>: <span class=\"number\">000000000020102</span>c     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT   <span class=\"number\">25</span> </span><br><span class=\"line\">    <span class=\"number\">26</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT   <span class=\"number\">26</span> </span><br><span class=\"line\">    <span class=\"number\">27</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">0</span> FILE    LOCAL  DEFAULT  ABS crtstuff.c</span><br><span class=\"line\">    <span class=\"number\">28</span>: <span class=\"number\">0000000000200</span>de8     <span class=\"number\">0</span> OBJECT  LOCAL  DEFAULT   <span class=\"number\">20</span> __JCR_LIST__</span><br><span class=\"line\">    <span class=\"number\">29</span>: <span class=\"number\">0000000000000590</span>     <span class=\"number\">0</span> FUNC    LOCAL  DEFAULT   <span class=\"number\">13</span> deregister_tm_clones</span><br><span class=\"line\">    <span class=\"number\">30</span>: <span class=\"number\">00000000000005</span><span class=\"built_in\">d0</span>     <span class=\"number\">0</span> FUNC    LOCAL  DEFAULT   <span class=\"number\">13</span> register_tm_clones</span><br><span class=\"line\">    <span class=\"number\">31</span>: <span class=\"number\">0000000000000620</span>     <span class=\"number\">0</span> FUNC    LOCAL  DEFAULT   <span class=\"number\">13</span> __do_global_dtors_aux</span><br><span class=\"line\">    <span class=\"number\">32</span>: <span class=\"number\">000000000020102</span>c     <span class=\"number\">1</span> OBJECT  LOCAL  DEFAULT   <span class=\"number\">25</span> completed.<span class=\"number\">6972</span></span><br><span class=\"line\">    <span class=\"number\">33</span>: <span class=\"number\">0000000000200</span>de0     <span class=\"number\">0</span> OBJECT  LOCAL  DEFAULT   <span class=\"number\">19</span> __do_global_dtors_aux_fin</span><br><span class=\"line\">    <span class=\"number\">34</span>: <span class=\"number\">0000000000000660</span>     <span class=\"number\">0</span> FUNC    LOCAL  DEFAULT   <span class=\"number\">13</span> frame_dummy</span><br><span class=\"line\">    <span class=\"number\">35</span>: <span class=\"number\">0000000000200</span>dd8     <span class=\"number\">0</span> OBJECT  LOCAL  DEFAULT   <span class=\"number\">18</span> __frame_dummy_init_array_</span><br><span class=\"line\">    <span class=\"number\">36</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">0</span> FILE    LOCAL  DEFAULT  ABS test.cpp</span><br><span class=\"line\">    <span class=\"number\">37</span>: <span class=\"number\">0000000000000774</span>     <span class=\"number\">4</span> OBJECT  LOCAL  DEFAULT   <span class=\"number\">15</span> _ZL13g_static_text</span><br><span class=\"line\">    <span class=\"number\">38</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">0</span> FILE    LOCAL  DEFAULT  ABS crtstuff.c</span><br><span class=\"line\">    <span class=\"number\">39</span>: <span class=\"number\">00000000000008</span>e8     <span class=\"number\">0</span> OBJECT  LOCAL  DEFAULT   <span class=\"number\">17</span> __FRAME_END__</span><br><span class=\"line\">    <span class=\"number\">40</span>: <span class=\"number\">0000000000200</span>de8     <span class=\"number\">0</span> OBJECT  LOCAL  DEFAULT   <span class=\"number\">20</span> __JCR_END__</span><br><span class=\"line\">    <span class=\"number\">41</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">0</span> FILE    LOCAL  DEFAULT  ABS </span><br><span class=\"line\">    <span class=\"number\">42</span>: <span class=\"number\">0000000000000778</span>     <span class=\"number\">0</span> NOTYPE  LOCAL  DEFAULT   <span class=\"number\">16</span> __GNU_EH_FRAME_HDR</span><br><span class=\"line\">    <span class=\"number\">43</span>: <span class=\"number\">0000000000200</span>df0     <span class=\"number\">0</span> OBJECT  LOCAL  DEFAULT   <span class=\"number\">21</span> _DYNAMIC</span><br><span class=\"line\">    <span class=\"number\">44</span>: <span class=\"number\">0000000000200</span>de0     <span class=\"number\">0</span> NOTYPE  LOCAL  DEFAULT   <span class=\"number\">18</span> __init_array_end</span><br><span class=\"line\">    <span class=\"number\">45</span>: <span class=\"number\">0000000000200</span>dd8     <span class=\"number\">0</span> NOTYPE  LOCAL  DEFAULT   <span class=\"number\">18</span> __init_array_start</span><br><span class=\"line\">    <span class=\"number\">46</span>: <span class=\"number\">0000000000201000</span>     <span class=\"number\">0</span> OBJECT  LOCAL  DEFAULT   <span class=\"number\">23</span> _GLOBAL_OFFSET_TABLE_</span><br><span class=\"line\">    <span class=\"number\">47</span>: <span class=\"number\">0000000000201028</span>     <span class=\"number\">4</span> OBJECT  <span class=\"meta\">GLOBAL</span> DEFAULT   <span class=\"number\">24</span> g_static_data</span><br><span class=\"line\">    <span class=\"number\">48</span>: <span class=\"number\">000000000020102</span>c     <span class=\"number\">0</span> NOTYPE  <span class=\"meta\">GLOBAL</span> DEFAULT   <span class=\"number\">24</span> _edata</span><br><span class=\"line\">    <span class=\"number\">49</span>: <span class=\"number\">0000000000201018</span>     <span class=\"number\">0</span> NOTYPE  WEAK   DEFAULT   <span class=\"number\">24</span> data_start</span><br><span class=\"line\">    <span class=\"number\">50</span>: <span class=\"number\">0000000000000770</span>     <span class=\"number\">4</span> OBJECT  <span class=\"meta\">GLOBAL</span> DEFAULT   <span class=\"number\">15</span> _IO_stdin_used</span><br><span class=\"line\">    <span class=\"number\">51</span>: <span class=\"number\">0000000000000690</span>    <span class=\"number\">25</span> FUNC    <span class=\"meta\">GLOBAL</span> DEFAULT   <span class=\"number\">13</span> _Z9main_funcii</span><br><span class=\"line\">    <span class=\"number\">52</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">0</span> FUNC    WEAK   DEFAULT  UND __cxa_finalize<span class=\"comment\">@@GLIBC_2.2</span></span><br><span class=\"line\">    <span class=\"number\">53</span>: <span class=\"number\">00000000000006</span>a9    <span class=\"number\">60</span> FUNC    <span class=\"meta\">GLOBAL</span> DEFAULT   <span class=\"number\">13</span> main</span><br><span class=\"line\">    <span class=\"number\">54</span>: <span class=\"number\">0000000000201020</span>     <span class=\"number\">0</span> OBJECT  <span class=\"meta\">GLOBAL</span> HIDDEN    <span class=\"number\">24</span> __dso_handle</span><br><span class=\"line\">    <span class=\"number\">55</span>: <span class=\"number\">0000000000000764</span>     <span class=\"number\">0</span> FUNC    <span class=\"meta\">GLOBAL</span> DEFAULT   <span class=\"number\">14</span> _fini</span><br><span class=\"line\">    <span class=\"number\">56</span>: <span class=\"number\">0000000000000560</span>    <span class=\"number\">43</span> FUNC    <span class=\"meta\">GLOBAL</span> DEFAULT   <span class=\"number\">13</span> _start</span><br><span class=\"line\">    <span class=\"number\">57</span>: <span class=\"number\">0000000000000520</span>     <span class=\"number\">0</span> FUNC    <span class=\"meta\">GLOBAL</span> DEFAULT   <span class=\"number\">10</span> _init</span><br><span class=\"line\">    <span class=\"number\">58</span>: <span class=\"number\">0000000000201030</span>     <span class=\"number\">0</span> OBJECT  <span class=\"meta\">GLOBAL</span> HIDDEN    <span class=\"number\">24</span> __TMC_END__</span><br><span class=\"line\">    <span class=\"number\">59</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">0</span> NOTYPE  WEAK   DEFAULT  UND _Jv_RegisterClasses</span><br><span class=\"line\">    <span class=\"number\">60</span>: <span class=\"number\">0000000000201018</span>     <span class=\"number\">0</span> NOTYPE  <span class=\"meta\">GLOBAL</span> DEFAULT   <span class=\"number\">24</span> __data_start</span><br><span class=\"line\">    <span class=\"number\">61</span>: <span class=\"number\">0000000000201038</span>     <span class=\"number\">0</span> NOTYPE  <span class=\"meta\">GLOBAL</span> DEFAULT   <span class=\"number\">25</span> _<span class=\"meta\">end</span></span><br><span class=\"line\">    <span class=\"number\">62</span>: <span class=\"number\">000000000020102</span>c     <span class=\"number\">0</span> NOTYPE  <span class=\"meta\">GLOBAL</span> DEFAULT   <span class=\"number\">25</span> __bss_start</span><br><span class=\"line\">    <span class=\"number\">63</span>: <span class=\"number\">00000000000006</span><span class=\"built_in\">f0</span>   <span class=\"number\">101</span> FUNC    <span class=\"meta\">GLOBAL</span> DEFAULT   <span class=\"number\">13</span> __libc_csu_init</span><br><span class=\"line\">    <span class=\"number\">64</span>: <span class=\"number\">0000000000201030</span>     <span class=\"number\">4</span> OBJECT  <span class=\"meta\">GLOBAL</span> DEFAULT   <span class=\"number\">25</span> g_static_bss</span><br><span class=\"line\">    <span class=\"number\">65</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">0</span> NOTYPE  WEAK   DEFAULT  UND _ITM_deregisterTMCloneTab</span><br><span class=\"line\">    <span class=\"number\">66</span>: <span class=\"number\">0000000000000760</span>     <span class=\"number\">2</span> FUNC    <span class=\"meta\">GLOBAL</span> DEFAULT   <span class=\"number\">13</span> __libc_csu_fini</span><br><span class=\"line\">    <span class=\"number\">67</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">0</span> FUNC    <span class=\"meta\">GLOBAL</span> DEFAULT  UND __libc_start_main<span class=\"comment\">@@GLIBC_</span></span><br><span class=\"line\">    <span class=\"number\">68</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">0</span> NOTYPE  WEAK   DEFAULT  UND __gmon_start__</span><br><span class=\"line\">    <span class=\"number\">69</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">0</span> NOTYPE  WEAK   DEFAULT  UND _ITM_registerTMCloneTable</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"symbol\">.text</span></span><br><span class=\"line\"><span class=\"number\">0000000000000520</span> &lt;_init&gt;:</span><br><span class=\"line\"> <span class=\"number\">520</span>:   <span class=\"number\">48</span> <span class=\"number\">83</span> ec <span class=\"number\">08</span>             <span class=\"keyword\">sub </span>   <span class=\"number\">$0x8</span>,%rsp</span><br><span class=\"line\"> <span class=\"number\">524</span>:   <span class=\"number\">48</span> <span class=\"number\">8</span>b <span class=\"number\">05</span> <span class=\"built_in\">c5</span> <span class=\"number\">0</span>a <span class=\"number\">20</span> <span class=\"number\">00</span>    <span class=\"keyword\">mov </span>   <span class=\"number\">0x200ac5</span>(%rip),%rax        # <span class=\"number\">200</span>ff0 &lt;__gmon_start__&gt;</span><br><span class=\"line\"> <span class=\"number\">52</span>b:   <span class=\"number\">48</span> <span class=\"number\">85</span> <span class=\"built_in\">c0</span>                test   %rax,%rax</span><br><span class=\"line\"> <span class=\"number\">52</span>e:   <span class=\"number\">74</span> <span class=\"number\">02</span>                   je     <span class=\"number\">532</span> &lt;_init+<span class=\"number\">0x12</span>&gt;</span><br><span class=\"line\"> <span class=\"number\">530</span>:   ff <span class=\"built_in\">d0</span>                   callq  *%rax</span><br><span class=\"line\"> <span class=\"number\">532</span>:   <span class=\"number\">48</span> <span class=\"number\">83</span> <span class=\"built_in\">c4</span> <span class=\"number\">08</span>             <span class=\"keyword\">add </span>   <span class=\"number\">$0x8</span>,%rsp</span><br><span class=\"line\"> <span class=\"number\">536</span>:   <span class=\"built_in\">c3</span>                      retq   </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"symbol\">Disassembly</span> of section .plt:</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">0000000000000540</span> &lt;.plt&gt;:</span><br><span class=\"line\"> <span class=\"number\">540</span>:   ff <span class=\"number\">35</span> <span class=\"built_in\">c2</span> <span class=\"number\">0</span>a <span class=\"number\">20</span> <span class=\"number\">00</span>       <span class=\"keyword\">pushq </span> <span class=\"number\">0x200ac2</span>(%rip)        # <span class=\"number\">201008</span> &lt;_GLOBAL_OFFSET_TABLE_+<span class=\"number\">0x8</span>&gt;</span><br><span class=\"line\"> <span class=\"number\">546</span>:   ff <span class=\"number\">25</span> <span class=\"built_in\">c4</span> <span class=\"number\">0</span>a <span class=\"number\">20</span> <span class=\"number\">00</span>       jmpq   *<span class=\"number\">0x200ac4</span>(%rip)        # <span class=\"number\">201010</span> &lt;_GLOBAL_OFFSET_TABLE_+<span class=\"number\">0x10</span>&gt;</span><br><span class=\"line\"> <span class=\"number\">54</span>c:   <span class=\"number\">0</span>f <span class=\"number\">1</span>f <span class=\"number\">40</span> <span class=\"number\">00</span>             <span class=\"keyword\">nopl </span>  <span class=\"number\">0x0</span>(%rax)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"symbol\">Disassembly</span> of section .plt.got:</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">0000000000000550</span> &lt;.plt.got&gt;:</span><br><span class=\"line\"> <span class=\"number\">550</span>:   ff <span class=\"number\">25</span> <span class=\"number\">7</span>a <span class=\"number\">0</span>a <span class=\"number\">20</span> <span class=\"number\">00</span>       jmpq   *<span class=\"number\">0x200a7a</span>(%rip)        # <span class=\"number\">200</span>fd0 &lt;__cxa_finalize<span class=\"comment\">@GLIBC_2.2.5&gt;</span></span><br><span class=\"line\"> <span class=\"number\">556</span>:   <span class=\"number\">66</span> <span class=\"number\">90</span>                   xchg   %ax,%ax</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"symbol\">Disassembly</span> of section <span class=\"meta\">.text</span>:</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">0000000000000560</span> &lt;_start&gt;:</span><br><span class=\"line\"> <span class=\"number\">560</span>:   <span class=\"number\">31</span> ed                   xor    %ebp,%ebp</span><br><span class=\"line\"> <span class=\"number\">562</span>:   <span class=\"number\">49</span> <span class=\"number\">89</span> <span class=\"built_in\">d1</span>                <span class=\"keyword\">mov </span>   %rdx,%<span class=\"built_in\">r9</span></span><br><span class=\"line\"> <span class=\"number\">565</span>:   <span class=\"number\">5</span>e                      <span class=\"keyword\">pop </span>   %rsi</span><br><span class=\"line\"> <span class=\"number\">566</span>:   <span class=\"number\">48</span> <span class=\"number\">89</span> e2                <span class=\"keyword\">mov </span>   %rsp,%rdx</span><br><span class=\"line\"> <span class=\"number\">569</span>:   <span class=\"number\">48</span> <span class=\"number\">83</span> e4 <span class=\"built_in\">f0</span>             <span class=\"keyword\">and </span>   <span class=\"number\">$0xfffffffffffffff0</span>,%rsp</span><br><span class=\"line\"> <span class=\"number\">56</span>d:   <span class=\"number\">50</span>                      <span class=\"keyword\">push </span>  %rax</span><br><span class=\"line\"> <span class=\"number\">56</span>e:   <span class=\"number\">54</span>                      <span class=\"keyword\">push </span>  %rsp</span><br><span class=\"line\"> <span class=\"number\">56</span>f:   <span class=\"number\">4</span>c <span class=\"number\">8</span>d <span class=\"number\">05</span> ea <span class=\"number\">01</span> <span class=\"number\">00</span> <span class=\"number\">00</span>    lea    <span class=\"number\">0x1ea</span>(%rip),%<span class=\"built_in\">r8</span>        # <span class=\"number\">760</span> &lt;__libc_csu_fini&gt;</span><br><span class=\"line\"> <span class=\"number\">576</span>:   <span class=\"number\">48</span> <span class=\"number\">8</span>d <span class=\"number\">0</span>d <span class=\"number\">73</span> <span class=\"number\">01</span> <span class=\"number\">00</span> <span class=\"number\">00</span>    lea    <span class=\"number\">0x173</span>(%rip),%rcx        # <span class=\"number\">6</span><span class=\"built_in\">f0</span> &lt;__libc_csu_init&gt;</span><br><span class=\"line\"> <span class=\"number\">57</span>d:   <span class=\"number\">48</span> <span class=\"number\">8</span>d <span class=\"number\">3</span>d <span class=\"number\">25</span> <span class=\"number\">01</span> <span class=\"number\">00</span> <span class=\"number\">00</span>    lea    <span class=\"number\">0x125</span>(%rip),%rdi        # <span class=\"number\">6</span>a9 &lt;main&gt;</span><br><span class=\"line\"> <span class=\"number\">584</span>:   ff <span class=\"number\">15</span> <span class=\"number\">5</span>e <span class=\"number\">0</span>a <span class=\"number\">20</span> <span class=\"number\">00</span>       callq  *<span class=\"number\">0x200a5e</span>(%rip)        # <span class=\"number\">200</span>fe8 &lt;__libc_start_main<span class=\"comment\">@GLIBC_2.2.5&gt;</span></span><br><span class=\"line\"> <span class=\"number\">58</span>a:   <span class=\"built_in\">f4</span>                      hlt    </span><br><span class=\"line\"> <span class=\"number\">58</span>b:   <span class=\"number\">0</span>f <span class=\"number\">1</span>f <span class=\"number\">44</span> <span class=\"number\">00</span> <span class=\"number\">00</span>          <span class=\"keyword\">nopl </span>  <span class=\"number\">0x0</span>(%rax,%rax,<span class=\"number\">1</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">0000000000000590</span> &lt;deregister_tm_clones&gt;:</span><br><span class=\"line\"> <span class=\"number\">590</span>:   <span class=\"number\">48</span> <span class=\"number\">8</span>d <span class=\"number\">3</span>d <span class=\"number\">99</span> <span class=\"number\">0</span>a <span class=\"number\">20</span> <span class=\"number\">00</span>    lea    <span class=\"number\">0x200a99</span>(%rip),%rdi        # <span class=\"number\">201030</span> &lt;__TMC_END__&gt;</span><br><span class=\"line\"> <span class=\"number\">597</span>:   <span class=\"number\">48</span> <span class=\"number\">8</span>d <span class=\"number\">05</span> <span class=\"number\">99</span> <span class=\"number\">0</span>a <span class=\"number\">20</span> <span class=\"number\">00</span>    lea    <span class=\"number\">0x200a99</span>(%rip),%rax        # <span class=\"number\">201037</span> &lt;__TMC_END__+<span class=\"number\">0x7</span>&gt;</span><br><span class=\"line\"> <span class=\"number\">59</span>e:   <span class=\"number\">55</span>                      <span class=\"keyword\">push </span>  %rbp</span><br><span class=\"line\"> <span class=\"number\">59</span>f:   <span class=\"number\">48</span> <span class=\"number\">29</span> f8                <span class=\"keyword\">sub </span>   %rdi,%rax</span><br><span class=\"line\"> <span class=\"number\">5</span><span class=\"built_in\">a2</span>:   <span class=\"number\">48</span> <span class=\"number\">89</span> e5                <span class=\"keyword\">mov </span>   %rsp,%rbp</span><br><span class=\"line\"> <span class=\"number\">5</span>a5:   <span class=\"number\">48</span> <span class=\"number\">83</span> f8 <span class=\"number\">0</span>e             <span class=\"keyword\">cmp </span>   <span class=\"number\">$0xe</span>,%rax</span><br><span class=\"line\"> <span class=\"number\">5</span>a9:   <span class=\"number\">76</span> <span class=\"number\">15</span>                   jbe    <span class=\"number\">5</span><span class=\"built_in\">c0</span> &lt;deregister_tm_clones+<span class=\"number\">0x30</span>&gt;</span><br><span class=\"line\"> <span class=\"number\">5</span>ab:   <span class=\"number\">48</span> <span class=\"number\">8</span>b <span class=\"number\">05</span> <span class=\"number\">2</span>e <span class=\"number\">0</span>a <span class=\"number\">20</span> <span class=\"number\">00</span>    <span class=\"keyword\">mov </span>   <span class=\"number\">0x200a2e</span>(%rip),%rax        # <span class=\"number\">200</span>fe0 &lt;_ITM_deregisterTMCloneTable&gt;</span><br><span class=\"line\"> <span class=\"number\">5</span>b2:   <span class=\"number\">48</span> <span class=\"number\">85</span> <span class=\"built_in\">c0</span>                test   %rax,%rax</span><br><span class=\"line\"> <span class=\"number\">5</span>b5:   <span class=\"number\">74</span> <span class=\"number\">09</span>                   je     <span class=\"number\">5</span><span class=\"built_in\">c0</span> &lt;deregister_tm_clones+<span class=\"number\">0x30</span>&gt;</span><br><span class=\"line\"> <span class=\"number\">5</span>b7:   <span class=\"number\">5</span>d                      <span class=\"keyword\">pop </span>   %rbp</span><br><span class=\"line\"> <span class=\"number\">5</span>b8:   ff e0                   jmpq   *%rax</span><br><span class=\"line\"> <span class=\"number\">5</span>ba:   <span class=\"number\">66</span> <span class=\"number\">0</span>f <span class=\"number\">1</span>f <span class=\"number\">44</span> <span class=\"number\">00</span> <span class=\"number\">00</span>       <span class=\"keyword\">nopw </span>  <span class=\"number\">0x0</span>(%rax,%rax,<span class=\"number\">1</span>)</span><br><span class=\"line\"> <span class=\"number\">5</span><span class=\"built_in\">c0</span>:   <span class=\"number\">5</span>d                      <span class=\"keyword\">pop </span>   %rbp</span><br><span class=\"line\"> <span class=\"number\">5</span><span class=\"built_in\">c1</span>:   <span class=\"built_in\">c3</span>                      retq   </span><br><span class=\"line\"> <span class=\"number\">5</span><span class=\"built_in\">c2</span>:   <span class=\"number\">0</span>f <span class=\"number\">1</span>f <span class=\"number\">40</span> <span class=\"number\">00</span>             <span class=\"keyword\">nopl </span>  <span class=\"number\">0x0</span>(%rax)</span><br><span class=\"line\"> <span class=\"number\">5</span><span class=\"built_in\">c6</span>:   <span class=\"number\">66</span> <span class=\"number\">2</span>e <span class=\"number\">0</span>f <span class=\"number\">1</span>f <span class=\"number\">84</span> <span class=\"number\">00</span> <span class=\"number\">00</span>    <span class=\"keyword\">nopw </span>  %cs:<span class=\"number\">0x0</span>(%rax,%rax,<span class=\"number\">1</span>)</span><br><span class=\"line\"> <span class=\"number\">5</span>cd:   <span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">00</span> </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">00000000000005</span><span class=\"built_in\">d0</span> &lt;register_tm_clones&gt;:</span><br><span class=\"line\"> <span class=\"number\">5</span><span class=\"built_in\">d0</span>:   <span class=\"number\">48</span> <span class=\"number\">8</span>d <span class=\"number\">3</span>d <span class=\"number\">59</span> <span class=\"number\">0</span>a <span class=\"number\">20</span> <span class=\"number\">00</span>    lea    <span class=\"number\">0x200a59</span>(%rip),%rdi        # <span class=\"number\">201030</span> &lt;__TMC_END__&gt;</span><br><span class=\"line\"> <span class=\"number\">5</span><span class=\"built_in\">d7</span>:   <span class=\"number\">48</span> <span class=\"number\">8</span>d <span class=\"number\">35</span> <span class=\"number\">52</span> <span class=\"number\">0</span>a <span class=\"number\">20</span> <span class=\"number\">00</span>    lea    <span class=\"number\">0x200a52</span>(%rip),%rsi        # <span class=\"number\">201030</span> &lt;__TMC_END__&gt;</span><br><span class=\"line\"> <span class=\"number\">5</span>de:   <span class=\"number\">55</span>                      <span class=\"keyword\">push </span>  %rbp</span><br><span class=\"line\"> <span class=\"number\">5</span>df:   <span class=\"number\">48</span> <span class=\"number\">29</span> fe                <span class=\"keyword\">sub </span>   %rdi,%rsi</span><br><span class=\"line\"> <span class=\"number\">5</span>e2:   <span class=\"number\">48</span> <span class=\"number\">89</span> e5                <span class=\"keyword\">mov </span>   %rsp,%rbp</span><br><span class=\"line\"> <span class=\"number\">5</span>e5:   <span class=\"number\">48</span> <span class=\"built_in\">c1</span> fe <span class=\"number\">03</span>             sar    <span class=\"number\">$0x3</span>,%rsi</span><br><span class=\"line\"> <span class=\"number\">5</span>e9:   <span class=\"number\">48</span> <span class=\"number\">89</span> <span class=\"built_in\">f0</span>                <span class=\"keyword\">mov </span>   %rsi,%rax</span><br><span class=\"line\"> <span class=\"number\">5</span>ec:   <span class=\"number\">48</span> <span class=\"built_in\">c1</span> e8 <span class=\"number\">3</span>f             shr    <span class=\"number\">$0x3f</span>,%rax</span><br><span class=\"line\"> <span class=\"number\">5</span><span class=\"built_in\">f0</span>:   <span class=\"number\">48</span> <span class=\"number\">01</span> <span class=\"built_in\">c6</span>                <span class=\"keyword\">add </span>   %rax,%rsi</span><br><span class=\"line\"> <span class=\"number\">5</span><span class=\"built_in\">f3</span>:   <span class=\"number\">48</span> <span class=\"built_in\">d1</span> fe                sar    %rsi</span><br><span class=\"line\"> <span class=\"number\">5</span><span class=\"built_in\">f6</span>:   <span class=\"number\">74</span> <span class=\"number\">18</span>                   je     <span class=\"number\">610</span> &lt;register_tm_clones+<span class=\"number\">0x40</span>&gt;</span><br><span class=\"line\"> <span class=\"number\">5</span>f8:   <span class=\"number\">48</span> <span class=\"number\">8</span>b <span class=\"number\">05</span> f9 <span class=\"number\">09</span> <span class=\"number\">20</span> <span class=\"number\">00</span>    <span class=\"keyword\">mov </span>   <span class=\"number\">0x2009f9</span>(%rip),%rax        # <span class=\"number\">200</span>ff8 &lt;_ITM_registerTMCloneTable&gt;</span><br><span class=\"line\"> <span class=\"number\">5</span>ff:   <span class=\"number\">48</span> <span class=\"number\">85</span> <span class=\"built_in\">c0</span>                test   %rax,%rax</span><br><span class=\"line\"> <span class=\"number\">602</span>:   <span class=\"number\">74</span> <span class=\"number\">0</span>c                   je     <span class=\"number\">610</span> &lt;register_tm_clones+<span class=\"number\">0x40</span>&gt;</span><br><span class=\"line\"> <span class=\"number\">604</span>:   <span class=\"number\">5</span>d                      <span class=\"keyword\">pop </span>   %rbp</span><br><span class=\"line\"> <span class=\"number\">605</span>:   ff e0                   jmpq   *%rax</span><br><span class=\"line\"> <span class=\"number\">607</span>:   <span class=\"number\">66</span> <span class=\"number\">0</span>f <span class=\"number\">1</span>f <span class=\"number\">84</span> <span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">00</span>    <span class=\"keyword\">nopw </span>  <span class=\"number\">0x0</span>(%rax,%rax,<span class=\"number\">1</span>)</span><br><span class=\"line\"> <span class=\"number\">60</span>e:   <span class=\"number\">00</span> <span class=\"number\">00</span> </span><br><span class=\"line\"> <span class=\"number\">610</span>:   <span class=\"number\">5</span>d                      <span class=\"keyword\">pop </span>   %rbp</span><br><span class=\"line\"> <span class=\"number\">611</span>:   <span class=\"built_in\">c3</span>                      retq   </span><br><span class=\"line\"> <span class=\"number\">612</span>:   <span class=\"number\">0</span>f <span class=\"number\">1</span>f <span class=\"number\">40</span> <span class=\"number\">00</span>             <span class=\"keyword\">nopl </span>  <span class=\"number\">0x0</span>(%rax)</span><br><span class=\"line\"> <span class=\"number\">616</span>:   <span class=\"number\">66</span> <span class=\"number\">2</span>e <span class=\"number\">0</span>f <span class=\"number\">1</span>f <span class=\"number\">84</span> <span class=\"number\">00</span> <span class=\"number\">00</span>    <span class=\"keyword\">nopw </span>  %cs:<span class=\"number\">0x0</span>(%rax,%rax,<span class=\"number\">1</span>)</span><br><span class=\"line\"> <span class=\"number\">61</span>d:   <span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">00</span> </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">0000000000000620</span> &lt;__do_global_dtors_aux&gt;:</span><br><span class=\"line\"> <span class=\"number\">620</span>:   <span class=\"number\">80</span> <span class=\"number\">3</span>d <span class=\"number\">05</span> <span class=\"number\">0</span>a <span class=\"number\">20</span> <span class=\"number\">00</span> <span class=\"number\">00</span>    <span class=\"keyword\">cmpb </span>  <span class=\"number\">$0x0</span>,<span class=\"number\">0x200a05</span>(%rip)        # <span class=\"number\">20102</span>c &lt;_edata&gt;</span><br><span class=\"line\"> <span class=\"number\">627</span>:   <span class=\"number\">75</span> <span class=\"number\">27</span>                   jne    <span class=\"number\">650</span> &lt;__do_global_dtors_aux+<span class=\"number\">0x30</span>&gt;</span><br><span class=\"line\"> <span class=\"number\">629</span>:   <span class=\"number\">48</span> <span class=\"number\">83</span> <span class=\"number\">3</span>d <span class=\"number\">9</span>f <span class=\"number\">09</span> <span class=\"number\">20</span> <span class=\"number\">00</span>    <span class=\"keyword\">cmpq </span>  <span class=\"number\">$0x0</span>,<span class=\"number\">0x20099f</span>(%rip)        # <span class=\"number\">200</span>fd0 &lt;__cxa_finalize<span class=\"comment\">@GLIBC_2.2.5&gt;</span></span><br><span class=\"line\"> <span class=\"number\">630</span>:   <span class=\"number\">00</span> </span><br><span class=\"line\"> <span class=\"number\">631</span>:   <span class=\"number\">55</span>                      <span class=\"keyword\">push </span>  %rbp</span><br><span class=\"line\"> <span class=\"number\">632</span>:   <span class=\"number\">48</span> <span class=\"number\">89</span> e5                <span class=\"keyword\">mov </span>   %rsp,%rbp</span><br><span class=\"line\"> <span class=\"number\">635</span>:   <span class=\"number\">74</span> <span class=\"number\">0</span>c                   je     <span class=\"number\">643</span> &lt;__do_global_dtors_aux+<span class=\"number\">0x23</span>&gt;</span><br><span class=\"line\"> <span class=\"number\">637</span>:   <span class=\"number\">48</span> <span class=\"number\">8</span>b <span class=\"number\">3</span>d e2 <span class=\"number\">09</span> <span class=\"number\">20</span> <span class=\"number\">00</span>    <span class=\"keyword\">mov </span>   <span class=\"number\">0x2009e2</span>(%rip),%rdi        # <span class=\"number\">201020</span> &lt;__dso_handle&gt;</span><br><span class=\"line\"> <span class=\"number\">63</span>e:   e8 <span class=\"number\">0</span>d ff ff ff          callq  <span class=\"number\">550</span> &lt;.plt.got&gt;</span><br><span class=\"line\"> <span class=\"number\">643</span>:   e8 <span class=\"number\">48</span> ff ff ff          callq  <span class=\"number\">590</span> &lt;deregister_tm_clones&gt;</span><br><span class=\"line\"> <span class=\"number\">648</span>:   <span class=\"number\">5</span>d                      <span class=\"keyword\">pop </span>   %rbp</span><br><span class=\"line\"> <span class=\"number\">649</span>:   <span class=\"built_in\">c6</span> <span class=\"number\">05</span> dc <span class=\"number\">09</span> <span class=\"number\">20</span> <span class=\"number\">00</span> <span class=\"number\">01</span>    <span class=\"keyword\">movb </span>  <span class=\"number\">$0x1</span>,<span class=\"number\">0x2009dc</span>(%rip)        # <span class=\"number\">20102</span>c &lt;_edata&gt;</span><br><span class=\"line\"> <span class=\"number\">650</span>:   <span class=\"built_in\">f3</span> <span class=\"built_in\">c3</span>                   repz retq </span><br><span class=\"line\"> <span class=\"number\">652</span>:   <span class=\"number\">0</span>f <span class=\"number\">1</span>f <span class=\"number\">40</span> <span class=\"number\">00</span>             <span class=\"keyword\">nopl </span>  <span class=\"number\">0x0</span>(%rax)</span><br><span class=\"line\"> <span class=\"number\">656</span>:   <span class=\"number\">66</span> <span class=\"number\">2</span>e <span class=\"number\">0</span>f <span class=\"number\">1</span>f <span class=\"number\">84</span> <span class=\"number\">00</span> <span class=\"number\">00</span>    <span class=\"keyword\">nopw </span>  %cs:<span class=\"number\">0x0</span>(%rax,%rax,<span class=\"number\">1</span>)</span><br><span class=\"line\"> <span class=\"number\">65</span>d:   <span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">00</span> </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">0000000000000660</span> &lt;frame_dummy&gt;:</span><br><span class=\"line\"> <span class=\"number\">660</span>:   <span class=\"number\">48</span> <span class=\"number\">8</span>d <span class=\"number\">3</span>d <span class=\"number\">81</span> <span class=\"number\">07</span> <span class=\"number\">20</span> <span class=\"number\">00</span>    lea    <span class=\"number\">0x200781</span>(%rip),%rdi        # <span class=\"number\">200</span>de8 &lt;__JCR_END__&gt;</span><br><span class=\"line\"> <span class=\"number\">667</span>:   <span class=\"number\">48</span> <span class=\"number\">83</span> <span class=\"number\">3</span>f <span class=\"number\">00</span>             <span class=\"keyword\">cmpq </span>  <span class=\"number\">$0x0</span>,(%rdi)</span><br><span class=\"line\"> <span class=\"number\">66</span>b:   <span class=\"number\">75</span> <span class=\"number\">0</span>b                   jne    <span class=\"number\">678</span> &lt;frame_dummy+<span class=\"number\">0x18</span>&gt;</span><br><span class=\"line\"> <span class=\"number\">66</span>d:   e9 <span class=\"number\">5</span>e ff ff ff          jmpq   <span class=\"number\">5</span><span class=\"built_in\">d0</span> &lt;register_tm_clones&gt;</span><br><span class=\"line\"> <span class=\"number\">672</span>:   <span class=\"number\">66</span> <span class=\"number\">0</span>f <span class=\"number\">1</span>f <span class=\"number\">44</span> <span class=\"number\">00</span> <span class=\"number\">00</span>       <span class=\"keyword\">nopw </span>  <span class=\"number\">0x0</span>(%rax,%rax,<span class=\"number\">1</span>)</span><br><span class=\"line\"> <span class=\"number\">678</span>:   <span class=\"number\">48</span> <span class=\"number\">8</span>b <span class=\"number\">05</span> <span class=\"number\">59</span> <span class=\"number\">09</span> <span class=\"number\">20</span> <span class=\"number\">00</span>    <span class=\"keyword\">mov </span>   <span class=\"number\">0x200959</span>(%rip),%rax        # <span class=\"number\">200</span>fd8 &lt;_Jv_RegisterClasses&gt;</span><br><span class=\"line\"> <span class=\"number\">67</span>f:   <span class=\"number\">48</span> <span class=\"number\">85</span> <span class=\"built_in\">c0</span>                test   %rax,%rax</span><br><span class=\"line\"> <span class=\"number\">682</span>:   <span class=\"number\">74</span> e9                   je     <span class=\"number\">66</span>d &lt;frame_dummy+<span class=\"number\">0xd</span>&gt;</span><br><span class=\"line\"> <span class=\"number\">684</span>:   <span class=\"number\">55</span>                      <span class=\"keyword\">push </span>  %rbp</span><br><span class=\"line\"> <span class=\"number\">685</span>:   <span class=\"number\">48</span> <span class=\"number\">89</span> e5                <span class=\"keyword\">mov </span>   %rsp,%rbp</span><br><span class=\"line\"> <span class=\"number\">688</span>:   ff <span class=\"built_in\">d0</span>                   callq  *%rax</span><br><span class=\"line\"> <span class=\"number\">68</span>a:   <span class=\"number\">5</span>d                      <span class=\"keyword\">pop </span>   %rbp</span><br><span class=\"line\"> <span class=\"number\">68</span>b:   e9 <span class=\"number\">40</span> ff ff ff          jmpq   <span class=\"number\">5</span><span class=\"built_in\">d0</span> &lt;register_tm_clones&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">0000000000000690</span> &lt;_Z9main_funcii&gt;:</span><br><span class=\"line\"> <span class=\"number\">690</span>:   <span class=\"number\">55</span>                      <span class=\"keyword\">push </span>  %rbp</span><br><span class=\"line\"> <span class=\"number\">691</span>:   <span class=\"number\">48</span> <span class=\"number\">89</span> e5                <span class=\"keyword\">mov </span>   %rsp,%rbp</span><br><span class=\"line\"> <span class=\"number\">694</span>:   <span class=\"number\">89</span> <span class=\"number\">7</span>d fc                <span class=\"keyword\">mov </span>   %edi,-<span class=\"number\">0x4</span>(%rbp)</span><br><span class=\"line\"> <span class=\"number\">697</span>:   <span class=\"number\">89</span> <span class=\"number\">75</span> f8                <span class=\"keyword\">mov </span>   %esi,-<span class=\"number\">0x8</span>(%rbp)</span><br><span class=\"line\"> <span class=\"number\">69</span>a:   <span class=\"number\">8</span>b <span class=\"number\">55</span> fc                <span class=\"keyword\">mov </span>   -<span class=\"number\">0x4</span>(%rbp),%edx</span><br><span class=\"line\"> <span class=\"number\">69</span>d:   <span class=\"number\">8</span>b <span class=\"number\">45</span> f8                <span class=\"keyword\">mov </span>   -<span class=\"number\">0x8</span>(%rbp),%eax</span><br><span class=\"line\"> <span class=\"number\">6</span>a0:   <span class=\"number\">01</span> <span class=\"built_in\">d0</span>                   <span class=\"keyword\">add </span>   %edx,%eax</span><br><span class=\"line\"> <span class=\"number\">6</span><span class=\"built_in\">a2</span>:   <span class=\"number\">05</span> <span class=\"built_in\">c3</span> <span class=\"number\">07</span> <span class=\"number\">00</span> <span class=\"number\">00</span>          <span class=\"keyword\">add </span>   <span class=\"number\">$0x7c3</span>,%eax</span><br><span class=\"line\"> <span class=\"number\">6</span>a7:   <span class=\"number\">5</span>d                      <span class=\"keyword\">pop </span>   %rbp</span><br><span class=\"line\"> <span class=\"number\">6</span>a8:   <span class=\"built_in\">c3</span>                      retq   </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">00000000000006</span>a9 &lt;main&gt;:</span><br><span class=\"line\"> <span class=\"number\">6</span>a9:   <span class=\"number\">55</span>                      <span class=\"keyword\">push </span>  %rbp</span><br><span class=\"line\"> <span class=\"number\">6</span>aa:   <span class=\"number\">48</span> <span class=\"number\">89</span> e5                <span class=\"keyword\">mov </span>   %rsp,%rbp</span><br><span class=\"line\"> <span class=\"number\">6</span>ad:   <span class=\"number\">48</span> <span class=\"number\">83</span> ec <span class=\"number\">20</span>             <span class=\"keyword\">sub </span>   <span class=\"number\">$0x20</span>,%rsp</span><br><span class=\"line\"> <span class=\"number\">6</span>b1:   <span class=\"number\">89</span> <span class=\"number\">7</span>d ec                <span class=\"keyword\">mov </span>   %edi,-<span class=\"number\">0x14</span>(%rbp)</span><br><span class=\"line\"> <span class=\"number\">6</span>b4:   <span class=\"number\">48</span> <span class=\"number\">89</span> <span class=\"number\">75</span> e0             <span class=\"keyword\">mov </span>   %rsi,-<span class=\"number\">0x20</span>(%rbp)</span><br><span class=\"line\"> <span class=\"number\">6</span>b8:   <span class=\"built_in\">c7</span> <span class=\"number\">45</span> fc <span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">00</span>    <span class=\"keyword\">movl </span>  <span class=\"number\">$0x0</span>,-<span class=\"number\">0x4</span>(%rbp)</span><br><span class=\"line\"> <span class=\"number\">6</span>bf:   <span class=\"number\">8</span>b <span class=\"number\">45</span> ec                <span class=\"keyword\">mov </span>   -<span class=\"number\">0x14</span>(%rbp),%eax</span><br><span class=\"line\"> <span class=\"number\">6</span><span class=\"built_in\">c2</span>:   <span class=\"number\">89</span> <span class=\"number\">05</span> <span class=\"number\">68</span> <span class=\"number\">09</span> <span class=\"number\">20</span> <span class=\"number\">00</span>       <span class=\"keyword\">mov </span>   %eax,<span class=\"number\">0x200968</span>(%rip)        # <span class=\"number\">201030</span> &lt;__TMC_END__&gt;</span><br><span class=\"line\"> <span class=\"number\">6</span><span class=\"built_in\">c8</span>:   <span class=\"number\">8</span>b <span class=\"number\">15</span> <span class=\"number\">5</span>a <span class=\"number\">09</span> <span class=\"number\">20</span> <span class=\"number\">00</span>       <span class=\"keyword\">mov </span>   <span class=\"number\">0x20095a</span>(%rip),%edx        # <span class=\"number\">201028</span> &lt;g_static_data&gt;</span><br><span class=\"line\"> <span class=\"number\">6</span>ce:   <span class=\"number\">8</span>b <span class=\"number\">05</span> <span class=\"number\">5</span>c <span class=\"number\">09</span> <span class=\"number\">20</span> <span class=\"number\">00</span>       <span class=\"keyword\">mov </span>   <span class=\"number\">0x20095c</span>(%rip),%eax        # <span class=\"number\">201030</span> &lt;__TMC_END__&gt;</span><br><span class=\"line\"> <span class=\"number\">6</span><span class=\"built_in\">d4</span>:   <span class=\"number\">89</span> <span class=\"built_in\">d6</span>                   <span class=\"keyword\">mov </span>   %edx,%esi</span><br><span class=\"line\"> <span class=\"number\">6</span><span class=\"built_in\">d6</span>:   <span class=\"number\">89</span> <span class=\"built_in\">c7</span>                   <span class=\"keyword\">mov </span>   %eax,%edi</span><br><span class=\"line\"> <span class=\"number\">6</span><span class=\"built_in\">d8</span>:   e8 <span class=\"keyword\">b3 </span>ff ff ff          callq  <span class=\"number\">690</span> &lt;_Z9main_funcii&gt;</span><br><span class=\"line\"> <span class=\"number\">6</span>dd:   <span class=\"number\">01</span> <span class=\"number\">45</span> fc                <span class=\"keyword\">add </span>   %eax,-<span class=\"number\">0x4</span>(%rbp)</span><br><span class=\"line\"> <span class=\"number\">6</span>e0:   <span class=\"number\">8</span>b <span class=\"number\">45</span> fc                <span class=\"keyword\">mov </span>   -<span class=\"number\">0x4</span>(%rbp),%eax</span><br><span class=\"line\"> <span class=\"number\">6</span>e3:   <span class=\"built_in\">c9</span>                      leaveq </span><br><span class=\"line\"> <span class=\"number\">6</span>e4:   <span class=\"built_in\">c3</span>                      retq   </span><br><span class=\"line\"> <span class=\"number\">6</span>e5:   <span class=\"number\">66</span> <span class=\"number\">2</span>e <span class=\"number\">0</span>f <span class=\"number\">1</span>f <span class=\"number\">84</span> <span class=\"number\">00</span> <span class=\"number\">00</span>    <span class=\"keyword\">nopw </span>  %cs:<span class=\"number\">0x0</span>(%rax,%rax,<span class=\"number\">1</span>)</span><br><span class=\"line\"> <span class=\"number\">6</span>ec:   <span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">00</span> </span><br><span class=\"line\"> <span class=\"number\">6</span>ef:   <span class=\"number\">90</span>                      <span class=\"keyword\">nop</span></span><br><span class=\"line\"><span class=\"keyword\"></span></span><br><span class=\"line\"><span class=\"keyword\">00000000000006f0 </span>&lt;__libc_csu_init&gt;:</span><br><span class=\"line\"> <span class=\"number\">6</span><span class=\"built_in\">f0</span>:   <span class=\"number\">41</span> <span class=\"number\">57</span>                   <span class=\"keyword\">push </span>  %<span class=\"built_in\">r15</span></span><br><span class=\"line\"> <span class=\"number\">6</span><span class=\"built_in\">f2</span>:   <span class=\"number\">41</span> <span class=\"number\">56</span>                   <span class=\"keyword\">push </span>  %<span class=\"built_in\">r14</span></span><br><span class=\"line\"> <span class=\"number\">6</span><span class=\"built_in\">f4</span>:   <span class=\"number\">49</span> <span class=\"number\">89</span> <span class=\"built_in\">d7</span>                <span class=\"keyword\">mov </span>   %rdx,%<span class=\"built_in\">r15</span></span><br><span class=\"line\"> <span class=\"number\">6</span><span class=\"built_in\">f7</span>:   <span class=\"number\">41</span> <span class=\"number\">55</span>                   <span class=\"keyword\">push </span>  %<span class=\"built_in\">r13</span></span><br><span class=\"line\"> <span class=\"number\">6</span>f9:   <span class=\"number\">41</span> <span class=\"number\">54</span>                   <span class=\"keyword\">push </span>  %<span class=\"built_in\">r12</span></span><br><span class=\"line\"> <span class=\"number\">6</span>fb:   <span class=\"number\">4</span>c <span class=\"number\">8</span>d <span class=\"number\">25</span> <span class=\"built_in\">d6</span> <span class=\"number\">06</span> <span class=\"number\">20</span> <span class=\"number\">00</span>    lea    <span class=\"number\">0x2006d6</span>(%rip),%<span class=\"built_in\">r12</span>        # <span class=\"number\">200</span>dd8 &lt;__frame_dummy_init_array_entry&gt;</span><br><span class=\"line\"> <span class=\"number\">702</span>:   <span class=\"number\">55</span>                      <span class=\"keyword\">push </span>  %rbp</span><br><span class=\"line\"> <span class=\"number\">703</span>:   <span class=\"number\">48</span> <span class=\"number\">8</span>d <span class=\"number\">2</span>d <span class=\"built_in\">d6</span> <span class=\"number\">06</span> <span class=\"number\">20</span> <span class=\"number\">00</span>    lea    <span class=\"number\">0x2006d6</span>(%rip),%rbp        # <span class=\"number\">200</span>de0 &lt;__init_array_end&gt;</span><br><span class=\"line\"> <span class=\"number\">70</span>a:   <span class=\"number\">53</span>                      <span class=\"keyword\">push </span>  %rbx</span><br><span class=\"line\"> <span class=\"number\">70</span>b:   <span class=\"number\">41</span> <span class=\"number\">89</span> fd                <span class=\"keyword\">mov </span>   %edi,%r13d</span><br><span class=\"line\"> <span class=\"number\">70</span>e:   <span class=\"number\">49</span> <span class=\"number\">89</span> <span class=\"built_in\">f6</span>                <span class=\"keyword\">mov </span>   %rsi,%<span class=\"built_in\">r14</span></span><br><span class=\"line\"> <span class=\"number\">711</span>:   <span class=\"number\">4</span>c <span class=\"number\">29</span> e5                <span class=\"keyword\">sub </span>   %<span class=\"built_in\">r12</span>,%rbp</span><br><span class=\"line\"> <span class=\"number\">714</span>:   <span class=\"number\">48</span> <span class=\"number\">83</span> ec <span class=\"number\">08</span>             <span class=\"keyword\">sub </span>   <span class=\"number\">$0x8</span>,%rsp</span><br><span class=\"line\"> <span class=\"number\">718</span>:   <span class=\"number\">48</span> <span class=\"built_in\">c1</span> fd <span class=\"number\">03</span>             sar    <span class=\"number\">$0x3</span>,%rbp</span><br><span class=\"line\"> <span class=\"number\">71</span>c:   e8 ff fd ff ff          callq  <span class=\"number\">520</span> &lt;_init&gt;</span><br><span class=\"line\"> <span class=\"number\">721</span>:   <span class=\"number\">48</span> <span class=\"number\">85</span> ed                test   %rbp,%rbp</span><br><span class=\"line\"> <span class=\"number\">724</span>:   <span class=\"number\">74</span> <span class=\"number\">20</span>                   je     <span class=\"number\">746</span> &lt;__libc_csu_init+<span class=\"number\">0x56</span>&gt;</span><br><span class=\"line\"> <span class=\"number\">726</span>:   <span class=\"number\">31</span> db                   xor    %ebx,%ebx</span><br><span class=\"line\"> <span class=\"number\">728</span>:   <span class=\"number\">0</span>f <span class=\"number\">1</span>f <span class=\"number\">84</span> <span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">00</span>    <span class=\"keyword\">nopl </span>  <span class=\"number\">0x0</span>(%rax,%rax,<span class=\"number\">1</span>)</span><br><span class=\"line\"> <span class=\"number\">72</span>f:   <span class=\"number\">00</span> </span><br><span class=\"line\"> <span class=\"number\">730</span>:   <span class=\"number\">4</span>c <span class=\"number\">89</span> fa                <span class=\"keyword\">mov </span>   %<span class=\"built_in\">r15</span>,%rdx</span><br><span class=\"line\"> <span class=\"number\">733</span>:   <span class=\"number\">4</span>c <span class=\"number\">89</span> <span class=\"built_in\">f6</span>                <span class=\"keyword\">mov </span>   %<span class=\"built_in\">r14</span>,%rsi</span><br><span class=\"line\"> <span class=\"number\">736</span>:   <span class=\"number\">44</span> <span class=\"number\">89</span> ef                <span class=\"keyword\">mov </span>   %r13d,%edi</span><br><span class=\"line\"> <span class=\"number\">739</span>:   <span class=\"number\">41</span> ff <span class=\"number\">14</span> dc             callq  *(%<span class=\"built_in\">r12</span>,%rbx,<span class=\"number\">8</span>)</span><br><span class=\"line\"> <span class=\"number\">73</span>d:   <span class=\"number\">48</span> <span class=\"number\">83</span> <span class=\"built_in\">c3</span> <span class=\"number\">01</span>             <span class=\"keyword\">add </span>   <span class=\"number\">$0x1</span>,%rbx</span><br><span class=\"line\"> <span class=\"number\">741</span>:   <span class=\"number\">48</span> <span class=\"number\">39</span> dd                <span class=\"keyword\">cmp </span>   %rbx,%rbp</span><br><span class=\"line\"> <span class=\"number\">744</span>:   <span class=\"number\">75</span> ea                   jne    <span class=\"number\">730</span> &lt;__libc_csu_init+<span class=\"number\">0x40</span>&gt;</span><br><span class=\"line\"> <span class=\"number\">746</span>:   <span class=\"number\">48</span> <span class=\"number\">83</span> <span class=\"built_in\">c4</span> <span class=\"number\">08</span>             <span class=\"keyword\">add </span>   <span class=\"number\">$0x8</span>,%rsp</span><br><span class=\"line\"> <span class=\"number\">74</span>a:   <span class=\"number\">5</span>b                      <span class=\"keyword\">pop </span>   %rbx</span><br><span class=\"line\"> <span class=\"number\">74</span>b:   <span class=\"number\">5</span>d                      <span class=\"keyword\">pop </span>   %rbp</span><br><span class=\"line\"> <span class=\"number\">74</span>c:   <span class=\"number\">41</span> <span class=\"number\">5</span>c                   <span class=\"keyword\">pop </span>   %<span class=\"built_in\">r12</span></span><br><span class=\"line\"> <span class=\"number\">74</span>e:   <span class=\"number\">41</span> <span class=\"number\">5</span>d                   <span class=\"keyword\">pop </span>   %<span class=\"built_in\">r13</span></span><br><span class=\"line\"> <span class=\"number\">750</span>:   <span class=\"number\">41</span> <span class=\"number\">5</span>e                   <span class=\"keyword\">pop </span>   %<span class=\"built_in\">r14</span></span><br><span class=\"line\"> <span class=\"number\">752</span>:   <span class=\"number\">41</span> <span class=\"number\">5</span>f                   <span class=\"keyword\">pop </span>   %<span class=\"built_in\">r15</span></span><br><span class=\"line\"> <span class=\"number\">754</span>:   <span class=\"built_in\">c3</span>                      retq   </span><br><span class=\"line\"> <span class=\"number\">755</span>:   <span class=\"number\">90</span>                      <span class=\"keyword\">nop</span></span><br><span class=\"line\"><span class=\"keyword\"> </span><span class=\"number\">756</span>:   <span class=\"number\">66</span> <span class=\"number\">2</span>e <span class=\"number\">0</span>f <span class=\"number\">1</span>f <span class=\"number\">84</span> <span class=\"number\">00</span> <span class=\"number\">00</span>    <span class=\"keyword\">nopw </span>  %cs:<span class=\"number\">0x0</span>(%rax,%rax,<span class=\"number\">1</span>)</span><br><span class=\"line\"> <span class=\"number\">75</span>d:   <span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">00</span> </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">0000000000000760</span> &lt;__libc_csu_fini&gt;:</span><br><span class=\"line\"> <span class=\"number\">760</span>:   <span class=\"built_in\">f3</span> <span class=\"built_in\">c3</span>                   repz retq </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"symbol\">Disassembly</span> of section .fini:</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">0000000000000764</span> &lt;_fini&gt;:</span><br><span class=\"line\"> <span class=\"number\">764</span>:   <span class=\"number\">48</span> <span class=\"number\">83</span> ec <span class=\"number\">08</span>             <span class=\"keyword\">sub </span>   <span class=\"number\">$0x8</span>,%rsp</span><br><span class=\"line\"> <span class=\"number\">768</span>:   <span class=\"number\">48</span> <span class=\"number\">83</span> <span class=\"built_in\">c4</span> <span class=\"number\">08</span>             <span class=\"keyword\">add </span>   <span class=\"number\">$0x8</span>,%rsp</span><br><span class=\"line\"> <span class=\"number\">76</span>c:   <span class=\"built_in\">c3</span>                      retq</span><br></pre></td></tr></table></figure>\n\n\n<h5><span id=\"可执行文件-位置无关的非pieexec版本\">可执行文件 (位置无关的非PIE(EXEC)版本)</span></h5><figure class=\"highlight armasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"symbol\">Dynamic</span> section at offset <span class=\"number\">0xe30</span> contains <span class=\"number\">23</span> entries:</span><br><span class=\"line\">  标记        类型                         名称/值</span><br><span class=\"line\"> <span class=\"number\">0x0000000000000001</span> (NEEDED)             共享库：[libstdc++.so.<span class=\"number\">6</span>]</span><br><span class=\"line\"> <span class=\"number\">0x0000000000000001</span> (NEEDED)             共享库：[libm.so.<span class=\"number\">6</span>]</span><br><span class=\"line\"> <span class=\"number\">0x0000000000000001</span> (NEEDED)             共享库：[libgcc_s.so.<span class=\"number\">1</span>]</span><br><span class=\"line\"> <span class=\"number\">0x0000000000000001</span> (NEEDED)             共享库：[libc.so.<span class=\"number\">6</span>]</span><br><span class=\"line\"> <span class=\"number\">0x000000000000000c</span> (INIT)               <span class=\"number\">0x4003b8</span></span><br><span class=\"line\"> <span class=\"number\">0x000000000000000d</span> (FINI)               <span class=\"number\">0x4005b4</span></span><br><span class=\"line\"> <span class=\"number\">0x0000000000000019</span> (INIT_ARRAY)         <span class=\"number\">0x600e18</span></span><br><span class=\"line\"> <span class=\"number\">0x000000000000001b</span> (INIT_ARRAYSZ)       <span class=\"number\">8</span> (<span class=\"keyword\">bytes)</span></span><br><span class=\"line\"><span class=\"keyword\"> </span><span class=\"number\">0x000000000000001a</span> (FINI_ARRAY)         <span class=\"number\">0x600e20</span></span><br><span class=\"line\"> <span class=\"number\">0x000000000000001c</span> (FINI_ARRAYSZ)       <span class=\"number\">8</span> (<span class=\"keyword\">bytes)</span></span><br><span class=\"line\"><span class=\"keyword\"> </span><span class=\"number\">0x000000006ffffef5</span> (GNU_HASH)           <span class=\"number\">0x400298</span></span><br><span class=\"line\"> <span class=\"number\">0x0000000000000005</span> (<span class=\"keyword\">STRTAB) </span>            <span class=\"number\">0x400300</span></span><br><span class=\"line\"> <span class=\"number\">0x0000000000000006</span> (SYMTAB)             <span class=\"number\">0x4002b8</span></span><br><span class=\"line\"> <span class=\"number\">0x000000000000000a</span> (<span class=\"keyword\">STRSZ) </span>             <span class=\"number\">95</span> (<span class=\"keyword\">bytes)</span></span><br><span class=\"line\"><span class=\"keyword\"> </span><span class=\"number\">0x000000000000000b</span> (SYMENT)             <span class=\"number\">24</span> (<span class=\"keyword\">bytes)</span></span><br><span class=\"line\"><span class=\"keyword\"> </span><span class=\"number\">0x0000000000000015</span> (DEBUG)              <span class=\"number\">0x0</span></span><br><span class=\"line\"> <span class=\"number\">0x0000000000000007</span> (RELA)               <span class=\"number\">0x400388</span></span><br><span class=\"line\"> <span class=\"number\">0x0000000000000008</span> (RELASZ)             <span class=\"number\">48</span> (<span class=\"keyword\">bytes)</span></span><br><span class=\"line\"><span class=\"keyword\"> </span><span class=\"number\">0x0000000000000009</span> (RELAENT)            <span class=\"number\">24</span> (<span class=\"keyword\">bytes)</span></span><br><span class=\"line\"><span class=\"keyword\"> </span><span class=\"number\">0x000000006ffffffe</span> (VERNEED)            <span class=\"number\">0x400368</span></span><br><span class=\"line\"> <span class=\"number\">0x000000006fffffff</span> (VERNEEDNUM)         <span class=\"number\">1</span></span><br><span class=\"line\"> <span class=\"number\">0x000000006ffffff0</span> (VERSYM)             <span class=\"number\">0x400360</span></span><br><span class=\"line\"> <span class=\"number\">0x0000000000000000</span> (NULL)               <span class=\"number\">0x0</span></span><br><span class=\"line\"></span><br><span class=\"line\">重定位节 <span class=\"string\">'.rela.dyn'</span> 位于偏移量 <span class=\"number\">0x388</span> 含有 <span class=\"number\">2</span> 个条目：</span><br><span class=\"line\">  偏移量          信息           类型           符号值        符号名称 + 加数</span><br><span class=\"line\"><span class=\"number\">000000600</span>ff0  <span class=\"number\">000100000006</span> R_X86_64_GLOB_DAT <span class=\"number\">0000000000000000</span> __libc_start_main<span class=\"comment\">@GLIBC_2.2.5 + 0</span></span><br><span class=\"line\"><span class=\"number\">000000600</span>ff8  <span class=\"number\">000200000006</span> R_X86_64_GLOB_DAT <span class=\"number\">0000000000000000</span> __gmon_start__ + <span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"symbol\">The</span> decoding of unwind sections for machine type Advanced Micro Devices X86-<span class=\"number\">64</span> is not currently supported.</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"symbol\">Symbol</span> table <span class=\"string\">'.dynsym'</span> contains <span class=\"number\">3</span> entries:</span><br><span class=\"line\"><span class=\"symbol\">   Num:</span>    Value          Size Type    <span class=\"keyword\">Bind </span>  Vis      Ndx Name</span><br><span class=\"line\">     <span class=\"number\">0</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">0</span> NOTYPE  LOCAL  DEFAULT  UND </span><br><span class=\"line\">     <span class=\"number\">1</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">0</span> FUNC    <span class=\"meta\">GLOBAL</span> DEFAULT  UND __libc_start_main<span class=\"comment\">@GLIBC_2.2.5 (2)</span></span><br><span class=\"line\">     <span class=\"number\">2</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">0</span> NOTYPE  WEAK   DEFAULT  UND __gmon_start__</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"symbol\">Symbol</span> table <span class=\"string\">'.symtab'</span> contains <span class=\"number\">65</span> entries:</span><br><span class=\"line\"><span class=\"symbol\">   Num:</span>    Value          Size Type    <span class=\"keyword\">Bind </span>  Vis      Ndx Name</span><br><span class=\"line\">     <span class=\"number\">0</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">0</span> NOTYPE  LOCAL  DEFAULT  UND </span><br><span class=\"line\">     <span class=\"number\">1</span>: <span class=\"number\">0000000000400238</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT    <span class=\"number\">1</span> </span><br><span class=\"line\">     <span class=\"number\">2</span>: <span class=\"number\">0000000000400254</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT    <span class=\"number\">2</span> </span><br><span class=\"line\">     <span class=\"number\">3</span>: <span class=\"number\">0000000000400274</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT    <span class=\"number\">3</span> </span><br><span class=\"line\">     <span class=\"number\">4</span>: <span class=\"number\">0000000000400298</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT    <span class=\"number\">4</span> </span><br><span class=\"line\">     <span class=\"number\">5</span>: <span class=\"number\">00000000004002</span>b8     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT    <span class=\"number\">5</span> </span><br><span class=\"line\">     <span class=\"number\">6</span>: <span class=\"number\">0000000000400300</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT    <span class=\"number\">6</span> </span><br><span class=\"line\">     <span class=\"number\">7</span>: <span class=\"number\">0000000000400360</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT    <span class=\"number\">7</span> </span><br><span class=\"line\">     <span class=\"number\">8</span>: <span class=\"number\">0000000000400368</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT    <span class=\"number\">8</span> </span><br><span class=\"line\">     <span class=\"number\">9</span>: <span class=\"number\">0000000000400388</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT    <span class=\"number\">9</span> </span><br><span class=\"line\">    <span class=\"number\">10</span>: <span class=\"number\">00000000004003</span>b8     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT   <span class=\"number\">10</span> </span><br><span class=\"line\">    <span class=\"number\">11</span>: <span class=\"number\">00000000004003</span><span class=\"built_in\">d0</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT   <span class=\"number\">11</span> </span><br><span class=\"line\">    <span class=\"number\">12</span>: <span class=\"number\">00000000004005</span>b4     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT   <span class=\"number\">12</span> </span><br><span class=\"line\">    <span class=\"number\">13</span>: <span class=\"number\">00000000004005</span><span class=\"built_in\">c0</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT   <span class=\"number\">13</span> </span><br><span class=\"line\">    <span class=\"number\">14</span>: <span class=\"number\">00000000004005</span><span class=\"built_in\">c8</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT   <span class=\"number\">14</span> </span><br><span class=\"line\">    <span class=\"number\">15</span>: <span class=\"number\">0000000000400608</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT   <span class=\"number\">15</span> </span><br><span class=\"line\">    <span class=\"number\">16</span>: <span class=\"number\">0000000000600</span>e18     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT   <span class=\"number\">16</span> </span><br><span class=\"line\">    <span class=\"number\">17</span>: <span class=\"number\">0000000000600</span>e20     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT   <span class=\"number\">17</span> </span><br><span class=\"line\">    <span class=\"number\">18</span>: <span class=\"number\">0000000000600</span>e28     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT   <span class=\"number\">18</span> </span><br><span class=\"line\">    <span class=\"number\">19</span>: <span class=\"number\">0000000000600</span>e30     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT   <span class=\"number\">19</span> </span><br><span class=\"line\">    <span class=\"number\">20</span>: <span class=\"number\">0000000000600</span>ff0     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT   <span class=\"number\">20</span> </span><br><span class=\"line\">    <span class=\"number\">21</span>: <span class=\"number\">0000000000601000</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT   <span class=\"number\">21</span> </span><br><span class=\"line\">    <span class=\"number\">22</span>: <span class=\"number\">0000000000601018</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT   <span class=\"number\">22</span> </span><br><span class=\"line\">    <span class=\"number\">23</span>: <span class=\"number\">000000000060102</span>c     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT   <span class=\"number\">23</span> </span><br><span class=\"line\">    <span class=\"number\">24</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT   <span class=\"number\">24</span> </span><br><span class=\"line\">    <span class=\"number\">25</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">0</span> FILE    LOCAL  DEFAULT  ABS crtstuff.c</span><br><span class=\"line\">    <span class=\"number\">26</span>: <span class=\"number\">0000000000600</span>e28     <span class=\"number\">0</span> OBJECT  LOCAL  DEFAULT   <span class=\"number\">18</span> __JCR_LIST__</span><br><span class=\"line\">    <span class=\"number\">27</span>: <span class=\"number\">0000000000400410</span>     <span class=\"number\">0</span> FUNC    LOCAL  DEFAULT   <span class=\"number\">11</span> deregister_tm_clones</span><br><span class=\"line\">    <span class=\"number\">28</span>: <span class=\"number\">0000000000400450</span>     <span class=\"number\">0</span> FUNC    LOCAL  DEFAULT   <span class=\"number\">11</span> register_tm_clones</span><br><span class=\"line\">    <span class=\"number\">29</span>: <span class=\"number\">0000000000400490</span>     <span class=\"number\">0</span> FUNC    LOCAL  DEFAULT   <span class=\"number\">11</span> __do_global_dtors_aux</span><br><span class=\"line\">    <span class=\"number\">30</span>: <span class=\"number\">000000000060102</span>c     <span class=\"number\">1</span> OBJECT  LOCAL  DEFAULT   <span class=\"number\">23</span> completed.<span class=\"number\">6972</span></span><br><span class=\"line\">    <span class=\"number\">31</span>: <span class=\"number\">0000000000600</span>e20     <span class=\"number\">0</span> OBJECT  LOCAL  DEFAULT   <span class=\"number\">17</span> __do_global_dtors_aux_fin</span><br><span class=\"line\">    <span class=\"number\">32</span>: <span class=\"number\">00000000004004</span>b0     <span class=\"number\">0</span> FUNC    LOCAL  DEFAULT   <span class=\"number\">11</span> frame_dummy</span><br><span class=\"line\">    <span class=\"number\">33</span>: <span class=\"number\">0000000000600</span>e18     <span class=\"number\">0</span> OBJECT  LOCAL  DEFAULT   <span class=\"number\">16</span> __frame_dummy_init_array_</span><br><span class=\"line\">    <span class=\"number\">34</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">0</span> FILE    LOCAL  DEFAULT  ABS test.cpp</span><br><span class=\"line\">    <span class=\"number\">35</span>: <span class=\"number\">00000000004005</span><span class=\"built_in\">c4</span>     <span class=\"number\">4</span> OBJECT  LOCAL  DEFAULT   <span class=\"number\">13</span> _ZL13g_static_text</span><br><span class=\"line\">    <span class=\"number\">36</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">0</span> FILE    LOCAL  DEFAULT  ABS crtstuff.c</span><br><span class=\"line\">    <span class=\"number\">37</span>: <span class=\"number\">0000000000400708</span>     <span class=\"number\">0</span> OBJECT  LOCAL  DEFAULT   <span class=\"number\">15</span> __FRAME_END__</span><br><span class=\"line\">    <span class=\"number\">38</span>: <span class=\"number\">0000000000600</span>e28     <span class=\"number\">0</span> OBJECT  LOCAL  DEFAULT   <span class=\"number\">18</span> __JCR_END__</span><br><span class=\"line\">    <span class=\"number\">39</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">0</span> FILE    LOCAL  DEFAULT  ABS </span><br><span class=\"line\">    <span class=\"number\">40</span>: <span class=\"number\">00000000004005</span><span class=\"built_in\">c8</span>     <span class=\"number\">0</span> NOTYPE  LOCAL  DEFAULT   <span class=\"number\">14</span> __GNU_EH_FRAME_HDR</span><br><span class=\"line\">    <span class=\"number\">41</span>: <span class=\"number\">0000000000600</span>e30     <span class=\"number\">0</span> OBJECT  LOCAL  DEFAULT   <span class=\"number\">19</span> _DYNAMIC</span><br><span class=\"line\">    <span class=\"number\">42</span>: <span class=\"number\">0000000000600</span>e20     <span class=\"number\">0</span> NOTYPE  LOCAL  DEFAULT   <span class=\"number\">16</span> __init_array_end</span><br><span class=\"line\">    <span class=\"number\">43</span>: <span class=\"number\">0000000000600</span>e18     <span class=\"number\">0</span> NOTYPE  LOCAL  DEFAULT   <span class=\"number\">16</span> __init_array_start</span><br><span class=\"line\">    <span class=\"number\">44</span>: <span class=\"number\">0000000000601000</span>     <span class=\"number\">0</span> OBJECT  LOCAL  DEFAULT   <span class=\"number\">21</span> _GLOBAL_OFFSET_TABLE_</span><br><span class=\"line\">    <span class=\"number\">45</span>: <span class=\"number\">0000000000601028</span>     <span class=\"number\">4</span> OBJECT  <span class=\"meta\">GLOBAL</span> DEFAULT   <span class=\"number\">22</span> g_static_data</span><br><span class=\"line\">    <span class=\"number\">46</span>: <span class=\"number\">000000000060102</span>c     <span class=\"number\">0</span> NOTYPE  <span class=\"meta\">GLOBAL</span> DEFAULT   <span class=\"number\">22</span> _edata</span><br><span class=\"line\">    <span class=\"number\">47</span>: <span class=\"number\">0000000000601018</span>     <span class=\"number\">0</span> NOTYPE  WEAK   DEFAULT   <span class=\"number\">22</span> data_start</span><br><span class=\"line\">    <span class=\"number\">48</span>: <span class=\"number\">00000000004005</span><span class=\"built_in\">c0</span>     <span class=\"number\">4</span> OBJECT  <span class=\"meta\">GLOBAL</span> DEFAULT   <span class=\"number\">13</span> _IO_stdin_used</span><br><span class=\"line\">    <span class=\"number\">49</span>: <span class=\"number\">00000000004004</span><span class=\"built_in\">d6</span>    <span class=\"number\">25</span> FUNC    <span class=\"meta\">GLOBAL</span> DEFAULT   <span class=\"number\">11</span> _Z9main_funcii</span><br><span class=\"line\">    <span class=\"number\">50</span>: <span class=\"number\">00000000004004</span>ef    <span class=\"number\">69</span> FUNC    <span class=\"meta\">GLOBAL</span> DEFAULT   <span class=\"number\">11</span> main</span><br><span class=\"line\">    <span class=\"number\">51</span>: <span class=\"number\">0000000000601020</span>     <span class=\"number\">0</span> OBJECT  <span class=\"meta\">GLOBAL</span> HIDDEN    <span class=\"number\">22</span> __dso_handle</span><br><span class=\"line\">    <span class=\"number\">52</span>: <span class=\"number\">00000000004005</span>b4     <span class=\"number\">0</span> FUNC    <span class=\"meta\">GLOBAL</span> DEFAULT   <span class=\"number\">12</span> _fini</span><br><span class=\"line\">    <span class=\"number\">53</span>: <span class=\"number\">0000000000400400</span>     <span class=\"number\">2</span> FUNC    <span class=\"meta\">GLOBAL</span> HIDDEN    <span class=\"number\">11</span> _dl_relocate_static_pie</span><br><span class=\"line\">    <span class=\"number\">54</span>: <span class=\"number\">00000000004003</span><span class=\"built_in\">d0</span>    <span class=\"number\">43</span> FUNC    <span class=\"meta\">GLOBAL</span> DEFAULT   <span class=\"number\">11</span> _start</span><br><span class=\"line\">    <span class=\"number\">55</span>: <span class=\"number\">00000000004003</span>b8     <span class=\"number\">0</span> FUNC    <span class=\"meta\">GLOBAL</span> DEFAULT   <span class=\"number\">10</span> _init</span><br><span class=\"line\">    <span class=\"number\">56</span>: <span class=\"number\">0000000000601030</span>     <span class=\"number\">0</span> OBJECT  <span class=\"meta\">GLOBAL</span> HIDDEN    <span class=\"number\">22</span> __TMC_END__</span><br><span class=\"line\">    <span class=\"number\">57</span>: <span class=\"number\">0000000000601018</span>     <span class=\"number\">0</span> NOTYPE  <span class=\"meta\">GLOBAL</span> DEFAULT   <span class=\"number\">22</span> __data_start</span><br><span class=\"line\">    <span class=\"number\">58</span>: <span class=\"number\">0000000000601038</span>     <span class=\"number\">0</span> NOTYPE  <span class=\"meta\">GLOBAL</span> DEFAULT   <span class=\"number\">23</span> _<span class=\"meta\">end</span></span><br><span class=\"line\">    <span class=\"number\">59</span>: <span class=\"number\">000000000060102</span>c     <span class=\"number\">0</span> NOTYPE  <span class=\"meta\">GLOBAL</span> DEFAULT   <span class=\"number\">23</span> __bss_start</span><br><span class=\"line\">    <span class=\"number\">60</span>: <span class=\"number\">0000000000400540</span>   <span class=\"number\">101</span> FUNC    <span class=\"meta\">GLOBAL</span> DEFAULT   <span class=\"number\">11</span> __libc_csu_init</span><br><span class=\"line\">    <span class=\"number\">61</span>: <span class=\"number\">0000000000601030</span>     <span class=\"number\">4</span> OBJECT  <span class=\"meta\">GLOBAL</span> DEFAULT   <span class=\"number\">23</span> g_static_bss</span><br><span class=\"line\">    <span class=\"number\">62</span>: <span class=\"number\">00000000004005</span>b0     <span class=\"number\">2</span> FUNC    <span class=\"meta\">GLOBAL</span> DEFAULT   <span class=\"number\">11</span> __libc_csu_fini</span><br><span class=\"line\">    <span class=\"number\">63</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">0</span> FUNC    <span class=\"meta\">GLOBAL</span> DEFAULT  UND __libc_start_main<span class=\"comment\">@@GLIBC_</span></span><br><span class=\"line\">    <span class=\"number\">64</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">0</span> NOTYPE  WEAK   DEFAULT  UND __gmon_start__</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"symbol\">.text</span></span><br><span class=\"line\"><span class=\"number\">00000000004003</span>b8 &lt;_init&gt;:</span><br><span class=\"line\">  <span class=\"number\">4003</span>b8:       <span class=\"number\">48</span> <span class=\"number\">83</span> ec <span class=\"number\">08</span>             <span class=\"keyword\">sub </span>   <span class=\"number\">$0x8</span>,%rsp</span><br><span class=\"line\">  <span class=\"number\">4003</span>bc:       <span class=\"number\">48</span> <span class=\"number\">8</span>b <span class=\"number\">05</span> <span class=\"number\">35</span> <span class=\"number\">0</span>c <span class=\"number\">20</span> <span class=\"number\">00</span>    <span class=\"keyword\">mov </span>   <span class=\"number\">0x200c35</span>(%rip),%rax        # <span class=\"number\">600</span>ff8 &lt;__gmon_start__&gt;</span><br><span class=\"line\">  <span class=\"number\">4003</span><span class=\"built_in\">c3</span>:       <span class=\"number\">48</span> <span class=\"number\">85</span> <span class=\"built_in\">c0</span>                test   %rax,%rax</span><br><span class=\"line\">  <span class=\"number\">4003</span><span class=\"built_in\">c6</span>:       <span class=\"number\">74</span> <span class=\"number\">02</span>                   je     <span class=\"number\">4003</span>ca &lt;_init+<span class=\"number\">0x12</span>&gt;</span><br><span class=\"line\">  <span class=\"number\">4003</span><span class=\"built_in\">c8</span>:       ff <span class=\"built_in\">d0</span>                   callq  *%rax</span><br><span class=\"line\">  <span class=\"number\">4003</span>ca:       <span class=\"number\">48</span> <span class=\"number\">83</span> <span class=\"built_in\">c4</span> <span class=\"number\">08</span>             <span class=\"keyword\">add </span>   <span class=\"number\">$0x8</span>,%rsp</span><br><span class=\"line\">  <span class=\"number\">4003</span>ce:       <span class=\"built_in\">c3</span>                      retq   </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"symbol\">Disassembly</span> of section <span class=\"meta\">.text</span>:</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">00000000004003</span><span class=\"built_in\">d0</span> &lt;_start&gt;:</span><br><span class=\"line\">  <span class=\"number\">4003</span><span class=\"built_in\">d0</span>:       <span class=\"number\">31</span> ed                   xor    %ebp,%ebp</span><br><span class=\"line\">  <span class=\"number\">4003</span><span class=\"built_in\">d2</span>:       <span class=\"number\">49</span> <span class=\"number\">89</span> <span class=\"built_in\">d1</span>                <span class=\"keyword\">mov </span>   %rdx,%<span class=\"built_in\">r9</span></span><br><span class=\"line\">  <span class=\"number\">4003</span><span class=\"built_in\">d5</span>:       <span class=\"number\">5</span>e                      <span class=\"keyword\">pop </span>   %rsi</span><br><span class=\"line\">  <span class=\"number\">4003</span><span class=\"built_in\">d6</span>:       <span class=\"number\">48</span> <span class=\"number\">89</span> e2                <span class=\"keyword\">mov </span>   %rsp,%rdx</span><br><span class=\"line\">  <span class=\"number\">4003</span><span class=\"built_in\">d9</span>:       <span class=\"number\">48</span> <span class=\"number\">83</span> e4 <span class=\"built_in\">f0</span>             <span class=\"keyword\">and </span>   <span class=\"number\">$0xfffffffffffffff0</span>,%rsp</span><br><span class=\"line\">  <span class=\"number\">4003</span>dd:       <span class=\"number\">50</span>                      <span class=\"keyword\">push </span>  %rax</span><br><span class=\"line\">  <span class=\"number\">4003</span>de:       <span class=\"number\">54</span>                      <span class=\"keyword\">push </span>  %rsp</span><br><span class=\"line\">  <span class=\"number\">4003</span>df:       <span class=\"number\">49</span> <span class=\"built_in\">c7</span> <span class=\"built_in\">c0</span> <span class=\"keyword\">b0 </span><span class=\"number\">05</span> <span class=\"number\">40</span> <span class=\"number\">00</span>    <span class=\"keyword\">mov </span>   <span class=\"number\">$0x4005b0</span>,%<span class=\"built_in\">r8</span></span><br><span class=\"line\">  <span class=\"number\">4003</span>e6:       <span class=\"number\">48</span> <span class=\"built_in\">c7</span> <span class=\"built_in\">c1</span> <span class=\"number\">40</span> <span class=\"number\">05</span> <span class=\"number\">40</span> <span class=\"number\">00</span>    <span class=\"keyword\">mov </span>   <span class=\"number\">$0x400540</span>,%rcx</span><br><span class=\"line\">  <span class=\"number\">4003</span>ed:       <span class=\"number\">48</span> <span class=\"built_in\">c7</span> <span class=\"built_in\">c7</span> ef <span class=\"number\">04</span> <span class=\"number\">40</span> <span class=\"number\">00</span>    <span class=\"keyword\">mov </span>   <span class=\"number\">$0x4004ef</span>,%rdi</span><br><span class=\"line\">  <span class=\"number\">4003</span><span class=\"built_in\">f4</span>:       ff <span class=\"number\">15</span> <span class=\"built_in\">f6</span> <span class=\"number\">0</span>b <span class=\"number\">20</span> <span class=\"number\">00</span>       callq  *<span class=\"number\">0x200bf6</span>(%rip)        # <span class=\"number\">600</span>ff0 &lt;__libc_start_main<span class=\"comment\">@GLIBC_2.2.5&gt;</span></span><br><span class=\"line\">  <span class=\"number\">4003</span>fa:       <span class=\"built_in\">f4</span>                      hlt    </span><br><span class=\"line\">  <span class=\"number\">4003</span>fb:       <span class=\"number\">0</span>f <span class=\"number\">1</span>f <span class=\"number\">44</span> <span class=\"number\">00</span> <span class=\"number\">00</span>          <span class=\"keyword\">nopl </span>  <span class=\"number\">0x0</span>(%rax,%rax,<span class=\"number\">1</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">0000000000400400</span> &lt;_dl_relocate_static_pie&gt;:</span><br><span class=\"line\">  <span class=\"number\">400400</span>:       <span class=\"built_in\">f3</span> <span class=\"built_in\">c3</span>                   repz retq </span><br><span class=\"line\">  <span class=\"number\">400402</span>:       <span class=\"number\">66</span> <span class=\"number\">2</span>e <span class=\"number\">0</span>f <span class=\"number\">1</span>f <span class=\"number\">84</span> <span class=\"number\">00</span> <span class=\"number\">00</span>    <span class=\"keyword\">nopw </span>  %cs:<span class=\"number\">0x0</span>(%rax,%rax,<span class=\"number\">1</span>)</span><br><span class=\"line\">  <span class=\"number\">400409</span>:       <span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">00</span> </span><br><span class=\"line\">  <span class=\"number\">40040</span>c:       <span class=\"number\">0</span>f <span class=\"number\">1</span>f <span class=\"number\">40</span> <span class=\"number\">00</span>             <span class=\"keyword\">nopl </span>  <span class=\"number\">0x0</span>(%rax)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">0000000000400410</span> &lt;deregister_tm_clones&gt;:</span><br><span class=\"line\">  <span class=\"number\">400410</span>:       <span class=\"keyword\">b8 </span><span class=\"number\">37</span> <span class=\"number\">10</span> <span class=\"number\">60</span> <span class=\"number\">00</span>          <span class=\"keyword\">mov </span>   <span class=\"number\">$0x601037</span>,%eax</span><br><span class=\"line\">  <span class=\"number\">400415</span>:       <span class=\"number\">55</span>                      <span class=\"keyword\">push </span>  %rbp</span><br><span class=\"line\">  <span class=\"number\">400416</span>:       <span class=\"number\">48</span> <span class=\"number\">2</span>d <span class=\"number\">30</span> <span class=\"number\">10</span> <span class=\"number\">60</span> <span class=\"number\">00</span>       <span class=\"keyword\">sub </span>   <span class=\"number\">$0x601030</span>,%rax</span><br><span class=\"line\">  <span class=\"number\">40041</span>c:       <span class=\"number\">48</span> <span class=\"number\">83</span> f8 <span class=\"number\">0</span>e             <span class=\"keyword\">cmp </span>   <span class=\"number\">$0xe</span>,%rax</span><br><span class=\"line\">  <span class=\"number\">400420</span>:       <span class=\"number\">48</span> <span class=\"number\">89</span> e5                <span class=\"keyword\">mov </span>   %rsp,%rbp</span><br><span class=\"line\">  <span class=\"number\">400423</span>:       <span class=\"number\">76</span> <span class=\"number\">1</span>b                   jbe    <span class=\"number\">400440</span> &lt;deregister_tm_clones+<span class=\"number\">0x30</span>&gt;</span><br><span class=\"line\">  <span class=\"number\">400425</span>:       <span class=\"keyword\">b8 </span><span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">00</span>          <span class=\"keyword\">mov </span>   <span class=\"number\">$0x0</span>,%eax</span><br><span class=\"line\">  <span class=\"number\">40042</span>a:       <span class=\"number\">48</span> <span class=\"number\">85</span> <span class=\"built_in\">c0</span>                test   %rax,%rax</span><br><span class=\"line\">  <span class=\"number\">40042</span>d:       <span class=\"number\">74</span> <span class=\"number\">11</span>                   je     <span class=\"number\">400440</span> &lt;deregister_tm_clones+<span class=\"number\">0x30</span>&gt;</span><br><span class=\"line\">  <span class=\"number\">40042</span>f:       <span class=\"number\">5</span>d                      <span class=\"keyword\">pop </span>   %rbp</span><br><span class=\"line\">  <span class=\"number\">400430</span>:       <span class=\"keyword\">bf </span><span class=\"number\">30</span> <span class=\"number\">10</span> <span class=\"number\">60</span> <span class=\"number\">00</span>          <span class=\"keyword\">mov </span>   <span class=\"number\">$0x601030</span>,%edi</span><br><span class=\"line\">  <span class=\"number\">400435</span>:       ff e0                   jmpq   *%rax</span><br><span class=\"line\">  <span class=\"number\">400437</span>:       <span class=\"number\">66</span> <span class=\"number\">0</span>f <span class=\"number\">1</span>f <span class=\"number\">84</span> <span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">00</span>    <span class=\"keyword\">nopw </span>  <span class=\"number\">0x0</span>(%rax,%rax,<span class=\"number\">1</span>)</span><br><span class=\"line\">  <span class=\"number\">40043</span>e:       <span class=\"number\">00</span> <span class=\"number\">00</span> </span><br><span class=\"line\">  <span class=\"number\">400440</span>:       <span class=\"number\">5</span>d                      <span class=\"keyword\">pop </span>   %rbp</span><br><span class=\"line\">  <span class=\"number\">400441</span>:       <span class=\"built_in\">c3</span>                      retq   </span><br><span class=\"line\">  <span class=\"number\">400442</span>:       <span class=\"number\">0</span>f <span class=\"number\">1</span>f <span class=\"number\">40</span> <span class=\"number\">00</span>             <span class=\"keyword\">nopl </span>  <span class=\"number\">0x0</span>(%rax)</span><br><span class=\"line\">  <span class=\"number\">400446</span>:       <span class=\"number\">66</span> <span class=\"number\">2</span>e <span class=\"number\">0</span>f <span class=\"number\">1</span>f <span class=\"number\">84</span> <span class=\"number\">00</span> <span class=\"number\">00</span>    <span class=\"keyword\">nopw </span>  %cs:<span class=\"number\">0x0</span>(%rax,%rax,<span class=\"number\">1</span>)</span><br><span class=\"line\">  <span class=\"number\">40044</span>d:       <span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">00</span> </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">0000000000400450</span> &lt;register_tm_clones&gt;:</span><br><span class=\"line\">  <span class=\"number\">400450</span>:       <span class=\"keyword\">be </span><span class=\"number\">30</span> <span class=\"number\">10</span> <span class=\"number\">60</span> <span class=\"number\">00</span>          <span class=\"keyword\">mov </span>   <span class=\"number\">$0x601030</span>,%esi</span><br><span class=\"line\">  <span class=\"number\">400455</span>:       <span class=\"number\">55</span>                      <span class=\"keyword\">push </span>  %rbp</span><br><span class=\"line\">  <span class=\"number\">400456</span>:       <span class=\"number\">48</span> <span class=\"number\">81</span> ee <span class=\"number\">30</span> <span class=\"number\">10</span> <span class=\"number\">60</span> <span class=\"number\">00</span>    <span class=\"keyword\">sub </span>   <span class=\"number\">$0x601030</span>,%rsi</span><br><span class=\"line\">  <span class=\"number\">40045</span>d:       <span class=\"number\">48</span> <span class=\"built_in\">c1</span> fe <span class=\"number\">03</span>             sar    <span class=\"number\">$0x3</span>,%rsi</span><br><span class=\"line\">  <span class=\"number\">400461</span>:       <span class=\"number\">48</span> <span class=\"number\">89</span> e5                <span class=\"keyword\">mov </span>   %rsp,%rbp</span><br><span class=\"line\">  <span class=\"number\">400464</span>:       <span class=\"number\">48</span> <span class=\"number\">89</span> <span class=\"built_in\">f0</span>                <span class=\"keyword\">mov </span>   %rsi,%rax</span><br><span class=\"line\">  <span class=\"number\">400467</span>:       <span class=\"number\">48</span> <span class=\"built_in\">c1</span> e8 <span class=\"number\">3</span>f             shr    <span class=\"number\">$0x3f</span>,%rax</span><br><span class=\"line\">  <span class=\"number\">40046</span>b:       <span class=\"number\">48</span> <span class=\"number\">01</span> <span class=\"built_in\">c6</span>                <span class=\"keyword\">add </span>   %rax,%rsi</span><br><span class=\"line\">  <span class=\"number\">40046</span>e:       <span class=\"number\">48</span> <span class=\"built_in\">d1</span> fe                sar    %rsi</span><br><span class=\"line\">  <span class=\"number\">400471</span>:       <span class=\"number\">74</span> <span class=\"number\">15</span>                   je     <span class=\"number\">400488</span> &lt;register_tm_clones+<span class=\"number\">0x38</span>&gt;</span><br><span class=\"line\">  <span class=\"number\">400473</span>:       <span class=\"keyword\">b8 </span><span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">00</span>          <span class=\"keyword\">mov </span>   <span class=\"number\">$0x0</span>,%eax</span><br><span class=\"line\">  <span class=\"number\">400478</span>:       <span class=\"number\">48</span> <span class=\"number\">85</span> <span class=\"built_in\">c0</span>                test   %rax,%rax</span><br><span class=\"line\">  <span class=\"number\">40047</span>b:       <span class=\"number\">74</span> <span class=\"number\">0</span>b                   je     <span class=\"number\">400488</span> &lt;register_tm_clones+<span class=\"number\">0x38</span>&gt;</span><br><span class=\"line\">  <span class=\"number\">40047</span>d:       <span class=\"number\">5</span>d                      <span class=\"keyword\">pop </span>   %rbp</span><br><span class=\"line\">  <span class=\"number\">40047</span>e:       <span class=\"keyword\">bf </span><span class=\"number\">30</span> <span class=\"number\">10</span> <span class=\"number\">60</span> <span class=\"number\">00</span>          <span class=\"keyword\">mov </span>   <span class=\"number\">$0x601030</span>,%edi</span><br><span class=\"line\">  <span class=\"number\">400483</span>:       ff e0                   jmpq   *%rax</span><br><span class=\"line\">  <span class=\"number\">400485</span>:       <span class=\"number\">0</span>f <span class=\"number\">1</span>f <span class=\"number\">00</span>                <span class=\"keyword\">nopl </span>  (%rax)</span><br><span class=\"line\">  <span class=\"number\">400488</span>:       <span class=\"number\">5</span>d                      <span class=\"keyword\">pop </span>   %rbp</span><br><span class=\"line\">  <span class=\"number\">400489</span>:       <span class=\"built_in\">c3</span>                      retq   </span><br><span class=\"line\">  <span class=\"number\">40048</span>a:       <span class=\"number\">66</span> <span class=\"number\">0</span>f <span class=\"number\">1</span>f <span class=\"number\">44</span> <span class=\"number\">00</span> <span class=\"number\">00</span>       <span class=\"keyword\">nopw </span>  <span class=\"number\">0x0</span>(%rax,%rax,<span class=\"number\">1</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">0000000000400490</span> &lt;__do_global_dtors_aux&gt;:</span><br><span class=\"line\">  <span class=\"number\">400490</span>:       <span class=\"number\">80</span> <span class=\"number\">3</span>d <span class=\"number\">95</span> <span class=\"number\">0</span>b <span class=\"number\">20</span> <span class=\"number\">00</span> <span class=\"number\">00</span>    <span class=\"keyword\">cmpb </span>  <span class=\"number\">$0x0</span>,<span class=\"number\">0x200b95</span>(%rip)        # <span class=\"number\">60102</span>c &lt;_edata&gt;</span><br><span class=\"line\">  <span class=\"number\">400497</span>:       <span class=\"number\">75</span> <span class=\"number\">11</span>                   jne    <span class=\"number\">4004</span>aa &lt;__do_global_dtors_aux+<span class=\"number\">0x1a</span>&gt;</span><br><span class=\"line\">  <span class=\"number\">400499</span>:       <span class=\"number\">55</span>                      <span class=\"keyword\">push </span>  %rbp</span><br><span class=\"line\">  <span class=\"number\">40049</span>a:       <span class=\"number\">48</span> <span class=\"number\">89</span> e5                <span class=\"keyword\">mov </span>   %rsp,%rbp</span><br><span class=\"line\">  <span class=\"number\">40049</span>d:       e8 <span class=\"number\">6</span>e ff ff ff          callq  <span class=\"number\">400410</span> &lt;deregister_tm_clones&gt;</span><br><span class=\"line\">  <span class=\"number\">4004</span><span class=\"built_in\">a2</span>:       <span class=\"number\">5</span>d                      <span class=\"keyword\">pop </span>   %rbp</span><br><span class=\"line\">  <span class=\"number\">4004</span><span class=\"built_in\">a3</span>:       <span class=\"built_in\">c6</span> <span class=\"number\">05</span> <span class=\"number\">82</span> <span class=\"number\">0</span>b <span class=\"number\">20</span> <span class=\"number\">00</span> <span class=\"number\">01</span>    <span class=\"keyword\">movb </span>  <span class=\"number\">$0x1</span>,<span class=\"number\">0x200b82</span>(%rip)        # <span class=\"number\">60102</span>c &lt;_edata&gt;</span><br><span class=\"line\">  <span class=\"number\">4004</span>aa:       <span class=\"built_in\">f3</span> <span class=\"built_in\">c3</span>                   repz retq </span><br><span class=\"line\">  <span class=\"number\">4004</span>ac:       <span class=\"number\">0</span>f <span class=\"number\">1</span>f <span class=\"number\">40</span> <span class=\"number\">00</span>             <span class=\"keyword\">nopl </span>  <span class=\"number\">0x0</span>(%rax)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">00000000004004</span>b0 &lt;frame_dummy&gt;:</span><br><span class=\"line\">  <span class=\"number\">4004</span>b0:       <span class=\"keyword\">bf </span><span class=\"number\">28</span> <span class=\"number\">0</span>e <span class=\"number\">60</span> <span class=\"number\">00</span>          <span class=\"keyword\">mov </span>   <span class=\"number\">$0x600e28</span>,%edi</span><br><span class=\"line\">  <span class=\"number\">4004</span>b5:       <span class=\"number\">48</span> <span class=\"number\">83</span> <span class=\"number\">3</span>f <span class=\"number\">00</span>             <span class=\"keyword\">cmpq </span>  <span class=\"number\">$0x0</span>,(%rdi)</span><br><span class=\"line\">  <span class=\"number\">4004</span>b9:       <span class=\"number\">75</span> <span class=\"number\">05</span>                   jne    <span class=\"number\">4004</span><span class=\"built_in\">c0</span> &lt;frame_dummy+<span class=\"number\">0x10</span>&gt;</span><br><span class=\"line\">  <span class=\"number\">4004</span>bb:       eb <span class=\"number\">93</span>                   jmp    <span class=\"number\">400450</span> &lt;register_tm_clones&gt;</span><br><span class=\"line\">  <span class=\"number\">4004</span>bd:       <span class=\"number\">0</span>f <span class=\"number\">1</span>f <span class=\"number\">00</span>                <span class=\"keyword\">nopl </span>  (%rax)</span><br><span class=\"line\">  <span class=\"number\">4004</span><span class=\"built_in\">c0</span>:       <span class=\"keyword\">b8 </span><span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">00</span>          <span class=\"keyword\">mov </span>   <span class=\"number\">$0x0</span>,%eax</span><br><span class=\"line\">  <span class=\"number\">4004</span><span class=\"built_in\">c5</span>:       <span class=\"number\">48</span> <span class=\"number\">85</span> <span class=\"built_in\">c0</span>                test   %rax,%rax</span><br><span class=\"line\">  <span class=\"number\">4004</span><span class=\"built_in\">c8</span>:       <span class=\"number\">74</span> <span class=\"built_in\">f1</span>                   je     <span class=\"number\">4004</span>bb &lt;frame_dummy+<span class=\"number\">0xb</span>&gt;</span><br><span class=\"line\">  <span class=\"number\">4004</span>ca:       <span class=\"number\">55</span>                      <span class=\"keyword\">push </span>  %rbp</span><br><span class=\"line\">  <span class=\"number\">4004</span>cb:       <span class=\"number\">48</span> <span class=\"number\">89</span> e5                <span class=\"keyword\">mov </span>   %rsp,%rbp</span><br><span class=\"line\">  <span class=\"number\">4004</span>ce:       ff <span class=\"built_in\">d0</span>                   callq  *%rax</span><br><span class=\"line\">  <span class=\"number\">4004</span><span class=\"built_in\">d0</span>:       <span class=\"number\">5</span>d                      <span class=\"keyword\">pop </span>   %rbp</span><br><span class=\"line\">  <span class=\"number\">4004</span><span class=\"built_in\">d1</span>:       e9 <span class=\"number\">7</span>a ff ff ff          jmpq   <span class=\"number\">400450</span> &lt;register_tm_clones&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">00000000004004</span><span class=\"built_in\">d6</span> &lt;_Z9main_funcii&gt;:</span><br><span class=\"line\">  <span class=\"number\">4004</span><span class=\"built_in\">d6</span>:       <span class=\"number\">55</span>                      <span class=\"keyword\">push </span>  %rbp</span><br><span class=\"line\">  <span class=\"number\">4004</span><span class=\"built_in\">d7</span>:       <span class=\"number\">48</span> <span class=\"number\">89</span> e5                <span class=\"keyword\">mov </span>   %rsp,%rbp</span><br><span class=\"line\">  <span class=\"number\">4004</span>da:       <span class=\"number\">89</span> <span class=\"number\">7</span>d fc                <span class=\"keyword\">mov </span>   %edi,-<span class=\"number\">0x4</span>(%rbp)</span><br><span class=\"line\">  <span class=\"number\">4004</span>dd:       <span class=\"number\">89</span> <span class=\"number\">75</span> f8                <span class=\"keyword\">mov </span>   %esi,-<span class=\"number\">0x8</span>(%rbp)</span><br><span class=\"line\">  <span class=\"number\">4004</span>e0:       <span class=\"number\">8</span>b <span class=\"number\">55</span> fc                <span class=\"keyword\">mov </span>   -<span class=\"number\">0x4</span>(%rbp),%edx</span><br><span class=\"line\">  <span class=\"number\">4004</span>e3:       <span class=\"number\">8</span>b <span class=\"number\">45</span> f8                <span class=\"keyword\">mov </span>   -<span class=\"number\">0x8</span>(%rbp),%eax</span><br><span class=\"line\">  <span class=\"number\">4004</span>e6:       <span class=\"number\">01</span> <span class=\"built_in\">d0</span>                   <span class=\"keyword\">add </span>   %edx,%eax</span><br><span class=\"line\">  <span class=\"number\">4004</span>e8:       <span class=\"number\">05</span> <span class=\"built_in\">c3</span> <span class=\"number\">07</span> <span class=\"number\">00</span> <span class=\"number\">00</span>          <span class=\"keyword\">add </span>   <span class=\"number\">$0x7c3</span>,%eax</span><br><span class=\"line\">  <span class=\"number\">4004</span>ed:       <span class=\"number\">5</span>d                      <span class=\"keyword\">pop </span>   %rbp</span><br><span class=\"line\">  <span class=\"number\">4004</span>ee:       <span class=\"built_in\">c3</span>                      retq   </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">00000000004004</span>ef &lt;main&gt;:</span><br><span class=\"line\">  <span class=\"number\">4004</span>ef:       <span class=\"number\">55</span>                      <span class=\"keyword\">push </span>  %rbp</span><br><span class=\"line\">  <span class=\"number\">4004</span><span class=\"built_in\">f0</span>:       <span class=\"number\">48</span> <span class=\"number\">89</span> e5                <span class=\"keyword\">mov </span>   %rsp,%rbp</span><br><span class=\"line\">  <span class=\"number\">4004</span><span class=\"built_in\">f3</span>:       <span class=\"number\">48</span> <span class=\"number\">83</span> ec <span class=\"number\">20</span>             <span class=\"keyword\">sub </span>   <span class=\"number\">$0x20</span>,%rsp</span><br><span class=\"line\">  <span class=\"number\">4004</span><span class=\"built_in\">f7</span>:       <span class=\"number\">89</span> <span class=\"number\">7</span>d ec                <span class=\"keyword\">mov </span>   %edi,-<span class=\"number\">0x14</span>(%rbp)</span><br><span class=\"line\">  <span class=\"number\">4004</span>fa:       <span class=\"number\">48</span> <span class=\"number\">89</span> <span class=\"number\">75</span> e0             <span class=\"keyword\">mov </span>   %rsi,-<span class=\"number\">0x20</span>(%rbp)</span><br><span class=\"line\">  <span class=\"number\">4004</span>fe:       <span class=\"built_in\">c7</span> <span class=\"number\">45</span> fc <span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">00</span>    <span class=\"keyword\">movl </span>  <span class=\"number\">$0x0</span>,-<span class=\"number\">0x4</span>(%rbp)</span><br><span class=\"line\">  <span class=\"number\">400505</span>:       <span class=\"number\">48</span> <span class=\"built_in\">c7</span> <span class=\"built_in\">c0</span> <span class=\"number\">30</span> <span class=\"number\">10</span> <span class=\"number\">60</span> <span class=\"number\">00</span>    <span class=\"keyword\">mov </span>   <span class=\"number\">$0x601030</span>,%rax</span><br><span class=\"line\">  <span class=\"number\">40050</span>c:       <span class=\"number\">8</span>b <span class=\"number\">55</span> ec                <span class=\"keyword\">mov </span>   -<span class=\"number\">0x14</span>(%rbp),%edx</span><br><span class=\"line\">  <span class=\"number\">40050</span>f:       <span class=\"number\">89</span> <span class=\"number\">10</span>                   <span class=\"keyword\">mov </span>   %edx,(%rax)</span><br><span class=\"line\">  <span class=\"number\">400511</span>:       <span class=\"number\">48</span> <span class=\"built_in\">c7</span> <span class=\"built_in\">c0</span> <span class=\"number\">28</span> <span class=\"number\">10</span> <span class=\"number\">60</span> <span class=\"number\">00</span>    <span class=\"keyword\">mov </span>   <span class=\"number\">$0x601028</span>,%rax</span><br><span class=\"line\">  <span class=\"number\">400518</span>:       <span class=\"number\">8</span>b <span class=\"number\">10</span>                   <span class=\"keyword\">mov </span>   (%rax),%edx</span><br><span class=\"line\">  <span class=\"number\">40051</span>a:       <span class=\"number\">48</span> <span class=\"built_in\">c7</span> <span class=\"built_in\">c0</span> <span class=\"number\">30</span> <span class=\"number\">10</span> <span class=\"number\">60</span> <span class=\"number\">00</span>    <span class=\"keyword\">mov </span>   <span class=\"number\">$0x601030</span>,%rax</span><br><span class=\"line\">  <span class=\"number\">400521</span>:       <span class=\"number\">8</span>b <span class=\"number\">00</span>                   <span class=\"keyword\">mov </span>   (%rax),%eax</span><br><span class=\"line\">  <span class=\"number\">400523</span>:       <span class=\"number\">89</span> <span class=\"built_in\">d6</span>                   <span class=\"keyword\">mov </span>   %edx,%esi</span><br><span class=\"line\">  <span class=\"number\">400525</span>:       <span class=\"number\">89</span> <span class=\"built_in\">c7</span>                   <span class=\"keyword\">mov </span>   %eax,%edi</span><br><span class=\"line\">  <span class=\"number\">400527</span>:       e8 aa ff ff ff          callq  <span class=\"number\">4004</span><span class=\"built_in\">d6</span> &lt;_Z9main_funcii&gt;</span><br><span class=\"line\">  <span class=\"number\">40052</span>c:       <span class=\"number\">01</span> <span class=\"number\">45</span> fc                <span class=\"keyword\">add </span>   %eax,-<span class=\"number\">0x4</span>(%rbp)</span><br><span class=\"line\">  <span class=\"number\">40052</span>f:       <span class=\"number\">8</span>b <span class=\"number\">45</span> fc                <span class=\"keyword\">mov </span>   -<span class=\"number\">0x4</span>(%rbp),%eax</span><br><span class=\"line\">  <span class=\"number\">400532</span>:       <span class=\"built_in\">c9</span>                      leaveq </span><br><span class=\"line\">  <span class=\"number\">400533</span>:       <span class=\"built_in\">c3</span>                      retq   </span><br><span class=\"line\">  <span class=\"number\">400534</span>:       <span class=\"number\">66</span> <span class=\"number\">2</span>e <span class=\"number\">0</span>f <span class=\"number\">1</span>f <span class=\"number\">84</span> <span class=\"number\">00</span> <span class=\"number\">00</span>    <span class=\"keyword\">nopw </span>  %cs:<span class=\"number\">0x0</span>(%rax,%rax,<span class=\"number\">1</span>)</span><br><span class=\"line\">  <span class=\"number\">40053</span>b:       <span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">00</span> </span><br><span class=\"line\">  <span class=\"number\">40053</span>e:       <span class=\"number\">66</span> <span class=\"number\">90</span>                   xchg   %ax,%ax</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">0000000000400540</span> &lt;__libc_csu_init&gt;:</span><br><span class=\"line\">  <span class=\"number\">400540</span>:       <span class=\"number\">41</span> <span class=\"number\">57</span>                   <span class=\"keyword\">push </span>  %<span class=\"built_in\">r15</span></span><br><span class=\"line\">  <span class=\"number\">400542</span>:       <span class=\"number\">41</span> <span class=\"number\">56</span>                   <span class=\"keyword\">push </span>  %<span class=\"built_in\">r14</span></span><br><span class=\"line\">  <span class=\"number\">400544</span>:       <span class=\"number\">49</span> <span class=\"number\">89</span> <span class=\"built_in\">d7</span>                <span class=\"keyword\">mov </span>   %rdx,%<span class=\"built_in\">r15</span></span><br><span class=\"line\">  <span class=\"number\">400547</span>:       <span class=\"number\">41</span> <span class=\"number\">55</span>                   <span class=\"keyword\">push </span>  %<span class=\"built_in\">r13</span></span><br><span class=\"line\">  <span class=\"number\">400549</span>:       <span class=\"number\">41</span> <span class=\"number\">54</span>                   <span class=\"keyword\">push </span>  %<span class=\"built_in\">r12</span></span><br><span class=\"line\">  <span class=\"number\">40054</span>b:       <span class=\"number\">4</span>c <span class=\"number\">8</span>d <span class=\"number\">25</span> <span class=\"built_in\">c6</span> <span class=\"number\">08</span> <span class=\"number\">20</span> <span class=\"number\">00</span>    lea    <span class=\"number\">0x2008c6</span>(%rip),%<span class=\"built_in\">r12</span>        # <span class=\"number\">600</span>e18 &lt;__frame_dummy_init_array_entry&gt;</span><br><span class=\"line\">  <span class=\"number\">400552</span>:       <span class=\"number\">55</span>                      <span class=\"keyword\">push </span>  %rbp</span><br><span class=\"line\">  <span class=\"number\">400553</span>:       <span class=\"number\">48</span> <span class=\"number\">8</span>d <span class=\"number\">2</span>d <span class=\"built_in\">c6</span> <span class=\"number\">08</span> <span class=\"number\">20</span> <span class=\"number\">00</span>    lea    <span class=\"number\">0x2008c6</span>(%rip),%rbp        # <span class=\"number\">600</span>e20 &lt;__init_array_end&gt;</span><br><span class=\"line\">  <span class=\"number\">40055</span>a:       <span class=\"number\">53</span>                      <span class=\"keyword\">push </span>  %rbx</span><br><span class=\"line\">  <span class=\"number\">40055</span>b:       <span class=\"number\">41</span> <span class=\"number\">89</span> fd                <span class=\"keyword\">mov </span>   %edi,%r13d</span><br><span class=\"line\">  <span class=\"number\">40055</span>e:       <span class=\"number\">49</span> <span class=\"number\">89</span> <span class=\"built_in\">f6</span>                <span class=\"keyword\">mov </span>   %rsi,%<span class=\"built_in\">r14</span></span><br><span class=\"line\">  <span class=\"number\">400561</span>:       <span class=\"number\">4</span>c <span class=\"number\">29</span> e5                <span class=\"keyword\">sub </span>   %<span class=\"built_in\">r12</span>,%rbp</span><br><span class=\"line\">  <span class=\"number\">400564</span>:       <span class=\"number\">48</span> <span class=\"number\">83</span> ec <span class=\"number\">08</span>             <span class=\"keyword\">sub </span>   <span class=\"number\">$0x8</span>,%rsp</span><br><span class=\"line\">  <span class=\"number\">400568</span>:       <span class=\"number\">48</span> <span class=\"built_in\">c1</span> fd <span class=\"number\">03</span>             sar    <span class=\"number\">$0x3</span>,%rbp</span><br><span class=\"line\">  <span class=\"number\">40056</span>c:       e8 <span class=\"number\">47</span> fe ff ff          callq  <span class=\"number\">4003</span>b8 &lt;_init&gt;</span><br><span class=\"line\">  <span class=\"number\">400571</span>:       <span class=\"number\">48</span> <span class=\"number\">85</span> ed                test   %rbp,%rbp</span><br><span class=\"line\">  <span class=\"number\">400574</span>:       <span class=\"number\">74</span> <span class=\"number\">20</span>                   je     <span class=\"number\">400596</span> &lt;__libc_csu_init+<span class=\"number\">0x56</span>&gt;</span><br><span class=\"line\">  <span class=\"number\">400576</span>:       <span class=\"number\">31</span> db                   xor    %ebx,%ebx</span><br><span class=\"line\">  <span class=\"number\">400578</span>:       <span class=\"number\">0</span>f <span class=\"number\">1</span>f <span class=\"number\">84</span> <span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">00</span>    <span class=\"keyword\">nopl </span>  <span class=\"number\">0x0</span>(%rax,%rax,<span class=\"number\">1</span>)</span><br><span class=\"line\">  <span class=\"number\">40057</span>f:       <span class=\"number\">00</span> </span><br><span class=\"line\">  <span class=\"number\">400580</span>:       <span class=\"number\">4</span>c <span class=\"number\">89</span> fa                <span class=\"keyword\">mov </span>   %<span class=\"built_in\">r15</span>,%rdx</span><br><span class=\"line\">  <span class=\"number\">400583</span>:       <span class=\"number\">4</span>c <span class=\"number\">89</span> <span class=\"built_in\">f6</span>                <span class=\"keyword\">mov </span>   %<span class=\"built_in\">r14</span>,%rsi</span><br><span class=\"line\">  <span class=\"number\">400586</span>:       <span class=\"number\">44</span> <span class=\"number\">89</span> ef                <span class=\"keyword\">mov </span>   %r13d,%edi</span><br><span class=\"line\">  <span class=\"number\">400589</span>:       <span class=\"number\">41</span> ff <span class=\"number\">14</span> dc             callq  *(%<span class=\"built_in\">r12</span>,%rbx,<span class=\"number\">8</span>)</span><br><span class=\"line\">  <span class=\"number\">40058</span>d:       <span class=\"number\">48</span> <span class=\"number\">83</span> <span class=\"built_in\">c3</span> <span class=\"number\">01</span>             <span class=\"keyword\">add </span>   <span class=\"number\">$0x1</span>,%rbx</span><br><span class=\"line\">  <span class=\"number\">400591</span>:       <span class=\"number\">48</span> <span class=\"number\">39</span> dd                <span class=\"keyword\">cmp </span>   %rbx,%rbp</span><br><span class=\"line\">  <span class=\"number\">400594</span>:       <span class=\"number\">75</span> ea                   jne    <span class=\"number\">400580</span> &lt;__libc_csu_init+<span class=\"number\">0x40</span>&gt;</span><br><span class=\"line\">  <span class=\"number\">400596</span>:       <span class=\"number\">48</span> <span class=\"number\">83</span> <span class=\"built_in\">c4</span> <span class=\"number\">08</span>             <span class=\"keyword\">add </span>   <span class=\"number\">$0x8</span>,%rsp</span><br><span class=\"line\">  <span class=\"number\">40059</span>a:       <span class=\"number\">5</span>b                      <span class=\"keyword\">pop </span>   %rbx</span><br><span class=\"line\">  <span class=\"number\">40059</span>b:       <span class=\"number\">5</span>d                      <span class=\"keyword\">pop </span>   %rbp</span><br><span class=\"line\">  <span class=\"number\">40059</span>c:       <span class=\"number\">41</span> <span class=\"number\">5</span>c                   <span class=\"keyword\">pop </span>   %<span class=\"built_in\">r12</span></span><br><span class=\"line\">  <span class=\"number\">40059</span>e:       <span class=\"number\">41</span> <span class=\"number\">5</span>d                   <span class=\"keyword\">pop </span>   %<span class=\"built_in\">r13</span></span><br><span class=\"line\">  <span class=\"number\">4005</span>a0:       <span class=\"number\">41</span> <span class=\"number\">5</span>e                   <span class=\"keyword\">pop </span>   %<span class=\"built_in\">r14</span></span><br><span class=\"line\">  <span class=\"number\">4005</span><span class=\"built_in\">a2</span>:       <span class=\"number\">41</span> <span class=\"number\">5</span>f                   <span class=\"keyword\">pop </span>   %<span class=\"built_in\">r15</span></span><br><span class=\"line\">  <span class=\"number\">4005</span><span class=\"built_in\">a4</span>:       <span class=\"built_in\">c3</span>                      retq   </span><br><span class=\"line\">  <span class=\"number\">4005</span>a5:       <span class=\"number\">90</span>                      <span class=\"keyword\">nop</span></span><br><span class=\"line\"><span class=\"keyword\"> </span> <span class=\"number\">4005</span>a6:       <span class=\"number\">66</span> <span class=\"number\">2</span>e <span class=\"number\">0</span>f <span class=\"number\">1</span>f <span class=\"number\">84</span> <span class=\"number\">00</span> <span class=\"number\">00</span>    <span class=\"keyword\">nopw </span>  %cs:<span class=\"number\">0x0</span>(%rax,%rax,<span class=\"number\">1</span>)</span><br><span class=\"line\">  <span class=\"number\">4005</span>ad:       <span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">00</span> </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">00000000004005</span>b0 &lt;__libc_csu_fini&gt;:</span><br><span class=\"line\">  <span class=\"number\">4005</span>b0:       <span class=\"built_in\">f3</span> <span class=\"built_in\">c3</span>                   repz retq </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"symbol\">Disassembly</span> of section .fini:</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">00000000004005</span>b4 &lt;_fini&gt;:</span><br><span class=\"line\">  <span class=\"number\">4005</span>b4:       <span class=\"number\">48</span> <span class=\"number\">83</span> ec <span class=\"number\">08</span>             <span class=\"keyword\">sub </span>   <span class=\"number\">$0x8</span>,%rsp</span><br><span class=\"line\">  <span class=\"number\">4005</span>b8:       <span class=\"number\">48</span> <span class=\"number\">83</span> <span class=\"built_in\">c4</span> <span class=\"number\">08</span>             <span class=\"keyword\">add </span>   <span class=\"number\">$0x8</span>,%rsp</span><br><span class=\"line\">  <span class=\"number\">4005</span>bc:       <span class=\"built_in\">c3</span>                      retq</span><br></pre></td></tr></table></figure>\n\n\n<h5><span id=\"可执行文件-位置无关的piedyn版本\">可执行文件 (位置无关的PIE(DYN)版本)</span></h5><figure class=\"highlight armasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">重定位节 <span class=\"string\">'.rela.dyn'</span> 位于偏移量 <span class=\"number\">0x448</span> 含有 <span class=\"number\">9</span> 个条目：</span><br><span class=\"line\">  偏移量          信息           类型           符号值        符号名称 + 加数</span><br><span class=\"line\"><span class=\"number\">000000200</span>dd8  <span class=\"number\">000000000008</span> R_X86_64_RELATIVE                    <span class=\"number\">660</span></span><br><span class=\"line\"><span class=\"number\">000000200</span>de0  <span class=\"number\">000000000008</span> R_X86_64_RELATIVE                    <span class=\"number\">620</span></span><br><span class=\"line\"><span class=\"number\">000000201020</span>  <span class=\"number\">000000000008</span> R_X86_64_RELATIVE                    <span class=\"number\">201020</span></span><br><span class=\"line\"><span class=\"number\">000000200</span>fd0  <span class=\"number\">000100000006</span> R_X86_64_GLOB_DAT <span class=\"number\">0000000000000000</span> __cxa_finalize<span class=\"comment\">@GLIBC_2.2.5 + 0</span></span><br><span class=\"line\"><span class=\"number\">000000200</span>fd8  <span class=\"number\">000200000006</span> R_X86_64_GLOB_DAT <span class=\"number\">0000000000000000</span> _Jv_RegisterClasses + <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"number\">000000200</span>fe0  <span class=\"number\">000300000006</span> R_X86_64_GLOB_DAT <span class=\"number\">0000000000000000</span> _ITM_deregisterTMClone + <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"number\">000000200</span>fe8  <span class=\"number\">000400000006</span> R_X86_64_GLOB_DAT <span class=\"number\">0000000000000000</span> __libc_start_main<span class=\"comment\">@GLIBC_2.2.5 + 0</span></span><br><span class=\"line\"><span class=\"number\">000000200</span>ff0  <span class=\"number\">000500000006</span> R_X86_64_GLOB_DAT <span class=\"number\">0000000000000000</span> __gmon_start__ + <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"number\">000000200</span>ff8  <span class=\"number\">000600000006</span> R_X86_64_GLOB_DAT <span class=\"number\">0000000000000000</span> _ITM_registerTMCloneTa + <span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"symbol\">The</span> decoding of unwind sections for machine type Advanced Micro Devices X86-<span class=\"number\">64</span> is not currently supported.</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"symbol\">Symbol</span> table <span class=\"string\">'.dynsym'</span> contains <span class=\"number\">7</span> entries:</span><br><span class=\"line\"><span class=\"symbol\">   Num:</span>    Value          Size Type    <span class=\"keyword\">Bind </span>  Vis      Ndx Name</span><br><span class=\"line\">     <span class=\"number\">0</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">0</span> NOTYPE  LOCAL  DEFAULT  UND </span><br><span class=\"line\">     <span class=\"number\">1</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">0</span> FUNC    WEAK   DEFAULT  UND __cxa_finalize<span class=\"comment\">@GLIBC_2.2.5 (2)</span></span><br><span class=\"line\">     <span class=\"number\">2</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">0</span> NOTYPE  WEAK   DEFAULT  UND _Jv_RegisterClasses</span><br><span class=\"line\">     <span class=\"number\">3</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">0</span> NOTYPE  WEAK   DEFAULT  UND _ITM_deregisterTMCloneTab</span><br><span class=\"line\">     <span class=\"number\">4</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">0</span> FUNC    <span class=\"meta\">GLOBAL</span> DEFAULT  UND __libc_start_main<span class=\"comment\">@GLIBC_2.2.5 (2)</span></span><br><span class=\"line\">     <span class=\"number\">5</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">0</span> NOTYPE  WEAK   DEFAULT  UND __gmon_start__</span><br><span class=\"line\">     <span class=\"number\">6</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">0</span> NOTYPE  WEAK   DEFAULT  UND _ITM_registerTMCloneTable</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"symbol\">Symbol</span> table <span class=\"string\">'.symtab'</span> contains <span class=\"number\">70</span> entries:</span><br><span class=\"line\"><span class=\"symbol\">   Num:</span>    Value          Size Type    <span class=\"keyword\">Bind </span>  Vis      Ndx Name</span><br><span class=\"line\">     <span class=\"number\">0</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">0</span> NOTYPE  LOCAL  DEFAULT  UND </span><br><span class=\"line\">     <span class=\"number\">1</span>: <span class=\"number\">0000000000000238</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT    <span class=\"number\">1</span> </span><br><span class=\"line\">     <span class=\"number\">2</span>: <span class=\"number\">0000000000000254</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT    <span class=\"number\">2</span> </span><br><span class=\"line\">     <span class=\"number\">3</span>: <span class=\"number\">0000000000000274</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT    <span class=\"number\">3</span> </span><br><span class=\"line\">     <span class=\"number\">4</span>: <span class=\"number\">0000000000000298</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT    <span class=\"number\">4</span> </span><br><span class=\"line\">     <span class=\"number\">5</span>: <span class=\"number\">00000000000002</span>b8     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT    <span class=\"number\">5</span> </span><br><span class=\"line\">     <span class=\"number\">6</span>: <span class=\"number\">0000000000000360</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT    <span class=\"number\">6</span> </span><br><span class=\"line\">     <span class=\"number\">7</span>: <span class=\"number\">0000000000000418</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT    <span class=\"number\">7</span> </span><br><span class=\"line\">     <span class=\"number\">8</span>: <span class=\"number\">0000000000000428</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT    <span class=\"number\">8</span> </span><br><span class=\"line\">     <span class=\"number\">9</span>: <span class=\"number\">0000000000000448</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT    <span class=\"number\">9</span> </span><br><span class=\"line\">    <span class=\"number\">10</span>: <span class=\"number\">0000000000000520</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT   <span class=\"number\">10</span> </span><br><span class=\"line\">    <span class=\"number\">11</span>: <span class=\"number\">0000000000000540</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT   <span class=\"number\">11</span> </span><br><span class=\"line\">    <span class=\"number\">12</span>: <span class=\"number\">0000000000000550</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT   <span class=\"number\">12</span> </span><br><span class=\"line\">    <span class=\"number\">13</span>: <span class=\"number\">0000000000000560</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT   <span class=\"number\">13</span> </span><br><span class=\"line\">    <span class=\"number\">14</span>: <span class=\"number\">0000000000000764</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT   <span class=\"number\">14</span> </span><br><span class=\"line\">    <span class=\"number\">15</span>: <span class=\"number\">0000000000000770</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT   <span class=\"number\">15</span> </span><br><span class=\"line\">    <span class=\"number\">16</span>: <span class=\"number\">0000000000000778</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT   <span class=\"number\">16</span> </span><br><span class=\"line\">    <span class=\"number\">17</span>: <span class=\"number\">00000000000007</span><span class=\"built_in\">c0</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT   <span class=\"number\">17</span> </span><br><span class=\"line\">    <span class=\"number\">18</span>: <span class=\"number\">0000000000200</span>dd8     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT   <span class=\"number\">18</span> </span><br><span class=\"line\">    <span class=\"number\">19</span>: <span class=\"number\">0000000000200</span>de0     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT   <span class=\"number\">19</span> </span><br><span class=\"line\">    <span class=\"number\">20</span>: <span class=\"number\">0000000000200</span>de8     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT   <span class=\"number\">20</span> </span><br><span class=\"line\">    <span class=\"number\">21</span>: <span class=\"number\">0000000000200</span>df0     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT   <span class=\"number\">21</span> </span><br><span class=\"line\">    <span class=\"number\">22</span>: <span class=\"number\">0000000000200</span>fd0     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT   <span class=\"number\">22</span> </span><br><span class=\"line\">    <span class=\"number\">23</span>: <span class=\"number\">0000000000201000</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT   <span class=\"number\">23</span> </span><br><span class=\"line\">    <span class=\"number\">24</span>: <span class=\"number\">0000000000201018</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT   <span class=\"number\">24</span> </span><br><span class=\"line\">    <span class=\"number\">25</span>: <span class=\"number\">000000000020102</span>c     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT   <span class=\"number\">25</span> </span><br><span class=\"line\">    <span class=\"number\">26</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT   <span class=\"number\">26</span> </span><br><span class=\"line\">    <span class=\"number\">27</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">0</span> FILE    LOCAL  DEFAULT  ABS crtstuff.c</span><br><span class=\"line\">    <span class=\"number\">28</span>: <span class=\"number\">0000000000200</span>de8     <span class=\"number\">0</span> OBJECT  LOCAL  DEFAULT   <span class=\"number\">20</span> __JCR_LIST__</span><br><span class=\"line\">    <span class=\"number\">29</span>: <span class=\"number\">0000000000000590</span>     <span class=\"number\">0</span> FUNC    LOCAL  DEFAULT   <span class=\"number\">13</span> deregister_tm_clones</span><br><span class=\"line\">    <span class=\"number\">30</span>: <span class=\"number\">00000000000005</span><span class=\"built_in\">d0</span>     <span class=\"number\">0</span> FUNC    LOCAL  DEFAULT   <span class=\"number\">13</span> register_tm_clones</span><br><span class=\"line\">    <span class=\"number\">31</span>: <span class=\"number\">0000000000000620</span>     <span class=\"number\">0</span> FUNC    LOCAL  DEFAULT   <span class=\"number\">13</span> __do_global_dtors_aux</span><br><span class=\"line\">    <span class=\"number\">32</span>: <span class=\"number\">000000000020102</span>c     <span class=\"number\">1</span> OBJECT  LOCAL  DEFAULT   <span class=\"number\">25</span> completed.<span class=\"number\">6972</span></span><br><span class=\"line\">    <span class=\"number\">33</span>: <span class=\"number\">0000000000200</span>de0     <span class=\"number\">0</span> OBJECT  LOCAL  DEFAULT   <span class=\"number\">19</span> __do_global_dtors_aux_fin</span><br><span class=\"line\">    <span class=\"number\">34</span>: <span class=\"number\">0000000000000660</span>     <span class=\"number\">0</span> FUNC    LOCAL  DEFAULT   <span class=\"number\">13</span> frame_dummy</span><br><span class=\"line\">    <span class=\"number\">35</span>: <span class=\"number\">0000000000200</span>dd8     <span class=\"number\">0</span> OBJECT  LOCAL  DEFAULT   <span class=\"number\">18</span> __frame_dummy_init_array_</span><br><span class=\"line\">    <span class=\"number\">36</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">0</span> FILE    LOCAL  DEFAULT  ABS test.cpp</span><br><span class=\"line\">    <span class=\"number\">37</span>: <span class=\"number\">0000000000000774</span>     <span class=\"number\">4</span> OBJECT  LOCAL  DEFAULT   <span class=\"number\">15</span> _ZL13g_static_text</span><br><span class=\"line\">    <span class=\"number\">38</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">0</span> FILE    LOCAL  DEFAULT  ABS crtstuff.c</span><br><span class=\"line\">    <span class=\"number\">39</span>: <span class=\"number\">00000000000008</span>e8     <span class=\"number\">0</span> OBJECT  LOCAL  DEFAULT   <span class=\"number\">17</span> __FRAME_END__</span><br><span class=\"line\">    <span class=\"number\">40</span>: <span class=\"number\">0000000000200</span>de8     <span class=\"number\">0</span> OBJECT  LOCAL  DEFAULT   <span class=\"number\">20</span> __JCR_END__</span><br><span class=\"line\">    <span class=\"number\">41</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">0</span> FILE    LOCAL  DEFAULT  ABS </span><br><span class=\"line\">    <span class=\"number\">42</span>: <span class=\"number\">0000000000000778</span>     <span class=\"number\">0</span> NOTYPE  LOCAL  DEFAULT   <span class=\"number\">16</span> __GNU_EH_FRAME_HDR</span><br><span class=\"line\">    <span class=\"number\">43</span>: <span class=\"number\">0000000000200</span>df0     <span class=\"number\">0</span> OBJECT  LOCAL  DEFAULT   <span class=\"number\">21</span> _DYNAMIC</span><br><span class=\"line\">    <span class=\"number\">44</span>: <span class=\"number\">0000000000200</span>de0     <span class=\"number\">0</span> NOTYPE  LOCAL  DEFAULT   <span class=\"number\">18</span> __init_array_end</span><br><span class=\"line\">    <span class=\"number\">45</span>: <span class=\"number\">0000000000200</span>dd8     <span class=\"number\">0</span> NOTYPE  LOCAL  DEFAULT   <span class=\"number\">18</span> __init_array_start</span><br><span class=\"line\">    <span class=\"number\">46</span>: <span class=\"number\">0000000000201000</span>     <span class=\"number\">0</span> OBJECT  LOCAL  DEFAULT   <span class=\"number\">23</span> _GLOBAL_OFFSET_TABLE_</span><br><span class=\"line\">    <span class=\"number\">47</span>: <span class=\"number\">0000000000201028</span>     <span class=\"number\">4</span> OBJECT  <span class=\"meta\">GLOBAL</span> DEFAULT   <span class=\"number\">24</span> g_static_data</span><br><span class=\"line\">    <span class=\"number\">48</span>: <span class=\"number\">000000000020102</span>c     <span class=\"number\">0</span> NOTYPE  <span class=\"meta\">GLOBAL</span> DEFAULT   <span class=\"number\">24</span> _edata</span><br><span class=\"line\">    <span class=\"number\">49</span>: <span class=\"number\">0000000000201018</span>     <span class=\"number\">0</span> NOTYPE  WEAK   DEFAULT   <span class=\"number\">24</span> data_start</span><br><span class=\"line\">    <span class=\"number\">50</span>: <span class=\"number\">0000000000000770</span>     <span class=\"number\">4</span> OBJECT  <span class=\"meta\">GLOBAL</span> DEFAULT   <span class=\"number\">15</span> _IO_stdin_used</span><br><span class=\"line\">    <span class=\"number\">51</span>: <span class=\"number\">0000000000000690</span>    <span class=\"number\">25</span> FUNC    <span class=\"meta\">GLOBAL</span> DEFAULT   <span class=\"number\">13</span> _Z9main_funcii</span><br><span class=\"line\">    <span class=\"number\">52</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">0</span> FUNC    WEAK   DEFAULT  UND __cxa_finalize<span class=\"comment\">@@GLIBC_2.2</span></span><br><span class=\"line\">    <span class=\"number\">53</span>: <span class=\"number\">00000000000006</span>a9    <span class=\"number\">69</span> FUNC    <span class=\"meta\">GLOBAL</span> DEFAULT   <span class=\"number\">13</span> main</span><br><span class=\"line\">    <span class=\"number\">54</span>: <span class=\"number\">0000000000201020</span>     <span class=\"number\">0</span> OBJECT  <span class=\"meta\">GLOBAL</span> HIDDEN    <span class=\"number\">24</span> __dso_handle</span><br><span class=\"line\">    <span class=\"number\">55</span>: <span class=\"number\">0000000000000764</span>     <span class=\"number\">0</span> FUNC    <span class=\"meta\">GLOBAL</span> DEFAULT   <span class=\"number\">14</span> _fini</span><br><span class=\"line\">    <span class=\"number\">56</span>: <span class=\"number\">0000000000000560</span>    <span class=\"number\">43</span> FUNC    <span class=\"meta\">GLOBAL</span> DEFAULT   <span class=\"number\">13</span> _start</span><br><span class=\"line\">    <span class=\"number\">57</span>: <span class=\"number\">0000000000000520</span>     <span class=\"number\">0</span> FUNC    <span class=\"meta\">GLOBAL</span> DEFAULT   <span class=\"number\">10</span> _init</span><br><span class=\"line\">    <span class=\"number\">58</span>: <span class=\"number\">0000000000201030</span>     <span class=\"number\">0</span> OBJECT  <span class=\"meta\">GLOBAL</span> HIDDEN    <span class=\"number\">24</span> __TMC_END__</span><br><span class=\"line\">    <span class=\"number\">59</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">0</span> NOTYPE  WEAK   DEFAULT  UND _Jv_RegisterClasses</span><br><span class=\"line\">    <span class=\"number\">60</span>: <span class=\"number\">0000000000201018</span>     <span class=\"number\">0</span> NOTYPE  <span class=\"meta\">GLOBAL</span> DEFAULT   <span class=\"number\">24</span> __data_start</span><br><span class=\"line\">    <span class=\"number\">61</span>: <span class=\"number\">0000000000201038</span>     <span class=\"number\">0</span> NOTYPE  <span class=\"meta\">GLOBAL</span> DEFAULT   <span class=\"number\">25</span> _<span class=\"meta\">end</span></span><br><span class=\"line\">    <span class=\"number\">62</span>: <span class=\"number\">000000000020102</span>c     <span class=\"number\">0</span> NOTYPE  <span class=\"meta\">GLOBAL</span> DEFAULT   <span class=\"number\">25</span> __bss_start</span><br><span class=\"line\">    <span class=\"number\">63</span>: <span class=\"number\">00000000000006</span><span class=\"built_in\">f0</span>   <span class=\"number\">101</span> FUNC    <span class=\"meta\">GLOBAL</span> DEFAULT   <span class=\"number\">13</span> __libc_csu_init</span><br><span class=\"line\">    <span class=\"number\">64</span>: <span class=\"number\">0000000000201030</span>     <span class=\"number\">4</span> OBJECT  <span class=\"meta\">GLOBAL</span> DEFAULT   <span class=\"number\">25</span> g_static_bss</span><br><span class=\"line\">    <span class=\"number\">65</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">0</span> NOTYPE  WEAK   DEFAULT  UND _ITM_deregisterTMCloneTab</span><br><span class=\"line\">    <span class=\"number\">66</span>: <span class=\"number\">0000000000000760</span>     <span class=\"number\">2</span> FUNC    <span class=\"meta\">GLOBAL</span> DEFAULT   <span class=\"number\">13</span> __libc_csu_fini</span><br><span class=\"line\">    <span class=\"number\">67</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">0</span> FUNC    <span class=\"meta\">GLOBAL</span> DEFAULT  UND __libc_start_main<span class=\"comment\">@@GLIBC_</span></span><br><span class=\"line\">    <span class=\"number\">68</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">0</span> NOTYPE  WEAK   DEFAULT  UND __gmon_start__</span><br><span class=\"line\">    <span class=\"number\">69</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">0</span> NOTYPE  WEAK   DEFAULT  UND _ITM_registerTMCloneTable</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"symbol\">.text</span></span><br><span class=\"line\"><span class=\"number\">0000000000000520</span> &lt;_init&gt;:</span><br><span class=\"line\"> <span class=\"number\">520</span>:   <span class=\"number\">48</span> <span class=\"number\">83</span> ec <span class=\"number\">08</span>             <span class=\"keyword\">sub </span>   <span class=\"number\">$0x8</span>,%rsp</span><br><span class=\"line\"> <span class=\"number\">524</span>:   <span class=\"number\">48</span> <span class=\"number\">8</span>b <span class=\"number\">05</span> <span class=\"built_in\">c5</span> <span class=\"number\">0</span>a <span class=\"number\">20</span> <span class=\"number\">00</span>    <span class=\"keyword\">mov </span>   <span class=\"number\">0x200ac5</span>(%rip),%rax        # <span class=\"number\">200</span>ff0 &lt;__gmon_start__&gt;</span><br><span class=\"line\"> <span class=\"number\">52</span>b:   <span class=\"number\">48</span> <span class=\"number\">85</span> <span class=\"built_in\">c0</span>                test   %rax,%rax</span><br><span class=\"line\"> <span class=\"number\">52</span>e:   <span class=\"number\">74</span> <span class=\"number\">02</span>                   je     <span class=\"number\">532</span> &lt;_init+<span class=\"number\">0x12</span>&gt;</span><br><span class=\"line\"> <span class=\"number\">530</span>:   ff <span class=\"built_in\">d0</span>                   callq  *%rax</span><br><span class=\"line\"> <span class=\"number\">532</span>:   <span class=\"number\">48</span> <span class=\"number\">83</span> <span class=\"built_in\">c4</span> <span class=\"number\">08</span>             <span class=\"keyword\">add </span>   <span class=\"number\">$0x8</span>,%rsp</span><br><span class=\"line\"> <span class=\"number\">536</span>:   <span class=\"built_in\">c3</span>                      retq   </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"symbol\">Disassembly</span> of section .plt:</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">0000000000000540</span> &lt;.plt&gt;:</span><br><span class=\"line\"> <span class=\"number\">540</span>:   ff <span class=\"number\">35</span> <span class=\"built_in\">c2</span> <span class=\"number\">0</span>a <span class=\"number\">20</span> <span class=\"number\">00</span>       <span class=\"keyword\">pushq </span> <span class=\"number\">0x200ac2</span>(%rip)        # <span class=\"number\">201008</span> &lt;_GLOBAL_OFFSET_TABLE_+<span class=\"number\">0x8</span>&gt;</span><br><span class=\"line\"> <span class=\"number\">546</span>:   ff <span class=\"number\">25</span> <span class=\"built_in\">c4</span> <span class=\"number\">0</span>a <span class=\"number\">20</span> <span class=\"number\">00</span>       jmpq   *<span class=\"number\">0x200ac4</span>(%rip)        # <span class=\"number\">201010</span> &lt;_GLOBAL_OFFSET_TABLE_+<span class=\"number\">0x10</span>&gt;</span><br><span class=\"line\"> <span class=\"number\">54</span>c:   <span class=\"number\">0</span>f <span class=\"number\">1</span>f <span class=\"number\">40</span> <span class=\"number\">00</span>             <span class=\"keyword\">nopl </span>  <span class=\"number\">0x0</span>(%rax)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"symbol\">Disassembly</span> of section .plt.got:</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">0000000000000550</span> &lt;.plt.got&gt;:</span><br><span class=\"line\"> <span class=\"number\">550</span>:   ff <span class=\"number\">25</span> <span class=\"number\">7</span>a <span class=\"number\">0</span>a <span class=\"number\">20</span> <span class=\"number\">00</span>       jmpq   *<span class=\"number\">0x200a7a</span>(%rip)        # <span class=\"number\">200</span>fd0 &lt;__cxa_finalize<span class=\"comment\">@GLIBC_2.2.5&gt;</span></span><br><span class=\"line\"> <span class=\"number\">556</span>:   <span class=\"number\">66</span> <span class=\"number\">90</span>                   xchg   %ax,%ax</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"symbol\">Disassembly</span> of section <span class=\"meta\">.text</span>:</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">0000000000000560</span> &lt;_start&gt;:</span><br><span class=\"line\"> <span class=\"number\">560</span>:   <span class=\"number\">31</span> ed                   xor    %ebp,%ebp</span><br><span class=\"line\"> <span class=\"number\">562</span>:   <span class=\"number\">49</span> <span class=\"number\">89</span> <span class=\"built_in\">d1</span>                <span class=\"keyword\">mov </span>   %rdx,%<span class=\"built_in\">r9</span></span><br><span class=\"line\"> <span class=\"number\">565</span>:   <span class=\"number\">5</span>e                      <span class=\"keyword\">pop </span>   %rsi</span><br><span class=\"line\"> <span class=\"number\">566</span>:   <span class=\"number\">48</span> <span class=\"number\">89</span> e2                <span class=\"keyword\">mov </span>   %rsp,%rdx</span><br><span class=\"line\"> <span class=\"number\">569</span>:   <span class=\"number\">48</span> <span class=\"number\">83</span> e4 <span class=\"built_in\">f0</span>             <span class=\"keyword\">and </span>   <span class=\"number\">$0xfffffffffffffff0</span>,%rsp</span><br><span class=\"line\"> <span class=\"number\">56</span>d:   <span class=\"number\">50</span>                      <span class=\"keyword\">push </span>  %rax</span><br><span class=\"line\"> <span class=\"number\">56</span>e:   <span class=\"number\">54</span>                      <span class=\"keyword\">push </span>  %rsp</span><br><span class=\"line\"> <span class=\"number\">56</span>f:   <span class=\"number\">4</span>c <span class=\"number\">8</span>d <span class=\"number\">05</span> ea <span class=\"number\">01</span> <span class=\"number\">00</span> <span class=\"number\">00</span>    lea    <span class=\"number\">0x1ea</span>(%rip),%<span class=\"built_in\">r8</span>        # <span class=\"number\">760</span> &lt;__libc_csu_fini&gt;</span><br><span class=\"line\"> <span class=\"number\">576</span>:   <span class=\"number\">48</span> <span class=\"number\">8</span>d <span class=\"number\">0</span>d <span class=\"number\">73</span> <span class=\"number\">01</span> <span class=\"number\">00</span> <span class=\"number\">00</span>    lea    <span class=\"number\">0x173</span>(%rip),%rcx        # <span class=\"number\">6</span><span class=\"built_in\">f0</span> &lt;__libc_csu_init&gt;</span><br><span class=\"line\"> <span class=\"number\">57</span>d:   <span class=\"number\">48</span> <span class=\"number\">8</span>d <span class=\"number\">3</span>d <span class=\"number\">25</span> <span class=\"number\">01</span> <span class=\"number\">00</span> <span class=\"number\">00</span>    lea    <span class=\"number\">0x125</span>(%rip),%rdi        # <span class=\"number\">6</span>a9 &lt;main&gt;</span><br><span class=\"line\"> <span class=\"number\">584</span>:   ff <span class=\"number\">15</span> <span class=\"number\">5</span>e <span class=\"number\">0</span>a <span class=\"number\">20</span> <span class=\"number\">00</span>       callq  *<span class=\"number\">0x200a5e</span>(%rip)        # <span class=\"number\">200</span>fe8 &lt;__libc_start_main<span class=\"comment\">@GLIBC_2.2.5&gt;</span></span><br><span class=\"line\"> <span class=\"number\">58</span>a:   <span class=\"built_in\">f4</span>                      hlt    </span><br><span class=\"line\"> <span class=\"number\">58</span>b:   <span class=\"number\">0</span>f <span class=\"number\">1</span>f <span class=\"number\">44</span> <span class=\"number\">00</span> <span class=\"number\">00</span>          <span class=\"keyword\">nopl </span>  <span class=\"number\">0x0</span>(%rax,%rax,<span class=\"number\">1</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">0000000000000590</span> &lt;deregister_tm_clones&gt;:</span><br><span class=\"line\"> <span class=\"number\">590</span>:   <span class=\"number\">48</span> <span class=\"number\">8</span>d <span class=\"number\">3</span>d <span class=\"number\">99</span> <span class=\"number\">0</span>a <span class=\"number\">20</span> <span class=\"number\">00</span>    lea    <span class=\"number\">0x200a99</span>(%rip),%rdi        # <span class=\"number\">201030</span> &lt;__TMC_END__&gt;</span><br><span class=\"line\"> <span class=\"number\">597</span>:   <span class=\"number\">48</span> <span class=\"number\">8</span>d <span class=\"number\">05</span> <span class=\"number\">99</span> <span class=\"number\">0</span>a <span class=\"number\">20</span> <span class=\"number\">00</span>    lea    <span class=\"number\">0x200a99</span>(%rip),%rax        # <span class=\"number\">201037</span> &lt;__TMC_END__+<span class=\"number\">0x7</span>&gt;</span><br><span class=\"line\"> <span class=\"number\">59</span>e:   <span class=\"number\">55</span>                      <span class=\"keyword\">push </span>  %rbp</span><br><span class=\"line\"> <span class=\"number\">59</span>f:   <span class=\"number\">48</span> <span class=\"number\">29</span> f8                <span class=\"keyword\">sub </span>   %rdi,%rax</span><br><span class=\"line\"> <span class=\"number\">5</span><span class=\"built_in\">a2</span>:   <span class=\"number\">48</span> <span class=\"number\">89</span> e5                <span class=\"keyword\">mov </span>   %rsp,%rbp</span><br><span class=\"line\"> <span class=\"number\">5</span>a5:   <span class=\"number\">48</span> <span class=\"number\">83</span> f8 <span class=\"number\">0</span>e             <span class=\"keyword\">cmp </span>   <span class=\"number\">$0xe</span>,%rax</span><br><span class=\"line\"> <span class=\"number\">5</span>a9:   <span class=\"number\">76</span> <span class=\"number\">15</span>                   jbe    <span class=\"number\">5</span><span class=\"built_in\">c0</span> &lt;deregister_tm_clones+<span class=\"number\">0x30</span>&gt;</span><br><span class=\"line\"> <span class=\"number\">5</span>ab:   <span class=\"number\">48</span> <span class=\"number\">8</span>b <span class=\"number\">05</span> <span class=\"number\">2</span>e <span class=\"number\">0</span>a <span class=\"number\">20</span> <span class=\"number\">00</span>    <span class=\"keyword\">mov </span>   <span class=\"number\">0x200a2e</span>(%rip),%rax        # <span class=\"number\">200</span>fe0 &lt;_ITM_deregisterTMCloneTable&gt;</span><br><span class=\"line\"> <span class=\"number\">5</span>b2:   <span class=\"number\">48</span> <span class=\"number\">85</span> <span class=\"built_in\">c0</span>                test   %rax,%rax</span><br><span class=\"line\"> <span class=\"number\">5</span>b5:   <span class=\"number\">74</span> <span class=\"number\">09</span>                   je     <span class=\"number\">5</span><span class=\"built_in\">c0</span> &lt;deregister_tm_clones+<span class=\"number\">0x30</span>&gt;</span><br><span class=\"line\"> <span class=\"number\">5</span>b7:   <span class=\"number\">5</span>d                      <span class=\"keyword\">pop </span>   %rbp</span><br><span class=\"line\"> <span class=\"number\">5</span>b8:   ff e0                   jmpq   *%rax</span><br><span class=\"line\"> <span class=\"number\">5</span>ba:   <span class=\"number\">66</span> <span class=\"number\">0</span>f <span class=\"number\">1</span>f <span class=\"number\">44</span> <span class=\"number\">00</span> <span class=\"number\">00</span>       <span class=\"keyword\">nopw </span>  <span class=\"number\">0x0</span>(%rax,%rax,<span class=\"number\">1</span>)</span><br><span class=\"line\"> <span class=\"number\">5</span><span class=\"built_in\">c0</span>:   <span class=\"number\">5</span>d                      <span class=\"keyword\">pop </span>   %rbp</span><br><span class=\"line\"> <span class=\"number\">5</span><span class=\"built_in\">c1</span>:   <span class=\"built_in\">c3</span>                      retq   </span><br><span class=\"line\"> <span class=\"number\">5</span><span class=\"built_in\">c2</span>:   <span class=\"number\">0</span>f <span class=\"number\">1</span>f <span class=\"number\">40</span> <span class=\"number\">00</span>             <span class=\"keyword\">nopl </span>  <span class=\"number\">0x0</span>(%rax)</span><br><span class=\"line\"> <span class=\"number\">5</span><span class=\"built_in\">c6</span>:   <span class=\"number\">66</span> <span class=\"number\">2</span>e <span class=\"number\">0</span>f <span class=\"number\">1</span>f <span class=\"number\">84</span> <span class=\"number\">00</span> <span class=\"number\">00</span>    <span class=\"keyword\">nopw </span>  %cs:<span class=\"number\">0x0</span>(%rax,%rax,<span class=\"number\">1</span>)</span><br><span class=\"line\"> <span class=\"number\">5</span>cd:   <span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">00</span> </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">00000000000005</span><span class=\"built_in\">d0</span> &lt;register_tm_clones&gt;:</span><br><span class=\"line\"> <span class=\"number\">5</span><span class=\"built_in\">d0</span>:   <span class=\"number\">48</span> <span class=\"number\">8</span>d <span class=\"number\">3</span>d <span class=\"number\">59</span> <span class=\"number\">0</span>a <span class=\"number\">20</span> <span class=\"number\">00</span>    lea    <span class=\"number\">0x200a59</span>(%rip),%rdi        # <span class=\"number\">201030</span> &lt;__TMC_END__&gt;</span><br><span class=\"line\"> <span class=\"number\">5</span><span class=\"built_in\">d7</span>:   <span class=\"number\">48</span> <span class=\"number\">8</span>d <span class=\"number\">35</span> <span class=\"number\">52</span> <span class=\"number\">0</span>a <span class=\"number\">20</span> <span class=\"number\">00</span>    lea    <span class=\"number\">0x200a52</span>(%rip),%rsi        # <span class=\"number\">201030</span> &lt;__TMC_END__&gt;</span><br><span class=\"line\"> <span class=\"number\">5</span>de:   <span class=\"number\">55</span>                      <span class=\"keyword\">push </span>  %rbp</span><br><span class=\"line\"> <span class=\"number\">5</span>df:   <span class=\"number\">48</span> <span class=\"number\">29</span> fe                <span class=\"keyword\">sub </span>   %rdi,%rsi</span><br><span class=\"line\"> <span class=\"number\">5</span>e2:   <span class=\"number\">48</span> <span class=\"number\">89</span> e5                <span class=\"keyword\">mov </span>   %rsp,%rbp</span><br><span class=\"line\"> <span class=\"number\">5</span>e5:   <span class=\"number\">48</span> <span class=\"built_in\">c1</span> fe <span class=\"number\">03</span>             sar    <span class=\"number\">$0x3</span>,%rsi</span><br><span class=\"line\"> <span class=\"number\">5</span>e9:   <span class=\"number\">48</span> <span class=\"number\">89</span> <span class=\"built_in\">f0</span>                <span class=\"keyword\">mov </span>   %rsi,%rax</span><br><span class=\"line\"> <span class=\"number\">5</span>ec:   <span class=\"number\">48</span> <span class=\"built_in\">c1</span> e8 <span class=\"number\">3</span>f             shr    <span class=\"number\">$0x3f</span>,%rax</span><br><span class=\"line\"> <span class=\"number\">5</span><span class=\"built_in\">f0</span>:   <span class=\"number\">48</span> <span class=\"number\">01</span> <span class=\"built_in\">c6</span>                <span class=\"keyword\">add </span>   %rax,%rsi</span><br><span class=\"line\"> <span class=\"number\">5</span><span class=\"built_in\">f3</span>:   <span class=\"number\">48</span> <span class=\"built_in\">d1</span> fe                sar    %rsi</span><br><span class=\"line\"> <span class=\"number\">5</span><span class=\"built_in\">f6</span>:   <span class=\"number\">74</span> <span class=\"number\">18</span>                   je     <span class=\"number\">610</span> &lt;register_tm_clones+<span class=\"number\">0x40</span>&gt;</span><br><span class=\"line\"> <span class=\"number\">5</span>f8:   <span class=\"number\">48</span> <span class=\"number\">8</span>b <span class=\"number\">05</span> f9 <span class=\"number\">09</span> <span class=\"number\">20</span> <span class=\"number\">00</span>    <span class=\"keyword\">mov </span>   <span class=\"number\">0x2009f9</span>(%rip),%rax        # <span class=\"number\">200</span>ff8 &lt;_ITM_registerTMCloneTable&gt;</span><br><span class=\"line\"> <span class=\"number\">5</span>ff:   <span class=\"number\">48</span> <span class=\"number\">85</span> <span class=\"built_in\">c0</span>                test   %rax,%rax</span><br><span class=\"line\"> <span class=\"number\">602</span>:   <span class=\"number\">74</span> <span class=\"number\">0</span>c                   je     <span class=\"number\">610</span> &lt;register_tm_clones+<span class=\"number\">0x40</span>&gt;</span><br><span class=\"line\"> <span class=\"number\">604</span>:   <span class=\"number\">5</span>d                      <span class=\"keyword\">pop </span>   %rbp</span><br><span class=\"line\"> <span class=\"number\">605</span>:   ff e0                   jmpq   *%rax</span><br><span class=\"line\"> <span class=\"number\">607</span>:   <span class=\"number\">66</span> <span class=\"number\">0</span>f <span class=\"number\">1</span>f <span class=\"number\">84</span> <span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">00</span>    <span class=\"keyword\">nopw </span>  <span class=\"number\">0x0</span>(%rax,%rax,<span class=\"number\">1</span>)</span><br><span class=\"line\"> <span class=\"number\">60</span>e:   <span class=\"number\">00</span> <span class=\"number\">00</span> </span><br><span class=\"line\"> <span class=\"number\">610</span>:   <span class=\"number\">5</span>d                      <span class=\"keyword\">pop </span>   %rbp</span><br><span class=\"line\"> <span class=\"number\">611</span>:   <span class=\"built_in\">c3</span>                      retq   </span><br><span class=\"line\"> <span class=\"number\">612</span>:   <span class=\"number\">0</span>f <span class=\"number\">1</span>f <span class=\"number\">40</span> <span class=\"number\">00</span>             <span class=\"keyword\">nopl </span>  <span class=\"number\">0x0</span>(%rax)</span><br><span class=\"line\"> <span class=\"number\">616</span>:   <span class=\"number\">66</span> <span class=\"number\">2</span>e <span class=\"number\">0</span>f <span class=\"number\">1</span>f <span class=\"number\">84</span> <span class=\"number\">00</span> <span class=\"number\">00</span>    <span class=\"keyword\">nopw </span>  %cs:<span class=\"number\">0x0</span>(%rax,%rax,<span class=\"number\">1</span>)</span><br><span class=\"line\"> <span class=\"number\">61</span>d:   <span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">00</span> </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">0000000000000620</span> &lt;__do_global_dtors_aux&gt;:</span><br><span class=\"line\"> <span class=\"number\">620</span>:   <span class=\"number\">80</span> <span class=\"number\">3</span>d <span class=\"number\">05</span> <span class=\"number\">0</span>a <span class=\"number\">20</span> <span class=\"number\">00</span> <span class=\"number\">00</span>    <span class=\"keyword\">cmpb </span>  <span class=\"number\">$0x0</span>,<span class=\"number\">0x200a05</span>(%rip)        # <span class=\"number\">20102</span>c &lt;_edata&gt;</span><br><span class=\"line\"> <span class=\"number\">627</span>:   <span class=\"number\">75</span> <span class=\"number\">27</span>                   jne    <span class=\"number\">650</span> &lt;__do_global_dtors_aux+<span class=\"number\">0x30</span>&gt;</span><br><span class=\"line\"> <span class=\"number\">629</span>:   <span class=\"number\">48</span> <span class=\"number\">83</span> <span class=\"number\">3</span>d <span class=\"number\">9</span>f <span class=\"number\">09</span> <span class=\"number\">20</span> <span class=\"number\">00</span>    <span class=\"keyword\">cmpq </span>  <span class=\"number\">$0x0</span>,<span class=\"number\">0x20099f</span>(%rip)        # <span class=\"number\">200</span>fd0 &lt;__cxa_finalize<span class=\"comment\">@GLIBC_2.2.5&gt;</span></span><br><span class=\"line\"> <span class=\"number\">630</span>:   <span class=\"number\">00</span> </span><br><span class=\"line\"> <span class=\"number\">631</span>:   <span class=\"number\">55</span>                      <span class=\"keyword\">push </span>  %rbp</span><br><span class=\"line\"> <span class=\"number\">632</span>:   <span class=\"number\">48</span> <span class=\"number\">89</span> e5                <span class=\"keyword\">mov </span>   %rsp,%rbp</span><br><span class=\"line\"> <span class=\"number\">635</span>:   <span class=\"number\">74</span> <span class=\"number\">0</span>c                   je     <span class=\"number\">643</span> &lt;__do_global_dtors_aux+<span class=\"number\">0x23</span>&gt;</span><br><span class=\"line\"> <span class=\"number\">637</span>:   <span class=\"number\">48</span> <span class=\"number\">8</span>b <span class=\"number\">3</span>d e2 <span class=\"number\">09</span> <span class=\"number\">20</span> <span class=\"number\">00</span>    <span class=\"keyword\">mov </span>   <span class=\"number\">0x2009e2</span>(%rip),%rdi        # <span class=\"number\">201020</span> &lt;__dso_handle&gt;</span><br><span class=\"line\"> <span class=\"number\">63</span>e:   e8 <span class=\"number\">0</span>d ff ff ff          callq  <span class=\"number\">550</span> &lt;.plt.got&gt;</span><br><span class=\"line\"> <span class=\"number\">643</span>:   e8 <span class=\"number\">48</span> ff ff ff          callq  <span class=\"number\">590</span> &lt;deregister_tm_clones&gt;</span><br><span class=\"line\"> <span class=\"number\">648</span>:   <span class=\"number\">5</span>d                      <span class=\"keyword\">pop </span>   %rbp</span><br><span class=\"line\"> <span class=\"number\">649</span>:   <span class=\"built_in\">c6</span> <span class=\"number\">05</span> dc <span class=\"number\">09</span> <span class=\"number\">20</span> <span class=\"number\">00</span> <span class=\"number\">01</span>    <span class=\"keyword\">movb </span>  <span class=\"number\">$0x1</span>,<span class=\"number\">0x2009dc</span>(%rip)        # <span class=\"number\">20102</span>c &lt;_edata&gt;</span><br><span class=\"line\"> <span class=\"number\">650</span>:   <span class=\"built_in\">f3</span> <span class=\"built_in\">c3</span>                   repz retq </span><br><span class=\"line\"> <span class=\"number\">652</span>:   <span class=\"number\">0</span>f <span class=\"number\">1</span>f <span class=\"number\">40</span> <span class=\"number\">00</span>             <span class=\"keyword\">nopl </span>  <span class=\"number\">0x0</span>(%rax)</span><br><span class=\"line\"> <span class=\"number\">656</span>:   <span class=\"number\">66</span> <span class=\"number\">2</span>e <span class=\"number\">0</span>f <span class=\"number\">1</span>f <span class=\"number\">84</span> <span class=\"number\">00</span> <span class=\"number\">00</span>    <span class=\"keyword\">nopw </span>  %cs:<span class=\"number\">0x0</span>(%rax,%rax,<span class=\"number\">1</span>)</span><br><span class=\"line\"> <span class=\"number\">65</span>d:   <span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">00</span> </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">0000000000000660</span> &lt;frame_dummy&gt;:</span><br><span class=\"line\"> <span class=\"number\">660</span>:   <span class=\"number\">48</span> <span class=\"number\">8</span>d <span class=\"number\">3</span>d <span class=\"number\">81</span> <span class=\"number\">07</span> <span class=\"number\">20</span> <span class=\"number\">00</span>    lea    <span class=\"number\">0x200781</span>(%rip),%rdi        # <span class=\"number\">200</span>de8 &lt;__JCR_END__&gt;</span><br><span class=\"line\"> <span class=\"number\">667</span>:   <span class=\"number\">48</span> <span class=\"number\">83</span> <span class=\"number\">3</span>f <span class=\"number\">00</span>             <span class=\"keyword\">cmpq </span>  <span class=\"number\">$0x0</span>,(%rdi)</span><br><span class=\"line\"> <span class=\"number\">66</span>b:   <span class=\"number\">75</span> <span class=\"number\">0</span>b                   jne    <span class=\"number\">678</span> &lt;frame_dummy+<span class=\"number\">0x18</span>&gt;</span><br><span class=\"line\"> <span class=\"number\">66</span>d:   e9 <span class=\"number\">5</span>e ff ff ff          jmpq   <span class=\"number\">5</span><span class=\"built_in\">d0</span> &lt;register_tm_clones&gt;</span><br><span class=\"line\"> <span class=\"number\">672</span>:   <span class=\"number\">66</span> <span class=\"number\">0</span>f <span class=\"number\">1</span>f <span class=\"number\">44</span> <span class=\"number\">00</span> <span class=\"number\">00</span>       <span class=\"keyword\">nopw </span>  <span class=\"number\">0x0</span>(%rax,%rax,<span class=\"number\">1</span>)</span><br><span class=\"line\"> <span class=\"number\">678</span>:   <span class=\"number\">48</span> <span class=\"number\">8</span>b <span class=\"number\">05</span> <span class=\"number\">59</span> <span class=\"number\">09</span> <span class=\"number\">20</span> <span class=\"number\">00</span>    <span class=\"keyword\">mov </span>   <span class=\"number\">0x200959</span>(%rip),%rax        # <span class=\"number\">200</span>fd8 &lt;_Jv_RegisterClasses&gt;</span><br><span class=\"line\"> <span class=\"number\">67</span>f:   <span class=\"number\">48</span> <span class=\"number\">85</span> <span class=\"built_in\">c0</span>                test   %rax,%rax</span><br><span class=\"line\"> <span class=\"number\">682</span>:   <span class=\"number\">74</span> e9                   je     <span class=\"number\">66</span>d &lt;frame_dummy+<span class=\"number\">0xd</span>&gt;</span><br><span class=\"line\"> <span class=\"number\">684</span>:   <span class=\"number\">55</span>                      <span class=\"keyword\">push </span>  %rbp</span><br><span class=\"line\"> <span class=\"number\">685</span>:   <span class=\"number\">48</span> <span class=\"number\">89</span> e5                <span class=\"keyword\">mov </span>   %rsp,%rbp</span><br><span class=\"line\"> <span class=\"number\">688</span>:   ff <span class=\"built_in\">d0</span>                   callq  *%rax</span><br><span class=\"line\"> <span class=\"number\">68</span>a:   <span class=\"number\">5</span>d                      <span class=\"keyword\">pop </span>   %rbp</span><br><span class=\"line\"> <span class=\"number\">68</span>b:   e9 <span class=\"number\">40</span> ff ff ff          jmpq   <span class=\"number\">5</span><span class=\"built_in\">d0</span> &lt;register_tm_clones&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">0000000000000690</span> &lt;_Z9main_funcii&gt;:</span><br><span class=\"line\"> <span class=\"number\">690</span>:   <span class=\"number\">55</span>                      <span class=\"keyword\">push </span>  %rbp</span><br><span class=\"line\"> <span class=\"number\">691</span>:   <span class=\"number\">48</span> <span class=\"number\">89</span> e5                <span class=\"keyword\">mov </span>   %rsp,%rbp</span><br><span class=\"line\"> <span class=\"number\">694</span>:   <span class=\"number\">89</span> <span class=\"number\">7</span>d fc                <span class=\"keyword\">mov </span>   %edi,-<span class=\"number\">0x4</span>(%rbp)</span><br><span class=\"line\"> <span class=\"number\">697</span>:   <span class=\"number\">89</span> <span class=\"number\">75</span> f8                <span class=\"keyword\">mov </span>   %esi,-<span class=\"number\">0x8</span>(%rbp)</span><br><span class=\"line\"> <span class=\"number\">69</span>a:   <span class=\"number\">8</span>b <span class=\"number\">55</span> fc                <span class=\"keyword\">mov </span>   -<span class=\"number\">0x4</span>(%rbp),%edx</span><br><span class=\"line\"> <span class=\"number\">69</span>d:   <span class=\"number\">8</span>b <span class=\"number\">45</span> f8                <span class=\"keyword\">mov </span>   -<span class=\"number\">0x8</span>(%rbp),%eax</span><br><span class=\"line\"> <span class=\"number\">6</span>a0:   <span class=\"number\">01</span> <span class=\"built_in\">d0</span>                   <span class=\"keyword\">add </span>   %edx,%eax</span><br><span class=\"line\"> <span class=\"number\">6</span><span class=\"built_in\">a2</span>:   <span class=\"number\">05</span> <span class=\"built_in\">c3</span> <span class=\"number\">07</span> <span class=\"number\">00</span> <span class=\"number\">00</span>          <span class=\"keyword\">add </span>   <span class=\"number\">$0x7c3</span>,%eax</span><br><span class=\"line\"> <span class=\"number\">6</span>a7:   <span class=\"number\">5</span>d                      <span class=\"keyword\">pop </span>   %rbp</span><br><span class=\"line\"> <span class=\"number\">6</span>a8:   <span class=\"built_in\">c3</span>                      retq   </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">00000000000006</span>a9 &lt;main&gt;:</span><br><span class=\"line\"> <span class=\"number\">6</span>a9:   <span class=\"number\">55</span>                      <span class=\"keyword\">push </span>  %rbp</span><br><span class=\"line\"> <span class=\"number\">6</span>aa:   <span class=\"number\">48</span> <span class=\"number\">89</span> e5                <span class=\"keyword\">mov </span>   %rsp,%rbp</span><br><span class=\"line\"> <span class=\"number\">6</span>ad:   <span class=\"number\">48</span> <span class=\"number\">83</span> ec <span class=\"number\">20</span>             <span class=\"keyword\">sub </span>   <span class=\"number\">$0x20</span>,%rsp</span><br><span class=\"line\"> <span class=\"number\">6</span>b1:   <span class=\"number\">89</span> <span class=\"number\">7</span>d ec                <span class=\"keyword\">mov </span>   %edi,-<span class=\"number\">0x14</span>(%rbp)</span><br><span class=\"line\"> <span class=\"number\">6</span>b4:   <span class=\"number\">48</span> <span class=\"number\">89</span> <span class=\"number\">75</span> e0             <span class=\"keyword\">mov </span>   %rsi,-<span class=\"number\">0x20</span>(%rbp)</span><br><span class=\"line\"> <span class=\"number\">6</span>b8:   <span class=\"built_in\">c7</span> <span class=\"number\">45</span> fc <span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">00</span>    <span class=\"keyword\">movl </span>  <span class=\"number\">$0x0</span>,-<span class=\"number\">0x4</span>(%rbp)</span><br><span class=\"line\"> <span class=\"number\">6</span>bf:   <span class=\"number\">48</span> <span class=\"number\">8</span>d <span class=\"number\">05</span> <span class=\"number\">6</span>a <span class=\"number\">09</span> <span class=\"number\">20</span> <span class=\"number\">00</span>    lea    <span class=\"number\">0x20096a</span>(%rip),%rax        # <span class=\"number\">201030</span> &lt;__TMC_END__&gt;</span><br><span class=\"line\"> <span class=\"number\">6</span><span class=\"built_in\">c6</span>:   <span class=\"number\">8</span>b <span class=\"number\">55</span> ec                <span class=\"keyword\">mov </span>   -<span class=\"number\">0x14</span>(%rbp),%edx</span><br><span class=\"line\"> <span class=\"number\">6</span><span class=\"built_in\">c9</span>:   <span class=\"number\">89</span> <span class=\"number\">10</span>                   <span class=\"keyword\">mov </span>   %edx,(%rax)</span><br><span class=\"line\"> <span class=\"number\">6</span>cb:   <span class=\"number\">48</span> <span class=\"number\">8</span>d <span class=\"number\">05</span> <span class=\"number\">56</span> <span class=\"number\">09</span> <span class=\"number\">20</span> <span class=\"number\">00</span>    lea    <span class=\"number\">0x200956</span>(%rip),%rax        # <span class=\"number\">201028</span> &lt;g_static_data&gt;</span><br><span class=\"line\"> <span class=\"number\">6</span><span class=\"built_in\">d2</span>:   <span class=\"number\">8</span>b <span class=\"number\">10</span>                   <span class=\"keyword\">mov </span>   (%rax),%edx</span><br><span class=\"line\"> <span class=\"number\">6</span><span class=\"built_in\">d4</span>:   <span class=\"number\">48</span> <span class=\"number\">8</span>d <span class=\"number\">05</span> <span class=\"number\">55</span> <span class=\"number\">09</span> <span class=\"number\">20</span> <span class=\"number\">00</span>    lea    <span class=\"number\">0x200955</span>(%rip),%rax        # <span class=\"number\">201030</span> &lt;__TMC_END__&gt;</span><br><span class=\"line\"> <span class=\"number\">6</span>db:   <span class=\"number\">8</span>b <span class=\"number\">00</span>                   <span class=\"keyword\">mov </span>   (%rax),%eax</span><br><span class=\"line\"> <span class=\"number\">6</span>dd:   <span class=\"number\">89</span> <span class=\"built_in\">d6</span>                   <span class=\"keyword\">mov </span>   %edx,%esi</span><br><span class=\"line\"> <span class=\"number\">6</span>df:   <span class=\"number\">89</span> <span class=\"built_in\">c7</span>                   <span class=\"keyword\">mov </span>   %eax,%edi</span><br><span class=\"line\"> <span class=\"number\">6</span>e1:   e8 aa ff ff ff          callq  <span class=\"number\">690</span> &lt;_Z9main_funcii&gt;</span><br><span class=\"line\"> <span class=\"number\">6</span>e6:   <span class=\"number\">01</span> <span class=\"number\">45</span> fc                <span class=\"keyword\">add </span>   %eax,-<span class=\"number\">0x4</span>(%rbp)</span><br><span class=\"line\"> <span class=\"number\">6</span>e9:   <span class=\"number\">8</span>b <span class=\"number\">45</span> fc                <span class=\"keyword\">mov </span>   -<span class=\"number\">0x4</span>(%rbp),%eax</span><br><span class=\"line\"> <span class=\"number\">6</span>ec:   <span class=\"built_in\">c9</span>                      leaveq </span><br><span class=\"line\"> <span class=\"number\">6</span>ed:   <span class=\"built_in\">c3</span>                      retq   </span><br><span class=\"line\"> <span class=\"number\">6</span>ee:   <span class=\"number\">66</span> <span class=\"number\">90</span>                   xchg   %ax,%ax</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">00000000000006</span><span class=\"built_in\">f0</span> &lt;__libc_csu_init&gt;:</span><br><span class=\"line\"> <span class=\"number\">6</span><span class=\"built_in\">f0</span>:   <span class=\"number\">41</span> <span class=\"number\">57</span>                   <span class=\"keyword\">push </span>  %<span class=\"built_in\">r15</span></span><br><span class=\"line\"> <span class=\"number\">6</span><span class=\"built_in\">f2</span>:   <span class=\"number\">41</span> <span class=\"number\">56</span>                   <span class=\"keyword\">push </span>  %<span class=\"built_in\">r14</span></span><br><span class=\"line\"> <span class=\"number\">6</span><span class=\"built_in\">f4</span>:   <span class=\"number\">49</span> <span class=\"number\">89</span> <span class=\"built_in\">d7</span>                <span class=\"keyword\">mov </span>   %rdx,%<span class=\"built_in\">r15</span></span><br><span class=\"line\"> <span class=\"number\">6</span><span class=\"built_in\">f7</span>:   <span class=\"number\">41</span> <span class=\"number\">55</span>                   <span class=\"keyword\">push </span>  %<span class=\"built_in\">r13</span></span><br><span class=\"line\"> <span class=\"number\">6</span>f9:   <span class=\"number\">41</span> <span class=\"number\">54</span>                   <span class=\"keyword\">push </span>  %<span class=\"built_in\">r12</span></span><br><span class=\"line\"> <span class=\"number\">6</span>fb:   <span class=\"number\">4</span>c <span class=\"number\">8</span>d <span class=\"number\">25</span> <span class=\"built_in\">d6</span> <span class=\"number\">06</span> <span class=\"number\">20</span> <span class=\"number\">00</span>    lea    <span class=\"number\">0x2006d6</span>(%rip),%<span class=\"built_in\">r12</span>        # <span class=\"number\">200</span>dd8 &lt;__frame_dummy_init_array_entry&gt;</span><br><span class=\"line\"> <span class=\"number\">702</span>:   <span class=\"number\">55</span>                      <span class=\"keyword\">push </span>  %rbp</span><br><span class=\"line\"> <span class=\"number\">703</span>:   <span class=\"number\">48</span> <span class=\"number\">8</span>d <span class=\"number\">2</span>d <span class=\"built_in\">d6</span> <span class=\"number\">06</span> <span class=\"number\">20</span> <span class=\"number\">00</span>    lea    <span class=\"number\">0x2006d6</span>(%rip),%rbp        # <span class=\"number\">200</span>de0 &lt;__init_array_end&gt;</span><br><span class=\"line\"> <span class=\"number\">70</span>a:   <span class=\"number\">53</span>                      <span class=\"keyword\">push </span>  %rbx</span><br><span class=\"line\"> <span class=\"number\">70</span>b:   <span class=\"number\">41</span> <span class=\"number\">89</span> fd                <span class=\"keyword\">mov </span>   %edi,%r13d</span><br><span class=\"line\"> <span class=\"number\">70</span>e:   <span class=\"number\">49</span> <span class=\"number\">89</span> <span class=\"built_in\">f6</span>                <span class=\"keyword\">mov </span>   %rsi,%<span class=\"built_in\">r14</span></span><br><span class=\"line\"> <span class=\"number\">711</span>:   <span class=\"number\">4</span>c <span class=\"number\">29</span> e5                <span class=\"keyword\">sub </span>   %<span class=\"built_in\">r12</span>,%rbp</span><br><span class=\"line\"> <span class=\"number\">714</span>:   <span class=\"number\">48</span> <span class=\"number\">83</span> ec <span class=\"number\">08</span>             <span class=\"keyword\">sub </span>   <span class=\"number\">$0x8</span>,%rsp</span><br><span class=\"line\"> <span class=\"number\">718</span>:   <span class=\"number\">48</span> <span class=\"built_in\">c1</span> fd <span class=\"number\">03</span>             sar    <span class=\"number\">$0x3</span>,%rbp</span><br><span class=\"line\"> <span class=\"number\">71</span>c:   e8 ff fd ff ff          callq  <span class=\"number\">520</span> &lt;_init&gt;</span><br><span class=\"line\"> <span class=\"number\">721</span>:   <span class=\"number\">48</span> <span class=\"number\">85</span> ed                test   %rbp,%rbp</span><br><span class=\"line\"> <span class=\"number\">724</span>:   <span class=\"number\">74</span> <span class=\"number\">20</span>                   je     <span class=\"number\">746</span> &lt;__libc_csu_init+<span class=\"number\">0x56</span>&gt;</span><br><span class=\"line\"> <span class=\"number\">726</span>:   <span class=\"number\">31</span> db                   xor    %ebx,%ebx</span><br><span class=\"line\"> <span class=\"number\">728</span>:   <span class=\"number\">0</span>f <span class=\"number\">1</span>f <span class=\"number\">84</span> <span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">00</span>    <span class=\"keyword\">nopl </span>  <span class=\"number\">0x0</span>(%rax,%rax,<span class=\"number\">1</span>)</span><br><span class=\"line\"> <span class=\"number\">72</span>f:   <span class=\"number\">00</span> </span><br><span class=\"line\"> <span class=\"number\">730</span>:   <span class=\"number\">4</span>c <span class=\"number\">89</span> fa                <span class=\"keyword\">mov </span>   %<span class=\"built_in\">r15</span>,%rdx</span><br><span class=\"line\"> <span class=\"number\">733</span>:   <span class=\"number\">4</span>c <span class=\"number\">89</span> <span class=\"built_in\">f6</span>                <span class=\"keyword\">mov </span>   %<span class=\"built_in\">r14</span>,%rsi</span><br><span class=\"line\"> <span class=\"number\">736</span>:   <span class=\"number\">44</span> <span class=\"number\">89</span> ef                <span class=\"keyword\">mov </span>   %r13d,%edi</span><br><span class=\"line\"> <span class=\"number\">739</span>:   <span class=\"number\">41</span> ff <span class=\"number\">14</span> dc             callq  *(%<span class=\"built_in\">r12</span>,%rbx,<span class=\"number\">8</span>)</span><br><span class=\"line\"> <span class=\"number\">73</span>d:   <span class=\"number\">48</span> <span class=\"number\">83</span> <span class=\"built_in\">c3</span> <span class=\"number\">01</span>             <span class=\"keyword\">add </span>   <span class=\"number\">$0x1</span>,%rbx</span><br><span class=\"line\"> <span class=\"number\">741</span>:   <span class=\"number\">48</span> <span class=\"number\">39</span> dd                <span class=\"keyword\">cmp </span>   %rbx,%rbp</span><br><span class=\"line\"> <span class=\"number\">744</span>:   <span class=\"number\">75</span> ea                   jne    <span class=\"number\">730</span> &lt;__libc_csu_init+<span class=\"number\">0x40</span>&gt;</span><br><span class=\"line\"> <span class=\"number\">746</span>:   <span class=\"number\">48</span> <span class=\"number\">83</span> <span class=\"built_in\">c4</span> <span class=\"number\">08</span>             <span class=\"keyword\">add </span>   <span class=\"number\">$0x8</span>,%rsp</span><br><span class=\"line\"> <span class=\"number\">74</span>a:   <span class=\"number\">5</span>b                      <span class=\"keyword\">pop </span>   %rbx</span><br><span class=\"line\"> <span class=\"number\">74</span>b:   <span class=\"number\">5</span>d                      <span class=\"keyword\">pop </span>   %rbp</span><br><span class=\"line\"> <span class=\"number\">74</span>c:   <span class=\"number\">41</span> <span class=\"number\">5</span>c                   <span class=\"keyword\">pop </span>   %<span class=\"built_in\">r12</span></span><br><span class=\"line\"> <span class=\"number\">74</span>e:   <span class=\"number\">41</span> <span class=\"number\">5</span>d                   <span class=\"keyword\">pop </span>   %<span class=\"built_in\">r13</span></span><br><span class=\"line\"> <span class=\"number\">750</span>:   <span class=\"number\">41</span> <span class=\"number\">5</span>e                   <span class=\"keyword\">pop </span>   %<span class=\"built_in\">r14</span></span><br><span class=\"line\"> <span class=\"number\">752</span>:   <span class=\"number\">41</span> <span class=\"number\">5</span>f                   <span class=\"keyword\">pop </span>   %<span class=\"built_in\">r15</span></span><br><span class=\"line\"> <span class=\"number\">754</span>:   <span class=\"built_in\">c3</span>                      retq   </span><br><span class=\"line\"> <span class=\"number\">755</span>:   <span class=\"number\">90</span>                      <span class=\"keyword\">nop</span></span><br><span class=\"line\"><span class=\"keyword\"> </span><span class=\"number\">756</span>:   <span class=\"number\">66</span> <span class=\"number\">2</span>e <span class=\"number\">0</span>f <span class=\"number\">1</span>f <span class=\"number\">84</span> <span class=\"number\">00</span> <span class=\"number\">00</span>    <span class=\"keyword\">nopw </span>  %cs:<span class=\"number\">0x0</span>(%rax,%rax,<span class=\"number\">1</span>)</span><br><span class=\"line\"> <span class=\"number\">75</span>d:   <span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">00</span> </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">0000000000000760</span> &lt;__libc_csu_fini&gt;:</span><br><span class=\"line\"> <span class=\"number\">760</span>:   <span class=\"built_in\">f3</span> <span class=\"built_in\">c3</span>                   repz retq </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"symbol\">Disassembly</span> of section .fini:</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">0000000000000764</span> &lt;_fini&gt;:</span><br><span class=\"line\"> <span class=\"number\">764</span>:   <span class=\"number\">48</span> <span class=\"number\">83</span> ec <span class=\"number\">08</span>             <span class=\"keyword\">sub </span>   <span class=\"number\">$0x8</span>,%rsp</span><br><span class=\"line\"> <span class=\"number\">768</span>:   <span class=\"number\">48</span> <span class=\"number\">83</span> <span class=\"built_in\">c4</span> <span class=\"number\">08</span>             <span class=\"keyword\">add </span>   <span class=\"number\">$0x8</span>,%rsp</span><br><span class=\"line\"> <span class=\"number\">76</span>c:   <span class=\"built_in\">c3</span>                      retq</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<h3 id=\"目录\"><a href=\"#目录\" class=\"headerlink\" title=\"目录\"></a>目录</h3><hr>\n<!-- TOC -->\n\n<ul>\n<li><a href=\"#目录\">目录</a></li>\n<li><a href=\"#基本编译链接流程\">基本编译链接流程</a></li>\n<li><a href=\"#静态链接过程概述\">静态链接过程概述</a></li>\n<li><a href=\"#静态链接过程流程追踪和代码验证\">静态链接过程流程追踪和代码验证</a><ul>\n<li><a href=\"#测试源代码\">测试源代码</a></li>\n<li><a href=\"#生成汇编代码-从这里开始会有两个分支代码-non-pic-和-pic对照\">生成汇编代码 (从这里开始会有两个分支代码 NON-PIC 和 PIC对照)</a><ul>\n<li><a href=\"#汇编代码-相对位置版本\">汇编代码 (相对位置版本)</a></li>\n<li><a href=\"#汇编代码-位置无关版本\">汇编代码 (位置无关版本)</a></li>\n</ul>\n</li>\n<li><a href=\"#生成elf的可重定位文件\">生成ELF的可重定位文件</a><ul>\n<li><a href=\"#可重定向文件和汇编指令-相对位置版本\">可重定向文件和汇编指令 (相对位置版本)</a></li>\n<li><a href=\"#可重定向文件和汇编指令-位置无关版本\">可重定向文件和汇编指令 (位置无关版本)</a></li>\n</ul>\n</li>\n<li><a href=\"#链接为可执行文件或者共享库\">链接为可执行文件(或者共享库)</a><ul>\n<li><a href=\"#可执行文件-相对位置的非pieexec版本\">可执行文件 (相对位置的非PIE(EXEC)版本)</a></li>\n<li><a href=\"#可执行文件-相对位置的piedyn版本\">可执行文件 (相对位置的PIE(DYN)版本)</a></li>\n<li><a href=\"#可执行文件-位置无关的非pieexec版本\">可执行文件 (位置无关的非PIE(EXEC)版本)</a></li>\n<li><a href=\"#可执行文件-位置无关的piedyn版本\">可执行文件 (位置无关的PIE(DYN)版本)</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<!-- /TOC -->\n\n<h3 id=\"基本编译链接流程\"><a href=\"#基本编译链接流程\" class=\"headerlink\" title=\"基本编译链接流程\"></a>基本编译链接流程</h3><ul>\n<li>编译并输出汇编代码  <ul>\n<li>g++ -S lib.cpp -o lib.s </li>\n</ul>\n</li>\n<li>打包成ELF可重定位文件 ELF TYPE= ET_REL  即.o文件  <ul>\n<li>g++ -c lib.s -o lib.o </li>\n</ul>\n</li>\n<li>链接到动态库或者可执行文件<ul>\n<li>g++ lib.o -o a.out   </li>\n<li>g++ -shared lib.o -o a.out </li>\n</ul>\n</li>\n</ul>","more":"<h3 id=\"静态链接过程概述\"><a href=\"#静态链接过程概述\" class=\"headerlink\" title=\"静态链接过程概述\"></a>静态链接过程概述</h3><h3 id=\"静态链接过程流程追踪和代码验证\"><a href=\"#静态链接过程流程追踪和代码验证\" class=\"headerlink\" title=\"静态链接过程流程追踪和代码验证\"></a>静态链接过程流程追踪和代码验证</h3><h4 id=\"测试源代码\"><a href=\"#测试源代码\" class=\"headerlink\" title=\"测试源代码\"></a>测试源代码</h4><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span> g_static_bss = <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> g_static_data = <span class=\"number\">182</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> g_static_text = <span class=\"number\">1987</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main_func</span><span class=\"params\">(<span class=\"keyword\">int</span> a, <span class=\"keyword\">int</span> b)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">   <span class=\"keyword\">return</span> a+b + g_static_text;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"keyword\">int</span> argc, <span class=\"keyword\">char</span> *argv[])</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">   <span class=\"keyword\">int</span> a = <span class=\"number\">0</span>;</span><br><span class=\"line\">   g_static_bss = argc;</span><br><span class=\"line\">   a += main_func(g_static_bss, g_static_data);</span><br><span class=\"line\">   <span class=\"keyword\">return</span> a;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"生成汇编代码-从这里开始会有两个分支代码-NON-PIC-和-PIC对照\"><a href=\"#生成汇编代码-从这里开始会有两个分支代码-NON-PIC-和-PIC对照\" class=\"headerlink\" title=\"生成汇编代码 (从这里开始会有两个分支代码 NON-PIC 和 PIC对照)\"></a>生成汇编代码 (从这里开始会有两个分支代码 NON-PIC 和 PIC对照)</h4><p>在这段代码中 </p>\n<ul>\n<li><p>g_static_bss  </p>\n<ul>\n<li>为全局的符号(给链接器看到) </li>\n<li>被放在.bss字段(未初始化数据段, Block Started by Symbol)中 </li>\n<li>占用4个字节  类型是object 初始化为0   </li>\n<li>4字节对齐  </li>\n</ul>\n</li>\n<li><p>g_static_data  </p>\n<ul>\n<li>为全局的符号(给链接器看到) </li>\n<li>被放在.data字段(数据段)中 </li>\n<li>占用4个字节  类型是object 初始化为182   </li>\n<li>4字节对齐  </li>\n</ul>\n</li>\n<li><p>_ZL13g_static_text  </p>\n<ul>\n<li>为全局的符号(给链接器看到) </li>\n<li>被放在.rodata字段(只读数据段)中 </li>\n<li>占用4个字节  类型是object 初始化为1987   </li>\n<li>4字节对齐  </li>\n</ul>\n</li>\n<li><p>_Z9main_funcii  </p>\n<ul>\n<li>为全局的符号(给链接器看到) </li>\n<li>被放在.text字段(代码段)中 </li>\n<li>占用4个字节  类型是function  </li>\n</ul>\n</li>\n<li><p>main  </p>\n<ul>\n<li>为全局的符号(给链接器看到) </li>\n<li>被放在.text字段(代码段)中 </li>\n<li>占用4个字节  类型是function  </li>\n</ul>\n</li>\n<li><p>GOTPCREL </p>\n<ul>\n<li>PC-REL是指的位置相对代码   </li>\n<li>这里是指的走GOT表的位置相对代码   </li>\n</ul>\n</li>\n<li><p>在下面的对照中  对于全局符号的访问有如下区别</p>\n<ul>\n<li>访问全局对象时 PIC 版本会先从相对当前代码位置的GOT表中读取全局对象的地址到RAX 然后再读取其内容   </li>\n<li>非PIC版本则直接用记录好的地址读取其内容  </li>\n</ul>\n</li>\n</ul>\n<h5 id=\"汇编代码-相对位置版本\"><a href=\"#汇编代码-相对位置版本\" class=\"headerlink\" title=\"汇编代码 (相对位置版本)\"></a>汇编代码 (相对位置版本)</h5><figure class=\"highlight armasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">    .file    <span class=\"string\">\"test.cpp\"</span></span><br><span class=\"line\">    .globl    g_static_bss</span><br><span class=\"line\">    .<span class=\"keyword\">bss</span></span><br><span class=\"line\"><span class=\"keyword\"> </span>   <span class=\"meta\">.align</span> <span class=\"number\">4</span></span><br><span class=\"line\">    .type    g_static_bss, <span class=\"comment\">@object</span></span><br><span class=\"line\">    .size    g_static_bss, <span class=\"number\">4</span></span><br><span class=\"line\"><span class=\"symbol\">g_static_bss</span>:</span><br><span class=\"line\">    .zero    <span class=\"number\">4</span></span><br><span class=\"line\">    .globl    g_static_data</span><br><span class=\"line\">    <span class=\"meta\">.data</span></span><br><span class=\"line\">    <span class=\"meta\">.align</span> <span class=\"number\">4</span></span><br><span class=\"line\">    .type    g_static_data, <span class=\"comment\">@object</span></span><br><span class=\"line\">    .size    g_static_data, <span class=\"number\">4</span></span><br><span class=\"line\"><span class=\"symbol\">g_static_data</span>:</span><br><span class=\"line\">    <span class=\"meta\">.long</span>    <span class=\"number\">182</span></span><br><span class=\"line\">    <span class=\"meta\">.section</span>    .rodata</span><br><span class=\"line\">    <span class=\"meta\">.align</span> <span class=\"number\">4</span></span><br><span class=\"line\">    .type    _ZL13g_static_text, <span class=\"comment\">@object</span></span><br><span class=\"line\">    .size    _ZL13g_static_text, <span class=\"number\">4</span></span><br><span class=\"line\"><span class=\"symbol\">_ZL13g_static_text</span>:</span><br><span class=\"line\">    <span class=\"meta\">.long</span>    <span class=\"number\">1987</span></span><br><span class=\"line\">    <span class=\"meta\">.text</span></span><br><span class=\"line\">    .globl    _Z9main_funcii</span><br><span class=\"line\">    .type    _Z9main_funcii, <span class=\"comment\">@function</span></span><br><span class=\"line\"><span class=\"symbol\">_Z9main_funcii</span>:</span><br><span class=\"line\"><span class=\"symbol\">.LFB0</span>:</span><br><span class=\"line\">    .cfi_startproc</span><br><span class=\"line\">    <span class=\"keyword\">pushq </span>   %rbp</span><br><span class=\"line\">    .cfi_def_cfa_offset <span class=\"number\">16</span></span><br><span class=\"line\">    .cfi_offset <span class=\"number\">6</span>, -<span class=\"number\">16</span></span><br><span class=\"line\">    <span class=\"keyword\">movq </span>   %rsp, %rbp</span><br><span class=\"line\">    .cfi_def_cfa_register <span class=\"number\">6</span></span><br><span class=\"line\">    <span class=\"keyword\">movl </span>   %edi, -<span class=\"number\">4</span>(%rbp)</span><br><span class=\"line\">    <span class=\"keyword\">movl </span>   %esi, -<span class=\"number\">8</span>(%rbp)</span><br><span class=\"line\">    <span class=\"keyword\">movl </span>   -<span class=\"number\">4</span>(%rbp), %edx</span><br><span class=\"line\">    <span class=\"keyword\">movl </span>   -<span class=\"number\">8</span>(%rbp), %eax</span><br><span class=\"line\">    <span class=\"keyword\">addl </span>   %edx, %eax</span><br><span class=\"line\">    <span class=\"keyword\">addl </span>   <span class=\"number\">$1987</span>, %eax</span><br><span class=\"line\">    <span class=\"keyword\">popq </span>   %rbp</span><br><span class=\"line\">    .cfi_def_cfa <span class=\"number\">7</span>, <span class=\"number\">8</span></span><br><span class=\"line\">    ret</span><br><span class=\"line\">    .cfi_endproc</span><br><span class=\"line\"><span class=\"symbol\">.LFE0</span>:</span><br><span class=\"line\">    .size    _Z9main_funcii, .-_Z9main_funcii</span><br><span class=\"line\">    .globl    main</span><br><span class=\"line\">    .type    main, <span class=\"comment\">@function</span></span><br><span class=\"line\"><span class=\"symbol\">main</span>:</span><br><span class=\"line\"><span class=\"symbol\">.LFB1</span>:</span><br><span class=\"line\">    .cfi_startproc</span><br><span class=\"line\">    <span class=\"keyword\">pushq </span>   %rbp</span><br><span class=\"line\">    .cfi_def_cfa_offset <span class=\"number\">16</span></span><br><span class=\"line\">    .cfi_offset <span class=\"number\">6</span>, -<span class=\"number\">16</span></span><br><span class=\"line\">    <span class=\"keyword\">movq </span>   %rsp, %rbp</span><br><span class=\"line\">    .cfi_def_cfa_register <span class=\"number\">6</span></span><br><span class=\"line\">    <span class=\"keyword\">subq </span>   <span class=\"number\">$32</span>, %rsp</span><br><span class=\"line\">    <span class=\"keyword\">movl </span>   %edi, -<span class=\"number\">20</span>(%rbp)</span><br><span class=\"line\">    <span class=\"keyword\">movq </span>   %rsi, -<span class=\"number\">32</span>(%rbp)</span><br><span class=\"line\">    <span class=\"keyword\">movl </span>   <span class=\"number\">$0</span>, -<span class=\"number\">4</span>(%rbp)</span><br><span class=\"line\">    <span class=\"keyword\">movl </span>   -<span class=\"number\">20</span>(%rbp), %eax</span><br><span class=\"line\">    <span class=\"keyword\">movl </span>   %eax, g_static_bss(%rip)</span><br><span class=\"line\">    <span class=\"keyword\">movl </span>   g_static_data(%rip), %edx</span><br><span class=\"line\">    <span class=\"keyword\">movl </span>   g_static_bss(%rip), %eax</span><br><span class=\"line\">    <span class=\"keyword\">movl </span>   %edx, %esi</span><br><span class=\"line\">    <span class=\"keyword\">movl </span>   %eax, %edi</span><br><span class=\"line\">    call    _Z9main_funcii</span><br><span class=\"line\">    <span class=\"keyword\">addl </span>   %eax, -<span class=\"number\">4</span>(%rbp)</span><br><span class=\"line\">    <span class=\"keyword\">movl </span>   -<span class=\"number\">4</span>(%rbp), %eax</span><br><span class=\"line\">    leave</span><br><span class=\"line\">    .cfi_def_cfa <span class=\"number\">7</span>, <span class=\"number\">8</span></span><br><span class=\"line\">    ret</span><br><span class=\"line\">    .cfi_endproc</span><br><span class=\"line\"><span class=\"symbol\">.LFE1</span>:</span><br><span class=\"line\">    .size    main, .-main</span><br><span class=\"line\">    .ident    <span class=\"string\">\"GCC: (Debian 6.3.0-18+deb9u1) 6.3.0 20170516\"</span></span><br><span class=\"line\">    <span class=\"meta\">.section</span>    .note.GNU-stack,<span class=\"string\">\"\"</span>,<span class=\"comment\">@progbits</span></span><br></pre></td></tr></table></figure>\n\n<h5 id=\"汇编代码-位置无关版本\"><a href=\"#汇编代码-位置无关版本\" class=\"headerlink\" title=\"汇编代码 (位置无关版本)\"></a>汇编代码 (位置无关版本)</h5><figure class=\"highlight armasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">    .file    <span class=\"string\">\"test.cpp\"</span></span><br><span class=\"line\">    .globl    g_static_bss</span><br><span class=\"line\">    .<span class=\"keyword\">bss</span></span><br><span class=\"line\"><span class=\"keyword\"> </span>   <span class=\"meta\">.align</span> <span class=\"number\">4</span></span><br><span class=\"line\">    .type    g_static_bss, <span class=\"comment\">@object</span></span><br><span class=\"line\">    .size    g_static_bss, <span class=\"number\">4</span></span><br><span class=\"line\"><span class=\"symbol\">g_static_bss</span>:</span><br><span class=\"line\">    .zero    <span class=\"number\">4</span></span><br><span class=\"line\">    .globl    g_static_data</span><br><span class=\"line\">    <span class=\"meta\">.data</span></span><br><span class=\"line\">    <span class=\"meta\">.align</span> <span class=\"number\">4</span></span><br><span class=\"line\">    .type    g_static_data, <span class=\"comment\">@object</span></span><br><span class=\"line\">    .size    g_static_data, <span class=\"number\">4</span></span><br><span class=\"line\"><span class=\"symbol\">g_static_data</span>:</span><br><span class=\"line\">    <span class=\"meta\">.long</span>    <span class=\"number\">182</span></span><br><span class=\"line\">    <span class=\"meta\">.section</span>    .rodata</span><br><span class=\"line\">    <span class=\"meta\">.align</span> <span class=\"number\">4</span></span><br><span class=\"line\">    .type    _ZL13g_static_text, <span class=\"comment\">@object</span></span><br><span class=\"line\">    .size    _ZL13g_static_text, <span class=\"number\">4</span></span><br><span class=\"line\"><span class=\"symbol\">_ZL13g_static_text</span>:</span><br><span class=\"line\">    <span class=\"meta\">.long</span>    <span class=\"number\">1987</span></span><br><span class=\"line\">    <span class=\"meta\">.text</span></span><br><span class=\"line\">    .globl    _Z9main_funcii</span><br><span class=\"line\">    .type    _Z9main_funcii, <span class=\"comment\">@function</span></span><br><span class=\"line\"><span class=\"symbol\">_Z9main_funcii</span>:</span><br><span class=\"line\"><span class=\"symbol\">.LFB0</span>:</span><br><span class=\"line\">    .cfi_startproc</span><br><span class=\"line\">    <span class=\"keyword\">pushq </span>   %rbp</span><br><span class=\"line\">    .cfi_def_cfa_offset <span class=\"number\">16</span></span><br><span class=\"line\">    .cfi_offset <span class=\"number\">6</span>, -<span class=\"number\">16</span></span><br><span class=\"line\">    <span class=\"keyword\">movq </span>   %rsp, %rbp</span><br><span class=\"line\">    .cfi_def_cfa_register <span class=\"number\">6</span></span><br><span class=\"line\">    <span class=\"keyword\">movl </span>   %edi, -<span class=\"number\">4</span>(%rbp)</span><br><span class=\"line\">    <span class=\"keyword\">movl </span>   %esi, -<span class=\"number\">8</span>(%rbp)</span><br><span class=\"line\">    <span class=\"keyword\">movl </span>   -<span class=\"number\">4</span>(%rbp), %edx</span><br><span class=\"line\">    <span class=\"keyword\">movl </span>   -<span class=\"number\">8</span>(%rbp), %eax</span><br><span class=\"line\">    <span class=\"keyword\">addl </span>   %edx, %eax</span><br><span class=\"line\">    <span class=\"keyword\">addl </span>   <span class=\"number\">$1987</span>, %eax</span><br><span class=\"line\">    <span class=\"keyword\">popq </span>   %rbp</span><br><span class=\"line\">    .cfi_def_cfa <span class=\"number\">7</span>, <span class=\"number\">8</span></span><br><span class=\"line\">    ret</span><br><span class=\"line\">    .cfi_endproc</span><br><span class=\"line\"><span class=\"symbol\">.LFE0</span>:</span><br><span class=\"line\">    .size    _Z9main_funcii, .-_Z9main_funcii</span><br><span class=\"line\">    .globl    main</span><br><span class=\"line\">    .type    main, <span class=\"comment\">@function</span></span><br><span class=\"line\"><span class=\"symbol\">main</span>:</span><br><span class=\"line\"><span class=\"symbol\">.LFB1</span>:</span><br><span class=\"line\">    .cfi_startproc</span><br><span class=\"line\">    <span class=\"keyword\">pushq </span>   %rbp</span><br><span class=\"line\">    .cfi_def_cfa_offset <span class=\"number\">16</span></span><br><span class=\"line\">    .cfi_offset <span class=\"number\">6</span>, -<span class=\"number\">16</span></span><br><span class=\"line\">    <span class=\"keyword\">movq </span>   %rsp, %rbp</span><br><span class=\"line\">    .cfi_def_cfa_register <span class=\"number\">6</span></span><br><span class=\"line\">    <span class=\"keyword\">subq </span>   <span class=\"number\">$32</span>, %rsp</span><br><span class=\"line\">    <span class=\"keyword\">movl </span>   %edi, -<span class=\"number\">20</span>(%rbp)</span><br><span class=\"line\">    <span class=\"keyword\">movq </span>   %rsi, -<span class=\"number\">32</span>(%rbp)</span><br><span class=\"line\">    <span class=\"keyword\">movl </span>   <span class=\"number\">$0</span>, -<span class=\"number\">4</span>(%rbp)</span><br><span class=\"line\">    <span class=\"keyword\">movq </span>   g_static_bss<span class=\"comment\">@GOTPCREL(%rip), %rax</span></span><br><span class=\"line\">    <span class=\"keyword\">movl </span>   -<span class=\"number\">20</span>(%rbp), %edx</span><br><span class=\"line\">    <span class=\"keyword\">movl </span>   %edx, (%rax)</span><br><span class=\"line\">    <span class=\"keyword\">movq </span>   g_static_data<span class=\"comment\">@GOTPCREL(%rip), %rax</span></span><br><span class=\"line\">    <span class=\"keyword\">movl </span>   (%rax), %edx</span><br><span class=\"line\">    <span class=\"keyword\">movq </span>   g_static_bss<span class=\"comment\">@GOTPCREL(%rip), %rax</span></span><br><span class=\"line\">    <span class=\"keyword\">movl </span>   (%rax), %eax</span><br><span class=\"line\">    <span class=\"keyword\">movl </span>   %edx, %esi</span><br><span class=\"line\">    <span class=\"keyword\">movl </span>   %eax, %edi</span><br><span class=\"line\">    call    _Z9main_funcii<span class=\"comment\">@PLT</span></span><br><span class=\"line\">    <span class=\"keyword\">addl </span>   %eax, -<span class=\"number\">4</span>(%rbp)</span><br><span class=\"line\">    <span class=\"keyword\">movl </span>   -<span class=\"number\">4</span>(%rbp), %eax</span><br><span class=\"line\">    leave</span><br><span class=\"line\">    .cfi_def_cfa <span class=\"number\">7</span>, <span class=\"number\">8</span></span><br><span class=\"line\">    ret</span><br><span class=\"line\">    .cfi_endproc</span><br><span class=\"line\"><span class=\"symbol\">.LFE1</span>:</span><br><span class=\"line\">    .size    main, .-main</span><br><span class=\"line\">    .ident    <span class=\"string\">\"GCC: (Debian 6.3.0-18+deb9u1) 6.3.0 20170516\"</span></span><br><span class=\"line\">    <span class=\"meta\">.section</span>    .note.GNU-stack,<span class=\"string\">\"\"</span>,<span class=\"comment\">@progbits</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"生成ELF的可重定位文件\"><a href=\"#生成ELF的可重定位文件\" class=\"headerlink\" title=\"生成ELF的可重定位文件\"></a>生成ELF的可重定位文件</h4><ul>\n<li>.rela.text 重定位section<ul>\n<li>包含了所有需要进行重定位的信息, 偏移量是相对于.text  类型则是注明了重定位的方式  </li>\n</ul>\n</li>\n</ul>\n<ul>\n<li><p>.rela.eh_frame 重定位section  </p>\n</li>\n<li><p>.symtab 符号表section  </p>\n<ul>\n<li>Value 标记了符号所在的偏移地址 </li>\n<li>SIZE 标记了代码或者变量占的大小  </li>\n<li>Ndx 如果不在本编译单元 类型为NOTYPE Ndx为UND   </li>\n<li>Bind 全局还是局部符号(是否链接器可见)  <ul>\n<li>rodata的符号为local是因为直接被编译到了代码中 <ul>\n<li>例如g_static_text 1987 =&gt; <code>add $0x7c3,%eax</code></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>.rela.eh_frame Call Frame Information </p>\n<ul>\n<li>提供了异常的Stack Unwind 支持  </li>\n<li>这张表提供了’给定一个PC值, 可以查到上一个stack frame位置’</li>\n<li>Stack Unwind 指从最內层函数呼叫堆栈开始，找到最外层  <ul>\n<li>_Unwind_Backtrace()   </li>\n<li>uw_frame_state_for() </li>\n<li>uw_update_context() </li>\n<li>uw_update_context_1()  </li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<ul>\n<li>PC32 的PC是指的 program counter   在本文的汇编中对应寄存器的RIP </li>\n<li>PC32 在重定位类型中代表相对指令位置的重定位</li>\n<li>PLT 则代表使用 过程链接表 进行重定位 (动态定位)   </li>\n<li>GOT 是全局偏移表  </li>\n<li>PGOT 是私有全局偏移表  </li>\n</ul>\n<p>在这个过程中<br>无论是PIC的PLT调用还是PC调用, 对于call 指令 他的操作数都是0<br>无论是GOTPCREL还是PC 对全局对象符号的访问中 操作数也都是0<br>在重定位节中标记了这些需要在链接过程中重建的具体位置和内容 </p>\n<h5 id=\"可重定向文件和汇编指令-相对位置版本\"><a href=\"#可重定向文件和汇编指令-相对位置版本\" class=\"headerlink\" title=\"可重定向文件和汇编指令 (相对位置版本)\"></a>可重定向文件和汇编指令 (相对位置版本)</h5><figure class=\"highlight armasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">重定位节 <span class=\"string\">'.rela.text'</span> 位于偏移量 <span class=\"number\">0x2c8</span> 含有 <span class=\"number\">4</span> 个条目：</span><br><span class=\"line\">  偏移量          信息           类型           符号值        符号名称 + 加数</span><br><span class=\"line\"><span class=\"number\">000000000034</span>  <span class=\"number\">000</span>a00000002 R_X86_64_PC32     <span class=\"number\">0000000000000000</span> g_static_bss - <span class=\"number\">4</span></span><br><span class=\"line\"><span class=\"number\">00000000003</span>a  <span class=\"number\">000</span>b00000002 R_X86_64_PC32     <span class=\"number\">0000000000000000</span> g_static_data - <span class=\"number\">4</span></span><br><span class=\"line\"><span class=\"number\">000000000040</span>  <span class=\"number\">000</span>a00000002 R_X86_64_PC32     <span class=\"number\">0000000000000000</span> g_static_bss - <span class=\"number\">4</span></span><br><span class=\"line\"><span class=\"number\">000000000049</span>  <span class=\"number\">000</span>c00000002 R_X86_64_PC32     <span class=\"number\">0000000000000000</span> _Z9main_funcii - <span class=\"number\">4</span></span><br><span class=\"line\"></span><br><span class=\"line\">重定位节 <span class=\"string\">'.rela.eh_frame'</span> 位于偏移量 <span class=\"number\">0x328</span> 含有 <span class=\"number\">2</span> 个条目：</span><br><span class=\"line\">  偏移量          信息           类型           符号值        符号名称 + 加数</span><br><span class=\"line\"><span class=\"number\">000000000020</span>  <span class=\"number\">000200000002</span> R_X86_64_PC32     <span class=\"number\">0000000000000000</span> <span class=\"meta\">.text</span> + <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"number\">000000000040</span>  <span class=\"number\">000200000002</span> R_X86_64_PC32     <span class=\"number\">0000000000000000</span> <span class=\"meta\">.text</span> + <span class=\"number\">19</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"symbol\">The</span> decoding of unwind sections for machine type Advanced Micro Devices X86-<span class=\"number\">64</span> is not currently supported.</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"symbol\">Symbol</span> table <span class=\"string\">'.symtab'</span> contains <span class=\"number\">14</span> entries:</span><br><span class=\"line\"><span class=\"symbol\">   Num:</span>    Value          Size Type    <span class=\"keyword\">Bind </span>  Vis      Ndx Name</span><br><span class=\"line\">     <span class=\"number\">0</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">0</span> NOTYPE  LOCAL  DEFAULT  UND </span><br><span class=\"line\">     <span class=\"number\">1</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">0</span> FILE    LOCAL  DEFAULT  ABS test.cpp</span><br><span class=\"line\">     <span class=\"number\">2</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT    <span class=\"number\">1</span> </span><br><span class=\"line\">     <span class=\"number\">3</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT    <span class=\"number\">3</span> </span><br><span class=\"line\">     <span class=\"number\">4</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT    <span class=\"number\">4</span> </span><br><span class=\"line\">     <span class=\"number\">5</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT    <span class=\"number\">5</span> </span><br><span class=\"line\">     <span class=\"number\">6</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">4</span> OBJECT  LOCAL  DEFAULT    <span class=\"number\">5</span> _ZL13g_static_text</span><br><span class=\"line\">     <span class=\"number\">7</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT    <span class=\"number\">7</span> </span><br><span class=\"line\">     <span class=\"number\">8</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT    <span class=\"number\">8</span> </span><br><span class=\"line\">     <span class=\"number\">9</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT    <span class=\"number\">6</span> </span><br><span class=\"line\">    <span class=\"number\">10</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">4</span> OBJECT  <span class=\"meta\">GLOBAL</span> DEFAULT    <span class=\"number\">4</span> g_static_bss</span><br><span class=\"line\">    <span class=\"number\">11</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">4</span> OBJECT  <span class=\"meta\">GLOBAL</span> DEFAULT    <span class=\"number\">3</span> g_static_data</span><br><span class=\"line\">    <span class=\"number\">12</span>: <span class=\"number\">0000000000000000</span>    <span class=\"number\">25</span> FUNC    <span class=\"meta\">GLOBAL</span> DEFAULT    <span class=\"number\">1</span> _Z9main_funcii</span><br><span class=\"line\">    <span class=\"number\">13</span>: <span class=\"number\">0000000000000019</span>    <span class=\"number\">60</span> FUNC    <span class=\"meta\">GLOBAL</span> DEFAULT    <span class=\"number\">1</span> main</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"symbol\">.text</span></span><br><span class=\"line\"><span class=\"number\">0000000000000000</span> &lt;_Z9main_funcii&gt;:</span><br><span class=\"line\">   <span class=\"number\">0</span>:   <span class=\"number\">55</span>                      <span class=\"keyword\">push </span>  %rbp</span><br><span class=\"line\">   <span class=\"number\">1</span>:   <span class=\"number\">48</span> <span class=\"number\">89</span> e5                <span class=\"keyword\">mov </span>   %rsp,%rbp</span><br><span class=\"line\">   <span class=\"number\">4</span>:   <span class=\"number\">89</span> <span class=\"number\">7</span>d fc                <span class=\"keyword\">mov </span>   %edi,-<span class=\"number\">0x4</span>(%rbp)</span><br><span class=\"line\">   <span class=\"number\">7</span>:   <span class=\"number\">89</span> <span class=\"number\">75</span> f8                <span class=\"keyword\">mov </span>   %esi,-<span class=\"number\">0x8</span>(%rbp)</span><br><span class=\"line\">   a:   <span class=\"number\">8</span>b <span class=\"number\">55</span> fc                <span class=\"keyword\">mov </span>   -<span class=\"number\">0x4</span>(%rbp),%edx</span><br><span class=\"line\">   d:   <span class=\"number\">8</span>b <span class=\"number\">45</span> f8                <span class=\"keyword\">mov </span>   -<span class=\"number\">0x8</span>(%rbp),%eax</span><br><span class=\"line\">  <span class=\"number\">10</span>:   <span class=\"number\">01</span> <span class=\"built_in\">d0</span>                   <span class=\"keyword\">add </span>   %edx,%eax</span><br><span class=\"line\">  <span class=\"number\">12</span>:   <span class=\"number\">05</span> <span class=\"built_in\">c3</span> <span class=\"number\">07</span> <span class=\"number\">00</span> <span class=\"number\">00</span>          <span class=\"keyword\">add </span>   <span class=\"number\">$0x7c3</span>,%eax</span><br><span class=\"line\">  <span class=\"number\">17</span>:   <span class=\"number\">5</span>d                      <span class=\"keyword\">pop </span>   %rbp</span><br><span class=\"line\">  <span class=\"number\">18</span>:   <span class=\"built_in\">c3</span>                      retq   </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">0000000000000019</span> &lt;main&gt;:</span><br><span class=\"line\">  <span class=\"number\">19</span>:   <span class=\"number\">55</span>                      <span class=\"keyword\">push </span>  %rbp</span><br><span class=\"line\">  <span class=\"number\">1</span>a:   <span class=\"number\">48</span> <span class=\"number\">89</span> e5                <span class=\"keyword\">mov </span>   %rsp,%rbp</span><br><span class=\"line\">  <span class=\"number\">1</span>d:   <span class=\"number\">48</span> <span class=\"number\">83</span> ec <span class=\"number\">20</span>             <span class=\"keyword\">sub </span>   <span class=\"number\">$0x20</span>,%rsp</span><br><span class=\"line\">  <span class=\"number\">21</span>:   <span class=\"number\">89</span> <span class=\"number\">7</span>d ec                <span class=\"keyword\">mov </span>   %edi,-<span class=\"number\">0x14</span>(%rbp)</span><br><span class=\"line\">  <span class=\"number\">24</span>:   <span class=\"number\">48</span> <span class=\"number\">89</span> <span class=\"number\">75</span> e0             <span class=\"keyword\">mov </span>   %rsi,-<span class=\"number\">0x20</span>(%rbp)</span><br><span class=\"line\">  <span class=\"number\">28</span>:   <span class=\"built_in\">c7</span> <span class=\"number\">45</span> fc <span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">00</span>    <span class=\"keyword\">movl </span>  <span class=\"number\">$0x0</span>,-<span class=\"number\">0x4</span>(%rbp)</span><br><span class=\"line\">  <span class=\"number\">2</span>f:   <span class=\"number\">8</span>b <span class=\"number\">45</span> ec                <span class=\"keyword\">mov </span>   -<span class=\"number\">0x14</span>(%rbp),%eax</span><br><span class=\"line\">  <span class=\"number\">32</span>:   <span class=\"number\">89</span> <span class=\"number\">05</span> <span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">00</span>       <span class=\"keyword\">mov </span>   %eax,<span class=\"number\">0x0</span>(%rip)        # <span class=\"number\">38</span> &lt;main+<span class=\"number\">0x1f</span>&gt;</span><br><span class=\"line\">  <span class=\"number\">38</span>:   <span class=\"number\">8</span>b <span class=\"number\">15</span> <span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">00</span>       <span class=\"keyword\">mov </span>   <span class=\"number\">0x0</span>(%rip),%edx        # <span class=\"number\">3</span>e &lt;main+<span class=\"number\">0x25</span>&gt;</span><br><span class=\"line\">  <span class=\"number\">3</span>e:   <span class=\"number\">8</span>b <span class=\"number\">05</span> <span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">00</span>       <span class=\"keyword\">mov </span>   <span class=\"number\">0x0</span>(%rip),%eax        # <span class=\"number\">44</span> &lt;main+<span class=\"number\">0x2b</span>&gt;</span><br><span class=\"line\">  <span class=\"number\">44</span>:   <span class=\"number\">89</span> <span class=\"built_in\">d6</span>                   <span class=\"keyword\">mov </span>   %edx,%esi</span><br><span class=\"line\">  <span class=\"number\">46</span>:   <span class=\"number\">89</span> <span class=\"built_in\">c7</span>                   <span class=\"keyword\">mov </span>   %eax,%edi</span><br><span class=\"line\">  <span class=\"number\">48</span>:   e8 <span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">00</span>          callq  <span class=\"number\">4</span>d &lt;main+<span class=\"number\">0x34</span>&gt;</span><br><span class=\"line\">  <span class=\"number\">4</span>d:   <span class=\"number\">01</span> <span class=\"number\">45</span> fc                <span class=\"keyword\">add </span>   %eax,-<span class=\"number\">0x4</span>(%rbp)</span><br><span class=\"line\">  <span class=\"number\">50</span>:   <span class=\"number\">8</span>b <span class=\"number\">45</span> fc                <span class=\"keyword\">mov </span>   -<span class=\"number\">0x4</span>(%rbp),%eax</span><br><span class=\"line\">  <span class=\"number\">53</span>:   <span class=\"built_in\">c9</span>                      leaveq </span><br><span class=\"line\">  <span class=\"number\">54</span>:   <span class=\"built_in\">c3</span>                      retq</span><br></pre></td></tr></table></figure>\n\n\n<h5 id=\"可重定向文件和汇编指令-位置无关版本\"><a href=\"#可重定向文件和汇编指令-位置无关版本\" class=\"headerlink\" title=\"可重定向文件和汇编指令 (位置无关版本)\"></a>可重定向文件和汇编指令 (位置无关版本)</h5><figure class=\"highlight armasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">重定位节 <span class=\"string\">'.rela.text'</span> 位于偏移量 <span class=\"number\">0x300</span> 含有 <span class=\"number\">4</span> 个条目：</span><br><span class=\"line\">  偏移量          信息           类型           符号值        符号名称 + 加数</span><br><span class=\"line\"><span class=\"number\">000000000032</span>  <span class=\"number\">000</span>a0000002a R_X86_64_REX_GOTP <span class=\"number\">0000000000000000</span> g_static_bss - <span class=\"number\">4</span></span><br><span class=\"line\"><span class=\"number\">00000000003</span>e  <span class=\"number\">000</span>b0000002a R_X86_64_REX_GOTP <span class=\"number\">0000000000000000</span> g_static_data - <span class=\"number\">4</span></span><br><span class=\"line\"><span class=\"number\">000000000047</span>  <span class=\"number\">000</span>a0000002a R_X86_64_REX_GOTP <span class=\"number\">0000000000000000</span> g_static_bss - <span class=\"number\">4</span></span><br><span class=\"line\"><span class=\"number\">000000000052</span>  <span class=\"number\">000</span>c00000004 R_X86_64_PLT32    <span class=\"number\">0000000000000000</span> _Z9main_funcii - <span class=\"number\">4</span></span><br><span class=\"line\"></span><br><span class=\"line\">重定位节 <span class=\"string\">'.rela.eh_frame'</span> 位于偏移量 <span class=\"number\">0x360</span> 含有 <span class=\"number\">2</span> 个条目：</span><br><span class=\"line\">  偏移量          信息           类型           符号值        符号名称 + 加数</span><br><span class=\"line\"><span class=\"number\">000000000020</span>  <span class=\"number\">000200000002</span> R_X86_64_PC32     <span class=\"number\">0000000000000000</span> <span class=\"meta\">.text</span> + <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"number\">000000000040</span>  <span class=\"number\">000200000002</span> R_X86_64_PC32     <span class=\"number\">0000000000000000</span> <span class=\"meta\">.text</span> + <span class=\"number\">19</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"symbol\">The</span> decoding of unwind sections for machine type Advanced Micro Devices X86-<span class=\"number\">64</span> is not currently supported.</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"symbol\">Symbol</span> table <span class=\"string\">'.symtab'</span> contains <span class=\"number\">15</span> entries:</span><br><span class=\"line\"><span class=\"symbol\">   Num:</span>    Value          Size Type    <span class=\"keyword\">Bind </span>  Vis      Ndx Name</span><br><span class=\"line\">     <span class=\"number\">0</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">0</span> NOTYPE  LOCAL  DEFAULT  UND </span><br><span class=\"line\">     <span class=\"number\">1</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">0</span> FILE    LOCAL  DEFAULT  ABS test.cpp</span><br><span class=\"line\">     <span class=\"number\">2</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT    <span class=\"number\">1</span> </span><br><span class=\"line\">     <span class=\"number\">3</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT    <span class=\"number\">3</span> </span><br><span class=\"line\">     <span class=\"number\">4</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT    <span class=\"number\">4</span> </span><br><span class=\"line\">     <span class=\"number\">5</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT    <span class=\"number\">5</span> </span><br><span class=\"line\">     <span class=\"number\">6</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">4</span> OBJECT  LOCAL  DEFAULT    <span class=\"number\">5</span> _ZL13g_static_text</span><br><span class=\"line\">     <span class=\"number\">7</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT    <span class=\"number\">7</span> </span><br><span class=\"line\">     <span class=\"number\">8</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT    <span class=\"number\">8</span> </span><br><span class=\"line\">     <span class=\"number\">9</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT    <span class=\"number\">6</span> </span><br><span class=\"line\">    <span class=\"number\">10</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">4</span> OBJECT  <span class=\"meta\">GLOBAL</span> DEFAULT    <span class=\"number\">4</span> g_static_bss</span><br><span class=\"line\">    <span class=\"number\">11</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">4</span> OBJECT  <span class=\"meta\">GLOBAL</span> DEFAULT    <span class=\"number\">3</span> g_static_data</span><br><span class=\"line\">    <span class=\"number\">12</span>: <span class=\"number\">0000000000000000</span>    <span class=\"number\">25</span> FUNC    <span class=\"meta\">GLOBAL</span> DEFAULT    <span class=\"number\">1</span> _Z9main_funcii</span><br><span class=\"line\">    <span class=\"number\">13</span>: <span class=\"number\">0000000000000019</span>    <span class=\"number\">69</span> FUNC    <span class=\"meta\">GLOBAL</span> DEFAULT    <span class=\"number\">1</span> main</span><br><span class=\"line\">    <span class=\"number\">14</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">0</span> NOTYPE  <span class=\"meta\">GLOBAL</span> DEFAULT  UND _GLOBAL_OFFSET_TABLE_</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"symbol\">.text</span></span><br><span class=\"line\"><span class=\"number\">0000000000000000</span> &lt;_Z9main_funcii&gt;:</span><br><span class=\"line\">   <span class=\"number\">0</span>:   <span class=\"number\">55</span>                      <span class=\"keyword\">push </span>  %rbp</span><br><span class=\"line\">   <span class=\"number\">1</span>:   <span class=\"number\">48</span> <span class=\"number\">89</span> e5                <span class=\"keyword\">mov </span>   %rsp,%rbp</span><br><span class=\"line\">   <span class=\"number\">4</span>:   <span class=\"number\">89</span> <span class=\"number\">7</span>d fc                <span class=\"keyword\">mov </span>   %edi,-<span class=\"number\">0x4</span>(%rbp)</span><br><span class=\"line\">   <span class=\"number\">7</span>:   <span class=\"number\">89</span> <span class=\"number\">75</span> f8                <span class=\"keyword\">mov </span>   %esi,-<span class=\"number\">0x8</span>(%rbp)</span><br><span class=\"line\">   a:   <span class=\"number\">8</span>b <span class=\"number\">55</span> fc                <span class=\"keyword\">mov </span>   -<span class=\"number\">0x4</span>(%rbp),%edx</span><br><span class=\"line\">   d:   <span class=\"number\">8</span>b <span class=\"number\">45</span> f8                <span class=\"keyword\">mov </span>   -<span class=\"number\">0x8</span>(%rbp),%eax</span><br><span class=\"line\">  <span class=\"number\">10</span>:   <span class=\"number\">01</span> <span class=\"built_in\">d0</span>                   <span class=\"keyword\">add </span>   %edx,%eax</span><br><span class=\"line\">  <span class=\"number\">12</span>:   <span class=\"number\">05</span> <span class=\"built_in\">c3</span> <span class=\"number\">07</span> <span class=\"number\">00</span> <span class=\"number\">00</span>          <span class=\"keyword\">add </span>   <span class=\"number\">$0x7c3</span>,%eax</span><br><span class=\"line\">  <span class=\"number\">17</span>:   <span class=\"number\">5</span>d                      <span class=\"keyword\">pop </span>   %rbp</span><br><span class=\"line\">  <span class=\"number\">18</span>:   <span class=\"built_in\">c3</span>                      retq   </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">0000000000000019</span> &lt;main&gt;:</span><br><span class=\"line\">  <span class=\"number\">19</span>:   <span class=\"number\">55</span>                      <span class=\"keyword\">push </span>  %rbp</span><br><span class=\"line\">  <span class=\"number\">1</span>a:   <span class=\"number\">48</span> <span class=\"number\">89</span> e5                <span class=\"keyword\">mov </span>   %rsp,%rbp</span><br><span class=\"line\">  <span class=\"number\">1</span>d:   <span class=\"number\">48</span> <span class=\"number\">83</span> ec <span class=\"number\">20</span>             <span class=\"keyword\">sub </span>   <span class=\"number\">$0x20</span>,%rsp</span><br><span class=\"line\">  <span class=\"number\">21</span>:   <span class=\"number\">89</span> <span class=\"number\">7</span>d ec                <span class=\"keyword\">mov </span>   %edi,-<span class=\"number\">0x14</span>(%rbp)</span><br><span class=\"line\">  <span class=\"number\">24</span>:   <span class=\"number\">48</span> <span class=\"number\">89</span> <span class=\"number\">75</span> e0             <span class=\"keyword\">mov </span>   %rsi,-<span class=\"number\">0x20</span>(%rbp)</span><br><span class=\"line\">  <span class=\"number\">28</span>:   <span class=\"built_in\">c7</span> <span class=\"number\">45</span> fc <span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">00</span>    <span class=\"keyword\">movl </span>  <span class=\"number\">$0x0</span>,-<span class=\"number\">0x4</span>(%rbp)</span><br><span class=\"line\">  <span class=\"number\">2</span>f:   <span class=\"number\">48</span> <span class=\"number\">8</span>b <span class=\"number\">05</span> <span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">00</span>    <span class=\"keyword\">mov </span>   <span class=\"number\">0x0</span>(%rip),%rax        # <span class=\"number\">36</span> &lt;main+<span class=\"number\">0x1d</span>&gt;</span><br><span class=\"line\">  <span class=\"number\">36</span>:   <span class=\"number\">8</span>b <span class=\"number\">55</span> ec                <span class=\"keyword\">mov </span>   -<span class=\"number\">0x14</span>(%rbp),%edx</span><br><span class=\"line\">  <span class=\"number\">39</span>:   <span class=\"number\">89</span> <span class=\"number\">10</span>                   <span class=\"keyword\">mov </span>   %edx,(%rax)</span><br><span class=\"line\">  <span class=\"number\">3</span>b:   <span class=\"number\">48</span> <span class=\"number\">8</span>b <span class=\"number\">05</span> <span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">00</span>    <span class=\"keyword\">mov </span>   <span class=\"number\">0x0</span>(%rip),%rax        # <span class=\"number\">42</span> &lt;main+<span class=\"number\">0x29</span>&gt;</span><br><span class=\"line\">  <span class=\"number\">42</span>:   <span class=\"number\">8</span>b <span class=\"number\">10</span>                   <span class=\"keyword\">mov </span>   (%rax),%edx</span><br><span class=\"line\">  <span class=\"number\">44</span>:   <span class=\"number\">48</span> <span class=\"number\">8</span>b <span class=\"number\">05</span> <span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">00</span>    <span class=\"keyword\">mov </span>   <span class=\"number\">0x0</span>(%rip),%rax        # <span class=\"number\">4</span>b &lt;main+<span class=\"number\">0x32</span>&gt;</span><br><span class=\"line\">  <span class=\"number\">4</span>b:   <span class=\"number\">8</span>b <span class=\"number\">00</span>                   <span class=\"keyword\">mov </span>   (%rax),%eax</span><br><span class=\"line\">  <span class=\"number\">4</span>d:   <span class=\"number\">89</span> <span class=\"built_in\">d6</span>                   <span class=\"keyword\">mov </span>   %edx,%esi</span><br><span class=\"line\">  <span class=\"number\">4</span>f:   <span class=\"number\">89</span> <span class=\"built_in\">c7</span>                   <span class=\"keyword\">mov </span>   %eax,%edi</span><br><span class=\"line\">  <span class=\"number\">51</span>:   e8 <span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">00</span>          callq  <span class=\"number\">56</span> &lt;main+<span class=\"number\">0x3d</span>&gt;</span><br><span class=\"line\">  <span class=\"number\">56</span>:   <span class=\"number\">01</span> <span class=\"number\">45</span> fc                <span class=\"keyword\">add </span>   %eax,-<span class=\"number\">0x4</span>(%rbp)</span><br><span class=\"line\">  <span class=\"number\">59</span>:   <span class=\"number\">8</span>b <span class=\"number\">45</span> fc                <span class=\"keyword\">mov </span>   -<span class=\"number\">0x4</span>(%rbp),%eax</span><br><span class=\"line\">  <span class=\"number\">5</span>c:   <span class=\"built_in\">c9</span>                      leaveq </span><br><span class=\"line\">  <span class=\"number\">5</span>d:   <span class=\"built_in\">c3</span>                      retq</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"链接为可执行文件-或者共享库\"><a href=\"#链接为可执行文件-或者共享库\" class=\"headerlink\" title=\"链接为可执行文件(或者共享库)\"></a>链接为可执行文件(或者共享库)</h4><p>在链接为目标文件时, 会合并处理每个目标文件, 生成plt代码 确定GOT(PGOT)的相对位置等  </p>\n<p>在相对位置的两个版本中均可以看到对全局符号的访问均正确填充了相对位移  </p>\n<p>PIE版本的区别主要是PIE使用了相对位置 连ELF类型都变成了DYN<br>非PIE版本则使用了绝对位置<br>测试代码没有调用外部函数符号 所以在PIC版本的汇编指令中并没有看到PLT指令</p>\n<h5 id=\"可执行文件-相对位置的非PIE-EXEC-版本\"><a href=\"#可执行文件-相对位置的非PIE-EXEC-版本\" class=\"headerlink\" title=\"可执行文件 (相对位置的非PIE(EXEC)版本)\"></a>可执行文件 (相对位置的非PIE(EXEC)版本)</h5><figure class=\"highlight armasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">重定位节 <span class=\"string\">'.rela.dyn'</span> 位于偏移量 <span class=\"number\">0x388</span> 含有 <span class=\"number\">2</span> 个条目：</span><br><span class=\"line\">  偏移量          信息           类型           符号值        符号名称 + 加数</span><br><span class=\"line\"><span class=\"number\">000000600</span>ff0  <span class=\"number\">000100000006</span> R_X86_64_GLOB_DAT <span class=\"number\">0000000000000000</span> __libc_start_main<span class=\"comment\">@GLIBC_2.2.5 + 0</span></span><br><span class=\"line\"><span class=\"number\">000000600</span>ff8  <span class=\"number\">000200000006</span> R_X86_64_GLOB_DAT <span class=\"number\">0000000000000000</span> __gmon_start__ + <span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"symbol\">The</span> decoding of unwind sections for machine type Advanced Micro Devices X86-<span class=\"number\">64</span> is not currently supported.</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"symbol\">Symbol</span> table <span class=\"string\">'.dynsym'</span> contains <span class=\"number\">3</span> entries:</span><br><span class=\"line\"><span class=\"symbol\">   Num:</span>    Value          Size Type    <span class=\"keyword\">Bind </span>  Vis      Ndx Name</span><br><span class=\"line\">     <span class=\"number\">0</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">0</span> NOTYPE  LOCAL  DEFAULT  UND </span><br><span class=\"line\">     <span class=\"number\">1</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">0</span> FUNC    <span class=\"meta\">GLOBAL</span> DEFAULT  UND __libc_start_main<span class=\"comment\">@GLIBC_2.2.5 (2)</span></span><br><span class=\"line\">     <span class=\"number\">2</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">0</span> NOTYPE  WEAK   DEFAULT  UND __gmon_start__</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"symbol\">Symbol</span> table <span class=\"string\">'.symtab'</span> contains <span class=\"number\">65</span> entries:</span><br><span class=\"line\"><span class=\"symbol\">   Num:</span>    Value          Size Type    <span class=\"keyword\">Bind </span>  Vis      Ndx Name</span><br><span class=\"line\">     <span class=\"number\">0</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">0</span> NOTYPE  LOCAL  DEFAULT  UND </span><br><span class=\"line\">     <span class=\"number\">1</span>: <span class=\"number\">0000000000400238</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT    <span class=\"number\">1</span> </span><br><span class=\"line\">     <span class=\"number\">2</span>: <span class=\"number\">0000000000400254</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT    <span class=\"number\">2</span> </span><br><span class=\"line\">     <span class=\"number\">3</span>: <span class=\"number\">0000000000400274</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT    <span class=\"number\">3</span> </span><br><span class=\"line\">     <span class=\"number\">4</span>: <span class=\"number\">0000000000400298</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT    <span class=\"number\">4</span> </span><br><span class=\"line\">     <span class=\"number\">5</span>: <span class=\"number\">00000000004002</span>b8     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT    <span class=\"number\">5</span> </span><br><span class=\"line\">     <span class=\"number\">6</span>: <span class=\"number\">0000000000400300</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT    <span class=\"number\">6</span> </span><br><span class=\"line\">     <span class=\"number\">7</span>: <span class=\"number\">0000000000400360</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT    <span class=\"number\">7</span> </span><br><span class=\"line\">     <span class=\"number\">8</span>: <span class=\"number\">0000000000400368</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT    <span class=\"number\">8</span> </span><br><span class=\"line\">     <span class=\"number\">9</span>: <span class=\"number\">0000000000400388</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT    <span class=\"number\">9</span> </span><br><span class=\"line\">    <span class=\"number\">10</span>: <span class=\"number\">00000000004003</span>b8     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT   <span class=\"number\">10</span> </span><br><span class=\"line\">    <span class=\"number\">11</span>: <span class=\"number\">00000000004003</span><span class=\"built_in\">d0</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT   <span class=\"number\">11</span> </span><br><span class=\"line\">    <span class=\"number\">12</span>: <span class=\"number\">00000000004005</span><span class=\"built_in\">a4</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT   <span class=\"number\">12</span> </span><br><span class=\"line\">    <span class=\"number\">13</span>: <span class=\"number\">00000000004005</span>b0     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT   <span class=\"number\">13</span> </span><br><span class=\"line\">    <span class=\"number\">14</span>: <span class=\"number\">00000000004005</span>b8     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT   <span class=\"number\">14</span> </span><br><span class=\"line\">    <span class=\"number\">15</span>: <span class=\"number\">00000000004005</span>f8     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT   <span class=\"number\">15</span> </span><br><span class=\"line\">    <span class=\"number\">16</span>: <span class=\"number\">0000000000600</span>e18     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT   <span class=\"number\">16</span> </span><br><span class=\"line\">    <span class=\"number\">17</span>: <span class=\"number\">0000000000600</span>e20     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT   <span class=\"number\">17</span> </span><br><span class=\"line\">    <span class=\"number\">18</span>: <span class=\"number\">0000000000600</span>e28     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT   <span class=\"number\">18</span> </span><br><span class=\"line\">    <span class=\"number\">19</span>: <span class=\"number\">0000000000600</span>e30     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT   <span class=\"number\">19</span> </span><br><span class=\"line\">    <span class=\"number\">20</span>: <span class=\"number\">0000000000600</span>ff0     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT   <span class=\"number\">20</span> </span><br><span class=\"line\">    <span class=\"number\">21</span>: <span class=\"number\">0000000000601000</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT   <span class=\"number\">21</span> </span><br><span class=\"line\">    <span class=\"number\">22</span>: <span class=\"number\">0000000000601018</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT   <span class=\"number\">22</span> </span><br><span class=\"line\">    <span class=\"number\">23</span>: <span class=\"number\">000000000060102</span>c     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT   <span class=\"number\">23</span> </span><br><span class=\"line\">    <span class=\"number\">24</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT   <span class=\"number\">24</span> </span><br><span class=\"line\">    <span class=\"number\">25</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">0</span> FILE    LOCAL  DEFAULT  ABS crtstuff.c</span><br><span class=\"line\">    <span class=\"number\">26</span>: <span class=\"number\">0000000000600</span>e28     <span class=\"number\">0</span> OBJECT  LOCAL  DEFAULT   <span class=\"number\">18</span> __JCR_LIST__</span><br><span class=\"line\">    <span class=\"number\">27</span>: <span class=\"number\">0000000000400410</span>     <span class=\"number\">0</span> FUNC    LOCAL  DEFAULT   <span class=\"number\">11</span> deregister_tm_clones</span><br><span class=\"line\">    <span class=\"number\">28</span>: <span class=\"number\">0000000000400450</span>     <span class=\"number\">0</span> FUNC    LOCAL  DEFAULT   <span class=\"number\">11</span> register_tm_clones</span><br><span class=\"line\">    <span class=\"number\">29</span>: <span class=\"number\">0000000000400490</span>     <span class=\"number\">0</span> FUNC    LOCAL  DEFAULT   <span class=\"number\">11</span> __do_global_dtors_aux</span><br><span class=\"line\">    <span class=\"number\">30</span>: <span class=\"number\">000000000060102</span>c     <span class=\"number\">1</span> OBJECT  LOCAL  DEFAULT   <span class=\"number\">23</span> completed.<span class=\"number\">6972</span></span><br><span class=\"line\">    <span class=\"number\">31</span>: <span class=\"number\">0000000000600</span>e20     <span class=\"number\">0</span> OBJECT  LOCAL  DEFAULT   <span class=\"number\">17</span> __do_global_dtors_aux_fin</span><br><span class=\"line\">    <span class=\"number\">32</span>: <span class=\"number\">00000000004004</span>b0     <span class=\"number\">0</span> FUNC    LOCAL  DEFAULT   <span class=\"number\">11</span> frame_dummy</span><br><span class=\"line\">    <span class=\"number\">33</span>: <span class=\"number\">0000000000600</span>e18     <span class=\"number\">0</span> OBJECT  LOCAL  DEFAULT   <span class=\"number\">16</span> __frame_dummy_init_array_</span><br><span class=\"line\">    <span class=\"number\">34</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">0</span> FILE    LOCAL  DEFAULT  ABS test.cpp</span><br><span class=\"line\">    <span class=\"number\">35</span>: <span class=\"number\">00000000004005</span>b4     <span class=\"number\">4</span> OBJECT  LOCAL  DEFAULT   <span class=\"number\">13</span> _ZL13g_static_text</span><br><span class=\"line\">    <span class=\"number\">36</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">0</span> FILE    LOCAL  DEFAULT  ABS crtstuff.c</span><br><span class=\"line\">    <span class=\"number\">37</span>: <span class=\"number\">00000000004006</span>f8     <span class=\"number\">0</span> OBJECT  LOCAL  DEFAULT   <span class=\"number\">15</span> __FRAME_END__</span><br><span class=\"line\">    <span class=\"number\">38</span>: <span class=\"number\">0000000000600</span>e28     <span class=\"number\">0</span> OBJECT  LOCAL  DEFAULT   <span class=\"number\">18</span> __JCR_END__</span><br><span class=\"line\">    <span class=\"number\">39</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">0</span> FILE    LOCAL  DEFAULT  ABS </span><br><span class=\"line\">    <span class=\"number\">40</span>: <span class=\"number\">00000000004005</span>b8     <span class=\"number\">0</span> NOTYPE  LOCAL  DEFAULT   <span class=\"number\">14</span> __GNU_EH_FRAME_HDR</span><br><span class=\"line\">    <span class=\"number\">41</span>: <span class=\"number\">0000000000600</span>e30     <span class=\"number\">0</span> OBJECT  LOCAL  DEFAULT   <span class=\"number\">19</span> _DYNAMIC</span><br><span class=\"line\">    <span class=\"number\">42</span>: <span class=\"number\">0000000000600</span>e20     <span class=\"number\">0</span> NOTYPE  LOCAL  DEFAULT   <span class=\"number\">16</span> __init_array_end</span><br><span class=\"line\">    <span class=\"number\">43</span>: <span class=\"number\">0000000000600</span>e18     <span class=\"number\">0</span> NOTYPE  LOCAL  DEFAULT   <span class=\"number\">16</span> __init_array_start</span><br><span class=\"line\">    <span class=\"number\">44</span>: <span class=\"number\">0000000000601000</span>     <span class=\"number\">0</span> OBJECT  LOCAL  DEFAULT   <span class=\"number\">21</span> _GLOBAL_OFFSET_TABLE_</span><br><span class=\"line\">    <span class=\"number\">45</span>: <span class=\"number\">0000000000601028</span>     <span class=\"number\">4</span> OBJECT  <span class=\"meta\">GLOBAL</span> DEFAULT   <span class=\"number\">22</span> g_static_data</span><br><span class=\"line\">    <span class=\"number\">46</span>: <span class=\"number\">000000000060102</span>c     <span class=\"number\">0</span> NOTYPE  <span class=\"meta\">GLOBAL</span> DEFAULT   <span class=\"number\">22</span> _edata</span><br><span class=\"line\">    <span class=\"number\">47</span>: <span class=\"number\">0000000000601018</span>     <span class=\"number\">0</span> NOTYPE  WEAK   DEFAULT   <span class=\"number\">22</span> data_start</span><br><span class=\"line\">    <span class=\"number\">48</span>: <span class=\"number\">00000000004005</span>b0     <span class=\"number\">4</span> OBJECT  <span class=\"meta\">GLOBAL</span> DEFAULT   <span class=\"number\">13</span> _IO_stdin_used</span><br><span class=\"line\">    <span class=\"number\">49</span>: <span class=\"number\">00000000004004</span><span class=\"built_in\">d6</span>    <span class=\"number\">25</span> FUNC    <span class=\"meta\">GLOBAL</span> DEFAULT   <span class=\"number\">11</span> _Z9main_funcii</span><br><span class=\"line\">    <span class=\"number\">50</span>: <span class=\"number\">00000000004004</span>ef    <span class=\"number\">60</span> FUNC    <span class=\"meta\">GLOBAL</span> DEFAULT   <span class=\"number\">11</span> main</span><br><span class=\"line\">    <span class=\"number\">51</span>: <span class=\"number\">0000000000601020</span>     <span class=\"number\">0</span> OBJECT  <span class=\"meta\">GLOBAL</span> HIDDEN    <span class=\"number\">22</span> __dso_handle</span><br><span class=\"line\">    <span class=\"number\">52</span>: <span class=\"number\">00000000004005</span><span class=\"built_in\">a4</span>     <span class=\"number\">0</span> FUNC    <span class=\"meta\">GLOBAL</span> DEFAULT   <span class=\"number\">12</span> _fini</span><br><span class=\"line\">    <span class=\"number\">53</span>: <span class=\"number\">0000000000400400</span>     <span class=\"number\">2</span> FUNC    <span class=\"meta\">GLOBAL</span> HIDDEN    <span class=\"number\">11</span> _dl_relocate_static_pie</span><br><span class=\"line\">    <span class=\"number\">54</span>: <span class=\"number\">00000000004003</span><span class=\"built_in\">d0</span>    <span class=\"number\">43</span> FUNC    <span class=\"meta\">GLOBAL</span> DEFAULT   <span class=\"number\">11</span> _start</span><br><span class=\"line\">    <span class=\"number\">55</span>: <span class=\"number\">00000000004003</span>b8     <span class=\"number\">0</span> FUNC    <span class=\"meta\">GLOBAL</span> DEFAULT   <span class=\"number\">10</span> _init</span><br><span class=\"line\">    <span class=\"number\">56</span>: <span class=\"number\">0000000000601030</span>     <span class=\"number\">0</span> OBJECT  <span class=\"meta\">GLOBAL</span> HIDDEN    <span class=\"number\">22</span> __TMC_END__</span><br><span class=\"line\">    <span class=\"number\">57</span>: <span class=\"number\">0000000000601018</span>     <span class=\"number\">0</span> NOTYPE  <span class=\"meta\">GLOBAL</span> DEFAULT   <span class=\"number\">22</span> __data_start</span><br><span class=\"line\">    <span class=\"number\">58</span>: <span class=\"number\">0000000000601038</span>     <span class=\"number\">0</span> NOTYPE  <span class=\"meta\">GLOBAL</span> DEFAULT   <span class=\"number\">23</span> _<span class=\"meta\">end</span></span><br><span class=\"line\">    <span class=\"number\">59</span>: <span class=\"number\">000000000060102</span>c     <span class=\"number\">0</span> NOTYPE  <span class=\"meta\">GLOBAL</span> DEFAULT   <span class=\"number\">23</span> __bss_start</span><br><span class=\"line\">    <span class=\"number\">60</span>: <span class=\"number\">0000000000400530</span>   <span class=\"number\">101</span> FUNC    <span class=\"meta\">GLOBAL</span> DEFAULT   <span class=\"number\">11</span> __libc_csu_init</span><br><span class=\"line\">    <span class=\"number\">61</span>: <span class=\"number\">0000000000601030</span>     <span class=\"number\">4</span> OBJECT  <span class=\"meta\">GLOBAL</span> DEFAULT   <span class=\"number\">23</span> g_static_bss</span><br><span class=\"line\">    <span class=\"number\">62</span>: <span class=\"number\">00000000004005</span>a0     <span class=\"number\">2</span> FUNC    <span class=\"meta\">GLOBAL</span> DEFAULT   <span class=\"number\">11</span> __libc_csu_fini</span><br><span class=\"line\">    <span class=\"number\">63</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">0</span> FUNC    <span class=\"meta\">GLOBAL</span> DEFAULT  UND __libc_start_main<span class=\"comment\">@@GLIBC_</span></span><br><span class=\"line\">    <span class=\"number\">64</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">0</span> NOTYPE  WEAK   DEFAULT  UND __gmon_start__</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"symbol\">.text</span></span><br><span class=\"line\"><span class=\"number\">00000000004003</span>b8 &lt;_init&gt;:</span><br><span class=\"line\">  <span class=\"number\">4003</span>b8:       <span class=\"number\">48</span> <span class=\"number\">83</span> ec <span class=\"number\">08</span>             <span class=\"keyword\">sub </span>   <span class=\"number\">$0x8</span>,%rsp</span><br><span class=\"line\">  <span class=\"number\">4003</span>bc:       <span class=\"number\">48</span> <span class=\"number\">8</span>b <span class=\"number\">05</span> <span class=\"number\">35</span> <span class=\"number\">0</span>c <span class=\"number\">20</span> <span class=\"number\">00</span>    <span class=\"keyword\">mov </span>   <span class=\"number\">0x200c35</span>(%rip),%rax        # <span class=\"number\">600</span>ff8 &lt;__gmon_start__&gt;</span><br><span class=\"line\">  <span class=\"number\">4003</span><span class=\"built_in\">c3</span>:       <span class=\"number\">48</span> <span class=\"number\">85</span> <span class=\"built_in\">c0</span>                test   %rax,%rax</span><br><span class=\"line\">  <span class=\"number\">4003</span><span class=\"built_in\">c6</span>:       <span class=\"number\">74</span> <span class=\"number\">02</span>                   je     <span class=\"number\">4003</span>ca &lt;_init+<span class=\"number\">0x12</span>&gt;</span><br><span class=\"line\">  <span class=\"number\">4003</span><span class=\"built_in\">c8</span>:       ff <span class=\"built_in\">d0</span>                   callq  *%rax</span><br><span class=\"line\">  <span class=\"number\">4003</span>ca:       <span class=\"number\">48</span> <span class=\"number\">83</span> <span class=\"built_in\">c4</span> <span class=\"number\">08</span>             <span class=\"keyword\">add </span>   <span class=\"number\">$0x8</span>,%rsp</span><br><span class=\"line\">  <span class=\"number\">4003</span>ce:       <span class=\"built_in\">c3</span>                      retq   </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"symbol\">Disassembly</span> of section <span class=\"meta\">.text</span>:</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">00000000004003</span><span class=\"built_in\">d0</span> &lt;_start&gt;:</span><br><span class=\"line\">  <span class=\"number\">4003</span><span class=\"built_in\">d0</span>:       <span class=\"number\">31</span> ed                   xor    %ebp,%ebp</span><br><span class=\"line\">  <span class=\"number\">4003</span><span class=\"built_in\">d2</span>:       <span class=\"number\">49</span> <span class=\"number\">89</span> <span class=\"built_in\">d1</span>                <span class=\"keyword\">mov </span>   %rdx,%<span class=\"built_in\">r9</span></span><br><span class=\"line\">  <span class=\"number\">4003</span><span class=\"built_in\">d5</span>:       <span class=\"number\">5</span>e                      <span class=\"keyword\">pop </span>   %rsi</span><br><span class=\"line\">  <span class=\"number\">4003</span><span class=\"built_in\">d6</span>:       <span class=\"number\">48</span> <span class=\"number\">89</span> e2                <span class=\"keyword\">mov </span>   %rsp,%rdx</span><br><span class=\"line\">  <span class=\"number\">4003</span><span class=\"built_in\">d9</span>:       <span class=\"number\">48</span> <span class=\"number\">83</span> e4 <span class=\"built_in\">f0</span>             <span class=\"keyword\">and </span>   <span class=\"number\">$0xfffffffffffffff0</span>,%rsp</span><br><span class=\"line\">  <span class=\"number\">4003</span>dd:       <span class=\"number\">50</span>                      <span class=\"keyword\">push </span>  %rax</span><br><span class=\"line\">  <span class=\"number\">4003</span>de:       <span class=\"number\">54</span>                      <span class=\"keyword\">push </span>  %rsp</span><br><span class=\"line\">  <span class=\"number\">4003</span>df:       <span class=\"number\">49</span> <span class=\"built_in\">c7</span> <span class=\"built_in\">c0</span> a0 <span class=\"number\">05</span> <span class=\"number\">40</span> <span class=\"number\">00</span>    <span class=\"keyword\">mov </span>   <span class=\"number\">$0x4005a0</span>,%<span class=\"built_in\">r8</span></span><br><span class=\"line\">  <span class=\"number\">4003</span>e6:       <span class=\"number\">48</span> <span class=\"built_in\">c7</span> <span class=\"built_in\">c1</span> <span class=\"number\">30</span> <span class=\"number\">05</span> <span class=\"number\">40</span> <span class=\"number\">00</span>    <span class=\"keyword\">mov </span>   <span class=\"number\">$0x400530</span>,%rcx</span><br><span class=\"line\">  <span class=\"number\">4003</span>ed:       <span class=\"number\">48</span> <span class=\"built_in\">c7</span> <span class=\"built_in\">c7</span> ef <span class=\"number\">04</span> <span class=\"number\">40</span> <span class=\"number\">00</span>    <span class=\"keyword\">mov </span>   <span class=\"number\">$0x4004ef</span>,%rdi</span><br><span class=\"line\">  <span class=\"number\">4003</span><span class=\"built_in\">f4</span>:       ff <span class=\"number\">15</span> <span class=\"built_in\">f6</span> <span class=\"number\">0</span>b <span class=\"number\">20</span> <span class=\"number\">00</span>       callq  *<span class=\"number\">0x200bf6</span>(%rip)        # <span class=\"number\">600</span>ff0 &lt;__libc_start_main<span class=\"comment\">@GLIBC_2.2.5&gt;</span></span><br><span class=\"line\">  <span class=\"number\">4003</span>fa:       <span class=\"built_in\">f4</span>                      hlt    </span><br><span class=\"line\">  <span class=\"number\">4003</span>fb:       <span class=\"number\">0</span>f <span class=\"number\">1</span>f <span class=\"number\">44</span> <span class=\"number\">00</span> <span class=\"number\">00</span>          <span class=\"keyword\">nopl </span>  <span class=\"number\">0x0</span>(%rax,%rax,<span class=\"number\">1</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">0000000000400400</span> &lt;_dl_relocate_static_pie&gt;:</span><br><span class=\"line\">  <span class=\"number\">400400</span>:       <span class=\"built_in\">f3</span> <span class=\"built_in\">c3</span>                   repz retq </span><br><span class=\"line\">  <span class=\"number\">400402</span>:       <span class=\"number\">66</span> <span class=\"number\">2</span>e <span class=\"number\">0</span>f <span class=\"number\">1</span>f <span class=\"number\">84</span> <span class=\"number\">00</span> <span class=\"number\">00</span>    <span class=\"keyword\">nopw </span>  %cs:<span class=\"number\">0x0</span>(%rax,%rax,<span class=\"number\">1</span>)</span><br><span class=\"line\">  <span class=\"number\">400409</span>:       <span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">00</span> </span><br><span class=\"line\">  <span class=\"number\">40040</span>c:       <span class=\"number\">0</span>f <span class=\"number\">1</span>f <span class=\"number\">40</span> <span class=\"number\">00</span>             <span class=\"keyword\">nopl </span>  <span class=\"number\">0x0</span>(%rax)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">0000000000400410</span> &lt;deregister_tm_clones&gt;:</span><br><span class=\"line\">  <span class=\"number\">400410</span>:       <span class=\"keyword\">b8 </span><span class=\"number\">37</span> <span class=\"number\">10</span> <span class=\"number\">60</span> <span class=\"number\">00</span>          <span class=\"keyword\">mov </span>   <span class=\"number\">$0x601037</span>,%eax</span><br><span class=\"line\">  <span class=\"number\">400415</span>:       <span class=\"number\">55</span>                      <span class=\"keyword\">push </span>  %rbp</span><br><span class=\"line\">  <span class=\"number\">400416</span>:       <span class=\"number\">48</span> <span class=\"number\">2</span>d <span class=\"number\">30</span> <span class=\"number\">10</span> <span class=\"number\">60</span> <span class=\"number\">00</span>       <span class=\"keyword\">sub </span>   <span class=\"number\">$0x601030</span>,%rax</span><br><span class=\"line\">  <span class=\"number\">40041</span>c:       <span class=\"number\">48</span> <span class=\"number\">83</span> f8 <span class=\"number\">0</span>e             <span class=\"keyword\">cmp </span>   <span class=\"number\">$0xe</span>,%rax</span><br><span class=\"line\">  <span class=\"number\">400420</span>:       <span class=\"number\">48</span> <span class=\"number\">89</span> e5                <span class=\"keyword\">mov </span>   %rsp,%rbp</span><br><span class=\"line\">  <span class=\"number\">400423</span>:       <span class=\"number\">76</span> <span class=\"number\">1</span>b                   jbe    <span class=\"number\">400440</span> &lt;deregister_tm_clones+<span class=\"number\">0x30</span>&gt;</span><br><span class=\"line\">  <span class=\"number\">400425</span>:       <span class=\"keyword\">b8 </span><span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">00</span>          <span class=\"keyword\">mov </span>   <span class=\"number\">$0x0</span>,%eax</span><br><span class=\"line\">  <span class=\"number\">40042</span>a:       <span class=\"number\">48</span> <span class=\"number\">85</span> <span class=\"built_in\">c0</span>                test   %rax,%rax</span><br><span class=\"line\">  <span class=\"number\">40042</span>d:       <span class=\"number\">74</span> <span class=\"number\">11</span>                   je     <span class=\"number\">400440</span> &lt;deregister_tm_clones+<span class=\"number\">0x30</span>&gt;</span><br><span class=\"line\">  <span class=\"number\">40042</span>f:       <span class=\"number\">5</span>d                      <span class=\"keyword\">pop </span>   %rbp</span><br><span class=\"line\">  <span class=\"number\">400430</span>:       <span class=\"keyword\">bf </span><span class=\"number\">30</span> <span class=\"number\">10</span> <span class=\"number\">60</span> <span class=\"number\">00</span>          <span class=\"keyword\">mov </span>   <span class=\"number\">$0x601030</span>,%edi</span><br><span class=\"line\">  <span class=\"number\">400435</span>:       ff e0                   jmpq   *%rax</span><br><span class=\"line\">  <span class=\"number\">400437</span>:       <span class=\"number\">66</span> <span class=\"number\">0</span>f <span class=\"number\">1</span>f <span class=\"number\">84</span> <span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">00</span>    <span class=\"keyword\">nopw </span>  <span class=\"number\">0x0</span>(%rax,%rax,<span class=\"number\">1</span>)</span><br><span class=\"line\">  <span class=\"number\">40043</span>e:       <span class=\"number\">00</span> <span class=\"number\">00</span> </span><br><span class=\"line\">  <span class=\"number\">400440</span>:       <span class=\"number\">5</span>d                      <span class=\"keyword\">pop </span>   %rbp</span><br><span class=\"line\">  <span class=\"number\">400441</span>:       <span class=\"built_in\">c3</span>                      retq   </span><br><span class=\"line\">  <span class=\"number\">400442</span>:       <span class=\"number\">0</span>f <span class=\"number\">1</span>f <span class=\"number\">40</span> <span class=\"number\">00</span>             <span class=\"keyword\">nopl </span>  <span class=\"number\">0x0</span>(%rax)</span><br><span class=\"line\">  <span class=\"number\">400446</span>:       <span class=\"number\">66</span> <span class=\"number\">2</span>e <span class=\"number\">0</span>f <span class=\"number\">1</span>f <span class=\"number\">84</span> <span class=\"number\">00</span> <span class=\"number\">00</span>    <span class=\"keyword\">nopw </span>  %cs:<span class=\"number\">0x0</span>(%rax,%rax,<span class=\"number\">1</span>)</span><br><span class=\"line\">  <span class=\"number\">40044</span>d:       <span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">00</span> </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">0000000000400450</span> &lt;register_tm_clones&gt;:</span><br><span class=\"line\">  <span class=\"number\">400450</span>:       <span class=\"keyword\">be </span><span class=\"number\">30</span> <span class=\"number\">10</span> <span class=\"number\">60</span> <span class=\"number\">00</span>          <span class=\"keyword\">mov </span>   <span class=\"number\">$0x601030</span>,%esi</span><br><span class=\"line\">  <span class=\"number\">400455</span>:       <span class=\"number\">55</span>                      <span class=\"keyword\">push </span>  %rbp</span><br><span class=\"line\">  <span class=\"number\">400456</span>:       <span class=\"number\">48</span> <span class=\"number\">81</span> ee <span class=\"number\">30</span> <span class=\"number\">10</span> <span class=\"number\">60</span> <span class=\"number\">00</span>    <span class=\"keyword\">sub </span>   <span class=\"number\">$0x601030</span>,%rsi</span><br><span class=\"line\">  <span class=\"number\">40045</span>d:       <span class=\"number\">48</span> <span class=\"built_in\">c1</span> fe <span class=\"number\">03</span>             sar    <span class=\"number\">$0x3</span>,%rsi</span><br><span class=\"line\">  <span class=\"number\">400461</span>:       <span class=\"number\">48</span> <span class=\"number\">89</span> e5                <span class=\"keyword\">mov </span>   %rsp,%rbp</span><br><span class=\"line\">  <span class=\"number\">400464</span>:       <span class=\"number\">48</span> <span class=\"number\">89</span> <span class=\"built_in\">f0</span>                <span class=\"keyword\">mov </span>   %rsi,%rax</span><br><span class=\"line\">  <span class=\"number\">400467</span>:       <span class=\"number\">48</span> <span class=\"built_in\">c1</span> e8 <span class=\"number\">3</span>f             shr    <span class=\"number\">$0x3f</span>,%rax</span><br><span class=\"line\">  <span class=\"number\">40046</span>b:       <span class=\"number\">48</span> <span class=\"number\">01</span> <span class=\"built_in\">c6</span>                <span class=\"keyword\">add </span>   %rax,%rsi</span><br><span class=\"line\">  <span class=\"number\">40046</span>e:       <span class=\"number\">48</span> <span class=\"built_in\">d1</span> fe                sar    %rsi</span><br><span class=\"line\">  <span class=\"number\">400471</span>:       <span class=\"number\">74</span> <span class=\"number\">15</span>                   je     <span class=\"number\">400488</span> &lt;register_tm_clones+<span class=\"number\">0x38</span>&gt;</span><br><span class=\"line\">  <span class=\"number\">400473</span>:       <span class=\"keyword\">b8 </span><span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">00</span>          <span class=\"keyword\">mov </span>   <span class=\"number\">$0x0</span>,%eax</span><br><span class=\"line\">  <span class=\"number\">400478</span>:       <span class=\"number\">48</span> <span class=\"number\">85</span> <span class=\"built_in\">c0</span>                test   %rax,%rax</span><br><span class=\"line\">  <span class=\"number\">40047</span>b:       <span class=\"number\">74</span> <span class=\"number\">0</span>b                   je     <span class=\"number\">400488</span> &lt;register_tm_clones+<span class=\"number\">0x38</span>&gt;</span><br><span class=\"line\">  <span class=\"number\">40047</span>d:       <span class=\"number\">5</span>d                      <span class=\"keyword\">pop </span>   %rbp</span><br><span class=\"line\">  <span class=\"number\">40047</span>e:       <span class=\"keyword\">bf </span><span class=\"number\">30</span> <span class=\"number\">10</span> <span class=\"number\">60</span> <span class=\"number\">00</span>          <span class=\"keyword\">mov </span>   <span class=\"number\">$0x601030</span>,%edi</span><br><span class=\"line\">  <span class=\"number\">400483</span>:       ff e0                   jmpq   *%rax</span><br><span class=\"line\">  <span class=\"number\">400485</span>:       <span class=\"number\">0</span>f <span class=\"number\">1</span>f <span class=\"number\">00</span>                <span class=\"keyword\">nopl </span>  (%rax)</span><br><span class=\"line\">  <span class=\"number\">400488</span>:       <span class=\"number\">5</span>d                      <span class=\"keyword\">pop </span>   %rbp</span><br><span class=\"line\">  <span class=\"number\">400489</span>:       <span class=\"built_in\">c3</span>                      retq   </span><br><span class=\"line\">  <span class=\"number\">40048</span>a:       <span class=\"number\">66</span> <span class=\"number\">0</span>f <span class=\"number\">1</span>f <span class=\"number\">44</span> <span class=\"number\">00</span> <span class=\"number\">00</span>       <span class=\"keyword\">nopw </span>  <span class=\"number\">0x0</span>(%rax,%rax,<span class=\"number\">1</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">0000000000400490</span> &lt;__do_global_dtors_aux&gt;:</span><br><span class=\"line\">  <span class=\"number\">400490</span>:       <span class=\"number\">80</span> <span class=\"number\">3</span>d <span class=\"number\">95</span> <span class=\"number\">0</span>b <span class=\"number\">20</span> <span class=\"number\">00</span> <span class=\"number\">00</span>    <span class=\"keyword\">cmpb </span>  <span class=\"number\">$0x0</span>,<span class=\"number\">0x200b95</span>(%rip)        # <span class=\"number\">60102</span>c &lt;_edata&gt;</span><br><span class=\"line\">  <span class=\"number\">400497</span>:       <span class=\"number\">75</span> <span class=\"number\">11</span>                   jne    <span class=\"number\">4004</span>aa &lt;__do_global_dtors_aux+<span class=\"number\">0x1a</span>&gt;</span><br><span class=\"line\">  <span class=\"number\">400499</span>:       <span class=\"number\">55</span>                      <span class=\"keyword\">push </span>  %rbp</span><br><span class=\"line\">  <span class=\"number\">40049</span>a:       <span class=\"number\">48</span> <span class=\"number\">89</span> e5                <span class=\"keyword\">mov </span>   %rsp,%rbp</span><br><span class=\"line\">  <span class=\"number\">40049</span>d:       e8 <span class=\"number\">6</span>e ff ff ff          callq  <span class=\"number\">400410</span> &lt;deregister_tm_clones&gt;</span><br><span class=\"line\">  <span class=\"number\">4004</span><span class=\"built_in\">a2</span>:       <span class=\"number\">5</span>d                      <span class=\"keyword\">pop </span>   %rbp</span><br><span class=\"line\">  <span class=\"number\">4004</span><span class=\"built_in\">a3</span>:       <span class=\"built_in\">c6</span> <span class=\"number\">05</span> <span class=\"number\">82</span> <span class=\"number\">0</span>b <span class=\"number\">20</span> <span class=\"number\">00</span> <span class=\"number\">01</span>    <span class=\"keyword\">movb </span>  <span class=\"number\">$0x1</span>,<span class=\"number\">0x200b82</span>(%rip)        # <span class=\"number\">60102</span>c &lt;_edata&gt;</span><br><span class=\"line\">  <span class=\"number\">4004</span>aa:       <span class=\"built_in\">f3</span> <span class=\"built_in\">c3</span>                   repz retq </span><br><span class=\"line\">  <span class=\"number\">4004</span>ac:       <span class=\"number\">0</span>f <span class=\"number\">1</span>f <span class=\"number\">40</span> <span class=\"number\">00</span>             <span class=\"keyword\">nopl </span>  <span class=\"number\">0x0</span>(%rax)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">00000000004004</span>b0 &lt;frame_dummy&gt;:</span><br><span class=\"line\">  <span class=\"number\">4004</span>b0:       <span class=\"keyword\">bf </span><span class=\"number\">28</span> <span class=\"number\">0</span>e <span class=\"number\">60</span> <span class=\"number\">00</span>          <span class=\"keyword\">mov </span>   <span class=\"number\">$0x600e28</span>,%edi</span><br><span class=\"line\">  <span class=\"number\">4004</span>b5:       <span class=\"number\">48</span> <span class=\"number\">83</span> <span class=\"number\">3</span>f <span class=\"number\">00</span>             <span class=\"keyword\">cmpq </span>  <span class=\"number\">$0x0</span>,(%rdi)</span><br><span class=\"line\">  <span class=\"number\">4004</span>b9:       <span class=\"number\">75</span> <span class=\"number\">05</span>                   jne    <span class=\"number\">4004</span><span class=\"built_in\">c0</span> &lt;frame_dummy+<span class=\"number\">0x10</span>&gt;</span><br><span class=\"line\">  <span class=\"number\">4004</span>bb:       eb <span class=\"number\">93</span>                   jmp    <span class=\"number\">400450</span> &lt;register_tm_clones&gt;</span><br><span class=\"line\">  <span class=\"number\">4004</span>bd:       <span class=\"number\">0</span>f <span class=\"number\">1</span>f <span class=\"number\">00</span>                <span class=\"keyword\">nopl </span>  (%rax)</span><br><span class=\"line\">  <span class=\"number\">4004</span><span class=\"built_in\">c0</span>:       <span class=\"keyword\">b8 </span><span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">00</span>          <span class=\"keyword\">mov </span>   <span class=\"number\">$0x0</span>,%eax</span><br><span class=\"line\">  <span class=\"number\">4004</span><span class=\"built_in\">c5</span>:       <span class=\"number\">48</span> <span class=\"number\">85</span> <span class=\"built_in\">c0</span>                test   %rax,%rax</span><br><span class=\"line\">  <span class=\"number\">4004</span><span class=\"built_in\">c8</span>:       <span class=\"number\">74</span> <span class=\"built_in\">f1</span>                   je     <span class=\"number\">4004</span>bb &lt;frame_dummy+<span class=\"number\">0xb</span>&gt;</span><br><span class=\"line\">  <span class=\"number\">4004</span>ca:       <span class=\"number\">55</span>                      <span class=\"keyword\">push </span>  %rbp</span><br><span class=\"line\">  <span class=\"number\">4004</span>cb:       <span class=\"number\">48</span> <span class=\"number\">89</span> e5                <span class=\"keyword\">mov </span>   %rsp,%rbp</span><br><span class=\"line\">  <span class=\"number\">4004</span>ce:       ff <span class=\"built_in\">d0</span>                   callq  *%rax</span><br><span class=\"line\">  <span class=\"number\">4004</span><span class=\"built_in\">d0</span>:       <span class=\"number\">5</span>d                      <span class=\"keyword\">pop </span>   %rbp</span><br><span class=\"line\">  <span class=\"number\">4004</span><span class=\"built_in\">d1</span>:       e9 <span class=\"number\">7</span>a ff ff ff          jmpq   <span class=\"number\">400450</span> &lt;register_tm_clones&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">00000000004004</span><span class=\"built_in\">d6</span> &lt;_Z9main_funcii&gt;:</span><br><span class=\"line\">  <span class=\"number\">4004</span><span class=\"built_in\">d6</span>:       <span class=\"number\">55</span>                      <span class=\"keyword\">push </span>  %rbp</span><br><span class=\"line\">  <span class=\"number\">4004</span><span class=\"built_in\">d7</span>:       <span class=\"number\">48</span> <span class=\"number\">89</span> e5                <span class=\"keyword\">mov </span>   %rsp,%rbp</span><br><span class=\"line\">  <span class=\"number\">4004</span>da:       <span class=\"number\">89</span> <span class=\"number\">7</span>d fc                <span class=\"keyword\">mov </span>   %edi,-<span class=\"number\">0x4</span>(%rbp)</span><br><span class=\"line\">  <span class=\"number\">4004</span>dd:       <span class=\"number\">89</span> <span class=\"number\">75</span> f8                <span class=\"keyword\">mov </span>   %esi,-<span class=\"number\">0x8</span>(%rbp)</span><br><span class=\"line\">  <span class=\"number\">4004</span>e0:       <span class=\"number\">8</span>b <span class=\"number\">55</span> fc                <span class=\"keyword\">mov </span>   -<span class=\"number\">0x4</span>(%rbp),%edx</span><br><span class=\"line\">  <span class=\"number\">4004</span>e3:       <span class=\"number\">8</span>b <span class=\"number\">45</span> f8                <span class=\"keyword\">mov </span>   -<span class=\"number\">0x8</span>(%rbp),%eax</span><br><span class=\"line\">  <span class=\"number\">4004</span>e6:       <span class=\"number\">01</span> <span class=\"built_in\">d0</span>                   <span class=\"keyword\">add </span>   %edx,%eax</span><br><span class=\"line\">  <span class=\"number\">4004</span>e8:       <span class=\"number\">05</span> <span class=\"built_in\">c3</span> <span class=\"number\">07</span> <span class=\"number\">00</span> <span class=\"number\">00</span>          <span class=\"keyword\">add </span>   <span class=\"number\">$0x7c3</span>,%eax</span><br><span class=\"line\">  <span class=\"number\">4004</span>ed:       <span class=\"number\">5</span>d                      <span class=\"keyword\">pop </span>   %rbp</span><br><span class=\"line\">  <span class=\"number\">4004</span>ee:       <span class=\"built_in\">c3</span>                      retq   </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">00000000004004</span>ef &lt;main&gt;:</span><br><span class=\"line\">  <span class=\"number\">4004</span>ef:       <span class=\"number\">55</span>                      <span class=\"keyword\">push </span>  %rbp</span><br><span class=\"line\">  <span class=\"number\">4004</span><span class=\"built_in\">f0</span>:       <span class=\"number\">48</span> <span class=\"number\">89</span> e5                <span class=\"keyword\">mov </span>   %rsp,%rbp</span><br><span class=\"line\">  <span class=\"number\">4004</span><span class=\"built_in\">f3</span>:       <span class=\"number\">48</span> <span class=\"number\">83</span> ec <span class=\"number\">20</span>             <span class=\"keyword\">sub </span>   <span class=\"number\">$0x20</span>,%rsp</span><br><span class=\"line\">  <span class=\"number\">4004</span><span class=\"built_in\">f7</span>:       <span class=\"number\">89</span> <span class=\"number\">7</span>d ec                <span class=\"keyword\">mov </span>   %edi,-<span class=\"number\">0x14</span>(%rbp)</span><br><span class=\"line\">  <span class=\"number\">4004</span>fa:       <span class=\"number\">48</span> <span class=\"number\">89</span> <span class=\"number\">75</span> e0             <span class=\"keyword\">mov </span>   %rsi,-<span class=\"number\">0x20</span>(%rbp)</span><br><span class=\"line\">  <span class=\"number\">4004</span>fe:       <span class=\"built_in\">c7</span> <span class=\"number\">45</span> fc <span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">00</span>    <span class=\"keyword\">movl </span>  <span class=\"number\">$0x0</span>,-<span class=\"number\">0x4</span>(%rbp)</span><br><span class=\"line\">  <span class=\"number\">400505</span>:       <span class=\"number\">8</span>b <span class=\"number\">45</span> ec                <span class=\"keyword\">mov </span>   -<span class=\"number\">0x14</span>(%rbp),%eax</span><br><span class=\"line\">  <span class=\"number\">400508</span>:       <span class=\"number\">89</span> <span class=\"number\">05</span> <span class=\"number\">22</span> <span class=\"number\">0</span>b <span class=\"number\">20</span> <span class=\"number\">00</span>       <span class=\"keyword\">mov </span>   %eax,<span class=\"number\">0x200b22</span>(%rip)        # <span class=\"number\">601030</span> &lt;__TMC_END__&gt;</span><br><span class=\"line\">  <span class=\"number\">40050</span>e:       <span class=\"number\">8</span>b <span class=\"number\">15</span> <span class=\"number\">14</span> <span class=\"number\">0</span>b <span class=\"number\">20</span> <span class=\"number\">00</span>       <span class=\"keyword\">mov </span>   <span class=\"number\">0x200b14</span>(%rip),%edx        # <span class=\"number\">601028</span> &lt;g_static_data&gt;</span><br><span class=\"line\">  <span class=\"number\">400514</span>:       <span class=\"number\">8</span>b <span class=\"number\">05</span> <span class=\"number\">16</span> <span class=\"number\">0</span>b <span class=\"number\">20</span> <span class=\"number\">00</span>       <span class=\"keyword\">mov </span>   <span class=\"number\">0x200b16</span>(%rip),%eax        # <span class=\"number\">601030</span> &lt;__TMC_END__&gt;</span><br><span class=\"line\">  <span class=\"number\">40051</span>a:       <span class=\"number\">89</span> <span class=\"built_in\">d6</span>                   <span class=\"keyword\">mov </span>   %edx,%esi</span><br><span class=\"line\">  <span class=\"number\">40051</span>c:       <span class=\"number\">89</span> <span class=\"built_in\">c7</span>                   <span class=\"keyword\">mov </span>   %eax,%edi</span><br><span class=\"line\">  <span class=\"number\">40051</span>e:       e8 <span class=\"keyword\">b3 </span>ff ff ff          callq  <span class=\"number\">4004</span><span class=\"built_in\">d6</span> &lt;_Z9main_funcii&gt;</span><br><span class=\"line\">  <span class=\"number\">400523</span>:       <span class=\"number\">01</span> <span class=\"number\">45</span> fc                <span class=\"keyword\">add </span>   %eax,-<span class=\"number\">0x4</span>(%rbp)</span><br><span class=\"line\">  <span class=\"number\">400526</span>:       <span class=\"number\">8</span>b <span class=\"number\">45</span> fc                <span class=\"keyword\">mov </span>   -<span class=\"number\">0x4</span>(%rbp),%eax</span><br><span class=\"line\">  <span class=\"number\">400529</span>:       <span class=\"built_in\">c9</span>                      leaveq </span><br><span class=\"line\">  <span class=\"number\">40052</span>a:       <span class=\"built_in\">c3</span>                      retq   </span><br><span class=\"line\">  <span class=\"number\">40052</span>b:       <span class=\"number\">0</span>f <span class=\"number\">1</span>f <span class=\"number\">44</span> <span class=\"number\">00</span> <span class=\"number\">00</span>          <span class=\"keyword\">nopl </span>  <span class=\"number\">0x0</span>(%rax,%rax,<span class=\"number\">1</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">0000000000400530</span> &lt;__libc_csu_init&gt;:</span><br><span class=\"line\">  <span class=\"number\">400530</span>:       <span class=\"number\">41</span> <span class=\"number\">57</span>                   <span class=\"keyword\">push </span>  %<span class=\"built_in\">r15</span></span><br><span class=\"line\">  <span class=\"number\">400532</span>:       <span class=\"number\">41</span> <span class=\"number\">56</span>                   <span class=\"keyword\">push </span>  %<span class=\"built_in\">r14</span></span><br><span class=\"line\">  <span class=\"number\">400534</span>:       <span class=\"number\">49</span> <span class=\"number\">89</span> <span class=\"built_in\">d7</span>                <span class=\"keyword\">mov </span>   %rdx,%<span class=\"built_in\">r15</span></span><br><span class=\"line\">  <span class=\"number\">400537</span>:       <span class=\"number\">41</span> <span class=\"number\">55</span>                   <span class=\"keyword\">push </span>  %<span class=\"built_in\">r13</span></span><br><span class=\"line\">  <span class=\"number\">400539</span>:       <span class=\"number\">41</span> <span class=\"number\">54</span>                   <span class=\"keyword\">push </span>  %<span class=\"built_in\">r12</span></span><br><span class=\"line\">  <span class=\"number\">40053</span>b:       <span class=\"number\">4</span>c <span class=\"number\">8</span>d <span class=\"number\">25</span> <span class=\"built_in\">d6</span> <span class=\"number\">08</span> <span class=\"number\">20</span> <span class=\"number\">00</span>    lea    <span class=\"number\">0x2008d6</span>(%rip),%<span class=\"built_in\">r12</span>        # <span class=\"number\">600</span>e18 &lt;__frame_dummy_init_array_entry&gt;</span><br><span class=\"line\">  <span class=\"number\">400542</span>:       <span class=\"number\">55</span>                      <span class=\"keyword\">push </span>  %rbp</span><br><span class=\"line\">  <span class=\"number\">400543</span>:       <span class=\"number\">48</span> <span class=\"number\">8</span>d <span class=\"number\">2</span>d <span class=\"built_in\">d6</span> <span class=\"number\">08</span> <span class=\"number\">20</span> <span class=\"number\">00</span>    lea    <span class=\"number\">0x2008d6</span>(%rip),%rbp        # <span class=\"number\">600</span>e20 &lt;__init_array_end&gt;</span><br><span class=\"line\">  <span class=\"number\">40054</span>a:       <span class=\"number\">53</span>                      <span class=\"keyword\">push </span>  %rbx</span><br><span class=\"line\">  <span class=\"number\">40054</span>b:       <span class=\"number\">41</span> <span class=\"number\">89</span> fd                <span class=\"keyword\">mov </span>   %edi,%r13d</span><br><span class=\"line\">  <span class=\"number\">40054</span>e:       <span class=\"number\">49</span> <span class=\"number\">89</span> <span class=\"built_in\">f6</span>                <span class=\"keyword\">mov </span>   %rsi,%<span class=\"built_in\">r14</span></span><br><span class=\"line\">  <span class=\"number\">400551</span>:       <span class=\"number\">4</span>c <span class=\"number\">29</span> e5                <span class=\"keyword\">sub </span>   %<span class=\"built_in\">r12</span>,%rbp</span><br><span class=\"line\">  <span class=\"number\">400554</span>:       <span class=\"number\">48</span> <span class=\"number\">83</span> ec <span class=\"number\">08</span>             <span class=\"keyword\">sub </span>   <span class=\"number\">$0x8</span>,%rsp</span><br><span class=\"line\">  <span class=\"number\">400558</span>:       <span class=\"number\">48</span> <span class=\"built_in\">c1</span> fd <span class=\"number\">03</span>             sar    <span class=\"number\">$0x3</span>,%rbp</span><br><span class=\"line\">  <span class=\"number\">40055</span>c:       e8 <span class=\"number\">57</span> fe ff ff          callq  <span class=\"number\">4003</span>b8 &lt;_init&gt;</span><br><span class=\"line\">  <span class=\"number\">400561</span>:       <span class=\"number\">48</span> <span class=\"number\">85</span> ed                test   %rbp,%rbp</span><br><span class=\"line\">  <span class=\"number\">400564</span>:       <span class=\"number\">74</span> <span class=\"number\">20</span>                   je     <span class=\"number\">400586</span> &lt;__libc_csu_init+<span class=\"number\">0x56</span>&gt;</span><br><span class=\"line\">  <span class=\"number\">400566</span>:       <span class=\"number\">31</span> db                   xor    %ebx,%ebx</span><br><span class=\"line\">  <span class=\"number\">400568</span>:       <span class=\"number\">0</span>f <span class=\"number\">1</span>f <span class=\"number\">84</span> <span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">00</span>    <span class=\"keyword\">nopl </span>  <span class=\"number\">0x0</span>(%rax,%rax,<span class=\"number\">1</span>)</span><br><span class=\"line\">  <span class=\"number\">40056</span>f:       <span class=\"number\">00</span> </span><br><span class=\"line\">  <span class=\"number\">400570</span>:       <span class=\"number\">4</span>c <span class=\"number\">89</span> fa                <span class=\"keyword\">mov </span>   %<span class=\"built_in\">r15</span>,%rdx</span><br><span class=\"line\">  <span class=\"number\">400573</span>:       <span class=\"number\">4</span>c <span class=\"number\">89</span> <span class=\"built_in\">f6</span>                <span class=\"keyword\">mov </span>   %<span class=\"built_in\">r14</span>,%rsi</span><br><span class=\"line\">  <span class=\"number\">400576</span>:       <span class=\"number\">44</span> <span class=\"number\">89</span> ef                <span class=\"keyword\">mov </span>   %r13d,%edi</span><br><span class=\"line\">  <span class=\"number\">400579</span>:       <span class=\"number\">41</span> ff <span class=\"number\">14</span> dc             callq  *(%<span class=\"built_in\">r12</span>,%rbx,<span class=\"number\">8</span>)</span><br><span class=\"line\">  <span class=\"number\">40057</span>d:       <span class=\"number\">48</span> <span class=\"number\">83</span> <span class=\"built_in\">c3</span> <span class=\"number\">01</span>             <span class=\"keyword\">add </span>   <span class=\"number\">$0x1</span>,%rbx</span><br><span class=\"line\">  <span class=\"number\">400581</span>:       <span class=\"number\">48</span> <span class=\"number\">39</span> dd                <span class=\"keyword\">cmp </span>   %rbx,%rbp</span><br><span class=\"line\">  <span class=\"number\">400584</span>:       <span class=\"number\">75</span> ea                   jne    <span class=\"number\">400570</span> &lt;__libc_csu_init+<span class=\"number\">0x40</span>&gt;</span><br><span class=\"line\">  <span class=\"number\">400586</span>:       <span class=\"number\">48</span> <span class=\"number\">83</span> <span class=\"built_in\">c4</span> <span class=\"number\">08</span>             <span class=\"keyword\">add </span>   <span class=\"number\">$0x8</span>,%rsp</span><br><span class=\"line\">  <span class=\"number\">40058</span>a:       <span class=\"number\">5</span>b                      <span class=\"keyword\">pop </span>   %rbx</span><br><span class=\"line\">  <span class=\"number\">40058</span>b:       <span class=\"number\">5</span>d                      <span class=\"keyword\">pop </span>   %rbp</span><br><span class=\"line\">  <span class=\"number\">40058</span>c:       <span class=\"number\">41</span> <span class=\"number\">5</span>c                   <span class=\"keyword\">pop </span>   %<span class=\"built_in\">r12</span></span><br><span class=\"line\">  <span class=\"number\">40058</span>e:       <span class=\"number\">41</span> <span class=\"number\">5</span>d                   <span class=\"keyword\">pop </span>   %<span class=\"built_in\">r13</span></span><br><span class=\"line\">  <span class=\"number\">400590</span>:       <span class=\"number\">41</span> <span class=\"number\">5</span>e                   <span class=\"keyword\">pop </span>   %<span class=\"built_in\">r14</span></span><br><span class=\"line\">  <span class=\"number\">400592</span>:       <span class=\"number\">41</span> <span class=\"number\">5</span>f                   <span class=\"keyword\">pop </span>   %<span class=\"built_in\">r15</span></span><br><span class=\"line\">  <span class=\"number\">400594</span>:       <span class=\"built_in\">c3</span>                      retq   </span><br><span class=\"line\">  <span class=\"number\">400595</span>:       <span class=\"number\">90</span>                      <span class=\"keyword\">nop</span></span><br><span class=\"line\"><span class=\"keyword\"> </span> <span class=\"number\">400596</span>:       <span class=\"number\">66</span> <span class=\"number\">2</span>e <span class=\"number\">0</span>f <span class=\"number\">1</span>f <span class=\"number\">84</span> <span class=\"number\">00</span> <span class=\"number\">00</span>    <span class=\"keyword\">nopw </span>  %cs:<span class=\"number\">0x0</span>(%rax,%rax,<span class=\"number\">1</span>)</span><br><span class=\"line\">  <span class=\"number\">40059</span>d:       <span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">00</span> </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">00000000004005</span>a0 &lt;__libc_csu_fini&gt;:</span><br><span class=\"line\">  <span class=\"number\">4005</span>a0:       <span class=\"built_in\">f3</span> <span class=\"built_in\">c3</span>                   repz retq </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"symbol\">Disassembly</span> of section .fini:</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">00000000004005</span><span class=\"built_in\">a4</span> &lt;_fini&gt;:</span><br><span class=\"line\">  <span class=\"number\">4005</span><span class=\"built_in\">a4</span>:       <span class=\"number\">48</span> <span class=\"number\">83</span> ec <span class=\"number\">08</span>             <span class=\"keyword\">sub </span>   <span class=\"number\">$0x8</span>,%rsp</span><br><span class=\"line\">  <span class=\"number\">4005</span>a8:       <span class=\"number\">48</span> <span class=\"number\">83</span> <span class=\"built_in\">c4</span> <span class=\"number\">08</span>             <span class=\"keyword\">add </span>   <span class=\"number\">$0x8</span>,%rsp</span><br><span class=\"line\">  <span class=\"number\">4005</span>ac:       <span class=\"built_in\">c3</span>                      retq</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"可执行文件-相对位置的PIE-DYN-版本\"><a href=\"#可执行文件-相对位置的PIE-DYN-版本\" class=\"headerlink\" title=\"可执行文件 (相对位置的PIE(DYN)版本)\"></a>可执行文件 (相对位置的PIE(DYN)版本)</h5><figure class=\"highlight armasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">重定位节 <span class=\"string\">'.rela.dyn'</span> 位于偏移量 <span class=\"number\">0x448</span> 含有 <span class=\"number\">9</span> 个条目：</span><br><span class=\"line\">  偏移量          信息           类型           符号值        符号名称 + 加数</span><br><span class=\"line\"><span class=\"number\">000000200</span>dd8  <span class=\"number\">000000000008</span> R_X86_64_RELATIVE                    <span class=\"number\">660</span></span><br><span class=\"line\"><span class=\"number\">000000200</span>de0  <span class=\"number\">000000000008</span> R_X86_64_RELATIVE                    <span class=\"number\">620</span></span><br><span class=\"line\"><span class=\"number\">000000201020</span>  <span class=\"number\">000000000008</span> R_X86_64_RELATIVE                    <span class=\"number\">201020</span></span><br><span class=\"line\"><span class=\"number\">000000200</span>fd0  <span class=\"number\">000100000006</span> R_X86_64_GLOB_DAT <span class=\"number\">0000000000000000</span> __cxa_finalize<span class=\"comment\">@GLIBC_2.2.5 + 0</span></span><br><span class=\"line\"><span class=\"number\">000000200</span>fd8  <span class=\"number\">000200000006</span> R_X86_64_GLOB_DAT <span class=\"number\">0000000000000000</span> _Jv_RegisterClasses + <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"number\">000000200</span>fe0  <span class=\"number\">000300000006</span> R_X86_64_GLOB_DAT <span class=\"number\">0000000000000000</span> _ITM_deregisterTMClone + <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"number\">000000200</span>fe8  <span class=\"number\">000400000006</span> R_X86_64_GLOB_DAT <span class=\"number\">0000000000000000</span> __libc_start_main<span class=\"comment\">@GLIBC_2.2.5 + 0</span></span><br><span class=\"line\"><span class=\"number\">000000200</span>ff0  <span class=\"number\">000500000006</span> R_X86_64_GLOB_DAT <span class=\"number\">0000000000000000</span> __gmon_start__ + <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"number\">000000200</span>ff8  <span class=\"number\">000600000006</span> R_X86_64_GLOB_DAT <span class=\"number\">0000000000000000</span> _ITM_registerTMCloneTa + <span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"symbol\">The</span> decoding of unwind sections for machine type Advanced Micro Devices X86-<span class=\"number\">64</span> is not currently supported.</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"symbol\">Symbol</span> table <span class=\"string\">'.dynsym'</span> contains <span class=\"number\">7</span> entries:</span><br><span class=\"line\"><span class=\"symbol\">   Num:</span>    Value          Size Type    <span class=\"keyword\">Bind </span>  Vis      Ndx Name</span><br><span class=\"line\">     <span class=\"number\">0</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">0</span> NOTYPE  LOCAL  DEFAULT  UND </span><br><span class=\"line\">     <span class=\"number\">1</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">0</span> FUNC    WEAK   DEFAULT  UND __cxa_finalize<span class=\"comment\">@GLIBC_2.2.5 (2)</span></span><br><span class=\"line\">     <span class=\"number\">2</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">0</span> NOTYPE  WEAK   DEFAULT  UND _Jv_RegisterClasses</span><br><span class=\"line\">     <span class=\"number\">3</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">0</span> NOTYPE  WEAK   DEFAULT  UND _ITM_deregisterTMCloneTab</span><br><span class=\"line\">     <span class=\"number\">4</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">0</span> FUNC    <span class=\"meta\">GLOBAL</span> DEFAULT  UND __libc_start_main<span class=\"comment\">@GLIBC_2.2.5 (2)</span></span><br><span class=\"line\">     <span class=\"number\">5</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">0</span> NOTYPE  WEAK   DEFAULT  UND __gmon_start__</span><br><span class=\"line\">     <span class=\"number\">6</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">0</span> NOTYPE  WEAK   DEFAULT  UND _ITM_registerTMCloneTable</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"symbol\">Symbol</span> table <span class=\"string\">'.symtab'</span> contains <span class=\"number\">70</span> entries:</span><br><span class=\"line\"><span class=\"symbol\">   Num:</span>    Value          Size Type    <span class=\"keyword\">Bind </span>  Vis      Ndx Name</span><br><span class=\"line\">     <span class=\"number\">0</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">0</span> NOTYPE  LOCAL  DEFAULT  UND </span><br><span class=\"line\">     <span class=\"number\">1</span>: <span class=\"number\">0000000000000238</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT    <span class=\"number\">1</span> </span><br><span class=\"line\">     <span class=\"number\">2</span>: <span class=\"number\">0000000000000254</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT    <span class=\"number\">2</span> </span><br><span class=\"line\">     <span class=\"number\">3</span>: <span class=\"number\">0000000000000274</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT    <span class=\"number\">3</span> </span><br><span class=\"line\">     <span class=\"number\">4</span>: <span class=\"number\">0000000000000298</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT    <span class=\"number\">4</span> </span><br><span class=\"line\">     <span class=\"number\">5</span>: <span class=\"number\">00000000000002</span>b8     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT    <span class=\"number\">5</span> </span><br><span class=\"line\">     <span class=\"number\">6</span>: <span class=\"number\">0000000000000360</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT    <span class=\"number\">6</span> </span><br><span class=\"line\">     <span class=\"number\">7</span>: <span class=\"number\">0000000000000418</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT    <span class=\"number\">7</span> </span><br><span class=\"line\">     <span class=\"number\">8</span>: <span class=\"number\">0000000000000428</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT    <span class=\"number\">8</span> </span><br><span class=\"line\">     <span class=\"number\">9</span>: <span class=\"number\">0000000000000448</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT    <span class=\"number\">9</span> </span><br><span class=\"line\">    <span class=\"number\">10</span>: <span class=\"number\">0000000000000520</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT   <span class=\"number\">10</span> </span><br><span class=\"line\">    <span class=\"number\">11</span>: <span class=\"number\">0000000000000540</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT   <span class=\"number\">11</span> </span><br><span class=\"line\">    <span class=\"number\">12</span>: <span class=\"number\">0000000000000550</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT   <span class=\"number\">12</span> </span><br><span class=\"line\">    <span class=\"number\">13</span>: <span class=\"number\">0000000000000560</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT   <span class=\"number\">13</span> </span><br><span class=\"line\">    <span class=\"number\">14</span>: <span class=\"number\">0000000000000764</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT   <span class=\"number\">14</span> </span><br><span class=\"line\">    <span class=\"number\">15</span>: <span class=\"number\">0000000000000770</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT   <span class=\"number\">15</span> </span><br><span class=\"line\">    <span class=\"number\">16</span>: <span class=\"number\">0000000000000778</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT   <span class=\"number\">16</span> </span><br><span class=\"line\">    <span class=\"number\">17</span>: <span class=\"number\">00000000000007</span><span class=\"built_in\">c0</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT   <span class=\"number\">17</span> </span><br><span class=\"line\">    <span class=\"number\">18</span>: <span class=\"number\">0000000000200</span>dd8     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT   <span class=\"number\">18</span> </span><br><span class=\"line\">    <span class=\"number\">19</span>: <span class=\"number\">0000000000200</span>de0     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT   <span class=\"number\">19</span> </span><br><span class=\"line\">    <span class=\"number\">20</span>: <span class=\"number\">0000000000200</span>de8     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT   <span class=\"number\">20</span> </span><br><span class=\"line\">    <span class=\"number\">21</span>: <span class=\"number\">0000000000200</span>df0     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT   <span class=\"number\">21</span> </span><br><span class=\"line\">    <span class=\"number\">22</span>: <span class=\"number\">0000000000200</span>fd0     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT   <span class=\"number\">22</span> </span><br><span class=\"line\">    <span class=\"number\">23</span>: <span class=\"number\">0000000000201000</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT   <span class=\"number\">23</span> </span><br><span class=\"line\">    <span class=\"number\">24</span>: <span class=\"number\">0000000000201018</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT   <span class=\"number\">24</span> </span><br><span class=\"line\">    <span class=\"number\">25</span>: <span class=\"number\">000000000020102</span>c     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT   <span class=\"number\">25</span> </span><br><span class=\"line\">    <span class=\"number\">26</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT   <span class=\"number\">26</span> </span><br><span class=\"line\">    <span class=\"number\">27</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">0</span> FILE    LOCAL  DEFAULT  ABS crtstuff.c</span><br><span class=\"line\">    <span class=\"number\">28</span>: <span class=\"number\">0000000000200</span>de8     <span class=\"number\">0</span> OBJECT  LOCAL  DEFAULT   <span class=\"number\">20</span> __JCR_LIST__</span><br><span class=\"line\">    <span class=\"number\">29</span>: <span class=\"number\">0000000000000590</span>     <span class=\"number\">0</span> FUNC    LOCAL  DEFAULT   <span class=\"number\">13</span> deregister_tm_clones</span><br><span class=\"line\">    <span class=\"number\">30</span>: <span class=\"number\">00000000000005</span><span class=\"built_in\">d0</span>     <span class=\"number\">0</span> FUNC    LOCAL  DEFAULT   <span class=\"number\">13</span> register_tm_clones</span><br><span class=\"line\">    <span class=\"number\">31</span>: <span class=\"number\">0000000000000620</span>     <span class=\"number\">0</span> FUNC    LOCAL  DEFAULT   <span class=\"number\">13</span> __do_global_dtors_aux</span><br><span class=\"line\">    <span class=\"number\">32</span>: <span class=\"number\">000000000020102</span>c     <span class=\"number\">1</span> OBJECT  LOCAL  DEFAULT   <span class=\"number\">25</span> completed.<span class=\"number\">6972</span></span><br><span class=\"line\">    <span class=\"number\">33</span>: <span class=\"number\">0000000000200</span>de0     <span class=\"number\">0</span> OBJECT  LOCAL  DEFAULT   <span class=\"number\">19</span> __do_global_dtors_aux_fin</span><br><span class=\"line\">    <span class=\"number\">34</span>: <span class=\"number\">0000000000000660</span>     <span class=\"number\">0</span> FUNC    LOCAL  DEFAULT   <span class=\"number\">13</span> frame_dummy</span><br><span class=\"line\">    <span class=\"number\">35</span>: <span class=\"number\">0000000000200</span>dd8     <span class=\"number\">0</span> OBJECT  LOCAL  DEFAULT   <span class=\"number\">18</span> __frame_dummy_init_array_</span><br><span class=\"line\">    <span class=\"number\">36</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">0</span> FILE    LOCAL  DEFAULT  ABS test.cpp</span><br><span class=\"line\">    <span class=\"number\">37</span>: <span class=\"number\">0000000000000774</span>     <span class=\"number\">4</span> OBJECT  LOCAL  DEFAULT   <span class=\"number\">15</span> _ZL13g_static_text</span><br><span class=\"line\">    <span class=\"number\">38</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">0</span> FILE    LOCAL  DEFAULT  ABS crtstuff.c</span><br><span class=\"line\">    <span class=\"number\">39</span>: <span class=\"number\">00000000000008</span>e8     <span class=\"number\">0</span> OBJECT  LOCAL  DEFAULT   <span class=\"number\">17</span> __FRAME_END__</span><br><span class=\"line\">    <span class=\"number\">40</span>: <span class=\"number\">0000000000200</span>de8     <span class=\"number\">0</span> OBJECT  LOCAL  DEFAULT   <span class=\"number\">20</span> __JCR_END__</span><br><span class=\"line\">    <span class=\"number\">41</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">0</span> FILE    LOCAL  DEFAULT  ABS </span><br><span class=\"line\">    <span class=\"number\">42</span>: <span class=\"number\">0000000000000778</span>     <span class=\"number\">0</span> NOTYPE  LOCAL  DEFAULT   <span class=\"number\">16</span> __GNU_EH_FRAME_HDR</span><br><span class=\"line\">    <span class=\"number\">43</span>: <span class=\"number\">0000000000200</span>df0     <span class=\"number\">0</span> OBJECT  LOCAL  DEFAULT   <span class=\"number\">21</span> _DYNAMIC</span><br><span class=\"line\">    <span class=\"number\">44</span>: <span class=\"number\">0000000000200</span>de0     <span class=\"number\">0</span> NOTYPE  LOCAL  DEFAULT   <span class=\"number\">18</span> __init_array_end</span><br><span class=\"line\">    <span class=\"number\">45</span>: <span class=\"number\">0000000000200</span>dd8     <span class=\"number\">0</span> NOTYPE  LOCAL  DEFAULT   <span class=\"number\">18</span> __init_array_start</span><br><span class=\"line\">    <span class=\"number\">46</span>: <span class=\"number\">0000000000201000</span>     <span class=\"number\">0</span> OBJECT  LOCAL  DEFAULT   <span class=\"number\">23</span> _GLOBAL_OFFSET_TABLE_</span><br><span class=\"line\">    <span class=\"number\">47</span>: <span class=\"number\">0000000000201028</span>     <span class=\"number\">4</span> OBJECT  <span class=\"meta\">GLOBAL</span> DEFAULT   <span class=\"number\">24</span> g_static_data</span><br><span class=\"line\">    <span class=\"number\">48</span>: <span class=\"number\">000000000020102</span>c     <span class=\"number\">0</span> NOTYPE  <span class=\"meta\">GLOBAL</span> DEFAULT   <span class=\"number\">24</span> _edata</span><br><span class=\"line\">    <span class=\"number\">49</span>: <span class=\"number\">0000000000201018</span>     <span class=\"number\">0</span> NOTYPE  WEAK   DEFAULT   <span class=\"number\">24</span> data_start</span><br><span class=\"line\">    <span class=\"number\">50</span>: <span class=\"number\">0000000000000770</span>     <span class=\"number\">4</span> OBJECT  <span class=\"meta\">GLOBAL</span> DEFAULT   <span class=\"number\">15</span> _IO_stdin_used</span><br><span class=\"line\">    <span class=\"number\">51</span>: <span class=\"number\">0000000000000690</span>    <span class=\"number\">25</span> FUNC    <span class=\"meta\">GLOBAL</span> DEFAULT   <span class=\"number\">13</span> _Z9main_funcii</span><br><span class=\"line\">    <span class=\"number\">52</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">0</span> FUNC    WEAK   DEFAULT  UND __cxa_finalize<span class=\"comment\">@@GLIBC_2.2</span></span><br><span class=\"line\">    <span class=\"number\">53</span>: <span class=\"number\">00000000000006</span>a9    <span class=\"number\">60</span> FUNC    <span class=\"meta\">GLOBAL</span> DEFAULT   <span class=\"number\">13</span> main</span><br><span class=\"line\">    <span class=\"number\">54</span>: <span class=\"number\">0000000000201020</span>     <span class=\"number\">0</span> OBJECT  <span class=\"meta\">GLOBAL</span> HIDDEN    <span class=\"number\">24</span> __dso_handle</span><br><span class=\"line\">    <span class=\"number\">55</span>: <span class=\"number\">0000000000000764</span>     <span class=\"number\">0</span> FUNC    <span class=\"meta\">GLOBAL</span> DEFAULT   <span class=\"number\">14</span> _fini</span><br><span class=\"line\">    <span class=\"number\">56</span>: <span class=\"number\">0000000000000560</span>    <span class=\"number\">43</span> FUNC    <span class=\"meta\">GLOBAL</span> DEFAULT   <span class=\"number\">13</span> _start</span><br><span class=\"line\">    <span class=\"number\">57</span>: <span class=\"number\">0000000000000520</span>     <span class=\"number\">0</span> FUNC    <span class=\"meta\">GLOBAL</span> DEFAULT   <span class=\"number\">10</span> _init</span><br><span class=\"line\">    <span class=\"number\">58</span>: <span class=\"number\">0000000000201030</span>     <span class=\"number\">0</span> OBJECT  <span class=\"meta\">GLOBAL</span> HIDDEN    <span class=\"number\">24</span> __TMC_END__</span><br><span class=\"line\">    <span class=\"number\">59</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">0</span> NOTYPE  WEAK   DEFAULT  UND _Jv_RegisterClasses</span><br><span class=\"line\">    <span class=\"number\">60</span>: <span class=\"number\">0000000000201018</span>     <span class=\"number\">0</span> NOTYPE  <span class=\"meta\">GLOBAL</span> DEFAULT   <span class=\"number\">24</span> __data_start</span><br><span class=\"line\">    <span class=\"number\">61</span>: <span class=\"number\">0000000000201038</span>     <span class=\"number\">0</span> NOTYPE  <span class=\"meta\">GLOBAL</span> DEFAULT   <span class=\"number\">25</span> _<span class=\"meta\">end</span></span><br><span class=\"line\">    <span class=\"number\">62</span>: <span class=\"number\">000000000020102</span>c     <span class=\"number\">0</span> NOTYPE  <span class=\"meta\">GLOBAL</span> DEFAULT   <span class=\"number\">25</span> __bss_start</span><br><span class=\"line\">    <span class=\"number\">63</span>: <span class=\"number\">00000000000006</span><span class=\"built_in\">f0</span>   <span class=\"number\">101</span> FUNC    <span class=\"meta\">GLOBAL</span> DEFAULT   <span class=\"number\">13</span> __libc_csu_init</span><br><span class=\"line\">    <span class=\"number\">64</span>: <span class=\"number\">0000000000201030</span>     <span class=\"number\">4</span> OBJECT  <span class=\"meta\">GLOBAL</span> DEFAULT   <span class=\"number\">25</span> g_static_bss</span><br><span class=\"line\">    <span class=\"number\">65</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">0</span> NOTYPE  WEAK   DEFAULT  UND _ITM_deregisterTMCloneTab</span><br><span class=\"line\">    <span class=\"number\">66</span>: <span class=\"number\">0000000000000760</span>     <span class=\"number\">2</span> FUNC    <span class=\"meta\">GLOBAL</span> DEFAULT   <span class=\"number\">13</span> __libc_csu_fini</span><br><span class=\"line\">    <span class=\"number\">67</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">0</span> FUNC    <span class=\"meta\">GLOBAL</span> DEFAULT  UND __libc_start_main<span class=\"comment\">@@GLIBC_</span></span><br><span class=\"line\">    <span class=\"number\">68</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">0</span> NOTYPE  WEAK   DEFAULT  UND __gmon_start__</span><br><span class=\"line\">    <span class=\"number\">69</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">0</span> NOTYPE  WEAK   DEFAULT  UND _ITM_registerTMCloneTable</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"symbol\">.text</span></span><br><span class=\"line\"><span class=\"number\">0000000000000520</span> &lt;_init&gt;:</span><br><span class=\"line\"> <span class=\"number\">520</span>:   <span class=\"number\">48</span> <span class=\"number\">83</span> ec <span class=\"number\">08</span>             <span class=\"keyword\">sub </span>   <span class=\"number\">$0x8</span>,%rsp</span><br><span class=\"line\"> <span class=\"number\">524</span>:   <span class=\"number\">48</span> <span class=\"number\">8</span>b <span class=\"number\">05</span> <span class=\"built_in\">c5</span> <span class=\"number\">0</span>a <span class=\"number\">20</span> <span class=\"number\">00</span>    <span class=\"keyword\">mov </span>   <span class=\"number\">0x200ac5</span>(%rip),%rax        # <span class=\"number\">200</span>ff0 &lt;__gmon_start__&gt;</span><br><span class=\"line\"> <span class=\"number\">52</span>b:   <span class=\"number\">48</span> <span class=\"number\">85</span> <span class=\"built_in\">c0</span>                test   %rax,%rax</span><br><span class=\"line\"> <span class=\"number\">52</span>e:   <span class=\"number\">74</span> <span class=\"number\">02</span>                   je     <span class=\"number\">532</span> &lt;_init+<span class=\"number\">0x12</span>&gt;</span><br><span class=\"line\"> <span class=\"number\">530</span>:   ff <span class=\"built_in\">d0</span>                   callq  *%rax</span><br><span class=\"line\"> <span class=\"number\">532</span>:   <span class=\"number\">48</span> <span class=\"number\">83</span> <span class=\"built_in\">c4</span> <span class=\"number\">08</span>             <span class=\"keyword\">add </span>   <span class=\"number\">$0x8</span>,%rsp</span><br><span class=\"line\"> <span class=\"number\">536</span>:   <span class=\"built_in\">c3</span>                      retq   </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"symbol\">Disassembly</span> of section .plt:</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">0000000000000540</span> &lt;.plt&gt;:</span><br><span class=\"line\"> <span class=\"number\">540</span>:   ff <span class=\"number\">35</span> <span class=\"built_in\">c2</span> <span class=\"number\">0</span>a <span class=\"number\">20</span> <span class=\"number\">00</span>       <span class=\"keyword\">pushq </span> <span class=\"number\">0x200ac2</span>(%rip)        # <span class=\"number\">201008</span> &lt;_GLOBAL_OFFSET_TABLE_+<span class=\"number\">0x8</span>&gt;</span><br><span class=\"line\"> <span class=\"number\">546</span>:   ff <span class=\"number\">25</span> <span class=\"built_in\">c4</span> <span class=\"number\">0</span>a <span class=\"number\">20</span> <span class=\"number\">00</span>       jmpq   *<span class=\"number\">0x200ac4</span>(%rip)        # <span class=\"number\">201010</span> &lt;_GLOBAL_OFFSET_TABLE_+<span class=\"number\">0x10</span>&gt;</span><br><span class=\"line\"> <span class=\"number\">54</span>c:   <span class=\"number\">0</span>f <span class=\"number\">1</span>f <span class=\"number\">40</span> <span class=\"number\">00</span>             <span class=\"keyword\">nopl </span>  <span class=\"number\">0x0</span>(%rax)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"symbol\">Disassembly</span> of section .plt.got:</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">0000000000000550</span> &lt;.plt.got&gt;:</span><br><span class=\"line\"> <span class=\"number\">550</span>:   ff <span class=\"number\">25</span> <span class=\"number\">7</span>a <span class=\"number\">0</span>a <span class=\"number\">20</span> <span class=\"number\">00</span>       jmpq   *<span class=\"number\">0x200a7a</span>(%rip)        # <span class=\"number\">200</span>fd0 &lt;__cxa_finalize<span class=\"comment\">@GLIBC_2.2.5&gt;</span></span><br><span class=\"line\"> <span class=\"number\">556</span>:   <span class=\"number\">66</span> <span class=\"number\">90</span>                   xchg   %ax,%ax</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"symbol\">Disassembly</span> of section <span class=\"meta\">.text</span>:</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">0000000000000560</span> &lt;_start&gt;:</span><br><span class=\"line\"> <span class=\"number\">560</span>:   <span class=\"number\">31</span> ed                   xor    %ebp,%ebp</span><br><span class=\"line\"> <span class=\"number\">562</span>:   <span class=\"number\">49</span> <span class=\"number\">89</span> <span class=\"built_in\">d1</span>                <span class=\"keyword\">mov </span>   %rdx,%<span class=\"built_in\">r9</span></span><br><span class=\"line\"> <span class=\"number\">565</span>:   <span class=\"number\">5</span>e                      <span class=\"keyword\">pop </span>   %rsi</span><br><span class=\"line\"> <span class=\"number\">566</span>:   <span class=\"number\">48</span> <span class=\"number\">89</span> e2                <span class=\"keyword\">mov </span>   %rsp,%rdx</span><br><span class=\"line\"> <span class=\"number\">569</span>:   <span class=\"number\">48</span> <span class=\"number\">83</span> e4 <span class=\"built_in\">f0</span>             <span class=\"keyword\">and </span>   <span class=\"number\">$0xfffffffffffffff0</span>,%rsp</span><br><span class=\"line\"> <span class=\"number\">56</span>d:   <span class=\"number\">50</span>                      <span class=\"keyword\">push </span>  %rax</span><br><span class=\"line\"> <span class=\"number\">56</span>e:   <span class=\"number\">54</span>                      <span class=\"keyword\">push </span>  %rsp</span><br><span class=\"line\"> <span class=\"number\">56</span>f:   <span class=\"number\">4</span>c <span class=\"number\">8</span>d <span class=\"number\">05</span> ea <span class=\"number\">01</span> <span class=\"number\">00</span> <span class=\"number\">00</span>    lea    <span class=\"number\">0x1ea</span>(%rip),%<span class=\"built_in\">r8</span>        # <span class=\"number\">760</span> &lt;__libc_csu_fini&gt;</span><br><span class=\"line\"> <span class=\"number\">576</span>:   <span class=\"number\">48</span> <span class=\"number\">8</span>d <span class=\"number\">0</span>d <span class=\"number\">73</span> <span class=\"number\">01</span> <span class=\"number\">00</span> <span class=\"number\">00</span>    lea    <span class=\"number\">0x173</span>(%rip),%rcx        # <span class=\"number\">6</span><span class=\"built_in\">f0</span> &lt;__libc_csu_init&gt;</span><br><span class=\"line\"> <span class=\"number\">57</span>d:   <span class=\"number\">48</span> <span class=\"number\">8</span>d <span class=\"number\">3</span>d <span class=\"number\">25</span> <span class=\"number\">01</span> <span class=\"number\">00</span> <span class=\"number\">00</span>    lea    <span class=\"number\">0x125</span>(%rip),%rdi        # <span class=\"number\">6</span>a9 &lt;main&gt;</span><br><span class=\"line\"> <span class=\"number\">584</span>:   ff <span class=\"number\">15</span> <span class=\"number\">5</span>e <span class=\"number\">0</span>a <span class=\"number\">20</span> <span class=\"number\">00</span>       callq  *<span class=\"number\">0x200a5e</span>(%rip)        # <span class=\"number\">200</span>fe8 &lt;__libc_start_main<span class=\"comment\">@GLIBC_2.2.5&gt;</span></span><br><span class=\"line\"> <span class=\"number\">58</span>a:   <span class=\"built_in\">f4</span>                      hlt    </span><br><span class=\"line\"> <span class=\"number\">58</span>b:   <span class=\"number\">0</span>f <span class=\"number\">1</span>f <span class=\"number\">44</span> <span class=\"number\">00</span> <span class=\"number\">00</span>          <span class=\"keyword\">nopl </span>  <span class=\"number\">0x0</span>(%rax,%rax,<span class=\"number\">1</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">0000000000000590</span> &lt;deregister_tm_clones&gt;:</span><br><span class=\"line\"> <span class=\"number\">590</span>:   <span class=\"number\">48</span> <span class=\"number\">8</span>d <span class=\"number\">3</span>d <span class=\"number\">99</span> <span class=\"number\">0</span>a <span class=\"number\">20</span> <span class=\"number\">00</span>    lea    <span class=\"number\">0x200a99</span>(%rip),%rdi        # <span class=\"number\">201030</span> &lt;__TMC_END__&gt;</span><br><span class=\"line\"> <span class=\"number\">597</span>:   <span class=\"number\">48</span> <span class=\"number\">8</span>d <span class=\"number\">05</span> <span class=\"number\">99</span> <span class=\"number\">0</span>a <span class=\"number\">20</span> <span class=\"number\">00</span>    lea    <span class=\"number\">0x200a99</span>(%rip),%rax        # <span class=\"number\">201037</span> &lt;__TMC_END__+<span class=\"number\">0x7</span>&gt;</span><br><span class=\"line\"> <span class=\"number\">59</span>e:   <span class=\"number\">55</span>                      <span class=\"keyword\">push </span>  %rbp</span><br><span class=\"line\"> <span class=\"number\">59</span>f:   <span class=\"number\">48</span> <span class=\"number\">29</span> f8                <span class=\"keyword\">sub </span>   %rdi,%rax</span><br><span class=\"line\"> <span class=\"number\">5</span><span class=\"built_in\">a2</span>:   <span class=\"number\">48</span> <span class=\"number\">89</span> e5                <span class=\"keyword\">mov </span>   %rsp,%rbp</span><br><span class=\"line\"> <span class=\"number\">5</span>a5:   <span class=\"number\">48</span> <span class=\"number\">83</span> f8 <span class=\"number\">0</span>e             <span class=\"keyword\">cmp </span>   <span class=\"number\">$0xe</span>,%rax</span><br><span class=\"line\"> <span class=\"number\">5</span>a9:   <span class=\"number\">76</span> <span class=\"number\">15</span>                   jbe    <span class=\"number\">5</span><span class=\"built_in\">c0</span> &lt;deregister_tm_clones+<span class=\"number\">0x30</span>&gt;</span><br><span class=\"line\"> <span class=\"number\">5</span>ab:   <span class=\"number\">48</span> <span class=\"number\">8</span>b <span class=\"number\">05</span> <span class=\"number\">2</span>e <span class=\"number\">0</span>a <span class=\"number\">20</span> <span class=\"number\">00</span>    <span class=\"keyword\">mov </span>   <span class=\"number\">0x200a2e</span>(%rip),%rax        # <span class=\"number\">200</span>fe0 &lt;_ITM_deregisterTMCloneTable&gt;</span><br><span class=\"line\"> <span class=\"number\">5</span>b2:   <span class=\"number\">48</span> <span class=\"number\">85</span> <span class=\"built_in\">c0</span>                test   %rax,%rax</span><br><span class=\"line\"> <span class=\"number\">5</span>b5:   <span class=\"number\">74</span> <span class=\"number\">09</span>                   je     <span class=\"number\">5</span><span class=\"built_in\">c0</span> &lt;deregister_tm_clones+<span class=\"number\">0x30</span>&gt;</span><br><span class=\"line\"> <span class=\"number\">5</span>b7:   <span class=\"number\">5</span>d                      <span class=\"keyword\">pop </span>   %rbp</span><br><span class=\"line\"> <span class=\"number\">5</span>b8:   ff e0                   jmpq   *%rax</span><br><span class=\"line\"> <span class=\"number\">5</span>ba:   <span class=\"number\">66</span> <span class=\"number\">0</span>f <span class=\"number\">1</span>f <span class=\"number\">44</span> <span class=\"number\">00</span> <span class=\"number\">00</span>       <span class=\"keyword\">nopw </span>  <span class=\"number\">0x0</span>(%rax,%rax,<span class=\"number\">1</span>)</span><br><span class=\"line\"> <span class=\"number\">5</span><span class=\"built_in\">c0</span>:   <span class=\"number\">5</span>d                      <span class=\"keyword\">pop </span>   %rbp</span><br><span class=\"line\"> <span class=\"number\">5</span><span class=\"built_in\">c1</span>:   <span class=\"built_in\">c3</span>                      retq   </span><br><span class=\"line\"> <span class=\"number\">5</span><span class=\"built_in\">c2</span>:   <span class=\"number\">0</span>f <span class=\"number\">1</span>f <span class=\"number\">40</span> <span class=\"number\">00</span>             <span class=\"keyword\">nopl </span>  <span class=\"number\">0x0</span>(%rax)</span><br><span class=\"line\"> <span class=\"number\">5</span><span class=\"built_in\">c6</span>:   <span class=\"number\">66</span> <span class=\"number\">2</span>e <span class=\"number\">0</span>f <span class=\"number\">1</span>f <span class=\"number\">84</span> <span class=\"number\">00</span> <span class=\"number\">00</span>    <span class=\"keyword\">nopw </span>  %cs:<span class=\"number\">0x0</span>(%rax,%rax,<span class=\"number\">1</span>)</span><br><span class=\"line\"> <span class=\"number\">5</span>cd:   <span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">00</span> </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">00000000000005</span><span class=\"built_in\">d0</span> &lt;register_tm_clones&gt;:</span><br><span class=\"line\"> <span class=\"number\">5</span><span class=\"built_in\">d0</span>:   <span class=\"number\">48</span> <span class=\"number\">8</span>d <span class=\"number\">3</span>d <span class=\"number\">59</span> <span class=\"number\">0</span>a <span class=\"number\">20</span> <span class=\"number\">00</span>    lea    <span class=\"number\">0x200a59</span>(%rip),%rdi        # <span class=\"number\">201030</span> &lt;__TMC_END__&gt;</span><br><span class=\"line\"> <span class=\"number\">5</span><span class=\"built_in\">d7</span>:   <span class=\"number\">48</span> <span class=\"number\">8</span>d <span class=\"number\">35</span> <span class=\"number\">52</span> <span class=\"number\">0</span>a <span class=\"number\">20</span> <span class=\"number\">00</span>    lea    <span class=\"number\">0x200a52</span>(%rip),%rsi        # <span class=\"number\">201030</span> &lt;__TMC_END__&gt;</span><br><span class=\"line\"> <span class=\"number\">5</span>de:   <span class=\"number\">55</span>                      <span class=\"keyword\">push </span>  %rbp</span><br><span class=\"line\"> <span class=\"number\">5</span>df:   <span class=\"number\">48</span> <span class=\"number\">29</span> fe                <span class=\"keyword\">sub </span>   %rdi,%rsi</span><br><span class=\"line\"> <span class=\"number\">5</span>e2:   <span class=\"number\">48</span> <span class=\"number\">89</span> e5                <span class=\"keyword\">mov </span>   %rsp,%rbp</span><br><span class=\"line\"> <span class=\"number\">5</span>e5:   <span class=\"number\">48</span> <span class=\"built_in\">c1</span> fe <span class=\"number\">03</span>             sar    <span class=\"number\">$0x3</span>,%rsi</span><br><span class=\"line\"> <span class=\"number\">5</span>e9:   <span class=\"number\">48</span> <span class=\"number\">89</span> <span class=\"built_in\">f0</span>                <span class=\"keyword\">mov </span>   %rsi,%rax</span><br><span class=\"line\"> <span class=\"number\">5</span>ec:   <span class=\"number\">48</span> <span class=\"built_in\">c1</span> e8 <span class=\"number\">3</span>f             shr    <span class=\"number\">$0x3f</span>,%rax</span><br><span class=\"line\"> <span class=\"number\">5</span><span class=\"built_in\">f0</span>:   <span class=\"number\">48</span> <span class=\"number\">01</span> <span class=\"built_in\">c6</span>                <span class=\"keyword\">add </span>   %rax,%rsi</span><br><span class=\"line\"> <span class=\"number\">5</span><span class=\"built_in\">f3</span>:   <span class=\"number\">48</span> <span class=\"built_in\">d1</span> fe                sar    %rsi</span><br><span class=\"line\"> <span class=\"number\">5</span><span class=\"built_in\">f6</span>:   <span class=\"number\">74</span> <span class=\"number\">18</span>                   je     <span class=\"number\">610</span> &lt;register_tm_clones+<span class=\"number\">0x40</span>&gt;</span><br><span class=\"line\"> <span class=\"number\">5</span>f8:   <span class=\"number\">48</span> <span class=\"number\">8</span>b <span class=\"number\">05</span> f9 <span class=\"number\">09</span> <span class=\"number\">20</span> <span class=\"number\">00</span>    <span class=\"keyword\">mov </span>   <span class=\"number\">0x2009f9</span>(%rip),%rax        # <span class=\"number\">200</span>ff8 &lt;_ITM_registerTMCloneTable&gt;</span><br><span class=\"line\"> <span class=\"number\">5</span>ff:   <span class=\"number\">48</span> <span class=\"number\">85</span> <span class=\"built_in\">c0</span>                test   %rax,%rax</span><br><span class=\"line\"> <span class=\"number\">602</span>:   <span class=\"number\">74</span> <span class=\"number\">0</span>c                   je     <span class=\"number\">610</span> &lt;register_tm_clones+<span class=\"number\">0x40</span>&gt;</span><br><span class=\"line\"> <span class=\"number\">604</span>:   <span class=\"number\">5</span>d                      <span class=\"keyword\">pop </span>   %rbp</span><br><span class=\"line\"> <span class=\"number\">605</span>:   ff e0                   jmpq   *%rax</span><br><span class=\"line\"> <span class=\"number\">607</span>:   <span class=\"number\">66</span> <span class=\"number\">0</span>f <span class=\"number\">1</span>f <span class=\"number\">84</span> <span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">00</span>    <span class=\"keyword\">nopw </span>  <span class=\"number\">0x0</span>(%rax,%rax,<span class=\"number\">1</span>)</span><br><span class=\"line\"> <span class=\"number\">60</span>e:   <span class=\"number\">00</span> <span class=\"number\">00</span> </span><br><span class=\"line\"> <span class=\"number\">610</span>:   <span class=\"number\">5</span>d                      <span class=\"keyword\">pop </span>   %rbp</span><br><span class=\"line\"> <span class=\"number\">611</span>:   <span class=\"built_in\">c3</span>                      retq   </span><br><span class=\"line\"> <span class=\"number\">612</span>:   <span class=\"number\">0</span>f <span class=\"number\">1</span>f <span class=\"number\">40</span> <span class=\"number\">00</span>             <span class=\"keyword\">nopl </span>  <span class=\"number\">0x0</span>(%rax)</span><br><span class=\"line\"> <span class=\"number\">616</span>:   <span class=\"number\">66</span> <span class=\"number\">2</span>e <span class=\"number\">0</span>f <span class=\"number\">1</span>f <span class=\"number\">84</span> <span class=\"number\">00</span> <span class=\"number\">00</span>    <span class=\"keyword\">nopw </span>  %cs:<span class=\"number\">0x0</span>(%rax,%rax,<span class=\"number\">1</span>)</span><br><span class=\"line\"> <span class=\"number\">61</span>d:   <span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">00</span> </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">0000000000000620</span> &lt;__do_global_dtors_aux&gt;:</span><br><span class=\"line\"> <span class=\"number\">620</span>:   <span class=\"number\">80</span> <span class=\"number\">3</span>d <span class=\"number\">05</span> <span class=\"number\">0</span>a <span class=\"number\">20</span> <span class=\"number\">00</span> <span class=\"number\">00</span>    <span class=\"keyword\">cmpb </span>  <span class=\"number\">$0x0</span>,<span class=\"number\">0x200a05</span>(%rip)        # <span class=\"number\">20102</span>c &lt;_edata&gt;</span><br><span class=\"line\"> <span class=\"number\">627</span>:   <span class=\"number\">75</span> <span class=\"number\">27</span>                   jne    <span class=\"number\">650</span> &lt;__do_global_dtors_aux+<span class=\"number\">0x30</span>&gt;</span><br><span class=\"line\"> <span class=\"number\">629</span>:   <span class=\"number\">48</span> <span class=\"number\">83</span> <span class=\"number\">3</span>d <span class=\"number\">9</span>f <span class=\"number\">09</span> <span class=\"number\">20</span> <span class=\"number\">00</span>    <span class=\"keyword\">cmpq </span>  <span class=\"number\">$0x0</span>,<span class=\"number\">0x20099f</span>(%rip)        # <span class=\"number\">200</span>fd0 &lt;__cxa_finalize<span class=\"comment\">@GLIBC_2.2.5&gt;</span></span><br><span class=\"line\"> <span class=\"number\">630</span>:   <span class=\"number\">00</span> </span><br><span class=\"line\"> <span class=\"number\">631</span>:   <span class=\"number\">55</span>                      <span class=\"keyword\">push </span>  %rbp</span><br><span class=\"line\"> <span class=\"number\">632</span>:   <span class=\"number\">48</span> <span class=\"number\">89</span> e5                <span class=\"keyword\">mov </span>   %rsp,%rbp</span><br><span class=\"line\"> <span class=\"number\">635</span>:   <span class=\"number\">74</span> <span class=\"number\">0</span>c                   je     <span class=\"number\">643</span> &lt;__do_global_dtors_aux+<span class=\"number\">0x23</span>&gt;</span><br><span class=\"line\"> <span class=\"number\">637</span>:   <span class=\"number\">48</span> <span class=\"number\">8</span>b <span class=\"number\">3</span>d e2 <span class=\"number\">09</span> <span class=\"number\">20</span> <span class=\"number\">00</span>    <span class=\"keyword\">mov </span>   <span class=\"number\">0x2009e2</span>(%rip),%rdi        # <span class=\"number\">201020</span> &lt;__dso_handle&gt;</span><br><span class=\"line\"> <span class=\"number\">63</span>e:   e8 <span class=\"number\">0</span>d ff ff ff          callq  <span class=\"number\">550</span> &lt;.plt.got&gt;</span><br><span class=\"line\"> <span class=\"number\">643</span>:   e8 <span class=\"number\">48</span> ff ff ff          callq  <span class=\"number\">590</span> &lt;deregister_tm_clones&gt;</span><br><span class=\"line\"> <span class=\"number\">648</span>:   <span class=\"number\">5</span>d                      <span class=\"keyword\">pop </span>   %rbp</span><br><span class=\"line\"> <span class=\"number\">649</span>:   <span class=\"built_in\">c6</span> <span class=\"number\">05</span> dc <span class=\"number\">09</span> <span class=\"number\">20</span> <span class=\"number\">00</span> <span class=\"number\">01</span>    <span class=\"keyword\">movb </span>  <span class=\"number\">$0x1</span>,<span class=\"number\">0x2009dc</span>(%rip)        # <span class=\"number\">20102</span>c &lt;_edata&gt;</span><br><span class=\"line\"> <span class=\"number\">650</span>:   <span class=\"built_in\">f3</span> <span class=\"built_in\">c3</span>                   repz retq </span><br><span class=\"line\"> <span class=\"number\">652</span>:   <span class=\"number\">0</span>f <span class=\"number\">1</span>f <span class=\"number\">40</span> <span class=\"number\">00</span>             <span class=\"keyword\">nopl </span>  <span class=\"number\">0x0</span>(%rax)</span><br><span class=\"line\"> <span class=\"number\">656</span>:   <span class=\"number\">66</span> <span class=\"number\">2</span>e <span class=\"number\">0</span>f <span class=\"number\">1</span>f <span class=\"number\">84</span> <span class=\"number\">00</span> <span class=\"number\">00</span>    <span class=\"keyword\">nopw </span>  %cs:<span class=\"number\">0x0</span>(%rax,%rax,<span class=\"number\">1</span>)</span><br><span class=\"line\"> <span class=\"number\">65</span>d:   <span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">00</span> </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">0000000000000660</span> &lt;frame_dummy&gt;:</span><br><span class=\"line\"> <span class=\"number\">660</span>:   <span class=\"number\">48</span> <span class=\"number\">8</span>d <span class=\"number\">3</span>d <span class=\"number\">81</span> <span class=\"number\">07</span> <span class=\"number\">20</span> <span class=\"number\">00</span>    lea    <span class=\"number\">0x200781</span>(%rip),%rdi        # <span class=\"number\">200</span>de8 &lt;__JCR_END__&gt;</span><br><span class=\"line\"> <span class=\"number\">667</span>:   <span class=\"number\">48</span> <span class=\"number\">83</span> <span class=\"number\">3</span>f <span class=\"number\">00</span>             <span class=\"keyword\">cmpq </span>  <span class=\"number\">$0x0</span>,(%rdi)</span><br><span class=\"line\"> <span class=\"number\">66</span>b:   <span class=\"number\">75</span> <span class=\"number\">0</span>b                   jne    <span class=\"number\">678</span> &lt;frame_dummy+<span class=\"number\">0x18</span>&gt;</span><br><span class=\"line\"> <span class=\"number\">66</span>d:   e9 <span class=\"number\">5</span>e ff ff ff          jmpq   <span class=\"number\">5</span><span class=\"built_in\">d0</span> &lt;register_tm_clones&gt;</span><br><span class=\"line\"> <span class=\"number\">672</span>:   <span class=\"number\">66</span> <span class=\"number\">0</span>f <span class=\"number\">1</span>f <span class=\"number\">44</span> <span class=\"number\">00</span> <span class=\"number\">00</span>       <span class=\"keyword\">nopw </span>  <span class=\"number\">0x0</span>(%rax,%rax,<span class=\"number\">1</span>)</span><br><span class=\"line\"> <span class=\"number\">678</span>:   <span class=\"number\">48</span> <span class=\"number\">8</span>b <span class=\"number\">05</span> <span class=\"number\">59</span> <span class=\"number\">09</span> <span class=\"number\">20</span> <span class=\"number\">00</span>    <span class=\"keyword\">mov </span>   <span class=\"number\">0x200959</span>(%rip),%rax        # <span class=\"number\">200</span>fd8 &lt;_Jv_RegisterClasses&gt;</span><br><span class=\"line\"> <span class=\"number\">67</span>f:   <span class=\"number\">48</span> <span class=\"number\">85</span> <span class=\"built_in\">c0</span>                test   %rax,%rax</span><br><span class=\"line\"> <span class=\"number\">682</span>:   <span class=\"number\">74</span> e9                   je     <span class=\"number\">66</span>d &lt;frame_dummy+<span class=\"number\">0xd</span>&gt;</span><br><span class=\"line\"> <span class=\"number\">684</span>:   <span class=\"number\">55</span>                      <span class=\"keyword\">push </span>  %rbp</span><br><span class=\"line\"> <span class=\"number\">685</span>:   <span class=\"number\">48</span> <span class=\"number\">89</span> e5                <span class=\"keyword\">mov </span>   %rsp,%rbp</span><br><span class=\"line\"> <span class=\"number\">688</span>:   ff <span class=\"built_in\">d0</span>                   callq  *%rax</span><br><span class=\"line\"> <span class=\"number\">68</span>a:   <span class=\"number\">5</span>d                      <span class=\"keyword\">pop </span>   %rbp</span><br><span class=\"line\"> <span class=\"number\">68</span>b:   e9 <span class=\"number\">40</span> ff ff ff          jmpq   <span class=\"number\">5</span><span class=\"built_in\">d0</span> &lt;register_tm_clones&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">0000000000000690</span> &lt;_Z9main_funcii&gt;:</span><br><span class=\"line\"> <span class=\"number\">690</span>:   <span class=\"number\">55</span>                      <span class=\"keyword\">push </span>  %rbp</span><br><span class=\"line\"> <span class=\"number\">691</span>:   <span class=\"number\">48</span> <span class=\"number\">89</span> e5                <span class=\"keyword\">mov </span>   %rsp,%rbp</span><br><span class=\"line\"> <span class=\"number\">694</span>:   <span class=\"number\">89</span> <span class=\"number\">7</span>d fc                <span class=\"keyword\">mov </span>   %edi,-<span class=\"number\">0x4</span>(%rbp)</span><br><span class=\"line\"> <span class=\"number\">697</span>:   <span class=\"number\">89</span> <span class=\"number\">75</span> f8                <span class=\"keyword\">mov </span>   %esi,-<span class=\"number\">0x8</span>(%rbp)</span><br><span class=\"line\"> <span class=\"number\">69</span>a:   <span class=\"number\">8</span>b <span class=\"number\">55</span> fc                <span class=\"keyword\">mov </span>   -<span class=\"number\">0x4</span>(%rbp),%edx</span><br><span class=\"line\"> <span class=\"number\">69</span>d:   <span class=\"number\">8</span>b <span class=\"number\">45</span> f8                <span class=\"keyword\">mov </span>   -<span class=\"number\">0x8</span>(%rbp),%eax</span><br><span class=\"line\"> <span class=\"number\">6</span>a0:   <span class=\"number\">01</span> <span class=\"built_in\">d0</span>                   <span class=\"keyword\">add </span>   %edx,%eax</span><br><span class=\"line\"> <span class=\"number\">6</span><span class=\"built_in\">a2</span>:   <span class=\"number\">05</span> <span class=\"built_in\">c3</span> <span class=\"number\">07</span> <span class=\"number\">00</span> <span class=\"number\">00</span>          <span class=\"keyword\">add </span>   <span class=\"number\">$0x7c3</span>,%eax</span><br><span class=\"line\"> <span class=\"number\">6</span>a7:   <span class=\"number\">5</span>d                      <span class=\"keyword\">pop </span>   %rbp</span><br><span class=\"line\"> <span class=\"number\">6</span>a8:   <span class=\"built_in\">c3</span>                      retq   </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">00000000000006</span>a9 &lt;main&gt;:</span><br><span class=\"line\"> <span class=\"number\">6</span>a9:   <span class=\"number\">55</span>                      <span class=\"keyword\">push </span>  %rbp</span><br><span class=\"line\"> <span class=\"number\">6</span>aa:   <span class=\"number\">48</span> <span class=\"number\">89</span> e5                <span class=\"keyword\">mov </span>   %rsp,%rbp</span><br><span class=\"line\"> <span class=\"number\">6</span>ad:   <span class=\"number\">48</span> <span class=\"number\">83</span> ec <span class=\"number\">20</span>             <span class=\"keyword\">sub </span>   <span class=\"number\">$0x20</span>,%rsp</span><br><span class=\"line\"> <span class=\"number\">6</span>b1:   <span class=\"number\">89</span> <span class=\"number\">7</span>d ec                <span class=\"keyword\">mov </span>   %edi,-<span class=\"number\">0x14</span>(%rbp)</span><br><span class=\"line\"> <span class=\"number\">6</span>b4:   <span class=\"number\">48</span> <span class=\"number\">89</span> <span class=\"number\">75</span> e0             <span class=\"keyword\">mov </span>   %rsi,-<span class=\"number\">0x20</span>(%rbp)</span><br><span class=\"line\"> <span class=\"number\">6</span>b8:   <span class=\"built_in\">c7</span> <span class=\"number\">45</span> fc <span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">00</span>    <span class=\"keyword\">movl </span>  <span class=\"number\">$0x0</span>,-<span class=\"number\">0x4</span>(%rbp)</span><br><span class=\"line\"> <span class=\"number\">6</span>bf:   <span class=\"number\">8</span>b <span class=\"number\">45</span> ec                <span class=\"keyword\">mov </span>   -<span class=\"number\">0x14</span>(%rbp),%eax</span><br><span class=\"line\"> <span class=\"number\">6</span><span class=\"built_in\">c2</span>:   <span class=\"number\">89</span> <span class=\"number\">05</span> <span class=\"number\">68</span> <span class=\"number\">09</span> <span class=\"number\">20</span> <span class=\"number\">00</span>       <span class=\"keyword\">mov </span>   %eax,<span class=\"number\">0x200968</span>(%rip)        # <span class=\"number\">201030</span> &lt;__TMC_END__&gt;</span><br><span class=\"line\"> <span class=\"number\">6</span><span class=\"built_in\">c8</span>:   <span class=\"number\">8</span>b <span class=\"number\">15</span> <span class=\"number\">5</span>a <span class=\"number\">09</span> <span class=\"number\">20</span> <span class=\"number\">00</span>       <span class=\"keyword\">mov </span>   <span class=\"number\">0x20095a</span>(%rip),%edx        # <span class=\"number\">201028</span> &lt;g_static_data&gt;</span><br><span class=\"line\"> <span class=\"number\">6</span>ce:   <span class=\"number\">8</span>b <span class=\"number\">05</span> <span class=\"number\">5</span>c <span class=\"number\">09</span> <span class=\"number\">20</span> <span class=\"number\">00</span>       <span class=\"keyword\">mov </span>   <span class=\"number\">0x20095c</span>(%rip),%eax        # <span class=\"number\">201030</span> &lt;__TMC_END__&gt;</span><br><span class=\"line\"> <span class=\"number\">6</span><span class=\"built_in\">d4</span>:   <span class=\"number\">89</span> <span class=\"built_in\">d6</span>                   <span class=\"keyword\">mov </span>   %edx,%esi</span><br><span class=\"line\"> <span class=\"number\">6</span><span class=\"built_in\">d6</span>:   <span class=\"number\">89</span> <span class=\"built_in\">c7</span>                   <span class=\"keyword\">mov </span>   %eax,%edi</span><br><span class=\"line\"> <span class=\"number\">6</span><span class=\"built_in\">d8</span>:   e8 <span class=\"keyword\">b3 </span>ff ff ff          callq  <span class=\"number\">690</span> &lt;_Z9main_funcii&gt;</span><br><span class=\"line\"> <span class=\"number\">6</span>dd:   <span class=\"number\">01</span> <span class=\"number\">45</span> fc                <span class=\"keyword\">add </span>   %eax,-<span class=\"number\">0x4</span>(%rbp)</span><br><span class=\"line\"> <span class=\"number\">6</span>e0:   <span class=\"number\">8</span>b <span class=\"number\">45</span> fc                <span class=\"keyword\">mov </span>   -<span class=\"number\">0x4</span>(%rbp),%eax</span><br><span class=\"line\"> <span class=\"number\">6</span>e3:   <span class=\"built_in\">c9</span>                      leaveq </span><br><span class=\"line\"> <span class=\"number\">6</span>e4:   <span class=\"built_in\">c3</span>                      retq   </span><br><span class=\"line\"> <span class=\"number\">6</span>e5:   <span class=\"number\">66</span> <span class=\"number\">2</span>e <span class=\"number\">0</span>f <span class=\"number\">1</span>f <span class=\"number\">84</span> <span class=\"number\">00</span> <span class=\"number\">00</span>    <span class=\"keyword\">nopw </span>  %cs:<span class=\"number\">0x0</span>(%rax,%rax,<span class=\"number\">1</span>)</span><br><span class=\"line\"> <span class=\"number\">6</span>ec:   <span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">00</span> </span><br><span class=\"line\"> <span class=\"number\">6</span>ef:   <span class=\"number\">90</span>                      <span class=\"keyword\">nop</span></span><br><span class=\"line\"><span class=\"keyword\"></span></span><br><span class=\"line\"><span class=\"keyword\">00000000000006f0 </span>&lt;__libc_csu_init&gt;:</span><br><span class=\"line\"> <span class=\"number\">6</span><span class=\"built_in\">f0</span>:   <span class=\"number\">41</span> <span class=\"number\">57</span>                   <span class=\"keyword\">push </span>  %<span class=\"built_in\">r15</span></span><br><span class=\"line\"> <span class=\"number\">6</span><span class=\"built_in\">f2</span>:   <span class=\"number\">41</span> <span class=\"number\">56</span>                   <span class=\"keyword\">push </span>  %<span class=\"built_in\">r14</span></span><br><span class=\"line\"> <span class=\"number\">6</span><span class=\"built_in\">f4</span>:   <span class=\"number\">49</span> <span class=\"number\">89</span> <span class=\"built_in\">d7</span>                <span class=\"keyword\">mov </span>   %rdx,%<span class=\"built_in\">r15</span></span><br><span class=\"line\"> <span class=\"number\">6</span><span class=\"built_in\">f7</span>:   <span class=\"number\">41</span> <span class=\"number\">55</span>                   <span class=\"keyword\">push </span>  %<span class=\"built_in\">r13</span></span><br><span class=\"line\"> <span class=\"number\">6</span>f9:   <span class=\"number\">41</span> <span class=\"number\">54</span>                   <span class=\"keyword\">push </span>  %<span class=\"built_in\">r12</span></span><br><span class=\"line\"> <span class=\"number\">6</span>fb:   <span class=\"number\">4</span>c <span class=\"number\">8</span>d <span class=\"number\">25</span> <span class=\"built_in\">d6</span> <span class=\"number\">06</span> <span class=\"number\">20</span> <span class=\"number\">00</span>    lea    <span class=\"number\">0x2006d6</span>(%rip),%<span class=\"built_in\">r12</span>        # <span class=\"number\">200</span>dd8 &lt;__frame_dummy_init_array_entry&gt;</span><br><span class=\"line\"> <span class=\"number\">702</span>:   <span class=\"number\">55</span>                      <span class=\"keyword\">push </span>  %rbp</span><br><span class=\"line\"> <span class=\"number\">703</span>:   <span class=\"number\">48</span> <span class=\"number\">8</span>d <span class=\"number\">2</span>d <span class=\"built_in\">d6</span> <span class=\"number\">06</span> <span class=\"number\">20</span> <span class=\"number\">00</span>    lea    <span class=\"number\">0x2006d6</span>(%rip),%rbp        # <span class=\"number\">200</span>de0 &lt;__init_array_end&gt;</span><br><span class=\"line\"> <span class=\"number\">70</span>a:   <span class=\"number\">53</span>                      <span class=\"keyword\">push </span>  %rbx</span><br><span class=\"line\"> <span class=\"number\">70</span>b:   <span class=\"number\">41</span> <span class=\"number\">89</span> fd                <span class=\"keyword\">mov </span>   %edi,%r13d</span><br><span class=\"line\"> <span class=\"number\">70</span>e:   <span class=\"number\">49</span> <span class=\"number\">89</span> <span class=\"built_in\">f6</span>                <span class=\"keyword\">mov </span>   %rsi,%<span class=\"built_in\">r14</span></span><br><span class=\"line\"> <span class=\"number\">711</span>:   <span class=\"number\">4</span>c <span class=\"number\">29</span> e5                <span class=\"keyword\">sub </span>   %<span class=\"built_in\">r12</span>,%rbp</span><br><span class=\"line\"> <span class=\"number\">714</span>:   <span class=\"number\">48</span> <span class=\"number\">83</span> ec <span class=\"number\">08</span>             <span class=\"keyword\">sub </span>   <span class=\"number\">$0x8</span>,%rsp</span><br><span class=\"line\"> <span class=\"number\">718</span>:   <span class=\"number\">48</span> <span class=\"built_in\">c1</span> fd <span class=\"number\">03</span>             sar    <span class=\"number\">$0x3</span>,%rbp</span><br><span class=\"line\"> <span class=\"number\">71</span>c:   e8 ff fd ff ff          callq  <span class=\"number\">520</span> &lt;_init&gt;</span><br><span class=\"line\"> <span class=\"number\">721</span>:   <span class=\"number\">48</span> <span class=\"number\">85</span> ed                test   %rbp,%rbp</span><br><span class=\"line\"> <span class=\"number\">724</span>:   <span class=\"number\">74</span> <span class=\"number\">20</span>                   je     <span class=\"number\">746</span> &lt;__libc_csu_init+<span class=\"number\">0x56</span>&gt;</span><br><span class=\"line\"> <span class=\"number\">726</span>:   <span class=\"number\">31</span> db                   xor    %ebx,%ebx</span><br><span class=\"line\"> <span class=\"number\">728</span>:   <span class=\"number\">0</span>f <span class=\"number\">1</span>f <span class=\"number\">84</span> <span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">00</span>    <span class=\"keyword\">nopl </span>  <span class=\"number\">0x0</span>(%rax,%rax,<span class=\"number\">1</span>)</span><br><span class=\"line\"> <span class=\"number\">72</span>f:   <span class=\"number\">00</span> </span><br><span class=\"line\"> <span class=\"number\">730</span>:   <span class=\"number\">4</span>c <span class=\"number\">89</span> fa                <span class=\"keyword\">mov </span>   %<span class=\"built_in\">r15</span>,%rdx</span><br><span class=\"line\"> <span class=\"number\">733</span>:   <span class=\"number\">4</span>c <span class=\"number\">89</span> <span class=\"built_in\">f6</span>                <span class=\"keyword\">mov </span>   %<span class=\"built_in\">r14</span>,%rsi</span><br><span class=\"line\"> <span class=\"number\">736</span>:   <span class=\"number\">44</span> <span class=\"number\">89</span> ef                <span class=\"keyword\">mov </span>   %r13d,%edi</span><br><span class=\"line\"> <span class=\"number\">739</span>:   <span class=\"number\">41</span> ff <span class=\"number\">14</span> dc             callq  *(%<span class=\"built_in\">r12</span>,%rbx,<span class=\"number\">8</span>)</span><br><span class=\"line\"> <span class=\"number\">73</span>d:   <span class=\"number\">48</span> <span class=\"number\">83</span> <span class=\"built_in\">c3</span> <span class=\"number\">01</span>             <span class=\"keyword\">add </span>   <span class=\"number\">$0x1</span>,%rbx</span><br><span class=\"line\"> <span class=\"number\">741</span>:   <span class=\"number\">48</span> <span class=\"number\">39</span> dd                <span class=\"keyword\">cmp </span>   %rbx,%rbp</span><br><span class=\"line\"> <span class=\"number\">744</span>:   <span class=\"number\">75</span> ea                   jne    <span class=\"number\">730</span> &lt;__libc_csu_init+<span class=\"number\">0x40</span>&gt;</span><br><span class=\"line\"> <span class=\"number\">746</span>:   <span class=\"number\">48</span> <span class=\"number\">83</span> <span class=\"built_in\">c4</span> <span class=\"number\">08</span>             <span class=\"keyword\">add </span>   <span class=\"number\">$0x8</span>,%rsp</span><br><span class=\"line\"> <span class=\"number\">74</span>a:   <span class=\"number\">5</span>b                      <span class=\"keyword\">pop </span>   %rbx</span><br><span class=\"line\"> <span class=\"number\">74</span>b:   <span class=\"number\">5</span>d                      <span class=\"keyword\">pop </span>   %rbp</span><br><span class=\"line\"> <span class=\"number\">74</span>c:   <span class=\"number\">41</span> <span class=\"number\">5</span>c                   <span class=\"keyword\">pop </span>   %<span class=\"built_in\">r12</span></span><br><span class=\"line\"> <span class=\"number\">74</span>e:   <span class=\"number\">41</span> <span class=\"number\">5</span>d                   <span class=\"keyword\">pop </span>   %<span class=\"built_in\">r13</span></span><br><span class=\"line\"> <span class=\"number\">750</span>:   <span class=\"number\">41</span> <span class=\"number\">5</span>e                   <span class=\"keyword\">pop </span>   %<span class=\"built_in\">r14</span></span><br><span class=\"line\"> <span class=\"number\">752</span>:   <span class=\"number\">41</span> <span class=\"number\">5</span>f                   <span class=\"keyword\">pop </span>   %<span class=\"built_in\">r15</span></span><br><span class=\"line\"> <span class=\"number\">754</span>:   <span class=\"built_in\">c3</span>                      retq   </span><br><span class=\"line\"> <span class=\"number\">755</span>:   <span class=\"number\">90</span>                      <span class=\"keyword\">nop</span></span><br><span class=\"line\"><span class=\"keyword\"> </span><span class=\"number\">756</span>:   <span class=\"number\">66</span> <span class=\"number\">2</span>e <span class=\"number\">0</span>f <span class=\"number\">1</span>f <span class=\"number\">84</span> <span class=\"number\">00</span> <span class=\"number\">00</span>    <span class=\"keyword\">nopw </span>  %cs:<span class=\"number\">0x0</span>(%rax,%rax,<span class=\"number\">1</span>)</span><br><span class=\"line\"> <span class=\"number\">75</span>d:   <span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">00</span> </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">0000000000000760</span> &lt;__libc_csu_fini&gt;:</span><br><span class=\"line\"> <span class=\"number\">760</span>:   <span class=\"built_in\">f3</span> <span class=\"built_in\">c3</span>                   repz retq </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"symbol\">Disassembly</span> of section .fini:</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">0000000000000764</span> &lt;_fini&gt;:</span><br><span class=\"line\"> <span class=\"number\">764</span>:   <span class=\"number\">48</span> <span class=\"number\">83</span> ec <span class=\"number\">08</span>             <span class=\"keyword\">sub </span>   <span class=\"number\">$0x8</span>,%rsp</span><br><span class=\"line\"> <span class=\"number\">768</span>:   <span class=\"number\">48</span> <span class=\"number\">83</span> <span class=\"built_in\">c4</span> <span class=\"number\">08</span>             <span class=\"keyword\">add </span>   <span class=\"number\">$0x8</span>,%rsp</span><br><span class=\"line\"> <span class=\"number\">76</span>c:   <span class=\"built_in\">c3</span>                      retq</span><br></pre></td></tr></table></figure>\n\n\n<h5 id=\"可执行文件-位置无关的非PIE-EXEC-版本\"><a href=\"#可执行文件-位置无关的非PIE-EXEC-版本\" class=\"headerlink\" title=\"可执行文件 (位置无关的非PIE(EXEC)版本)\"></a>可执行文件 (位置无关的非PIE(EXEC)版本)</h5><figure class=\"highlight armasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"symbol\">Dynamic</span> section at offset <span class=\"number\">0xe30</span> contains <span class=\"number\">23</span> entries:</span><br><span class=\"line\">  标记        类型                         名称/值</span><br><span class=\"line\"> <span class=\"number\">0x0000000000000001</span> (NEEDED)             共享库：[libstdc++.so.<span class=\"number\">6</span>]</span><br><span class=\"line\"> <span class=\"number\">0x0000000000000001</span> (NEEDED)             共享库：[libm.so.<span class=\"number\">6</span>]</span><br><span class=\"line\"> <span class=\"number\">0x0000000000000001</span> (NEEDED)             共享库：[libgcc_s.so.<span class=\"number\">1</span>]</span><br><span class=\"line\"> <span class=\"number\">0x0000000000000001</span> (NEEDED)             共享库：[libc.so.<span class=\"number\">6</span>]</span><br><span class=\"line\"> <span class=\"number\">0x000000000000000c</span> (INIT)               <span class=\"number\">0x4003b8</span></span><br><span class=\"line\"> <span class=\"number\">0x000000000000000d</span> (FINI)               <span class=\"number\">0x4005b4</span></span><br><span class=\"line\"> <span class=\"number\">0x0000000000000019</span> (INIT_ARRAY)         <span class=\"number\">0x600e18</span></span><br><span class=\"line\"> <span class=\"number\">0x000000000000001b</span> (INIT_ARRAYSZ)       <span class=\"number\">8</span> (<span class=\"keyword\">bytes)</span></span><br><span class=\"line\"><span class=\"keyword\"> </span><span class=\"number\">0x000000000000001a</span> (FINI_ARRAY)         <span class=\"number\">0x600e20</span></span><br><span class=\"line\"> <span class=\"number\">0x000000000000001c</span> (FINI_ARRAYSZ)       <span class=\"number\">8</span> (<span class=\"keyword\">bytes)</span></span><br><span class=\"line\"><span class=\"keyword\"> </span><span class=\"number\">0x000000006ffffef5</span> (GNU_HASH)           <span class=\"number\">0x400298</span></span><br><span class=\"line\"> <span class=\"number\">0x0000000000000005</span> (<span class=\"keyword\">STRTAB) </span>            <span class=\"number\">0x400300</span></span><br><span class=\"line\"> <span class=\"number\">0x0000000000000006</span> (SYMTAB)             <span class=\"number\">0x4002b8</span></span><br><span class=\"line\"> <span class=\"number\">0x000000000000000a</span> (<span class=\"keyword\">STRSZ) </span>             <span class=\"number\">95</span> (<span class=\"keyword\">bytes)</span></span><br><span class=\"line\"><span class=\"keyword\"> </span><span class=\"number\">0x000000000000000b</span> (SYMENT)             <span class=\"number\">24</span> (<span class=\"keyword\">bytes)</span></span><br><span class=\"line\"><span class=\"keyword\"> </span><span class=\"number\">0x0000000000000015</span> (DEBUG)              <span class=\"number\">0x0</span></span><br><span class=\"line\"> <span class=\"number\">0x0000000000000007</span> (RELA)               <span class=\"number\">0x400388</span></span><br><span class=\"line\"> <span class=\"number\">0x0000000000000008</span> (RELASZ)             <span class=\"number\">48</span> (<span class=\"keyword\">bytes)</span></span><br><span class=\"line\"><span class=\"keyword\"> </span><span class=\"number\">0x0000000000000009</span> (RELAENT)            <span class=\"number\">24</span> (<span class=\"keyword\">bytes)</span></span><br><span class=\"line\"><span class=\"keyword\"> </span><span class=\"number\">0x000000006ffffffe</span> (VERNEED)            <span class=\"number\">0x400368</span></span><br><span class=\"line\"> <span class=\"number\">0x000000006fffffff</span> (VERNEEDNUM)         <span class=\"number\">1</span></span><br><span class=\"line\"> <span class=\"number\">0x000000006ffffff0</span> (VERSYM)             <span class=\"number\">0x400360</span></span><br><span class=\"line\"> <span class=\"number\">0x0000000000000000</span> (NULL)               <span class=\"number\">0x0</span></span><br><span class=\"line\"></span><br><span class=\"line\">重定位节 <span class=\"string\">'.rela.dyn'</span> 位于偏移量 <span class=\"number\">0x388</span> 含有 <span class=\"number\">2</span> 个条目：</span><br><span class=\"line\">  偏移量          信息           类型           符号值        符号名称 + 加数</span><br><span class=\"line\"><span class=\"number\">000000600</span>ff0  <span class=\"number\">000100000006</span> R_X86_64_GLOB_DAT <span class=\"number\">0000000000000000</span> __libc_start_main<span class=\"comment\">@GLIBC_2.2.5 + 0</span></span><br><span class=\"line\"><span class=\"number\">000000600</span>ff8  <span class=\"number\">000200000006</span> R_X86_64_GLOB_DAT <span class=\"number\">0000000000000000</span> __gmon_start__ + <span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"symbol\">The</span> decoding of unwind sections for machine type Advanced Micro Devices X86-<span class=\"number\">64</span> is not currently supported.</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"symbol\">Symbol</span> table <span class=\"string\">'.dynsym'</span> contains <span class=\"number\">3</span> entries:</span><br><span class=\"line\"><span class=\"symbol\">   Num:</span>    Value          Size Type    <span class=\"keyword\">Bind </span>  Vis      Ndx Name</span><br><span class=\"line\">     <span class=\"number\">0</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">0</span> NOTYPE  LOCAL  DEFAULT  UND </span><br><span class=\"line\">     <span class=\"number\">1</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">0</span> FUNC    <span class=\"meta\">GLOBAL</span> DEFAULT  UND __libc_start_main<span class=\"comment\">@GLIBC_2.2.5 (2)</span></span><br><span class=\"line\">     <span class=\"number\">2</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">0</span> NOTYPE  WEAK   DEFAULT  UND __gmon_start__</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"symbol\">Symbol</span> table <span class=\"string\">'.symtab'</span> contains <span class=\"number\">65</span> entries:</span><br><span class=\"line\"><span class=\"symbol\">   Num:</span>    Value          Size Type    <span class=\"keyword\">Bind </span>  Vis      Ndx Name</span><br><span class=\"line\">     <span class=\"number\">0</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">0</span> NOTYPE  LOCAL  DEFAULT  UND </span><br><span class=\"line\">     <span class=\"number\">1</span>: <span class=\"number\">0000000000400238</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT    <span class=\"number\">1</span> </span><br><span class=\"line\">     <span class=\"number\">2</span>: <span class=\"number\">0000000000400254</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT    <span class=\"number\">2</span> </span><br><span class=\"line\">     <span class=\"number\">3</span>: <span class=\"number\">0000000000400274</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT    <span class=\"number\">3</span> </span><br><span class=\"line\">     <span class=\"number\">4</span>: <span class=\"number\">0000000000400298</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT    <span class=\"number\">4</span> </span><br><span class=\"line\">     <span class=\"number\">5</span>: <span class=\"number\">00000000004002</span>b8     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT    <span class=\"number\">5</span> </span><br><span class=\"line\">     <span class=\"number\">6</span>: <span class=\"number\">0000000000400300</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT    <span class=\"number\">6</span> </span><br><span class=\"line\">     <span class=\"number\">7</span>: <span class=\"number\">0000000000400360</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT    <span class=\"number\">7</span> </span><br><span class=\"line\">     <span class=\"number\">8</span>: <span class=\"number\">0000000000400368</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT    <span class=\"number\">8</span> </span><br><span class=\"line\">     <span class=\"number\">9</span>: <span class=\"number\">0000000000400388</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT    <span class=\"number\">9</span> </span><br><span class=\"line\">    <span class=\"number\">10</span>: <span class=\"number\">00000000004003</span>b8     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT   <span class=\"number\">10</span> </span><br><span class=\"line\">    <span class=\"number\">11</span>: <span class=\"number\">00000000004003</span><span class=\"built_in\">d0</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT   <span class=\"number\">11</span> </span><br><span class=\"line\">    <span class=\"number\">12</span>: <span class=\"number\">00000000004005</span>b4     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT   <span class=\"number\">12</span> </span><br><span class=\"line\">    <span class=\"number\">13</span>: <span class=\"number\">00000000004005</span><span class=\"built_in\">c0</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT   <span class=\"number\">13</span> </span><br><span class=\"line\">    <span class=\"number\">14</span>: <span class=\"number\">00000000004005</span><span class=\"built_in\">c8</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT   <span class=\"number\">14</span> </span><br><span class=\"line\">    <span class=\"number\">15</span>: <span class=\"number\">0000000000400608</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT   <span class=\"number\">15</span> </span><br><span class=\"line\">    <span class=\"number\">16</span>: <span class=\"number\">0000000000600</span>e18     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT   <span class=\"number\">16</span> </span><br><span class=\"line\">    <span class=\"number\">17</span>: <span class=\"number\">0000000000600</span>e20     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT   <span class=\"number\">17</span> </span><br><span class=\"line\">    <span class=\"number\">18</span>: <span class=\"number\">0000000000600</span>e28     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT   <span class=\"number\">18</span> </span><br><span class=\"line\">    <span class=\"number\">19</span>: <span class=\"number\">0000000000600</span>e30     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT   <span class=\"number\">19</span> </span><br><span class=\"line\">    <span class=\"number\">20</span>: <span class=\"number\">0000000000600</span>ff0     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT   <span class=\"number\">20</span> </span><br><span class=\"line\">    <span class=\"number\">21</span>: <span class=\"number\">0000000000601000</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT   <span class=\"number\">21</span> </span><br><span class=\"line\">    <span class=\"number\">22</span>: <span class=\"number\">0000000000601018</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT   <span class=\"number\">22</span> </span><br><span class=\"line\">    <span class=\"number\">23</span>: <span class=\"number\">000000000060102</span>c     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT   <span class=\"number\">23</span> </span><br><span class=\"line\">    <span class=\"number\">24</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT   <span class=\"number\">24</span> </span><br><span class=\"line\">    <span class=\"number\">25</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">0</span> FILE    LOCAL  DEFAULT  ABS crtstuff.c</span><br><span class=\"line\">    <span class=\"number\">26</span>: <span class=\"number\">0000000000600</span>e28     <span class=\"number\">0</span> OBJECT  LOCAL  DEFAULT   <span class=\"number\">18</span> __JCR_LIST__</span><br><span class=\"line\">    <span class=\"number\">27</span>: <span class=\"number\">0000000000400410</span>     <span class=\"number\">0</span> FUNC    LOCAL  DEFAULT   <span class=\"number\">11</span> deregister_tm_clones</span><br><span class=\"line\">    <span class=\"number\">28</span>: <span class=\"number\">0000000000400450</span>     <span class=\"number\">0</span> FUNC    LOCAL  DEFAULT   <span class=\"number\">11</span> register_tm_clones</span><br><span class=\"line\">    <span class=\"number\">29</span>: <span class=\"number\">0000000000400490</span>     <span class=\"number\">0</span> FUNC    LOCAL  DEFAULT   <span class=\"number\">11</span> __do_global_dtors_aux</span><br><span class=\"line\">    <span class=\"number\">30</span>: <span class=\"number\">000000000060102</span>c     <span class=\"number\">1</span> OBJECT  LOCAL  DEFAULT   <span class=\"number\">23</span> completed.<span class=\"number\">6972</span></span><br><span class=\"line\">    <span class=\"number\">31</span>: <span class=\"number\">0000000000600</span>e20     <span class=\"number\">0</span> OBJECT  LOCAL  DEFAULT   <span class=\"number\">17</span> __do_global_dtors_aux_fin</span><br><span class=\"line\">    <span class=\"number\">32</span>: <span class=\"number\">00000000004004</span>b0     <span class=\"number\">0</span> FUNC    LOCAL  DEFAULT   <span class=\"number\">11</span> frame_dummy</span><br><span class=\"line\">    <span class=\"number\">33</span>: <span class=\"number\">0000000000600</span>e18     <span class=\"number\">0</span> OBJECT  LOCAL  DEFAULT   <span class=\"number\">16</span> __frame_dummy_init_array_</span><br><span class=\"line\">    <span class=\"number\">34</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">0</span> FILE    LOCAL  DEFAULT  ABS test.cpp</span><br><span class=\"line\">    <span class=\"number\">35</span>: <span class=\"number\">00000000004005</span><span class=\"built_in\">c4</span>     <span class=\"number\">4</span> OBJECT  LOCAL  DEFAULT   <span class=\"number\">13</span> _ZL13g_static_text</span><br><span class=\"line\">    <span class=\"number\">36</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">0</span> FILE    LOCAL  DEFAULT  ABS crtstuff.c</span><br><span class=\"line\">    <span class=\"number\">37</span>: <span class=\"number\">0000000000400708</span>     <span class=\"number\">0</span> OBJECT  LOCAL  DEFAULT   <span class=\"number\">15</span> __FRAME_END__</span><br><span class=\"line\">    <span class=\"number\">38</span>: <span class=\"number\">0000000000600</span>e28     <span class=\"number\">0</span> OBJECT  LOCAL  DEFAULT   <span class=\"number\">18</span> __JCR_END__</span><br><span class=\"line\">    <span class=\"number\">39</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">0</span> FILE    LOCAL  DEFAULT  ABS </span><br><span class=\"line\">    <span class=\"number\">40</span>: <span class=\"number\">00000000004005</span><span class=\"built_in\">c8</span>     <span class=\"number\">0</span> NOTYPE  LOCAL  DEFAULT   <span class=\"number\">14</span> __GNU_EH_FRAME_HDR</span><br><span class=\"line\">    <span class=\"number\">41</span>: <span class=\"number\">0000000000600</span>e30     <span class=\"number\">0</span> OBJECT  LOCAL  DEFAULT   <span class=\"number\">19</span> _DYNAMIC</span><br><span class=\"line\">    <span class=\"number\">42</span>: <span class=\"number\">0000000000600</span>e20     <span class=\"number\">0</span> NOTYPE  LOCAL  DEFAULT   <span class=\"number\">16</span> __init_array_end</span><br><span class=\"line\">    <span class=\"number\">43</span>: <span class=\"number\">0000000000600</span>e18     <span class=\"number\">0</span> NOTYPE  LOCAL  DEFAULT   <span class=\"number\">16</span> __init_array_start</span><br><span class=\"line\">    <span class=\"number\">44</span>: <span class=\"number\">0000000000601000</span>     <span class=\"number\">0</span> OBJECT  LOCAL  DEFAULT   <span class=\"number\">21</span> _GLOBAL_OFFSET_TABLE_</span><br><span class=\"line\">    <span class=\"number\">45</span>: <span class=\"number\">0000000000601028</span>     <span class=\"number\">4</span> OBJECT  <span class=\"meta\">GLOBAL</span> DEFAULT   <span class=\"number\">22</span> g_static_data</span><br><span class=\"line\">    <span class=\"number\">46</span>: <span class=\"number\">000000000060102</span>c     <span class=\"number\">0</span> NOTYPE  <span class=\"meta\">GLOBAL</span> DEFAULT   <span class=\"number\">22</span> _edata</span><br><span class=\"line\">    <span class=\"number\">47</span>: <span class=\"number\">0000000000601018</span>     <span class=\"number\">0</span> NOTYPE  WEAK   DEFAULT   <span class=\"number\">22</span> data_start</span><br><span class=\"line\">    <span class=\"number\">48</span>: <span class=\"number\">00000000004005</span><span class=\"built_in\">c0</span>     <span class=\"number\">4</span> OBJECT  <span class=\"meta\">GLOBAL</span> DEFAULT   <span class=\"number\">13</span> _IO_stdin_used</span><br><span class=\"line\">    <span class=\"number\">49</span>: <span class=\"number\">00000000004004</span><span class=\"built_in\">d6</span>    <span class=\"number\">25</span> FUNC    <span class=\"meta\">GLOBAL</span> DEFAULT   <span class=\"number\">11</span> _Z9main_funcii</span><br><span class=\"line\">    <span class=\"number\">50</span>: <span class=\"number\">00000000004004</span>ef    <span class=\"number\">69</span> FUNC    <span class=\"meta\">GLOBAL</span> DEFAULT   <span class=\"number\">11</span> main</span><br><span class=\"line\">    <span class=\"number\">51</span>: <span class=\"number\">0000000000601020</span>     <span class=\"number\">0</span> OBJECT  <span class=\"meta\">GLOBAL</span> HIDDEN    <span class=\"number\">22</span> __dso_handle</span><br><span class=\"line\">    <span class=\"number\">52</span>: <span class=\"number\">00000000004005</span>b4     <span class=\"number\">0</span> FUNC    <span class=\"meta\">GLOBAL</span> DEFAULT   <span class=\"number\">12</span> _fini</span><br><span class=\"line\">    <span class=\"number\">53</span>: <span class=\"number\">0000000000400400</span>     <span class=\"number\">2</span> FUNC    <span class=\"meta\">GLOBAL</span> HIDDEN    <span class=\"number\">11</span> _dl_relocate_static_pie</span><br><span class=\"line\">    <span class=\"number\">54</span>: <span class=\"number\">00000000004003</span><span class=\"built_in\">d0</span>    <span class=\"number\">43</span> FUNC    <span class=\"meta\">GLOBAL</span> DEFAULT   <span class=\"number\">11</span> _start</span><br><span class=\"line\">    <span class=\"number\">55</span>: <span class=\"number\">00000000004003</span>b8     <span class=\"number\">0</span> FUNC    <span class=\"meta\">GLOBAL</span> DEFAULT   <span class=\"number\">10</span> _init</span><br><span class=\"line\">    <span class=\"number\">56</span>: <span class=\"number\">0000000000601030</span>     <span class=\"number\">0</span> OBJECT  <span class=\"meta\">GLOBAL</span> HIDDEN    <span class=\"number\">22</span> __TMC_END__</span><br><span class=\"line\">    <span class=\"number\">57</span>: <span class=\"number\">0000000000601018</span>     <span class=\"number\">0</span> NOTYPE  <span class=\"meta\">GLOBAL</span> DEFAULT   <span class=\"number\">22</span> __data_start</span><br><span class=\"line\">    <span class=\"number\">58</span>: <span class=\"number\">0000000000601038</span>     <span class=\"number\">0</span> NOTYPE  <span class=\"meta\">GLOBAL</span> DEFAULT   <span class=\"number\">23</span> _<span class=\"meta\">end</span></span><br><span class=\"line\">    <span class=\"number\">59</span>: <span class=\"number\">000000000060102</span>c     <span class=\"number\">0</span> NOTYPE  <span class=\"meta\">GLOBAL</span> DEFAULT   <span class=\"number\">23</span> __bss_start</span><br><span class=\"line\">    <span class=\"number\">60</span>: <span class=\"number\">0000000000400540</span>   <span class=\"number\">101</span> FUNC    <span class=\"meta\">GLOBAL</span> DEFAULT   <span class=\"number\">11</span> __libc_csu_init</span><br><span class=\"line\">    <span class=\"number\">61</span>: <span class=\"number\">0000000000601030</span>     <span class=\"number\">4</span> OBJECT  <span class=\"meta\">GLOBAL</span> DEFAULT   <span class=\"number\">23</span> g_static_bss</span><br><span class=\"line\">    <span class=\"number\">62</span>: <span class=\"number\">00000000004005</span>b0     <span class=\"number\">2</span> FUNC    <span class=\"meta\">GLOBAL</span> DEFAULT   <span class=\"number\">11</span> __libc_csu_fini</span><br><span class=\"line\">    <span class=\"number\">63</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">0</span> FUNC    <span class=\"meta\">GLOBAL</span> DEFAULT  UND __libc_start_main<span class=\"comment\">@@GLIBC_</span></span><br><span class=\"line\">    <span class=\"number\">64</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">0</span> NOTYPE  WEAK   DEFAULT  UND __gmon_start__</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"symbol\">.text</span></span><br><span class=\"line\"><span class=\"number\">00000000004003</span>b8 &lt;_init&gt;:</span><br><span class=\"line\">  <span class=\"number\">4003</span>b8:       <span class=\"number\">48</span> <span class=\"number\">83</span> ec <span class=\"number\">08</span>             <span class=\"keyword\">sub </span>   <span class=\"number\">$0x8</span>,%rsp</span><br><span class=\"line\">  <span class=\"number\">4003</span>bc:       <span class=\"number\">48</span> <span class=\"number\">8</span>b <span class=\"number\">05</span> <span class=\"number\">35</span> <span class=\"number\">0</span>c <span class=\"number\">20</span> <span class=\"number\">00</span>    <span class=\"keyword\">mov </span>   <span class=\"number\">0x200c35</span>(%rip),%rax        # <span class=\"number\">600</span>ff8 &lt;__gmon_start__&gt;</span><br><span class=\"line\">  <span class=\"number\">4003</span><span class=\"built_in\">c3</span>:       <span class=\"number\">48</span> <span class=\"number\">85</span> <span class=\"built_in\">c0</span>                test   %rax,%rax</span><br><span class=\"line\">  <span class=\"number\">4003</span><span class=\"built_in\">c6</span>:       <span class=\"number\">74</span> <span class=\"number\">02</span>                   je     <span class=\"number\">4003</span>ca &lt;_init+<span class=\"number\">0x12</span>&gt;</span><br><span class=\"line\">  <span class=\"number\">4003</span><span class=\"built_in\">c8</span>:       ff <span class=\"built_in\">d0</span>                   callq  *%rax</span><br><span class=\"line\">  <span class=\"number\">4003</span>ca:       <span class=\"number\">48</span> <span class=\"number\">83</span> <span class=\"built_in\">c4</span> <span class=\"number\">08</span>             <span class=\"keyword\">add </span>   <span class=\"number\">$0x8</span>,%rsp</span><br><span class=\"line\">  <span class=\"number\">4003</span>ce:       <span class=\"built_in\">c3</span>                      retq   </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"symbol\">Disassembly</span> of section <span class=\"meta\">.text</span>:</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">00000000004003</span><span class=\"built_in\">d0</span> &lt;_start&gt;:</span><br><span class=\"line\">  <span class=\"number\">4003</span><span class=\"built_in\">d0</span>:       <span class=\"number\">31</span> ed                   xor    %ebp,%ebp</span><br><span class=\"line\">  <span class=\"number\">4003</span><span class=\"built_in\">d2</span>:       <span class=\"number\">49</span> <span class=\"number\">89</span> <span class=\"built_in\">d1</span>                <span class=\"keyword\">mov </span>   %rdx,%<span class=\"built_in\">r9</span></span><br><span class=\"line\">  <span class=\"number\">4003</span><span class=\"built_in\">d5</span>:       <span class=\"number\">5</span>e                      <span class=\"keyword\">pop </span>   %rsi</span><br><span class=\"line\">  <span class=\"number\">4003</span><span class=\"built_in\">d6</span>:       <span class=\"number\">48</span> <span class=\"number\">89</span> e2                <span class=\"keyword\">mov </span>   %rsp,%rdx</span><br><span class=\"line\">  <span class=\"number\">4003</span><span class=\"built_in\">d9</span>:       <span class=\"number\">48</span> <span class=\"number\">83</span> e4 <span class=\"built_in\">f0</span>             <span class=\"keyword\">and </span>   <span class=\"number\">$0xfffffffffffffff0</span>,%rsp</span><br><span class=\"line\">  <span class=\"number\">4003</span>dd:       <span class=\"number\">50</span>                      <span class=\"keyword\">push </span>  %rax</span><br><span class=\"line\">  <span class=\"number\">4003</span>de:       <span class=\"number\">54</span>                      <span class=\"keyword\">push </span>  %rsp</span><br><span class=\"line\">  <span class=\"number\">4003</span>df:       <span class=\"number\">49</span> <span class=\"built_in\">c7</span> <span class=\"built_in\">c0</span> <span class=\"keyword\">b0 </span><span class=\"number\">05</span> <span class=\"number\">40</span> <span class=\"number\">00</span>    <span class=\"keyword\">mov </span>   <span class=\"number\">$0x4005b0</span>,%<span class=\"built_in\">r8</span></span><br><span class=\"line\">  <span class=\"number\">4003</span>e6:       <span class=\"number\">48</span> <span class=\"built_in\">c7</span> <span class=\"built_in\">c1</span> <span class=\"number\">40</span> <span class=\"number\">05</span> <span class=\"number\">40</span> <span class=\"number\">00</span>    <span class=\"keyword\">mov </span>   <span class=\"number\">$0x400540</span>,%rcx</span><br><span class=\"line\">  <span class=\"number\">4003</span>ed:       <span class=\"number\">48</span> <span class=\"built_in\">c7</span> <span class=\"built_in\">c7</span> ef <span class=\"number\">04</span> <span class=\"number\">40</span> <span class=\"number\">00</span>    <span class=\"keyword\">mov </span>   <span class=\"number\">$0x4004ef</span>,%rdi</span><br><span class=\"line\">  <span class=\"number\">4003</span><span class=\"built_in\">f4</span>:       ff <span class=\"number\">15</span> <span class=\"built_in\">f6</span> <span class=\"number\">0</span>b <span class=\"number\">20</span> <span class=\"number\">00</span>       callq  *<span class=\"number\">0x200bf6</span>(%rip)        # <span class=\"number\">600</span>ff0 &lt;__libc_start_main<span class=\"comment\">@GLIBC_2.2.5&gt;</span></span><br><span class=\"line\">  <span class=\"number\">4003</span>fa:       <span class=\"built_in\">f4</span>                      hlt    </span><br><span class=\"line\">  <span class=\"number\">4003</span>fb:       <span class=\"number\">0</span>f <span class=\"number\">1</span>f <span class=\"number\">44</span> <span class=\"number\">00</span> <span class=\"number\">00</span>          <span class=\"keyword\">nopl </span>  <span class=\"number\">0x0</span>(%rax,%rax,<span class=\"number\">1</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">0000000000400400</span> &lt;_dl_relocate_static_pie&gt;:</span><br><span class=\"line\">  <span class=\"number\">400400</span>:       <span class=\"built_in\">f3</span> <span class=\"built_in\">c3</span>                   repz retq </span><br><span class=\"line\">  <span class=\"number\">400402</span>:       <span class=\"number\">66</span> <span class=\"number\">2</span>e <span class=\"number\">0</span>f <span class=\"number\">1</span>f <span class=\"number\">84</span> <span class=\"number\">00</span> <span class=\"number\">00</span>    <span class=\"keyword\">nopw </span>  %cs:<span class=\"number\">0x0</span>(%rax,%rax,<span class=\"number\">1</span>)</span><br><span class=\"line\">  <span class=\"number\">400409</span>:       <span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">00</span> </span><br><span class=\"line\">  <span class=\"number\">40040</span>c:       <span class=\"number\">0</span>f <span class=\"number\">1</span>f <span class=\"number\">40</span> <span class=\"number\">00</span>             <span class=\"keyword\">nopl </span>  <span class=\"number\">0x0</span>(%rax)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">0000000000400410</span> &lt;deregister_tm_clones&gt;:</span><br><span class=\"line\">  <span class=\"number\">400410</span>:       <span class=\"keyword\">b8 </span><span class=\"number\">37</span> <span class=\"number\">10</span> <span class=\"number\">60</span> <span class=\"number\">00</span>          <span class=\"keyword\">mov </span>   <span class=\"number\">$0x601037</span>,%eax</span><br><span class=\"line\">  <span class=\"number\">400415</span>:       <span class=\"number\">55</span>                      <span class=\"keyword\">push </span>  %rbp</span><br><span class=\"line\">  <span class=\"number\">400416</span>:       <span class=\"number\">48</span> <span class=\"number\">2</span>d <span class=\"number\">30</span> <span class=\"number\">10</span> <span class=\"number\">60</span> <span class=\"number\">00</span>       <span class=\"keyword\">sub </span>   <span class=\"number\">$0x601030</span>,%rax</span><br><span class=\"line\">  <span class=\"number\">40041</span>c:       <span class=\"number\">48</span> <span class=\"number\">83</span> f8 <span class=\"number\">0</span>e             <span class=\"keyword\">cmp </span>   <span class=\"number\">$0xe</span>,%rax</span><br><span class=\"line\">  <span class=\"number\">400420</span>:       <span class=\"number\">48</span> <span class=\"number\">89</span> e5                <span class=\"keyword\">mov </span>   %rsp,%rbp</span><br><span class=\"line\">  <span class=\"number\">400423</span>:       <span class=\"number\">76</span> <span class=\"number\">1</span>b                   jbe    <span class=\"number\">400440</span> &lt;deregister_tm_clones+<span class=\"number\">0x30</span>&gt;</span><br><span class=\"line\">  <span class=\"number\">400425</span>:       <span class=\"keyword\">b8 </span><span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">00</span>          <span class=\"keyword\">mov </span>   <span class=\"number\">$0x0</span>,%eax</span><br><span class=\"line\">  <span class=\"number\">40042</span>a:       <span class=\"number\">48</span> <span class=\"number\">85</span> <span class=\"built_in\">c0</span>                test   %rax,%rax</span><br><span class=\"line\">  <span class=\"number\">40042</span>d:       <span class=\"number\">74</span> <span class=\"number\">11</span>                   je     <span class=\"number\">400440</span> &lt;deregister_tm_clones+<span class=\"number\">0x30</span>&gt;</span><br><span class=\"line\">  <span class=\"number\">40042</span>f:       <span class=\"number\">5</span>d                      <span class=\"keyword\">pop </span>   %rbp</span><br><span class=\"line\">  <span class=\"number\">400430</span>:       <span class=\"keyword\">bf </span><span class=\"number\">30</span> <span class=\"number\">10</span> <span class=\"number\">60</span> <span class=\"number\">00</span>          <span class=\"keyword\">mov </span>   <span class=\"number\">$0x601030</span>,%edi</span><br><span class=\"line\">  <span class=\"number\">400435</span>:       ff e0                   jmpq   *%rax</span><br><span class=\"line\">  <span class=\"number\">400437</span>:       <span class=\"number\">66</span> <span class=\"number\">0</span>f <span class=\"number\">1</span>f <span class=\"number\">84</span> <span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">00</span>    <span class=\"keyword\">nopw </span>  <span class=\"number\">0x0</span>(%rax,%rax,<span class=\"number\">1</span>)</span><br><span class=\"line\">  <span class=\"number\">40043</span>e:       <span class=\"number\">00</span> <span class=\"number\">00</span> </span><br><span class=\"line\">  <span class=\"number\">400440</span>:       <span class=\"number\">5</span>d                      <span class=\"keyword\">pop </span>   %rbp</span><br><span class=\"line\">  <span class=\"number\">400441</span>:       <span class=\"built_in\">c3</span>                      retq   </span><br><span class=\"line\">  <span class=\"number\">400442</span>:       <span class=\"number\">0</span>f <span class=\"number\">1</span>f <span class=\"number\">40</span> <span class=\"number\">00</span>             <span class=\"keyword\">nopl </span>  <span class=\"number\">0x0</span>(%rax)</span><br><span class=\"line\">  <span class=\"number\">400446</span>:       <span class=\"number\">66</span> <span class=\"number\">2</span>e <span class=\"number\">0</span>f <span class=\"number\">1</span>f <span class=\"number\">84</span> <span class=\"number\">00</span> <span class=\"number\">00</span>    <span class=\"keyword\">nopw </span>  %cs:<span class=\"number\">0x0</span>(%rax,%rax,<span class=\"number\">1</span>)</span><br><span class=\"line\">  <span class=\"number\">40044</span>d:       <span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">00</span> </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">0000000000400450</span> &lt;register_tm_clones&gt;:</span><br><span class=\"line\">  <span class=\"number\">400450</span>:       <span class=\"keyword\">be </span><span class=\"number\">30</span> <span class=\"number\">10</span> <span class=\"number\">60</span> <span class=\"number\">00</span>          <span class=\"keyword\">mov </span>   <span class=\"number\">$0x601030</span>,%esi</span><br><span class=\"line\">  <span class=\"number\">400455</span>:       <span class=\"number\">55</span>                      <span class=\"keyword\">push </span>  %rbp</span><br><span class=\"line\">  <span class=\"number\">400456</span>:       <span class=\"number\">48</span> <span class=\"number\">81</span> ee <span class=\"number\">30</span> <span class=\"number\">10</span> <span class=\"number\">60</span> <span class=\"number\">00</span>    <span class=\"keyword\">sub </span>   <span class=\"number\">$0x601030</span>,%rsi</span><br><span class=\"line\">  <span class=\"number\">40045</span>d:       <span class=\"number\">48</span> <span class=\"built_in\">c1</span> fe <span class=\"number\">03</span>             sar    <span class=\"number\">$0x3</span>,%rsi</span><br><span class=\"line\">  <span class=\"number\">400461</span>:       <span class=\"number\">48</span> <span class=\"number\">89</span> e5                <span class=\"keyword\">mov </span>   %rsp,%rbp</span><br><span class=\"line\">  <span class=\"number\">400464</span>:       <span class=\"number\">48</span> <span class=\"number\">89</span> <span class=\"built_in\">f0</span>                <span class=\"keyword\">mov </span>   %rsi,%rax</span><br><span class=\"line\">  <span class=\"number\">400467</span>:       <span class=\"number\">48</span> <span class=\"built_in\">c1</span> e8 <span class=\"number\">3</span>f             shr    <span class=\"number\">$0x3f</span>,%rax</span><br><span class=\"line\">  <span class=\"number\">40046</span>b:       <span class=\"number\">48</span> <span class=\"number\">01</span> <span class=\"built_in\">c6</span>                <span class=\"keyword\">add </span>   %rax,%rsi</span><br><span class=\"line\">  <span class=\"number\">40046</span>e:       <span class=\"number\">48</span> <span class=\"built_in\">d1</span> fe                sar    %rsi</span><br><span class=\"line\">  <span class=\"number\">400471</span>:       <span class=\"number\">74</span> <span class=\"number\">15</span>                   je     <span class=\"number\">400488</span> &lt;register_tm_clones+<span class=\"number\">0x38</span>&gt;</span><br><span class=\"line\">  <span class=\"number\">400473</span>:       <span class=\"keyword\">b8 </span><span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">00</span>          <span class=\"keyword\">mov </span>   <span class=\"number\">$0x0</span>,%eax</span><br><span class=\"line\">  <span class=\"number\">400478</span>:       <span class=\"number\">48</span> <span class=\"number\">85</span> <span class=\"built_in\">c0</span>                test   %rax,%rax</span><br><span class=\"line\">  <span class=\"number\">40047</span>b:       <span class=\"number\">74</span> <span class=\"number\">0</span>b                   je     <span class=\"number\">400488</span> &lt;register_tm_clones+<span class=\"number\">0x38</span>&gt;</span><br><span class=\"line\">  <span class=\"number\">40047</span>d:       <span class=\"number\">5</span>d                      <span class=\"keyword\">pop </span>   %rbp</span><br><span class=\"line\">  <span class=\"number\">40047</span>e:       <span class=\"keyword\">bf </span><span class=\"number\">30</span> <span class=\"number\">10</span> <span class=\"number\">60</span> <span class=\"number\">00</span>          <span class=\"keyword\">mov </span>   <span class=\"number\">$0x601030</span>,%edi</span><br><span class=\"line\">  <span class=\"number\">400483</span>:       ff e0                   jmpq   *%rax</span><br><span class=\"line\">  <span class=\"number\">400485</span>:       <span class=\"number\">0</span>f <span class=\"number\">1</span>f <span class=\"number\">00</span>                <span class=\"keyword\">nopl </span>  (%rax)</span><br><span class=\"line\">  <span class=\"number\">400488</span>:       <span class=\"number\">5</span>d                      <span class=\"keyword\">pop </span>   %rbp</span><br><span class=\"line\">  <span class=\"number\">400489</span>:       <span class=\"built_in\">c3</span>                      retq   </span><br><span class=\"line\">  <span class=\"number\">40048</span>a:       <span class=\"number\">66</span> <span class=\"number\">0</span>f <span class=\"number\">1</span>f <span class=\"number\">44</span> <span class=\"number\">00</span> <span class=\"number\">00</span>       <span class=\"keyword\">nopw </span>  <span class=\"number\">0x0</span>(%rax,%rax,<span class=\"number\">1</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">0000000000400490</span> &lt;__do_global_dtors_aux&gt;:</span><br><span class=\"line\">  <span class=\"number\">400490</span>:       <span class=\"number\">80</span> <span class=\"number\">3</span>d <span class=\"number\">95</span> <span class=\"number\">0</span>b <span class=\"number\">20</span> <span class=\"number\">00</span> <span class=\"number\">00</span>    <span class=\"keyword\">cmpb </span>  <span class=\"number\">$0x0</span>,<span class=\"number\">0x200b95</span>(%rip)        # <span class=\"number\">60102</span>c &lt;_edata&gt;</span><br><span class=\"line\">  <span class=\"number\">400497</span>:       <span class=\"number\">75</span> <span class=\"number\">11</span>                   jne    <span class=\"number\">4004</span>aa &lt;__do_global_dtors_aux+<span class=\"number\">0x1a</span>&gt;</span><br><span class=\"line\">  <span class=\"number\">400499</span>:       <span class=\"number\">55</span>                      <span class=\"keyword\">push </span>  %rbp</span><br><span class=\"line\">  <span class=\"number\">40049</span>a:       <span class=\"number\">48</span> <span class=\"number\">89</span> e5                <span class=\"keyword\">mov </span>   %rsp,%rbp</span><br><span class=\"line\">  <span class=\"number\">40049</span>d:       e8 <span class=\"number\">6</span>e ff ff ff          callq  <span class=\"number\">400410</span> &lt;deregister_tm_clones&gt;</span><br><span class=\"line\">  <span class=\"number\">4004</span><span class=\"built_in\">a2</span>:       <span class=\"number\">5</span>d                      <span class=\"keyword\">pop </span>   %rbp</span><br><span class=\"line\">  <span class=\"number\">4004</span><span class=\"built_in\">a3</span>:       <span class=\"built_in\">c6</span> <span class=\"number\">05</span> <span class=\"number\">82</span> <span class=\"number\">0</span>b <span class=\"number\">20</span> <span class=\"number\">00</span> <span class=\"number\">01</span>    <span class=\"keyword\">movb </span>  <span class=\"number\">$0x1</span>,<span class=\"number\">0x200b82</span>(%rip)        # <span class=\"number\">60102</span>c &lt;_edata&gt;</span><br><span class=\"line\">  <span class=\"number\">4004</span>aa:       <span class=\"built_in\">f3</span> <span class=\"built_in\">c3</span>                   repz retq </span><br><span class=\"line\">  <span class=\"number\">4004</span>ac:       <span class=\"number\">0</span>f <span class=\"number\">1</span>f <span class=\"number\">40</span> <span class=\"number\">00</span>             <span class=\"keyword\">nopl </span>  <span class=\"number\">0x0</span>(%rax)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">00000000004004</span>b0 &lt;frame_dummy&gt;:</span><br><span class=\"line\">  <span class=\"number\">4004</span>b0:       <span class=\"keyword\">bf </span><span class=\"number\">28</span> <span class=\"number\">0</span>e <span class=\"number\">60</span> <span class=\"number\">00</span>          <span class=\"keyword\">mov </span>   <span class=\"number\">$0x600e28</span>,%edi</span><br><span class=\"line\">  <span class=\"number\">4004</span>b5:       <span class=\"number\">48</span> <span class=\"number\">83</span> <span class=\"number\">3</span>f <span class=\"number\">00</span>             <span class=\"keyword\">cmpq </span>  <span class=\"number\">$0x0</span>,(%rdi)</span><br><span class=\"line\">  <span class=\"number\">4004</span>b9:       <span class=\"number\">75</span> <span class=\"number\">05</span>                   jne    <span class=\"number\">4004</span><span class=\"built_in\">c0</span> &lt;frame_dummy+<span class=\"number\">0x10</span>&gt;</span><br><span class=\"line\">  <span class=\"number\">4004</span>bb:       eb <span class=\"number\">93</span>                   jmp    <span class=\"number\">400450</span> &lt;register_tm_clones&gt;</span><br><span class=\"line\">  <span class=\"number\">4004</span>bd:       <span class=\"number\">0</span>f <span class=\"number\">1</span>f <span class=\"number\">00</span>                <span class=\"keyword\">nopl </span>  (%rax)</span><br><span class=\"line\">  <span class=\"number\">4004</span><span class=\"built_in\">c0</span>:       <span class=\"keyword\">b8 </span><span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">00</span>          <span class=\"keyword\">mov </span>   <span class=\"number\">$0x0</span>,%eax</span><br><span class=\"line\">  <span class=\"number\">4004</span><span class=\"built_in\">c5</span>:       <span class=\"number\">48</span> <span class=\"number\">85</span> <span class=\"built_in\">c0</span>                test   %rax,%rax</span><br><span class=\"line\">  <span class=\"number\">4004</span><span class=\"built_in\">c8</span>:       <span class=\"number\">74</span> <span class=\"built_in\">f1</span>                   je     <span class=\"number\">4004</span>bb &lt;frame_dummy+<span class=\"number\">0xb</span>&gt;</span><br><span class=\"line\">  <span class=\"number\">4004</span>ca:       <span class=\"number\">55</span>                      <span class=\"keyword\">push </span>  %rbp</span><br><span class=\"line\">  <span class=\"number\">4004</span>cb:       <span class=\"number\">48</span> <span class=\"number\">89</span> e5                <span class=\"keyword\">mov </span>   %rsp,%rbp</span><br><span class=\"line\">  <span class=\"number\">4004</span>ce:       ff <span class=\"built_in\">d0</span>                   callq  *%rax</span><br><span class=\"line\">  <span class=\"number\">4004</span><span class=\"built_in\">d0</span>:       <span class=\"number\">5</span>d                      <span class=\"keyword\">pop </span>   %rbp</span><br><span class=\"line\">  <span class=\"number\">4004</span><span class=\"built_in\">d1</span>:       e9 <span class=\"number\">7</span>a ff ff ff          jmpq   <span class=\"number\">400450</span> &lt;register_tm_clones&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">00000000004004</span><span class=\"built_in\">d6</span> &lt;_Z9main_funcii&gt;:</span><br><span class=\"line\">  <span class=\"number\">4004</span><span class=\"built_in\">d6</span>:       <span class=\"number\">55</span>                      <span class=\"keyword\">push </span>  %rbp</span><br><span class=\"line\">  <span class=\"number\">4004</span><span class=\"built_in\">d7</span>:       <span class=\"number\">48</span> <span class=\"number\">89</span> e5                <span class=\"keyword\">mov </span>   %rsp,%rbp</span><br><span class=\"line\">  <span class=\"number\">4004</span>da:       <span class=\"number\">89</span> <span class=\"number\">7</span>d fc                <span class=\"keyword\">mov </span>   %edi,-<span class=\"number\">0x4</span>(%rbp)</span><br><span class=\"line\">  <span class=\"number\">4004</span>dd:       <span class=\"number\">89</span> <span class=\"number\">75</span> f8                <span class=\"keyword\">mov </span>   %esi,-<span class=\"number\">0x8</span>(%rbp)</span><br><span class=\"line\">  <span class=\"number\">4004</span>e0:       <span class=\"number\">8</span>b <span class=\"number\">55</span> fc                <span class=\"keyword\">mov </span>   -<span class=\"number\">0x4</span>(%rbp),%edx</span><br><span class=\"line\">  <span class=\"number\">4004</span>e3:       <span class=\"number\">8</span>b <span class=\"number\">45</span> f8                <span class=\"keyword\">mov </span>   -<span class=\"number\">0x8</span>(%rbp),%eax</span><br><span class=\"line\">  <span class=\"number\">4004</span>e6:       <span class=\"number\">01</span> <span class=\"built_in\">d0</span>                   <span class=\"keyword\">add </span>   %edx,%eax</span><br><span class=\"line\">  <span class=\"number\">4004</span>e8:       <span class=\"number\">05</span> <span class=\"built_in\">c3</span> <span class=\"number\">07</span> <span class=\"number\">00</span> <span class=\"number\">00</span>          <span class=\"keyword\">add </span>   <span class=\"number\">$0x7c3</span>,%eax</span><br><span class=\"line\">  <span class=\"number\">4004</span>ed:       <span class=\"number\">5</span>d                      <span class=\"keyword\">pop </span>   %rbp</span><br><span class=\"line\">  <span class=\"number\">4004</span>ee:       <span class=\"built_in\">c3</span>                      retq   </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">00000000004004</span>ef &lt;main&gt;:</span><br><span class=\"line\">  <span class=\"number\">4004</span>ef:       <span class=\"number\">55</span>                      <span class=\"keyword\">push </span>  %rbp</span><br><span class=\"line\">  <span class=\"number\">4004</span><span class=\"built_in\">f0</span>:       <span class=\"number\">48</span> <span class=\"number\">89</span> e5                <span class=\"keyword\">mov </span>   %rsp,%rbp</span><br><span class=\"line\">  <span class=\"number\">4004</span><span class=\"built_in\">f3</span>:       <span class=\"number\">48</span> <span class=\"number\">83</span> ec <span class=\"number\">20</span>             <span class=\"keyword\">sub </span>   <span class=\"number\">$0x20</span>,%rsp</span><br><span class=\"line\">  <span class=\"number\">4004</span><span class=\"built_in\">f7</span>:       <span class=\"number\">89</span> <span class=\"number\">7</span>d ec                <span class=\"keyword\">mov </span>   %edi,-<span class=\"number\">0x14</span>(%rbp)</span><br><span class=\"line\">  <span class=\"number\">4004</span>fa:       <span class=\"number\">48</span> <span class=\"number\">89</span> <span class=\"number\">75</span> e0             <span class=\"keyword\">mov </span>   %rsi,-<span class=\"number\">0x20</span>(%rbp)</span><br><span class=\"line\">  <span class=\"number\">4004</span>fe:       <span class=\"built_in\">c7</span> <span class=\"number\">45</span> fc <span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">00</span>    <span class=\"keyword\">movl </span>  <span class=\"number\">$0x0</span>,-<span class=\"number\">0x4</span>(%rbp)</span><br><span class=\"line\">  <span class=\"number\">400505</span>:       <span class=\"number\">48</span> <span class=\"built_in\">c7</span> <span class=\"built_in\">c0</span> <span class=\"number\">30</span> <span class=\"number\">10</span> <span class=\"number\">60</span> <span class=\"number\">00</span>    <span class=\"keyword\">mov </span>   <span class=\"number\">$0x601030</span>,%rax</span><br><span class=\"line\">  <span class=\"number\">40050</span>c:       <span class=\"number\">8</span>b <span class=\"number\">55</span> ec                <span class=\"keyword\">mov </span>   -<span class=\"number\">0x14</span>(%rbp),%edx</span><br><span class=\"line\">  <span class=\"number\">40050</span>f:       <span class=\"number\">89</span> <span class=\"number\">10</span>                   <span class=\"keyword\">mov </span>   %edx,(%rax)</span><br><span class=\"line\">  <span class=\"number\">400511</span>:       <span class=\"number\">48</span> <span class=\"built_in\">c7</span> <span class=\"built_in\">c0</span> <span class=\"number\">28</span> <span class=\"number\">10</span> <span class=\"number\">60</span> <span class=\"number\">00</span>    <span class=\"keyword\">mov </span>   <span class=\"number\">$0x601028</span>,%rax</span><br><span class=\"line\">  <span class=\"number\">400518</span>:       <span class=\"number\">8</span>b <span class=\"number\">10</span>                   <span class=\"keyword\">mov </span>   (%rax),%edx</span><br><span class=\"line\">  <span class=\"number\">40051</span>a:       <span class=\"number\">48</span> <span class=\"built_in\">c7</span> <span class=\"built_in\">c0</span> <span class=\"number\">30</span> <span class=\"number\">10</span> <span class=\"number\">60</span> <span class=\"number\">00</span>    <span class=\"keyword\">mov </span>   <span class=\"number\">$0x601030</span>,%rax</span><br><span class=\"line\">  <span class=\"number\">400521</span>:       <span class=\"number\">8</span>b <span class=\"number\">00</span>                   <span class=\"keyword\">mov </span>   (%rax),%eax</span><br><span class=\"line\">  <span class=\"number\">400523</span>:       <span class=\"number\">89</span> <span class=\"built_in\">d6</span>                   <span class=\"keyword\">mov </span>   %edx,%esi</span><br><span class=\"line\">  <span class=\"number\">400525</span>:       <span class=\"number\">89</span> <span class=\"built_in\">c7</span>                   <span class=\"keyword\">mov </span>   %eax,%edi</span><br><span class=\"line\">  <span class=\"number\">400527</span>:       e8 aa ff ff ff          callq  <span class=\"number\">4004</span><span class=\"built_in\">d6</span> &lt;_Z9main_funcii&gt;</span><br><span class=\"line\">  <span class=\"number\">40052</span>c:       <span class=\"number\">01</span> <span class=\"number\">45</span> fc                <span class=\"keyword\">add </span>   %eax,-<span class=\"number\">0x4</span>(%rbp)</span><br><span class=\"line\">  <span class=\"number\">40052</span>f:       <span class=\"number\">8</span>b <span class=\"number\">45</span> fc                <span class=\"keyword\">mov </span>   -<span class=\"number\">0x4</span>(%rbp),%eax</span><br><span class=\"line\">  <span class=\"number\">400532</span>:       <span class=\"built_in\">c9</span>                      leaveq </span><br><span class=\"line\">  <span class=\"number\">400533</span>:       <span class=\"built_in\">c3</span>                      retq   </span><br><span class=\"line\">  <span class=\"number\">400534</span>:       <span class=\"number\">66</span> <span class=\"number\">2</span>e <span class=\"number\">0</span>f <span class=\"number\">1</span>f <span class=\"number\">84</span> <span class=\"number\">00</span> <span class=\"number\">00</span>    <span class=\"keyword\">nopw </span>  %cs:<span class=\"number\">0x0</span>(%rax,%rax,<span class=\"number\">1</span>)</span><br><span class=\"line\">  <span class=\"number\">40053</span>b:       <span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">00</span> </span><br><span class=\"line\">  <span class=\"number\">40053</span>e:       <span class=\"number\">66</span> <span class=\"number\">90</span>                   xchg   %ax,%ax</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">0000000000400540</span> &lt;__libc_csu_init&gt;:</span><br><span class=\"line\">  <span class=\"number\">400540</span>:       <span class=\"number\">41</span> <span class=\"number\">57</span>                   <span class=\"keyword\">push </span>  %<span class=\"built_in\">r15</span></span><br><span class=\"line\">  <span class=\"number\">400542</span>:       <span class=\"number\">41</span> <span class=\"number\">56</span>                   <span class=\"keyword\">push </span>  %<span class=\"built_in\">r14</span></span><br><span class=\"line\">  <span class=\"number\">400544</span>:       <span class=\"number\">49</span> <span class=\"number\">89</span> <span class=\"built_in\">d7</span>                <span class=\"keyword\">mov </span>   %rdx,%<span class=\"built_in\">r15</span></span><br><span class=\"line\">  <span class=\"number\">400547</span>:       <span class=\"number\">41</span> <span class=\"number\">55</span>                   <span class=\"keyword\">push </span>  %<span class=\"built_in\">r13</span></span><br><span class=\"line\">  <span class=\"number\">400549</span>:       <span class=\"number\">41</span> <span class=\"number\">54</span>                   <span class=\"keyword\">push </span>  %<span class=\"built_in\">r12</span></span><br><span class=\"line\">  <span class=\"number\">40054</span>b:       <span class=\"number\">4</span>c <span class=\"number\">8</span>d <span class=\"number\">25</span> <span class=\"built_in\">c6</span> <span class=\"number\">08</span> <span class=\"number\">20</span> <span class=\"number\">00</span>    lea    <span class=\"number\">0x2008c6</span>(%rip),%<span class=\"built_in\">r12</span>        # <span class=\"number\">600</span>e18 &lt;__frame_dummy_init_array_entry&gt;</span><br><span class=\"line\">  <span class=\"number\">400552</span>:       <span class=\"number\">55</span>                      <span class=\"keyword\">push </span>  %rbp</span><br><span class=\"line\">  <span class=\"number\">400553</span>:       <span class=\"number\">48</span> <span class=\"number\">8</span>d <span class=\"number\">2</span>d <span class=\"built_in\">c6</span> <span class=\"number\">08</span> <span class=\"number\">20</span> <span class=\"number\">00</span>    lea    <span class=\"number\">0x2008c6</span>(%rip),%rbp        # <span class=\"number\">600</span>e20 &lt;__init_array_end&gt;</span><br><span class=\"line\">  <span class=\"number\">40055</span>a:       <span class=\"number\">53</span>                      <span class=\"keyword\">push </span>  %rbx</span><br><span class=\"line\">  <span class=\"number\">40055</span>b:       <span class=\"number\">41</span> <span class=\"number\">89</span> fd                <span class=\"keyword\">mov </span>   %edi,%r13d</span><br><span class=\"line\">  <span class=\"number\">40055</span>e:       <span class=\"number\">49</span> <span class=\"number\">89</span> <span class=\"built_in\">f6</span>                <span class=\"keyword\">mov </span>   %rsi,%<span class=\"built_in\">r14</span></span><br><span class=\"line\">  <span class=\"number\">400561</span>:       <span class=\"number\">4</span>c <span class=\"number\">29</span> e5                <span class=\"keyword\">sub </span>   %<span class=\"built_in\">r12</span>,%rbp</span><br><span class=\"line\">  <span class=\"number\">400564</span>:       <span class=\"number\">48</span> <span class=\"number\">83</span> ec <span class=\"number\">08</span>             <span class=\"keyword\">sub </span>   <span class=\"number\">$0x8</span>,%rsp</span><br><span class=\"line\">  <span class=\"number\">400568</span>:       <span class=\"number\">48</span> <span class=\"built_in\">c1</span> fd <span class=\"number\">03</span>             sar    <span class=\"number\">$0x3</span>,%rbp</span><br><span class=\"line\">  <span class=\"number\">40056</span>c:       e8 <span class=\"number\">47</span> fe ff ff          callq  <span class=\"number\">4003</span>b8 &lt;_init&gt;</span><br><span class=\"line\">  <span class=\"number\">400571</span>:       <span class=\"number\">48</span> <span class=\"number\">85</span> ed                test   %rbp,%rbp</span><br><span class=\"line\">  <span class=\"number\">400574</span>:       <span class=\"number\">74</span> <span class=\"number\">20</span>                   je     <span class=\"number\">400596</span> &lt;__libc_csu_init+<span class=\"number\">0x56</span>&gt;</span><br><span class=\"line\">  <span class=\"number\">400576</span>:       <span class=\"number\">31</span> db                   xor    %ebx,%ebx</span><br><span class=\"line\">  <span class=\"number\">400578</span>:       <span class=\"number\">0</span>f <span class=\"number\">1</span>f <span class=\"number\">84</span> <span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">00</span>    <span class=\"keyword\">nopl </span>  <span class=\"number\">0x0</span>(%rax,%rax,<span class=\"number\">1</span>)</span><br><span class=\"line\">  <span class=\"number\">40057</span>f:       <span class=\"number\">00</span> </span><br><span class=\"line\">  <span class=\"number\">400580</span>:       <span class=\"number\">4</span>c <span class=\"number\">89</span> fa                <span class=\"keyword\">mov </span>   %<span class=\"built_in\">r15</span>,%rdx</span><br><span class=\"line\">  <span class=\"number\">400583</span>:       <span class=\"number\">4</span>c <span class=\"number\">89</span> <span class=\"built_in\">f6</span>                <span class=\"keyword\">mov </span>   %<span class=\"built_in\">r14</span>,%rsi</span><br><span class=\"line\">  <span class=\"number\">400586</span>:       <span class=\"number\">44</span> <span class=\"number\">89</span> ef                <span class=\"keyword\">mov </span>   %r13d,%edi</span><br><span class=\"line\">  <span class=\"number\">400589</span>:       <span class=\"number\">41</span> ff <span class=\"number\">14</span> dc             callq  *(%<span class=\"built_in\">r12</span>,%rbx,<span class=\"number\">8</span>)</span><br><span class=\"line\">  <span class=\"number\">40058</span>d:       <span class=\"number\">48</span> <span class=\"number\">83</span> <span class=\"built_in\">c3</span> <span class=\"number\">01</span>             <span class=\"keyword\">add </span>   <span class=\"number\">$0x1</span>,%rbx</span><br><span class=\"line\">  <span class=\"number\">400591</span>:       <span class=\"number\">48</span> <span class=\"number\">39</span> dd                <span class=\"keyword\">cmp </span>   %rbx,%rbp</span><br><span class=\"line\">  <span class=\"number\">400594</span>:       <span class=\"number\">75</span> ea                   jne    <span class=\"number\">400580</span> &lt;__libc_csu_init+<span class=\"number\">0x40</span>&gt;</span><br><span class=\"line\">  <span class=\"number\">400596</span>:       <span class=\"number\">48</span> <span class=\"number\">83</span> <span class=\"built_in\">c4</span> <span class=\"number\">08</span>             <span class=\"keyword\">add </span>   <span class=\"number\">$0x8</span>,%rsp</span><br><span class=\"line\">  <span class=\"number\">40059</span>a:       <span class=\"number\">5</span>b                      <span class=\"keyword\">pop </span>   %rbx</span><br><span class=\"line\">  <span class=\"number\">40059</span>b:       <span class=\"number\">5</span>d                      <span class=\"keyword\">pop </span>   %rbp</span><br><span class=\"line\">  <span class=\"number\">40059</span>c:       <span class=\"number\">41</span> <span class=\"number\">5</span>c                   <span class=\"keyword\">pop </span>   %<span class=\"built_in\">r12</span></span><br><span class=\"line\">  <span class=\"number\">40059</span>e:       <span class=\"number\">41</span> <span class=\"number\">5</span>d                   <span class=\"keyword\">pop </span>   %<span class=\"built_in\">r13</span></span><br><span class=\"line\">  <span class=\"number\">4005</span>a0:       <span class=\"number\">41</span> <span class=\"number\">5</span>e                   <span class=\"keyword\">pop </span>   %<span class=\"built_in\">r14</span></span><br><span class=\"line\">  <span class=\"number\">4005</span><span class=\"built_in\">a2</span>:       <span class=\"number\">41</span> <span class=\"number\">5</span>f                   <span class=\"keyword\">pop </span>   %<span class=\"built_in\">r15</span></span><br><span class=\"line\">  <span class=\"number\">4005</span><span class=\"built_in\">a4</span>:       <span class=\"built_in\">c3</span>                      retq   </span><br><span class=\"line\">  <span class=\"number\">4005</span>a5:       <span class=\"number\">90</span>                      <span class=\"keyword\">nop</span></span><br><span class=\"line\"><span class=\"keyword\"> </span> <span class=\"number\">4005</span>a6:       <span class=\"number\">66</span> <span class=\"number\">2</span>e <span class=\"number\">0</span>f <span class=\"number\">1</span>f <span class=\"number\">84</span> <span class=\"number\">00</span> <span class=\"number\">00</span>    <span class=\"keyword\">nopw </span>  %cs:<span class=\"number\">0x0</span>(%rax,%rax,<span class=\"number\">1</span>)</span><br><span class=\"line\">  <span class=\"number\">4005</span>ad:       <span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">00</span> </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">00000000004005</span>b0 &lt;__libc_csu_fini&gt;:</span><br><span class=\"line\">  <span class=\"number\">4005</span>b0:       <span class=\"built_in\">f3</span> <span class=\"built_in\">c3</span>                   repz retq </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"symbol\">Disassembly</span> of section .fini:</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">00000000004005</span>b4 &lt;_fini&gt;:</span><br><span class=\"line\">  <span class=\"number\">4005</span>b4:       <span class=\"number\">48</span> <span class=\"number\">83</span> ec <span class=\"number\">08</span>             <span class=\"keyword\">sub </span>   <span class=\"number\">$0x8</span>,%rsp</span><br><span class=\"line\">  <span class=\"number\">4005</span>b8:       <span class=\"number\">48</span> <span class=\"number\">83</span> <span class=\"built_in\">c4</span> <span class=\"number\">08</span>             <span class=\"keyword\">add </span>   <span class=\"number\">$0x8</span>,%rsp</span><br><span class=\"line\">  <span class=\"number\">4005</span>bc:       <span class=\"built_in\">c3</span>                      retq</span><br></pre></td></tr></table></figure>\n\n\n<h5 id=\"可执行文件-位置无关的PIE-DYN-版本\"><a href=\"#可执行文件-位置无关的PIE-DYN-版本\" class=\"headerlink\" title=\"可执行文件 (位置无关的PIE(DYN)版本)\"></a>可执行文件 (位置无关的PIE(DYN)版本)</h5><figure class=\"highlight armasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">重定位节 <span class=\"string\">'.rela.dyn'</span> 位于偏移量 <span class=\"number\">0x448</span> 含有 <span class=\"number\">9</span> 个条目：</span><br><span class=\"line\">  偏移量          信息           类型           符号值        符号名称 + 加数</span><br><span class=\"line\"><span class=\"number\">000000200</span>dd8  <span class=\"number\">000000000008</span> R_X86_64_RELATIVE                    <span class=\"number\">660</span></span><br><span class=\"line\"><span class=\"number\">000000200</span>de0  <span class=\"number\">000000000008</span> R_X86_64_RELATIVE                    <span class=\"number\">620</span></span><br><span class=\"line\"><span class=\"number\">000000201020</span>  <span class=\"number\">000000000008</span> R_X86_64_RELATIVE                    <span class=\"number\">201020</span></span><br><span class=\"line\"><span class=\"number\">000000200</span>fd0  <span class=\"number\">000100000006</span> R_X86_64_GLOB_DAT <span class=\"number\">0000000000000000</span> __cxa_finalize<span class=\"comment\">@GLIBC_2.2.5 + 0</span></span><br><span class=\"line\"><span class=\"number\">000000200</span>fd8  <span class=\"number\">000200000006</span> R_X86_64_GLOB_DAT <span class=\"number\">0000000000000000</span> _Jv_RegisterClasses + <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"number\">000000200</span>fe0  <span class=\"number\">000300000006</span> R_X86_64_GLOB_DAT <span class=\"number\">0000000000000000</span> _ITM_deregisterTMClone + <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"number\">000000200</span>fe8  <span class=\"number\">000400000006</span> R_X86_64_GLOB_DAT <span class=\"number\">0000000000000000</span> __libc_start_main<span class=\"comment\">@GLIBC_2.2.5 + 0</span></span><br><span class=\"line\"><span class=\"number\">000000200</span>ff0  <span class=\"number\">000500000006</span> R_X86_64_GLOB_DAT <span class=\"number\">0000000000000000</span> __gmon_start__ + <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"number\">000000200</span>ff8  <span class=\"number\">000600000006</span> R_X86_64_GLOB_DAT <span class=\"number\">0000000000000000</span> _ITM_registerTMCloneTa + <span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"symbol\">The</span> decoding of unwind sections for machine type Advanced Micro Devices X86-<span class=\"number\">64</span> is not currently supported.</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"symbol\">Symbol</span> table <span class=\"string\">'.dynsym'</span> contains <span class=\"number\">7</span> entries:</span><br><span class=\"line\"><span class=\"symbol\">   Num:</span>    Value          Size Type    <span class=\"keyword\">Bind </span>  Vis      Ndx Name</span><br><span class=\"line\">     <span class=\"number\">0</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">0</span> NOTYPE  LOCAL  DEFAULT  UND </span><br><span class=\"line\">     <span class=\"number\">1</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">0</span> FUNC    WEAK   DEFAULT  UND __cxa_finalize<span class=\"comment\">@GLIBC_2.2.5 (2)</span></span><br><span class=\"line\">     <span class=\"number\">2</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">0</span> NOTYPE  WEAK   DEFAULT  UND _Jv_RegisterClasses</span><br><span class=\"line\">     <span class=\"number\">3</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">0</span> NOTYPE  WEAK   DEFAULT  UND _ITM_deregisterTMCloneTab</span><br><span class=\"line\">     <span class=\"number\">4</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">0</span> FUNC    <span class=\"meta\">GLOBAL</span> DEFAULT  UND __libc_start_main<span class=\"comment\">@GLIBC_2.2.5 (2)</span></span><br><span class=\"line\">     <span class=\"number\">5</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">0</span> NOTYPE  WEAK   DEFAULT  UND __gmon_start__</span><br><span class=\"line\">     <span class=\"number\">6</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">0</span> NOTYPE  WEAK   DEFAULT  UND _ITM_registerTMCloneTable</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"symbol\">Symbol</span> table <span class=\"string\">'.symtab'</span> contains <span class=\"number\">70</span> entries:</span><br><span class=\"line\"><span class=\"symbol\">   Num:</span>    Value          Size Type    <span class=\"keyword\">Bind </span>  Vis      Ndx Name</span><br><span class=\"line\">     <span class=\"number\">0</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">0</span> NOTYPE  LOCAL  DEFAULT  UND </span><br><span class=\"line\">     <span class=\"number\">1</span>: <span class=\"number\">0000000000000238</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT    <span class=\"number\">1</span> </span><br><span class=\"line\">     <span class=\"number\">2</span>: <span class=\"number\">0000000000000254</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT    <span class=\"number\">2</span> </span><br><span class=\"line\">     <span class=\"number\">3</span>: <span class=\"number\">0000000000000274</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT    <span class=\"number\">3</span> </span><br><span class=\"line\">     <span class=\"number\">4</span>: <span class=\"number\">0000000000000298</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT    <span class=\"number\">4</span> </span><br><span class=\"line\">     <span class=\"number\">5</span>: <span class=\"number\">00000000000002</span>b8     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT    <span class=\"number\">5</span> </span><br><span class=\"line\">     <span class=\"number\">6</span>: <span class=\"number\">0000000000000360</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT    <span class=\"number\">6</span> </span><br><span class=\"line\">     <span class=\"number\">7</span>: <span class=\"number\">0000000000000418</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT    <span class=\"number\">7</span> </span><br><span class=\"line\">     <span class=\"number\">8</span>: <span class=\"number\">0000000000000428</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT    <span class=\"number\">8</span> </span><br><span class=\"line\">     <span class=\"number\">9</span>: <span class=\"number\">0000000000000448</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT    <span class=\"number\">9</span> </span><br><span class=\"line\">    <span class=\"number\">10</span>: <span class=\"number\">0000000000000520</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT   <span class=\"number\">10</span> </span><br><span class=\"line\">    <span class=\"number\">11</span>: <span class=\"number\">0000000000000540</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT   <span class=\"number\">11</span> </span><br><span class=\"line\">    <span class=\"number\">12</span>: <span class=\"number\">0000000000000550</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT   <span class=\"number\">12</span> </span><br><span class=\"line\">    <span class=\"number\">13</span>: <span class=\"number\">0000000000000560</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT   <span class=\"number\">13</span> </span><br><span class=\"line\">    <span class=\"number\">14</span>: <span class=\"number\">0000000000000764</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT   <span class=\"number\">14</span> </span><br><span class=\"line\">    <span class=\"number\">15</span>: <span class=\"number\">0000000000000770</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT   <span class=\"number\">15</span> </span><br><span class=\"line\">    <span class=\"number\">16</span>: <span class=\"number\">0000000000000778</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT   <span class=\"number\">16</span> </span><br><span class=\"line\">    <span class=\"number\">17</span>: <span class=\"number\">00000000000007</span><span class=\"built_in\">c0</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT   <span class=\"number\">17</span> </span><br><span class=\"line\">    <span class=\"number\">18</span>: <span class=\"number\">0000000000200</span>dd8     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT   <span class=\"number\">18</span> </span><br><span class=\"line\">    <span class=\"number\">19</span>: <span class=\"number\">0000000000200</span>de0     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT   <span class=\"number\">19</span> </span><br><span class=\"line\">    <span class=\"number\">20</span>: <span class=\"number\">0000000000200</span>de8     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT   <span class=\"number\">20</span> </span><br><span class=\"line\">    <span class=\"number\">21</span>: <span class=\"number\">0000000000200</span>df0     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT   <span class=\"number\">21</span> </span><br><span class=\"line\">    <span class=\"number\">22</span>: <span class=\"number\">0000000000200</span>fd0     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT   <span class=\"number\">22</span> </span><br><span class=\"line\">    <span class=\"number\">23</span>: <span class=\"number\">0000000000201000</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT   <span class=\"number\">23</span> </span><br><span class=\"line\">    <span class=\"number\">24</span>: <span class=\"number\">0000000000201018</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT   <span class=\"number\">24</span> </span><br><span class=\"line\">    <span class=\"number\">25</span>: <span class=\"number\">000000000020102</span>c     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT   <span class=\"number\">25</span> </span><br><span class=\"line\">    <span class=\"number\">26</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">0</span> SECTION LOCAL  DEFAULT   <span class=\"number\">26</span> </span><br><span class=\"line\">    <span class=\"number\">27</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">0</span> FILE    LOCAL  DEFAULT  ABS crtstuff.c</span><br><span class=\"line\">    <span class=\"number\">28</span>: <span class=\"number\">0000000000200</span>de8     <span class=\"number\">0</span> OBJECT  LOCAL  DEFAULT   <span class=\"number\">20</span> __JCR_LIST__</span><br><span class=\"line\">    <span class=\"number\">29</span>: <span class=\"number\">0000000000000590</span>     <span class=\"number\">0</span> FUNC    LOCAL  DEFAULT   <span class=\"number\">13</span> deregister_tm_clones</span><br><span class=\"line\">    <span class=\"number\">30</span>: <span class=\"number\">00000000000005</span><span class=\"built_in\">d0</span>     <span class=\"number\">0</span> FUNC    LOCAL  DEFAULT   <span class=\"number\">13</span> register_tm_clones</span><br><span class=\"line\">    <span class=\"number\">31</span>: <span class=\"number\">0000000000000620</span>     <span class=\"number\">0</span> FUNC    LOCAL  DEFAULT   <span class=\"number\">13</span> __do_global_dtors_aux</span><br><span class=\"line\">    <span class=\"number\">32</span>: <span class=\"number\">000000000020102</span>c     <span class=\"number\">1</span> OBJECT  LOCAL  DEFAULT   <span class=\"number\">25</span> completed.<span class=\"number\">6972</span></span><br><span class=\"line\">    <span class=\"number\">33</span>: <span class=\"number\">0000000000200</span>de0     <span class=\"number\">0</span> OBJECT  LOCAL  DEFAULT   <span class=\"number\">19</span> __do_global_dtors_aux_fin</span><br><span class=\"line\">    <span class=\"number\">34</span>: <span class=\"number\">0000000000000660</span>     <span class=\"number\">0</span> FUNC    LOCAL  DEFAULT   <span class=\"number\">13</span> frame_dummy</span><br><span class=\"line\">    <span class=\"number\">35</span>: <span class=\"number\">0000000000200</span>dd8     <span class=\"number\">0</span> OBJECT  LOCAL  DEFAULT   <span class=\"number\">18</span> __frame_dummy_init_array_</span><br><span class=\"line\">    <span class=\"number\">36</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">0</span> FILE    LOCAL  DEFAULT  ABS test.cpp</span><br><span class=\"line\">    <span class=\"number\">37</span>: <span class=\"number\">0000000000000774</span>     <span class=\"number\">4</span> OBJECT  LOCAL  DEFAULT   <span class=\"number\">15</span> _ZL13g_static_text</span><br><span class=\"line\">    <span class=\"number\">38</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">0</span> FILE    LOCAL  DEFAULT  ABS crtstuff.c</span><br><span class=\"line\">    <span class=\"number\">39</span>: <span class=\"number\">00000000000008</span>e8     <span class=\"number\">0</span> OBJECT  LOCAL  DEFAULT   <span class=\"number\">17</span> __FRAME_END__</span><br><span class=\"line\">    <span class=\"number\">40</span>: <span class=\"number\">0000000000200</span>de8     <span class=\"number\">0</span> OBJECT  LOCAL  DEFAULT   <span class=\"number\">20</span> __JCR_END__</span><br><span class=\"line\">    <span class=\"number\">41</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">0</span> FILE    LOCAL  DEFAULT  ABS </span><br><span class=\"line\">    <span class=\"number\">42</span>: <span class=\"number\">0000000000000778</span>     <span class=\"number\">0</span> NOTYPE  LOCAL  DEFAULT   <span class=\"number\">16</span> __GNU_EH_FRAME_HDR</span><br><span class=\"line\">    <span class=\"number\">43</span>: <span class=\"number\">0000000000200</span>df0     <span class=\"number\">0</span> OBJECT  LOCAL  DEFAULT   <span class=\"number\">21</span> _DYNAMIC</span><br><span class=\"line\">    <span class=\"number\">44</span>: <span class=\"number\">0000000000200</span>de0     <span class=\"number\">0</span> NOTYPE  LOCAL  DEFAULT   <span class=\"number\">18</span> __init_array_end</span><br><span class=\"line\">    <span class=\"number\">45</span>: <span class=\"number\">0000000000200</span>dd8     <span class=\"number\">0</span> NOTYPE  LOCAL  DEFAULT   <span class=\"number\">18</span> __init_array_start</span><br><span class=\"line\">    <span class=\"number\">46</span>: <span class=\"number\">0000000000201000</span>     <span class=\"number\">0</span> OBJECT  LOCAL  DEFAULT   <span class=\"number\">23</span> _GLOBAL_OFFSET_TABLE_</span><br><span class=\"line\">    <span class=\"number\">47</span>: <span class=\"number\">0000000000201028</span>     <span class=\"number\">4</span> OBJECT  <span class=\"meta\">GLOBAL</span> DEFAULT   <span class=\"number\">24</span> g_static_data</span><br><span class=\"line\">    <span class=\"number\">48</span>: <span class=\"number\">000000000020102</span>c     <span class=\"number\">0</span> NOTYPE  <span class=\"meta\">GLOBAL</span> DEFAULT   <span class=\"number\">24</span> _edata</span><br><span class=\"line\">    <span class=\"number\">49</span>: <span class=\"number\">0000000000201018</span>     <span class=\"number\">0</span> NOTYPE  WEAK   DEFAULT   <span class=\"number\">24</span> data_start</span><br><span class=\"line\">    <span class=\"number\">50</span>: <span class=\"number\">0000000000000770</span>     <span class=\"number\">4</span> OBJECT  <span class=\"meta\">GLOBAL</span> DEFAULT   <span class=\"number\">15</span> _IO_stdin_used</span><br><span class=\"line\">    <span class=\"number\">51</span>: <span class=\"number\">0000000000000690</span>    <span class=\"number\">25</span> FUNC    <span class=\"meta\">GLOBAL</span> DEFAULT   <span class=\"number\">13</span> _Z9main_funcii</span><br><span class=\"line\">    <span class=\"number\">52</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">0</span> FUNC    WEAK   DEFAULT  UND __cxa_finalize<span class=\"comment\">@@GLIBC_2.2</span></span><br><span class=\"line\">    <span class=\"number\">53</span>: <span class=\"number\">00000000000006</span>a9    <span class=\"number\">69</span> FUNC    <span class=\"meta\">GLOBAL</span> DEFAULT   <span class=\"number\">13</span> main</span><br><span class=\"line\">    <span class=\"number\">54</span>: <span class=\"number\">0000000000201020</span>     <span class=\"number\">0</span> OBJECT  <span class=\"meta\">GLOBAL</span> HIDDEN    <span class=\"number\">24</span> __dso_handle</span><br><span class=\"line\">    <span class=\"number\">55</span>: <span class=\"number\">0000000000000764</span>     <span class=\"number\">0</span> FUNC    <span class=\"meta\">GLOBAL</span> DEFAULT   <span class=\"number\">14</span> _fini</span><br><span class=\"line\">    <span class=\"number\">56</span>: <span class=\"number\">0000000000000560</span>    <span class=\"number\">43</span> FUNC    <span class=\"meta\">GLOBAL</span> DEFAULT   <span class=\"number\">13</span> _start</span><br><span class=\"line\">    <span class=\"number\">57</span>: <span class=\"number\">0000000000000520</span>     <span class=\"number\">0</span> FUNC    <span class=\"meta\">GLOBAL</span> DEFAULT   <span class=\"number\">10</span> _init</span><br><span class=\"line\">    <span class=\"number\">58</span>: <span class=\"number\">0000000000201030</span>     <span class=\"number\">0</span> OBJECT  <span class=\"meta\">GLOBAL</span> HIDDEN    <span class=\"number\">24</span> __TMC_END__</span><br><span class=\"line\">    <span class=\"number\">59</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">0</span> NOTYPE  WEAK   DEFAULT  UND _Jv_RegisterClasses</span><br><span class=\"line\">    <span class=\"number\">60</span>: <span class=\"number\">0000000000201018</span>     <span class=\"number\">0</span> NOTYPE  <span class=\"meta\">GLOBAL</span> DEFAULT   <span class=\"number\">24</span> __data_start</span><br><span class=\"line\">    <span class=\"number\">61</span>: <span class=\"number\">0000000000201038</span>     <span class=\"number\">0</span> NOTYPE  <span class=\"meta\">GLOBAL</span> DEFAULT   <span class=\"number\">25</span> _<span class=\"meta\">end</span></span><br><span class=\"line\">    <span class=\"number\">62</span>: <span class=\"number\">000000000020102</span>c     <span class=\"number\">0</span> NOTYPE  <span class=\"meta\">GLOBAL</span> DEFAULT   <span class=\"number\">25</span> __bss_start</span><br><span class=\"line\">    <span class=\"number\">63</span>: <span class=\"number\">00000000000006</span><span class=\"built_in\">f0</span>   <span class=\"number\">101</span> FUNC    <span class=\"meta\">GLOBAL</span> DEFAULT   <span class=\"number\">13</span> __libc_csu_init</span><br><span class=\"line\">    <span class=\"number\">64</span>: <span class=\"number\">0000000000201030</span>     <span class=\"number\">4</span> OBJECT  <span class=\"meta\">GLOBAL</span> DEFAULT   <span class=\"number\">25</span> g_static_bss</span><br><span class=\"line\">    <span class=\"number\">65</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">0</span> NOTYPE  WEAK   DEFAULT  UND _ITM_deregisterTMCloneTab</span><br><span class=\"line\">    <span class=\"number\">66</span>: <span class=\"number\">0000000000000760</span>     <span class=\"number\">2</span> FUNC    <span class=\"meta\">GLOBAL</span> DEFAULT   <span class=\"number\">13</span> __libc_csu_fini</span><br><span class=\"line\">    <span class=\"number\">67</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">0</span> FUNC    <span class=\"meta\">GLOBAL</span> DEFAULT  UND __libc_start_main<span class=\"comment\">@@GLIBC_</span></span><br><span class=\"line\">    <span class=\"number\">68</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">0</span> NOTYPE  WEAK   DEFAULT  UND __gmon_start__</span><br><span class=\"line\">    <span class=\"number\">69</span>: <span class=\"number\">0000000000000000</span>     <span class=\"number\">0</span> NOTYPE  WEAK   DEFAULT  UND _ITM_registerTMCloneTable</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"symbol\">.text</span></span><br><span class=\"line\"><span class=\"number\">0000000000000520</span> &lt;_init&gt;:</span><br><span class=\"line\"> <span class=\"number\">520</span>:   <span class=\"number\">48</span> <span class=\"number\">83</span> ec <span class=\"number\">08</span>             <span class=\"keyword\">sub </span>   <span class=\"number\">$0x8</span>,%rsp</span><br><span class=\"line\"> <span class=\"number\">524</span>:   <span class=\"number\">48</span> <span class=\"number\">8</span>b <span class=\"number\">05</span> <span class=\"built_in\">c5</span> <span class=\"number\">0</span>a <span class=\"number\">20</span> <span class=\"number\">00</span>    <span class=\"keyword\">mov </span>   <span class=\"number\">0x200ac5</span>(%rip),%rax        # <span class=\"number\">200</span>ff0 &lt;__gmon_start__&gt;</span><br><span class=\"line\"> <span class=\"number\">52</span>b:   <span class=\"number\">48</span> <span class=\"number\">85</span> <span class=\"built_in\">c0</span>                test   %rax,%rax</span><br><span class=\"line\"> <span class=\"number\">52</span>e:   <span class=\"number\">74</span> <span class=\"number\">02</span>                   je     <span class=\"number\">532</span> &lt;_init+<span class=\"number\">0x12</span>&gt;</span><br><span class=\"line\"> <span class=\"number\">530</span>:   ff <span class=\"built_in\">d0</span>                   callq  *%rax</span><br><span class=\"line\"> <span class=\"number\">532</span>:   <span class=\"number\">48</span> <span class=\"number\">83</span> <span class=\"built_in\">c4</span> <span class=\"number\">08</span>             <span class=\"keyword\">add </span>   <span class=\"number\">$0x8</span>,%rsp</span><br><span class=\"line\"> <span class=\"number\">536</span>:   <span class=\"built_in\">c3</span>                      retq   </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"symbol\">Disassembly</span> of section .plt:</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">0000000000000540</span> &lt;.plt&gt;:</span><br><span class=\"line\"> <span class=\"number\">540</span>:   ff <span class=\"number\">35</span> <span class=\"built_in\">c2</span> <span class=\"number\">0</span>a <span class=\"number\">20</span> <span class=\"number\">00</span>       <span class=\"keyword\">pushq </span> <span class=\"number\">0x200ac2</span>(%rip)        # <span class=\"number\">201008</span> &lt;_GLOBAL_OFFSET_TABLE_+<span class=\"number\">0x8</span>&gt;</span><br><span class=\"line\"> <span class=\"number\">546</span>:   ff <span class=\"number\">25</span> <span class=\"built_in\">c4</span> <span class=\"number\">0</span>a <span class=\"number\">20</span> <span class=\"number\">00</span>       jmpq   *<span class=\"number\">0x200ac4</span>(%rip)        # <span class=\"number\">201010</span> &lt;_GLOBAL_OFFSET_TABLE_+<span class=\"number\">0x10</span>&gt;</span><br><span class=\"line\"> <span class=\"number\">54</span>c:   <span class=\"number\">0</span>f <span class=\"number\">1</span>f <span class=\"number\">40</span> <span class=\"number\">00</span>             <span class=\"keyword\">nopl </span>  <span class=\"number\">0x0</span>(%rax)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"symbol\">Disassembly</span> of section .plt.got:</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">0000000000000550</span> &lt;.plt.got&gt;:</span><br><span class=\"line\"> <span class=\"number\">550</span>:   ff <span class=\"number\">25</span> <span class=\"number\">7</span>a <span class=\"number\">0</span>a <span class=\"number\">20</span> <span class=\"number\">00</span>       jmpq   *<span class=\"number\">0x200a7a</span>(%rip)        # <span class=\"number\">200</span>fd0 &lt;__cxa_finalize<span class=\"comment\">@GLIBC_2.2.5&gt;</span></span><br><span class=\"line\"> <span class=\"number\">556</span>:   <span class=\"number\">66</span> <span class=\"number\">90</span>                   xchg   %ax,%ax</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"symbol\">Disassembly</span> of section <span class=\"meta\">.text</span>:</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">0000000000000560</span> &lt;_start&gt;:</span><br><span class=\"line\"> <span class=\"number\">560</span>:   <span class=\"number\">31</span> ed                   xor    %ebp,%ebp</span><br><span class=\"line\"> <span class=\"number\">562</span>:   <span class=\"number\">49</span> <span class=\"number\">89</span> <span class=\"built_in\">d1</span>                <span class=\"keyword\">mov </span>   %rdx,%<span class=\"built_in\">r9</span></span><br><span class=\"line\"> <span class=\"number\">565</span>:   <span class=\"number\">5</span>e                      <span class=\"keyword\">pop </span>   %rsi</span><br><span class=\"line\"> <span class=\"number\">566</span>:   <span class=\"number\">48</span> <span class=\"number\">89</span> e2                <span class=\"keyword\">mov </span>   %rsp,%rdx</span><br><span class=\"line\"> <span class=\"number\">569</span>:   <span class=\"number\">48</span> <span class=\"number\">83</span> e4 <span class=\"built_in\">f0</span>             <span class=\"keyword\">and </span>   <span class=\"number\">$0xfffffffffffffff0</span>,%rsp</span><br><span class=\"line\"> <span class=\"number\">56</span>d:   <span class=\"number\">50</span>                      <span class=\"keyword\">push </span>  %rax</span><br><span class=\"line\"> <span class=\"number\">56</span>e:   <span class=\"number\">54</span>                      <span class=\"keyword\">push </span>  %rsp</span><br><span class=\"line\"> <span class=\"number\">56</span>f:   <span class=\"number\">4</span>c <span class=\"number\">8</span>d <span class=\"number\">05</span> ea <span class=\"number\">01</span> <span class=\"number\">00</span> <span class=\"number\">00</span>    lea    <span class=\"number\">0x1ea</span>(%rip),%<span class=\"built_in\">r8</span>        # <span class=\"number\">760</span> &lt;__libc_csu_fini&gt;</span><br><span class=\"line\"> <span class=\"number\">576</span>:   <span class=\"number\">48</span> <span class=\"number\">8</span>d <span class=\"number\">0</span>d <span class=\"number\">73</span> <span class=\"number\">01</span> <span class=\"number\">00</span> <span class=\"number\">00</span>    lea    <span class=\"number\">0x173</span>(%rip),%rcx        # <span class=\"number\">6</span><span class=\"built_in\">f0</span> &lt;__libc_csu_init&gt;</span><br><span class=\"line\"> <span class=\"number\">57</span>d:   <span class=\"number\">48</span> <span class=\"number\">8</span>d <span class=\"number\">3</span>d <span class=\"number\">25</span> <span class=\"number\">01</span> <span class=\"number\">00</span> <span class=\"number\">00</span>    lea    <span class=\"number\">0x125</span>(%rip),%rdi        # <span class=\"number\">6</span>a9 &lt;main&gt;</span><br><span class=\"line\"> <span class=\"number\">584</span>:   ff <span class=\"number\">15</span> <span class=\"number\">5</span>e <span class=\"number\">0</span>a <span class=\"number\">20</span> <span class=\"number\">00</span>       callq  *<span class=\"number\">0x200a5e</span>(%rip)        # <span class=\"number\">200</span>fe8 &lt;__libc_start_main<span class=\"comment\">@GLIBC_2.2.5&gt;</span></span><br><span class=\"line\"> <span class=\"number\">58</span>a:   <span class=\"built_in\">f4</span>                      hlt    </span><br><span class=\"line\"> <span class=\"number\">58</span>b:   <span class=\"number\">0</span>f <span class=\"number\">1</span>f <span class=\"number\">44</span> <span class=\"number\">00</span> <span class=\"number\">00</span>          <span class=\"keyword\">nopl </span>  <span class=\"number\">0x0</span>(%rax,%rax,<span class=\"number\">1</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">0000000000000590</span> &lt;deregister_tm_clones&gt;:</span><br><span class=\"line\"> <span class=\"number\">590</span>:   <span class=\"number\">48</span> <span class=\"number\">8</span>d <span class=\"number\">3</span>d <span class=\"number\">99</span> <span class=\"number\">0</span>a <span class=\"number\">20</span> <span class=\"number\">00</span>    lea    <span class=\"number\">0x200a99</span>(%rip),%rdi        # <span class=\"number\">201030</span> &lt;__TMC_END__&gt;</span><br><span class=\"line\"> <span class=\"number\">597</span>:   <span class=\"number\">48</span> <span class=\"number\">8</span>d <span class=\"number\">05</span> <span class=\"number\">99</span> <span class=\"number\">0</span>a <span class=\"number\">20</span> <span class=\"number\">00</span>    lea    <span class=\"number\">0x200a99</span>(%rip),%rax        # <span class=\"number\">201037</span> &lt;__TMC_END__+<span class=\"number\">0x7</span>&gt;</span><br><span class=\"line\"> <span class=\"number\">59</span>e:   <span class=\"number\">55</span>                      <span class=\"keyword\">push </span>  %rbp</span><br><span class=\"line\"> <span class=\"number\">59</span>f:   <span class=\"number\">48</span> <span class=\"number\">29</span> f8                <span class=\"keyword\">sub </span>   %rdi,%rax</span><br><span class=\"line\"> <span class=\"number\">5</span><span class=\"built_in\">a2</span>:   <span class=\"number\">48</span> <span class=\"number\">89</span> e5                <span class=\"keyword\">mov </span>   %rsp,%rbp</span><br><span class=\"line\"> <span class=\"number\">5</span>a5:   <span class=\"number\">48</span> <span class=\"number\">83</span> f8 <span class=\"number\">0</span>e             <span class=\"keyword\">cmp </span>   <span class=\"number\">$0xe</span>,%rax</span><br><span class=\"line\"> <span class=\"number\">5</span>a9:   <span class=\"number\">76</span> <span class=\"number\">15</span>                   jbe    <span class=\"number\">5</span><span class=\"built_in\">c0</span> &lt;deregister_tm_clones+<span class=\"number\">0x30</span>&gt;</span><br><span class=\"line\"> <span class=\"number\">5</span>ab:   <span class=\"number\">48</span> <span class=\"number\">8</span>b <span class=\"number\">05</span> <span class=\"number\">2</span>e <span class=\"number\">0</span>a <span class=\"number\">20</span> <span class=\"number\">00</span>    <span class=\"keyword\">mov </span>   <span class=\"number\">0x200a2e</span>(%rip),%rax        # <span class=\"number\">200</span>fe0 &lt;_ITM_deregisterTMCloneTable&gt;</span><br><span class=\"line\"> <span class=\"number\">5</span>b2:   <span class=\"number\">48</span> <span class=\"number\">85</span> <span class=\"built_in\">c0</span>                test   %rax,%rax</span><br><span class=\"line\"> <span class=\"number\">5</span>b5:   <span class=\"number\">74</span> <span class=\"number\">09</span>                   je     <span class=\"number\">5</span><span class=\"built_in\">c0</span> &lt;deregister_tm_clones+<span class=\"number\">0x30</span>&gt;</span><br><span class=\"line\"> <span class=\"number\">5</span>b7:   <span class=\"number\">5</span>d                      <span class=\"keyword\">pop </span>   %rbp</span><br><span class=\"line\"> <span class=\"number\">5</span>b8:   ff e0                   jmpq   *%rax</span><br><span class=\"line\"> <span class=\"number\">5</span>ba:   <span class=\"number\">66</span> <span class=\"number\">0</span>f <span class=\"number\">1</span>f <span class=\"number\">44</span> <span class=\"number\">00</span> <span class=\"number\">00</span>       <span class=\"keyword\">nopw </span>  <span class=\"number\">0x0</span>(%rax,%rax,<span class=\"number\">1</span>)</span><br><span class=\"line\"> <span class=\"number\">5</span><span class=\"built_in\">c0</span>:   <span class=\"number\">5</span>d                      <span class=\"keyword\">pop </span>   %rbp</span><br><span class=\"line\"> <span class=\"number\">5</span><span class=\"built_in\">c1</span>:   <span class=\"built_in\">c3</span>                      retq   </span><br><span class=\"line\"> <span class=\"number\">5</span><span class=\"built_in\">c2</span>:   <span class=\"number\">0</span>f <span class=\"number\">1</span>f <span class=\"number\">40</span> <span class=\"number\">00</span>             <span class=\"keyword\">nopl </span>  <span class=\"number\">0x0</span>(%rax)</span><br><span class=\"line\"> <span class=\"number\">5</span><span class=\"built_in\">c6</span>:   <span class=\"number\">66</span> <span class=\"number\">2</span>e <span class=\"number\">0</span>f <span class=\"number\">1</span>f <span class=\"number\">84</span> <span class=\"number\">00</span> <span class=\"number\">00</span>    <span class=\"keyword\">nopw </span>  %cs:<span class=\"number\">0x0</span>(%rax,%rax,<span class=\"number\">1</span>)</span><br><span class=\"line\"> <span class=\"number\">5</span>cd:   <span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">00</span> </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">00000000000005</span><span class=\"built_in\">d0</span> &lt;register_tm_clones&gt;:</span><br><span class=\"line\"> <span class=\"number\">5</span><span class=\"built_in\">d0</span>:   <span class=\"number\">48</span> <span class=\"number\">8</span>d <span class=\"number\">3</span>d <span class=\"number\">59</span> <span class=\"number\">0</span>a <span class=\"number\">20</span> <span class=\"number\">00</span>    lea    <span class=\"number\">0x200a59</span>(%rip),%rdi        # <span class=\"number\">201030</span> &lt;__TMC_END__&gt;</span><br><span class=\"line\"> <span class=\"number\">5</span><span class=\"built_in\">d7</span>:   <span class=\"number\">48</span> <span class=\"number\">8</span>d <span class=\"number\">35</span> <span class=\"number\">52</span> <span class=\"number\">0</span>a <span class=\"number\">20</span> <span class=\"number\">00</span>    lea    <span class=\"number\">0x200a52</span>(%rip),%rsi        # <span class=\"number\">201030</span> &lt;__TMC_END__&gt;</span><br><span class=\"line\"> <span class=\"number\">5</span>de:   <span class=\"number\">55</span>                      <span class=\"keyword\">push </span>  %rbp</span><br><span class=\"line\"> <span class=\"number\">5</span>df:   <span class=\"number\">48</span> <span class=\"number\">29</span> fe                <span class=\"keyword\">sub </span>   %rdi,%rsi</span><br><span class=\"line\"> <span class=\"number\">5</span>e2:   <span class=\"number\">48</span> <span class=\"number\">89</span> e5                <span class=\"keyword\">mov </span>   %rsp,%rbp</span><br><span class=\"line\"> <span class=\"number\">5</span>e5:   <span class=\"number\">48</span> <span class=\"built_in\">c1</span> fe <span class=\"number\">03</span>             sar    <span class=\"number\">$0x3</span>,%rsi</span><br><span class=\"line\"> <span class=\"number\">5</span>e9:   <span class=\"number\">48</span> <span class=\"number\">89</span> <span class=\"built_in\">f0</span>                <span class=\"keyword\">mov </span>   %rsi,%rax</span><br><span class=\"line\"> <span class=\"number\">5</span>ec:   <span class=\"number\">48</span> <span class=\"built_in\">c1</span> e8 <span class=\"number\">3</span>f             shr    <span class=\"number\">$0x3f</span>,%rax</span><br><span class=\"line\"> <span class=\"number\">5</span><span class=\"built_in\">f0</span>:   <span class=\"number\">48</span> <span class=\"number\">01</span> <span class=\"built_in\">c6</span>                <span class=\"keyword\">add </span>   %rax,%rsi</span><br><span class=\"line\"> <span class=\"number\">5</span><span class=\"built_in\">f3</span>:   <span class=\"number\">48</span> <span class=\"built_in\">d1</span> fe                sar    %rsi</span><br><span class=\"line\"> <span class=\"number\">5</span><span class=\"built_in\">f6</span>:   <span class=\"number\">74</span> <span class=\"number\">18</span>                   je     <span class=\"number\">610</span> &lt;register_tm_clones+<span class=\"number\">0x40</span>&gt;</span><br><span class=\"line\"> <span class=\"number\">5</span>f8:   <span class=\"number\">48</span> <span class=\"number\">8</span>b <span class=\"number\">05</span> f9 <span class=\"number\">09</span> <span class=\"number\">20</span> <span class=\"number\">00</span>    <span class=\"keyword\">mov </span>   <span class=\"number\">0x2009f9</span>(%rip),%rax        # <span class=\"number\">200</span>ff8 &lt;_ITM_registerTMCloneTable&gt;</span><br><span class=\"line\"> <span class=\"number\">5</span>ff:   <span class=\"number\">48</span> <span class=\"number\">85</span> <span class=\"built_in\">c0</span>                test   %rax,%rax</span><br><span class=\"line\"> <span class=\"number\">602</span>:   <span class=\"number\">74</span> <span class=\"number\">0</span>c                   je     <span class=\"number\">610</span> &lt;register_tm_clones+<span class=\"number\">0x40</span>&gt;</span><br><span class=\"line\"> <span class=\"number\">604</span>:   <span class=\"number\">5</span>d                      <span class=\"keyword\">pop </span>   %rbp</span><br><span class=\"line\"> <span class=\"number\">605</span>:   ff e0                   jmpq   *%rax</span><br><span class=\"line\"> <span class=\"number\">607</span>:   <span class=\"number\">66</span> <span class=\"number\">0</span>f <span class=\"number\">1</span>f <span class=\"number\">84</span> <span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">00</span>    <span class=\"keyword\">nopw </span>  <span class=\"number\">0x0</span>(%rax,%rax,<span class=\"number\">1</span>)</span><br><span class=\"line\"> <span class=\"number\">60</span>e:   <span class=\"number\">00</span> <span class=\"number\">00</span> </span><br><span class=\"line\"> <span class=\"number\">610</span>:   <span class=\"number\">5</span>d                      <span class=\"keyword\">pop </span>   %rbp</span><br><span class=\"line\"> <span class=\"number\">611</span>:   <span class=\"built_in\">c3</span>                      retq   </span><br><span class=\"line\"> <span class=\"number\">612</span>:   <span class=\"number\">0</span>f <span class=\"number\">1</span>f <span class=\"number\">40</span> <span class=\"number\">00</span>             <span class=\"keyword\">nopl </span>  <span class=\"number\">0x0</span>(%rax)</span><br><span class=\"line\"> <span class=\"number\">616</span>:   <span class=\"number\">66</span> <span class=\"number\">2</span>e <span class=\"number\">0</span>f <span class=\"number\">1</span>f <span class=\"number\">84</span> <span class=\"number\">00</span> <span class=\"number\">00</span>    <span class=\"keyword\">nopw </span>  %cs:<span class=\"number\">0x0</span>(%rax,%rax,<span class=\"number\">1</span>)</span><br><span class=\"line\"> <span class=\"number\">61</span>d:   <span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">00</span> </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">0000000000000620</span> &lt;__do_global_dtors_aux&gt;:</span><br><span class=\"line\"> <span class=\"number\">620</span>:   <span class=\"number\">80</span> <span class=\"number\">3</span>d <span class=\"number\">05</span> <span class=\"number\">0</span>a <span class=\"number\">20</span> <span class=\"number\">00</span> <span class=\"number\">00</span>    <span class=\"keyword\">cmpb </span>  <span class=\"number\">$0x0</span>,<span class=\"number\">0x200a05</span>(%rip)        # <span class=\"number\">20102</span>c &lt;_edata&gt;</span><br><span class=\"line\"> <span class=\"number\">627</span>:   <span class=\"number\">75</span> <span class=\"number\">27</span>                   jne    <span class=\"number\">650</span> &lt;__do_global_dtors_aux+<span class=\"number\">0x30</span>&gt;</span><br><span class=\"line\"> <span class=\"number\">629</span>:   <span class=\"number\">48</span> <span class=\"number\">83</span> <span class=\"number\">3</span>d <span class=\"number\">9</span>f <span class=\"number\">09</span> <span class=\"number\">20</span> <span class=\"number\">00</span>    <span class=\"keyword\">cmpq </span>  <span class=\"number\">$0x0</span>,<span class=\"number\">0x20099f</span>(%rip)        # <span class=\"number\">200</span>fd0 &lt;__cxa_finalize<span class=\"comment\">@GLIBC_2.2.5&gt;</span></span><br><span class=\"line\"> <span class=\"number\">630</span>:   <span class=\"number\">00</span> </span><br><span class=\"line\"> <span class=\"number\">631</span>:   <span class=\"number\">55</span>                      <span class=\"keyword\">push </span>  %rbp</span><br><span class=\"line\"> <span class=\"number\">632</span>:   <span class=\"number\">48</span> <span class=\"number\">89</span> e5                <span class=\"keyword\">mov </span>   %rsp,%rbp</span><br><span class=\"line\"> <span class=\"number\">635</span>:   <span class=\"number\">74</span> <span class=\"number\">0</span>c                   je     <span class=\"number\">643</span> &lt;__do_global_dtors_aux+<span class=\"number\">0x23</span>&gt;</span><br><span class=\"line\"> <span class=\"number\">637</span>:   <span class=\"number\">48</span> <span class=\"number\">8</span>b <span class=\"number\">3</span>d e2 <span class=\"number\">09</span> <span class=\"number\">20</span> <span class=\"number\">00</span>    <span class=\"keyword\">mov </span>   <span class=\"number\">0x2009e2</span>(%rip),%rdi        # <span class=\"number\">201020</span> &lt;__dso_handle&gt;</span><br><span class=\"line\"> <span class=\"number\">63</span>e:   e8 <span class=\"number\">0</span>d ff ff ff          callq  <span class=\"number\">550</span> &lt;.plt.got&gt;</span><br><span class=\"line\"> <span class=\"number\">643</span>:   e8 <span class=\"number\">48</span> ff ff ff          callq  <span class=\"number\">590</span> &lt;deregister_tm_clones&gt;</span><br><span class=\"line\"> <span class=\"number\">648</span>:   <span class=\"number\">5</span>d                      <span class=\"keyword\">pop </span>   %rbp</span><br><span class=\"line\"> <span class=\"number\">649</span>:   <span class=\"built_in\">c6</span> <span class=\"number\">05</span> dc <span class=\"number\">09</span> <span class=\"number\">20</span> <span class=\"number\">00</span> <span class=\"number\">01</span>    <span class=\"keyword\">movb </span>  <span class=\"number\">$0x1</span>,<span class=\"number\">0x2009dc</span>(%rip)        # <span class=\"number\">20102</span>c &lt;_edata&gt;</span><br><span class=\"line\"> <span class=\"number\">650</span>:   <span class=\"built_in\">f3</span> <span class=\"built_in\">c3</span>                   repz retq </span><br><span class=\"line\"> <span class=\"number\">652</span>:   <span class=\"number\">0</span>f <span class=\"number\">1</span>f <span class=\"number\">40</span> <span class=\"number\">00</span>             <span class=\"keyword\">nopl </span>  <span class=\"number\">0x0</span>(%rax)</span><br><span class=\"line\"> <span class=\"number\">656</span>:   <span class=\"number\">66</span> <span class=\"number\">2</span>e <span class=\"number\">0</span>f <span class=\"number\">1</span>f <span class=\"number\">84</span> <span class=\"number\">00</span> <span class=\"number\">00</span>    <span class=\"keyword\">nopw </span>  %cs:<span class=\"number\">0x0</span>(%rax,%rax,<span class=\"number\">1</span>)</span><br><span class=\"line\"> <span class=\"number\">65</span>d:   <span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">00</span> </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">0000000000000660</span> &lt;frame_dummy&gt;:</span><br><span class=\"line\"> <span class=\"number\">660</span>:   <span class=\"number\">48</span> <span class=\"number\">8</span>d <span class=\"number\">3</span>d <span class=\"number\">81</span> <span class=\"number\">07</span> <span class=\"number\">20</span> <span class=\"number\">00</span>    lea    <span class=\"number\">0x200781</span>(%rip),%rdi        # <span class=\"number\">200</span>de8 &lt;__JCR_END__&gt;</span><br><span class=\"line\"> <span class=\"number\">667</span>:   <span class=\"number\">48</span> <span class=\"number\">83</span> <span class=\"number\">3</span>f <span class=\"number\">00</span>             <span class=\"keyword\">cmpq </span>  <span class=\"number\">$0x0</span>,(%rdi)</span><br><span class=\"line\"> <span class=\"number\">66</span>b:   <span class=\"number\">75</span> <span class=\"number\">0</span>b                   jne    <span class=\"number\">678</span> &lt;frame_dummy+<span class=\"number\">0x18</span>&gt;</span><br><span class=\"line\"> <span class=\"number\">66</span>d:   e9 <span class=\"number\">5</span>e ff ff ff          jmpq   <span class=\"number\">5</span><span class=\"built_in\">d0</span> &lt;register_tm_clones&gt;</span><br><span class=\"line\"> <span class=\"number\">672</span>:   <span class=\"number\">66</span> <span class=\"number\">0</span>f <span class=\"number\">1</span>f <span class=\"number\">44</span> <span class=\"number\">00</span> <span class=\"number\">00</span>       <span class=\"keyword\">nopw </span>  <span class=\"number\">0x0</span>(%rax,%rax,<span class=\"number\">1</span>)</span><br><span class=\"line\"> <span class=\"number\">678</span>:   <span class=\"number\">48</span> <span class=\"number\">8</span>b <span class=\"number\">05</span> <span class=\"number\">59</span> <span class=\"number\">09</span> <span class=\"number\">20</span> <span class=\"number\">00</span>    <span class=\"keyword\">mov </span>   <span class=\"number\">0x200959</span>(%rip),%rax        # <span class=\"number\">200</span>fd8 &lt;_Jv_RegisterClasses&gt;</span><br><span class=\"line\"> <span class=\"number\">67</span>f:   <span class=\"number\">48</span> <span class=\"number\">85</span> <span class=\"built_in\">c0</span>                test   %rax,%rax</span><br><span class=\"line\"> <span class=\"number\">682</span>:   <span class=\"number\">74</span> e9                   je     <span class=\"number\">66</span>d &lt;frame_dummy+<span class=\"number\">0xd</span>&gt;</span><br><span class=\"line\"> <span class=\"number\">684</span>:   <span class=\"number\">55</span>                      <span class=\"keyword\">push </span>  %rbp</span><br><span class=\"line\"> <span class=\"number\">685</span>:   <span class=\"number\">48</span> <span class=\"number\">89</span> e5                <span class=\"keyword\">mov </span>   %rsp,%rbp</span><br><span class=\"line\"> <span class=\"number\">688</span>:   ff <span class=\"built_in\">d0</span>                   callq  *%rax</span><br><span class=\"line\"> <span class=\"number\">68</span>a:   <span class=\"number\">5</span>d                      <span class=\"keyword\">pop </span>   %rbp</span><br><span class=\"line\"> <span class=\"number\">68</span>b:   e9 <span class=\"number\">40</span> ff ff ff          jmpq   <span class=\"number\">5</span><span class=\"built_in\">d0</span> &lt;register_tm_clones&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">0000000000000690</span> &lt;_Z9main_funcii&gt;:</span><br><span class=\"line\"> <span class=\"number\">690</span>:   <span class=\"number\">55</span>                      <span class=\"keyword\">push </span>  %rbp</span><br><span class=\"line\"> <span class=\"number\">691</span>:   <span class=\"number\">48</span> <span class=\"number\">89</span> e5                <span class=\"keyword\">mov </span>   %rsp,%rbp</span><br><span class=\"line\"> <span class=\"number\">694</span>:   <span class=\"number\">89</span> <span class=\"number\">7</span>d fc                <span class=\"keyword\">mov </span>   %edi,-<span class=\"number\">0x4</span>(%rbp)</span><br><span class=\"line\"> <span class=\"number\">697</span>:   <span class=\"number\">89</span> <span class=\"number\">75</span> f8                <span class=\"keyword\">mov </span>   %esi,-<span class=\"number\">0x8</span>(%rbp)</span><br><span class=\"line\"> <span class=\"number\">69</span>a:   <span class=\"number\">8</span>b <span class=\"number\">55</span> fc                <span class=\"keyword\">mov </span>   -<span class=\"number\">0x4</span>(%rbp),%edx</span><br><span class=\"line\"> <span class=\"number\">69</span>d:   <span class=\"number\">8</span>b <span class=\"number\">45</span> f8                <span class=\"keyword\">mov </span>   -<span class=\"number\">0x8</span>(%rbp),%eax</span><br><span class=\"line\"> <span class=\"number\">6</span>a0:   <span class=\"number\">01</span> <span class=\"built_in\">d0</span>                   <span class=\"keyword\">add </span>   %edx,%eax</span><br><span class=\"line\"> <span class=\"number\">6</span><span class=\"built_in\">a2</span>:   <span class=\"number\">05</span> <span class=\"built_in\">c3</span> <span class=\"number\">07</span> <span class=\"number\">00</span> <span class=\"number\">00</span>          <span class=\"keyword\">add </span>   <span class=\"number\">$0x7c3</span>,%eax</span><br><span class=\"line\"> <span class=\"number\">6</span>a7:   <span class=\"number\">5</span>d                      <span class=\"keyword\">pop </span>   %rbp</span><br><span class=\"line\"> <span class=\"number\">6</span>a8:   <span class=\"built_in\">c3</span>                      retq   </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">00000000000006</span>a9 &lt;main&gt;:</span><br><span class=\"line\"> <span class=\"number\">6</span>a9:   <span class=\"number\">55</span>                      <span class=\"keyword\">push </span>  %rbp</span><br><span class=\"line\"> <span class=\"number\">6</span>aa:   <span class=\"number\">48</span> <span class=\"number\">89</span> e5                <span class=\"keyword\">mov </span>   %rsp,%rbp</span><br><span class=\"line\"> <span class=\"number\">6</span>ad:   <span class=\"number\">48</span> <span class=\"number\">83</span> ec <span class=\"number\">20</span>             <span class=\"keyword\">sub </span>   <span class=\"number\">$0x20</span>,%rsp</span><br><span class=\"line\"> <span class=\"number\">6</span>b1:   <span class=\"number\">89</span> <span class=\"number\">7</span>d ec                <span class=\"keyword\">mov </span>   %edi,-<span class=\"number\">0x14</span>(%rbp)</span><br><span class=\"line\"> <span class=\"number\">6</span>b4:   <span class=\"number\">48</span> <span class=\"number\">89</span> <span class=\"number\">75</span> e0             <span class=\"keyword\">mov </span>   %rsi,-<span class=\"number\">0x20</span>(%rbp)</span><br><span class=\"line\"> <span class=\"number\">6</span>b8:   <span class=\"built_in\">c7</span> <span class=\"number\">45</span> fc <span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">00</span>    <span class=\"keyword\">movl </span>  <span class=\"number\">$0x0</span>,-<span class=\"number\">0x4</span>(%rbp)</span><br><span class=\"line\"> <span class=\"number\">6</span>bf:   <span class=\"number\">48</span> <span class=\"number\">8</span>d <span class=\"number\">05</span> <span class=\"number\">6</span>a <span class=\"number\">09</span> <span class=\"number\">20</span> <span class=\"number\">00</span>    lea    <span class=\"number\">0x20096a</span>(%rip),%rax        # <span class=\"number\">201030</span> &lt;__TMC_END__&gt;</span><br><span class=\"line\"> <span class=\"number\">6</span><span class=\"built_in\">c6</span>:   <span class=\"number\">8</span>b <span class=\"number\">55</span> ec                <span class=\"keyword\">mov </span>   -<span class=\"number\">0x14</span>(%rbp),%edx</span><br><span class=\"line\"> <span class=\"number\">6</span><span class=\"built_in\">c9</span>:   <span class=\"number\">89</span> <span class=\"number\">10</span>                   <span class=\"keyword\">mov </span>   %edx,(%rax)</span><br><span class=\"line\"> <span class=\"number\">6</span>cb:   <span class=\"number\">48</span> <span class=\"number\">8</span>d <span class=\"number\">05</span> <span class=\"number\">56</span> <span class=\"number\">09</span> <span class=\"number\">20</span> <span class=\"number\">00</span>    lea    <span class=\"number\">0x200956</span>(%rip),%rax        # <span class=\"number\">201028</span> &lt;g_static_data&gt;</span><br><span class=\"line\"> <span class=\"number\">6</span><span class=\"built_in\">d2</span>:   <span class=\"number\">8</span>b <span class=\"number\">10</span>                   <span class=\"keyword\">mov </span>   (%rax),%edx</span><br><span class=\"line\"> <span class=\"number\">6</span><span class=\"built_in\">d4</span>:   <span class=\"number\">48</span> <span class=\"number\">8</span>d <span class=\"number\">05</span> <span class=\"number\">55</span> <span class=\"number\">09</span> <span class=\"number\">20</span> <span class=\"number\">00</span>    lea    <span class=\"number\">0x200955</span>(%rip),%rax        # <span class=\"number\">201030</span> &lt;__TMC_END__&gt;</span><br><span class=\"line\"> <span class=\"number\">6</span>db:   <span class=\"number\">8</span>b <span class=\"number\">00</span>                   <span class=\"keyword\">mov </span>   (%rax),%eax</span><br><span class=\"line\"> <span class=\"number\">6</span>dd:   <span class=\"number\">89</span> <span class=\"built_in\">d6</span>                   <span class=\"keyword\">mov </span>   %edx,%esi</span><br><span class=\"line\"> <span class=\"number\">6</span>df:   <span class=\"number\">89</span> <span class=\"built_in\">c7</span>                   <span class=\"keyword\">mov </span>   %eax,%edi</span><br><span class=\"line\"> <span class=\"number\">6</span>e1:   e8 aa ff ff ff          callq  <span class=\"number\">690</span> &lt;_Z9main_funcii&gt;</span><br><span class=\"line\"> <span class=\"number\">6</span>e6:   <span class=\"number\">01</span> <span class=\"number\">45</span> fc                <span class=\"keyword\">add </span>   %eax,-<span class=\"number\">0x4</span>(%rbp)</span><br><span class=\"line\"> <span class=\"number\">6</span>e9:   <span class=\"number\">8</span>b <span class=\"number\">45</span> fc                <span class=\"keyword\">mov </span>   -<span class=\"number\">0x4</span>(%rbp),%eax</span><br><span class=\"line\"> <span class=\"number\">6</span>ec:   <span class=\"built_in\">c9</span>                      leaveq </span><br><span class=\"line\"> <span class=\"number\">6</span>ed:   <span class=\"built_in\">c3</span>                      retq   </span><br><span class=\"line\"> <span class=\"number\">6</span>ee:   <span class=\"number\">66</span> <span class=\"number\">90</span>                   xchg   %ax,%ax</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">00000000000006</span><span class=\"built_in\">f0</span> &lt;__libc_csu_init&gt;:</span><br><span class=\"line\"> <span class=\"number\">6</span><span class=\"built_in\">f0</span>:   <span class=\"number\">41</span> <span class=\"number\">57</span>                   <span class=\"keyword\">push </span>  %<span class=\"built_in\">r15</span></span><br><span class=\"line\"> <span class=\"number\">6</span><span class=\"built_in\">f2</span>:   <span class=\"number\">41</span> <span class=\"number\">56</span>                   <span class=\"keyword\">push </span>  %<span class=\"built_in\">r14</span></span><br><span class=\"line\"> <span class=\"number\">6</span><span class=\"built_in\">f4</span>:   <span class=\"number\">49</span> <span class=\"number\">89</span> <span class=\"built_in\">d7</span>                <span class=\"keyword\">mov </span>   %rdx,%<span class=\"built_in\">r15</span></span><br><span class=\"line\"> <span class=\"number\">6</span><span class=\"built_in\">f7</span>:   <span class=\"number\">41</span> <span class=\"number\">55</span>                   <span class=\"keyword\">push </span>  %<span class=\"built_in\">r13</span></span><br><span class=\"line\"> <span class=\"number\">6</span>f9:   <span class=\"number\">41</span> <span class=\"number\">54</span>                   <span class=\"keyword\">push </span>  %<span class=\"built_in\">r12</span></span><br><span class=\"line\"> <span class=\"number\">6</span>fb:   <span class=\"number\">4</span>c <span class=\"number\">8</span>d <span class=\"number\">25</span> <span class=\"built_in\">d6</span> <span class=\"number\">06</span> <span class=\"number\">20</span> <span class=\"number\">00</span>    lea    <span class=\"number\">0x2006d6</span>(%rip),%<span class=\"built_in\">r12</span>        # <span class=\"number\">200</span>dd8 &lt;__frame_dummy_init_array_entry&gt;</span><br><span class=\"line\"> <span class=\"number\">702</span>:   <span class=\"number\">55</span>                      <span class=\"keyword\">push </span>  %rbp</span><br><span class=\"line\"> <span class=\"number\">703</span>:   <span class=\"number\">48</span> <span class=\"number\">8</span>d <span class=\"number\">2</span>d <span class=\"built_in\">d6</span> <span class=\"number\">06</span> <span class=\"number\">20</span> <span class=\"number\">00</span>    lea    <span class=\"number\">0x2006d6</span>(%rip),%rbp        # <span class=\"number\">200</span>de0 &lt;__init_array_end&gt;</span><br><span class=\"line\"> <span class=\"number\">70</span>a:   <span class=\"number\">53</span>                      <span class=\"keyword\">push </span>  %rbx</span><br><span class=\"line\"> <span class=\"number\">70</span>b:   <span class=\"number\">41</span> <span class=\"number\">89</span> fd                <span class=\"keyword\">mov </span>   %edi,%r13d</span><br><span class=\"line\"> <span class=\"number\">70</span>e:   <span class=\"number\">49</span> <span class=\"number\">89</span> <span class=\"built_in\">f6</span>                <span class=\"keyword\">mov </span>   %rsi,%<span class=\"built_in\">r14</span></span><br><span class=\"line\"> <span class=\"number\">711</span>:   <span class=\"number\">4</span>c <span class=\"number\">29</span> e5                <span class=\"keyword\">sub </span>   %<span class=\"built_in\">r12</span>,%rbp</span><br><span class=\"line\"> <span class=\"number\">714</span>:   <span class=\"number\">48</span> <span class=\"number\">83</span> ec <span class=\"number\">08</span>             <span class=\"keyword\">sub </span>   <span class=\"number\">$0x8</span>,%rsp</span><br><span class=\"line\"> <span class=\"number\">718</span>:   <span class=\"number\">48</span> <span class=\"built_in\">c1</span> fd <span class=\"number\">03</span>             sar    <span class=\"number\">$0x3</span>,%rbp</span><br><span class=\"line\"> <span class=\"number\">71</span>c:   e8 ff fd ff ff          callq  <span class=\"number\">520</span> &lt;_init&gt;</span><br><span class=\"line\"> <span class=\"number\">721</span>:   <span class=\"number\">48</span> <span class=\"number\">85</span> ed                test   %rbp,%rbp</span><br><span class=\"line\"> <span class=\"number\">724</span>:   <span class=\"number\">74</span> <span class=\"number\">20</span>                   je     <span class=\"number\">746</span> &lt;__libc_csu_init+<span class=\"number\">0x56</span>&gt;</span><br><span class=\"line\"> <span class=\"number\">726</span>:   <span class=\"number\">31</span> db                   xor    %ebx,%ebx</span><br><span class=\"line\"> <span class=\"number\">728</span>:   <span class=\"number\">0</span>f <span class=\"number\">1</span>f <span class=\"number\">84</span> <span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">00</span>    <span class=\"keyword\">nopl </span>  <span class=\"number\">0x0</span>(%rax,%rax,<span class=\"number\">1</span>)</span><br><span class=\"line\"> <span class=\"number\">72</span>f:   <span class=\"number\">00</span> </span><br><span class=\"line\"> <span class=\"number\">730</span>:   <span class=\"number\">4</span>c <span class=\"number\">89</span> fa                <span class=\"keyword\">mov </span>   %<span class=\"built_in\">r15</span>,%rdx</span><br><span class=\"line\"> <span class=\"number\">733</span>:   <span class=\"number\">4</span>c <span class=\"number\">89</span> <span class=\"built_in\">f6</span>                <span class=\"keyword\">mov </span>   %<span class=\"built_in\">r14</span>,%rsi</span><br><span class=\"line\"> <span class=\"number\">736</span>:   <span class=\"number\">44</span> <span class=\"number\">89</span> ef                <span class=\"keyword\">mov </span>   %r13d,%edi</span><br><span class=\"line\"> <span class=\"number\">739</span>:   <span class=\"number\">41</span> ff <span class=\"number\">14</span> dc             callq  *(%<span class=\"built_in\">r12</span>,%rbx,<span class=\"number\">8</span>)</span><br><span class=\"line\"> <span class=\"number\">73</span>d:   <span class=\"number\">48</span> <span class=\"number\">83</span> <span class=\"built_in\">c3</span> <span class=\"number\">01</span>             <span class=\"keyword\">add </span>   <span class=\"number\">$0x1</span>,%rbx</span><br><span class=\"line\"> <span class=\"number\">741</span>:   <span class=\"number\">48</span> <span class=\"number\">39</span> dd                <span class=\"keyword\">cmp </span>   %rbx,%rbp</span><br><span class=\"line\"> <span class=\"number\">744</span>:   <span class=\"number\">75</span> ea                   jne    <span class=\"number\">730</span> &lt;__libc_csu_init+<span class=\"number\">0x40</span>&gt;</span><br><span class=\"line\"> <span class=\"number\">746</span>:   <span class=\"number\">48</span> <span class=\"number\">83</span> <span class=\"built_in\">c4</span> <span class=\"number\">08</span>             <span class=\"keyword\">add </span>   <span class=\"number\">$0x8</span>,%rsp</span><br><span class=\"line\"> <span class=\"number\">74</span>a:   <span class=\"number\">5</span>b                      <span class=\"keyword\">pop </span>   %rbx</span><br><span class=\"line\"> <span class=\"number\">74</span>b:   <span class=\"number\">5</span>d                      <span class=\"keyword\">pop </span>   %rbp</span><br><span class=\"line\"> <span class=\"number\">74</span>c:   <span class=\"number\">41</span> <span class=\"number\">5</span>c                   <span class=\"keyword\">pop </span>   %<span class=\"built_in\">r12</span></span><br><span class=\"line\"> <span class=\"number\">74</span>e:   <span class=\"number\">41</span> <span class=\"number\">5</span>d                   <span class=\"keyword\">pop </span>   %<span class=\"built_in\">r13</span></span><br><span class=\"line\"> <span class=\"number\">750</span>:   <span class=\"number\">41</span> <span class=\"number\">5</span>e                   <span class=\"keyword\">pop </span>   %<span class=\"built_in\">r14</span></span><br><span class=\"line\"> <span class=\"number\">752</span>:   <span class=\"number\">41</span> <span class=\"number\">5</span>f                   <span class=\"keyword\">pop </span>   %<span class=\"built_in\">r15</span></span><br><span class=\"line\"> <span class=\"number\">754</span>:   <span class=\"built_in\">c3</span>                      retq   </span><br><span class=\"line\"> <span class=\"number\">755</span>:   <span class=\"number\">90</span>                      <span class=\"keyword\">nop</span></span><br><span class=\"line\"><span class=\"keyword\"> </span><span class=\"number\">756</span>:   <span class=\"number\">66</span> <span class=\"number\">2</span>e <span class=\"number\">0</span>f <span class=\"number\">1</span>f <span class=\"number\">84</span> <span class=\"number\">00</span> <span class=\"number\">00</span>    <span class=\"keyword\">nopw </span>  %cs:<span class=\"number\">0x0</span>(%rax,%rax,<span class=\"number\">1</span>)</span><br><span class=\"line\"> <span class=\"number\">75</span>d:   <span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">00</span> </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">0000000000000760</span> &lt;__libc_csu_fini&gt;:</span><br><span class=\"line\"> <span class=\"number\">760</span>:   <span class=\"built_in\">f3</span> <span class=\"built_in\">c3</span>                   repz retq </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"symbol\">Disassembly</span> of section .fini:</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">0000000000000764</span> &lt;_fini&gt;:</span><br><span class=\"line\"> <span class=\"number\">764</span>:   <span class=\"number\">48</span> <span class=\"number\">83</span> ec <span class=\"number\">08</span>             <span class=\"keyword\">sub </span>   <span class=\"number\">$0x8</span>,%rsp</span><br><span class=\"line\"> <span class=\"number\">768</span>:   <span class=\"number\">48</span> <span class=\"number\">83</span> <span class=\"built_in\">c4</span> <span class=\"number\">08</span>             <span class=\"keyword\">add </span>   <span class=\"number\">$0x8</span>,%rsp</span><br><span class=\"line\"> <span class=\"number\">76</span>c:   <span class=\"built_in\">c3</span>                      retq</span><br></pre></td></tr></table></figure>"}],"PostAsset":[],"PostCategory":[{"post_id":"ck44ekz1t000er45h9w6a4ose","category_id":"ck44ekz1o000cr45h8u3he0mb","_id":"ck44ekz1z000jr45h61qch2gt"},{"post_id":"ck44ekz1l000ar45h2l8t0sem","category_id":"ck44ekz1o000cr45h8u3he0mb","_id":"ck44ekz23000mr45hblfu4lzm"},{"post_id":"ck44ekz1v000fr45haf5ifkvx","category_id":"ck44ekz1o000cr45h8u3he0mb","_id":"ck44ekz26000or45h58nw28p7"},{"post_id":"ck44ekz1x000hr45h9cy80da3","category_id":"ck44ekz1o000cr45h8u3he0mb","_id":"ck44ekz26000pr45hgewk7b21"},{"post_id":"ck44ekz1m000br45hdif4hxhh","category_id":"ck44ekz1o000cr45h8u3he0mb","_id":"ck44ekz27000qr45hg9v9bzoy"},{"post_id":"ck44ekz1y000ir45h5jpkgp8z","category_id":"ck44ekz1o000cr45h8u3he0mb","_id":"ck44ekz27000rr45h7gpa0pf7"},{"post_id":"ck44ekz22000lr45hefhw1ih2","category_id":"ck44ekz1o000cr45h8u3he0mb","_id":"ck44ekz28000sr45hg48c56cw"},{"post_id":"ck44ekz1t000dr45hcas9e9ub","category_id":"ck44ekz1o000cr45h8u3he0mb","_id":"ck44ekz28000tr45hd55w5ctj"},{"post_id":"ck44ekz25000nr45h9qhihkms","category_id":"ck44ekz1o000cr45h8u3he0mb","_id":"ck44ekz28000ur45hdnwj629d"},{"post_id":"ck44ekz2n000xr45h6vokejt2","category_id":"ck44ekz1o000cr45h8u3he0mb","_id":"ck44ekz2q0011r45hhiyzg6zw"},{"post_id":"ck44ekz2o000zr45h69mtc3tf","category_id":"ck44ekz1o000cr45h8u3he0mb","_id":"ck44ekz2r0014r45h52ewexp3"},{"post_id":"ck44ekz2p0010r45h8eyt3rh5","category_id":"ck44ekz1o000cr45h8u3he0mb","_id":"ck44ekz2r0015r45h3t1o57vi"},{"post_id":"ck44ekz2q0012r45hhbdsfvmd","category_id":"ck44ekz1o000cr45h8u3he0mb","_id":"ck44ekz2r0016r45hekyk1tww"},{"post_id":"ck44ekz2q0013r45hawk8h0ro","category_id":"ck44ekz1o000cr45h8u3he0mb","_id":"ck44ekz2s0017r45h1c0y10ms"},{"post_id":"ck44ekz480018r45h7l1ahk5p","category_id":"ck44ekz1o000cr45h8u3he0mb","_id":"ck44ekz4d001ar45h48ungt7d"},{"post_id":"ck44ekz4a0019r45h8x2ieiyo","category_id":"ck44ekz1o000cr45h8u3he0mb","_id":"ck44ekz4d001br45hh82n7k69"},{"post_id":"ck44ekz6b001er45hbtzi58et","category_id":"ck44ekz1o000cr45h8u3he0mb","_id":"ck44ekz6c001fr45h2j4g3i8q"},{"post_id":"ck44ekz4m001cr45hh0wkhu1z","category_id":"ck44ekz1o000cr45h8u3he0mb","_id":"ck44ellx00001c05hdw4z3psa"}],"PostTag":[],"Tag":[]}}